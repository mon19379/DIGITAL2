

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 08 02:15:52 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 09/04/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  000E                     	;# 
   475  000F                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0014                     	;# 
   481  0015                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  0081                     	;# 
   495  0085                     	;# 
   496  0086                     	;# 
   497  0087                     	;# 
   498  0088                     	;# 
   499  0089                     	;# 
   500  008C                     	;# 
   501  008D                     	;# 
   502  008E                     	;# 
   503  008F                     	;# 
   504  0090                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  0105                     	;# 
   523  0107                     	;# 
   524  0108                     	;# 
   525  0109                     	;# 
   526  010C                     	;# 
   527  010C                     	;# 
   528  010D                     	;# 
   529  010E                     	;# 
   530  010F                     	;# 
   531  0185                     	;# 
   532  0187                     	;# 
   533  0188                     	;# 
   534  0189                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  0018                     _RCSTAbits	set	24
   538  0009                     _PORTEbits	set	9
   539  0019                     _TXREG	set	25
   540  001E                     _ADRESH	set	30
   541  0009                     _PORTE	set	9
   542  0008                     _PORTD	set	8
   543  0007                     _PORTC	set	7
   544  0006                     _PORTB	set	6
   545  0005                     _PORTA	set	5
   546  001F                     _ADCON0bits	set	31
   547  001A                     _RCREG	set	26
   548  000C                     _PIR1bits	set	12
   549  0001                     _TMR0	set	1
   550  000B                     _INTCONbits	set	11
   551  008F                     _OSCCONbits	set	143
   552  0099                     _SPBRG	set	153
   553  009A                     _SPBRGH	set	154
   554  0098                     _TXSTAbits	set	152
   555  009F                     _ADCON1	set	159
   556  0081                     _OPTION_REG	set	129
   557  0086                     _TRISB	set	134
   558  0085                     _TRISA	set	133
   559  0087                     _TRISC	set	135
   560  0089                     _TRISE	set	137
   561  0088                     _TRISD	set	136
   562  008C                     _PIE1bits	set	140
   563  0187                     _BAUDCTLbits	set	391
   564  0189                     _ANSELH	set	393
   565  0188                     _ANSEL	set	392
   566                           
   567                           	psect	strings
   568  072E                     __pstrings:
   569  072E                     stringtab:
   570  072E                     __stringtab:
   571  072E                     stringcode:	
   572                           ;	String table - string pointers are 1 byte each
   573                           
   574  072E                     stringdir:
   575  072E  3007               	movlw	high stringdir
   576  072F  008A               	movwf	10
   577  0730  0804               	movf	4,w
   578  0731  0A84               	incf	4,f
   579  0732  0782               	addwf	2,f
   580  0733                     __stringbase:
   581  0733  3400               	retlw	0
   582  0734                     __end_of__stringtab:
   583  0734                     STR_3:
   584  0734  3443               	retlw	67	;'C'
   585  0735  344F               	retlw	79	;'O'
   586  0736  344E               	retlw	78	;'N'
   587  0737  3454               	retlw	84	;'T'
   588  0738  3400               	retlw	0
   589  0739                     STR_1:
   590  0739  3456               	retlw	86	;'V'
   591  073A  3431               	retlw	49	;'1'
   592  073B  3400               	retlw	0
   593  073C                     STR_2:
   594  073C  3456               	retlw	86	;'V'
   595  073D  3432               	retlw	50	;'2'
   596  073E  3400               	retlw	0
   597  073F                     STR_4:
   598  073F  342E               	retlw	46	;'.'
   599  0740  3400               	retlw	0
   600  073F                     
   601                           	psect	cinit
   602  0015                     start_initialization:	
   603                           ; #config settings
   604                           
   605  0015                     __initialization:
   606                           
   607                           ; Clear objects allocated to COMMON
   608  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   609  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   610  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   611  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   612  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   613  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   614                           
   615                           ; Clear objects allocated to BANK0
   616  001B  1383               	bcf	3,7	;select IRP bank0
   617  001C  3036               	movlw	low __pbssBANK0
   618  001D  0084               	movwf	4
   619  001E  3046               	movlw	low (__pbssBANK0+16)
   620  001F  120A  118A  2741  120A  118A  	fcall	clear_ram0
   621  0024                     end_of_initialization:	
   622                           ;End of C runtime variable initialization code
   623                           
   624  0024                     __end_of__initialization:
   625  0024  0183               	clrf	3
   626  0025  120A  118A  299F   	ljmp	_main	;jump to C main() function
   627                           
   628                           	psect	bssCOMMON
   629  0078                     __pbssCOMMON:
   630  0078                     _R2:
   631  0078                     	ds	1
   632  0079                     _R1:
   633  0079                     	ds	1
   634  007A                     _SEND:
   635  007A                     	ds	1
   636  007B                     _REC:
   637  007B                     	ds	1
   638  007C                     _TOGGLE:
   639  007C                     	ds	1
   640  007D                     _FLAGADC:
   641  007D                     	ds	1
   642                           
   643                           	psect	bssBANK0
   644  0036                     __pbssBANK0:
   645  0036                     _CONT:
   646  0036                     	ds	1
   647  0037                     _U2:
   648  0037                     	ds	1
   649  0038                     _D2:
   650  0038                     	ds	1
   651  0039                     _C2:
   652  0039                     	ds	1
   653  003A                     _U1:
   654  003A                     	ds	1
   655  003B                     _D1:
   656  003B                     	ds	1
   657  003C                     _C1:
   658  003C                     	ds	1
   659  003D                     _UP2:
   660  003D                     	ds	1
   661  003E                     _DP2:
   662  003E                     	ds	1
   663  003F                     _CP2:
   664  003F                     	ds	1
   665  0040                     _UP1:
   666  0040                     	ds	1
   667  0041                     _DP1:
   668  0041                     	ds	1
   669  0042                     _CP1:
   670  0042                     	ds	1
   671  0043                     _CONTADC:
   672  0043                     	ds	1
   673  0044                     _pot2:
   674  0044                     	ds	1
   675  0045                     _pot1:
   676  0045                     	ds	1
   677                           
   678                           	psect	clrtext
   679  0741                     clear_ram0:	
   680                           ;	Called with FSR containing the base address, and
   681                           ;	W with the last address+1
   682                           
   683  0741  0064               	clrwdt	;clear the watchdog before getting into this loop
   684  0742                     clrloop0:
   685  0742  0180               	clrf	0	;clear RAM location pointed to by FSR
   686  0743  0A84               	incf	4,f	;increment pointer
   687  0744  0604               	xorwf	4,w	;XOR with final address
   688  0745  1903               	btfsc	3,2	;have we reached the end yet?
   689  0746  3400               	retlw	0	;all done for this memory range, return
   690  0747  0604               	xorwf	4,w	;XOR again to restore value
   691  0748  2F42               	goto	clrloop0	;do the next byte
   692                           
   693                           	psect	cstackCOMMON
   694  0070                     __pcstackCOMMON:
   695  0070                     ?_pots:
   696  0070                     ?_recibir:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ??_recibir:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_mandar:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ??_mandar:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_Setup:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_Lcd_Write_String:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_map:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_Lcd_Write_Char:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_initOsc:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_usart:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_Lcd_Init:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_Lcd_Cmd:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_ISR:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_main:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_Lcd_Port:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?i1_configADC2:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     i1configADC2@chan:	
   745                           ; 1 bytes @ 0x0
   746                           
   747                           
   748                           ; 1 bytes @ 0x0
   749  0070                     	ds	1
   750  0071                     ??i1_configADC2:
   751                           
   752                           ; 1 bytes @ 0x1
   753  0071                     	ds	2
   754  0073                     i1configADC2@fosc:
   755                           
   756                           ; 1 bytes @ 0x3
   757  0073                     	ds	1
   758  0074                     ??_pots:
   759  0074                     ??_ISR:	
   760                           ; 1 bytes @ 0x4
   761                           
   762                           
   763                           ; 1 bytes @ 0x4
   764  0074                     	ds	4
   765                           
   766                           	psect	cstackBANK0
   767  0020                     __pcstackBANK0:
   768  0020                     ??_initOsc:
   769  0020                     ?_configADC2:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0020                     ??_usart:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0020                     ??_Lcd_Port:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0020                     ?___bmul:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0020                     ?___wmul:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0020                     Lcd_Port@a:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0020                     configADC2@chan:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0020                     ___bmul@multiplicand:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0020                     ___wmul@multiplier:	
   794                           ; 1 bytes @ 0x0
   795                           
   796                           
   797                           ; 2 bytes @ 0x0
   798  0020                     	ds	1
   799  0021                     ??_Lcd_Write_Char:
   800  0021                     ??_configADC2:	
   801                           ; 1 bytes @ 0x1
   802                           
   803  0021                     ??_Lcd_Cmd:	
   804                           ; 1 bytes @ 0x1
   805                           
   806  0021                     ??___bmul:	
   807                           ; 1 bytes @ 0x1
   808                           
   809  0021                     ___bmul@product:	
   810                           ; 1 bytes @ 0x1
   811                           
   812                           
   813                           ; 1 bytes @ 0x1
   814  0021                     	ds	1
   815  0022                     Lcd_Write_Char@a:
   816  0022                     initOsc@IRCF:	
   817                           ; 1 bytes @ 0x2
   818                           
   819  0022                     ___bmul@multiplier:	
   820                           ; 1 bytes @ 0x2
   821                           
   822  0022                     ___wmul@multiplicand:	
   823                           ; 1 bytes @ 0x2
   824                           
   825                           
   826                           ; 2 bytes @ 0x2
   827  0022                     	ds	1
   828  0023                     ??_Lcd_Write_String:
   829  0023                     Lcd_Cmd@a:	
   830                           ; 1 bytes @ 0x3
   831                           
   832  0023                     configADC2@fosc:	
   833                           ; 1 bytes @ 0x3
   834                           
   835  0023                     Lcd_Write_String@i:	
   836                           ; 1 bytes @ 0x3
   837                           
   838                           
   839                           ; 2 bytes @ 0x3
   840  0023                     	ds	1
   841  0024                     ??_Setup:
   842  0024                     ?_Lcd_Set_Cursor:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0024                     ??_Lcd_Init:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0024                     ??___wmul:	
   849                           ; 1 bytes @ 0x4
   850                           
   851  0024                     Lcd_Set_Cursor@b:	
   852                           ; 1 bytes @ 0x4
   853                           
   854  0024                     ___wmul@product:	
   855                           ; 1 bytes @ 0x4
   856                           
   857                           
   858                           ; 2 bytes @ 0x4
   859  0024                     	ds	1
   860  0025                     ??_Lcd_Set_Cursor:
   861  0025                     Lcd_Set_Cursor@a:	
   862                           ; 1 bytes @ 0x5
   863                           
   864  0025                     Lcd_Write_String@a:	
   865                           ; 1 bytes @ 0x5
   866                           
   867                           
   868                           ; 1 bytes @ 0x5
   869  0025                     	ds	1
   870  0026                     ?___awdiv:
   871  0026                     Lcd_Set_Cursor@temp:	
   872                           ; 2 bytes @ 0x6
   873                           
   874  0026                     ___awdiv@divisor:	
   875                           ; 1 bytes @ 0x6
   876                           
   877                           
   878                           ; 2 bytes @ 0x6
   879  0026                     	ds	2
   880  0028                     ___awdiv@dividend:
   881                           
   882                           ; 2 bytes @ 0x8
   883  0028                     	ds	2
   884  002A                     ??___awdiv:
   885  002A                     ___awdiv@counter:	
   886                           ; 1 bytes @ 0xA
   887                           
   888                           
   889                           ; 1 bytes @ 0xA
   890  002A                     	ds	1
   891  002B                     ___awdiv@sign:
   892                           
   893                           ; 1 bytes @ 0xB
   894  002B                     	ds	1
   895  002C                     ___awdiv@quotient:
   896                           
   897                           ; 2 bytes @ 0xC
   898  002C                     	ds	2
   899  002E                     ??_map:
   900                           
   901                           ; 1 bytes @ 0xE
   902  002E                     	ds	6
   903  0034                     _map$1126:
   904                           
   905                           ; 2 bytes @ 0x14
   906  0034                     	ds	2
   907  0036                     ??_main:
   908                           
   909                           	psect	maintext
   910  019F                     __pmaintext:	
   911                           ; 1 bytes @ 0x16
   912 ;;
   913 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   914 ;;
   915 ;; *************** function _main *****************
   916 ;; Defined at:
   917 ;;		line 108 in file "L3.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : B00/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   931 ;;      Params:         0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0
   934 ;;      Totals:         0       0       0       0       0
   935 ;;Total ram usage:        0 bytes
   936 ;; Hardware stack levels required when called:    7
   937 ;; This function calls:
   938 ;;		_Lcd_Set_Cursor
   939 ;;		_Lcd_Write_Char
   940 ;;		_Lcd_Write_String
   941 ;;		_Setup
   942 ;;		_map
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _main
   950  019F                     _main:
   951  019F                     l1971:	
   952                           ;incstack = 0
   953                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   954                           
   955                           
   956                           ;L3.c: 110:     Setup();
   957  019F  120A  118A  2553  120A  118A  	fcall	_Setup
   958  01A4                     l1973:
   959                           
   960                           ;L3.c: 111:     Lcd_Set_Cursor(1, 1);
   961  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   962  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   963  01A6  01A4               	clrf	Lcd_Set_Cursor@b
   964  01A7  0AA4               	incf	Lcd_Set_Cursor@b,f
   965  01A8  3001               	movlw	1
   966  01A9  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
   967  01AE                     l1975:
   968                           
   969                           ;L3.c: 112:     Lcd_Write_String("V1");
   970  01AE  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   971  01AF  120A  118A  263E  120A  118A  	fcall	_Lcd_Write_String
   972  01B4                     l1977:
   973                           
   974                           ;L3.c: 113:     Lcd_Set_Cursor(1, 7);
   975  01B4  3007               	movlw	7
   976  01B5  00FF               	movwf	btemp+1
   977  01B6  087F               	movf	btemp+1,w
   978  01B7  1283               	bcf	3,5	;RP0=0, select bank0
   979  01B8  1303               	bcf	3,6	;RP1=0, select bank0
   980  01B9  00A4               	movwf	Lcd_Set_Cursor@b
   981  01BA  3001               	movlw	1
   982  01BB  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
   983  01C0                     l1979:
   984                           
   985                           ;L3.c: 114:     Lcd_Write_String("V2");
   986  01C0  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   987  01C1  120A  118A  263E  120A  118A  	fcall	_Lcd_Write_String
   988  01C6                     l1981:
   989                           
   990                           ;L3.c: 115:     Lcd_Set_Cursor(1, 13);
   991  01C6  300D               	movlw	13
   992  01C7  00FF               	movwf	btemp+1
   993  01C8  087F               	movf	btemp+1,w
   994  01C9  1283               	bcf	3,5	;RP0=0, select bank0
   995  01CA  1303               	bcf	3,6	;RP1=0, select bank0
   996  01CB  00A4               	movwf	Lcd_Set_Cursor@b
   997  01CC  3001               	movlw	1
   998  01CD  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
   999  01D2                     l1983:
  1000                           
  1001                           ;L3.c: 116:     Lcd_Write_String("CONT");
  1002  01D2  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1003  01D3  120A  118A  263E  120A  118A  	fcall	_Lcd_Write_String
  1004  01D8                     l1985:
  1005                           
  1006                           ;L3.c: 127:         map();
  1007  01D8  120A  118A  2028  120A  118A  	fcall	_map
  1008  01DD                     l1987:
  1009                           
  1010                           ;L3.c: 128:         if (CONTADC > 20) {
  1011  01DD  3015               	movlw	21
  1012  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1013  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1014  01E0  0243               	subwf	_CONTADC,w
  1015  01E1  1C03               	skipc
  1016  01E2  29E4               	goto	u621
  1017  01E3  29E5               	goto	u620
  1018  01E4                     u621:
  1019  01E4  29EA               	goto	l1995
  1020  01E5                     u620:
  1021  01E5                     l1989:
  1022                           
  1023                           ;L3.c: 129:             ADCON0bits.GO_nDONE = 1;
  1024  01E5  149F               	bsf	31,1	;volatile
  1025  01E6                     l1991:
  1026                           
  1027                           ;L3.c: 130:             CONTADC = 0;
  1028  01E6  01C3               	clrf	_CONTADC
  1029  01E7                     l1993:
  1030                           
  1031                           ;L3.c: 131:             PIE1bits.TXIE = 1;
  1032  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  1033  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  1034  01E9  160C               	bsf	12,4	;volatile
  1035  01EA                     l1995:
  1036                           
  1037                           ;L3.c: 136:         Lcd_Set_Cursor(2, 1);
  1038  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1039  01EB  01A4               	clrf	Lcd_Set_Cursor@b
  1040  01EC  0AA4               	incf	Lcd_Set_Cursor@b,f
  1041  01ED  3002               	movlw	2
  1042  01EE  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
  1043  01F3                     l1997:
  1044                           
  1045                           ;L3.c: 137:         Lcd_Write_Char(C1);
  1046  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1047  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1048  01F5  083C               	movf	_C1,w
  1049  01F6  120A  118A  26E9  120A  118A  	fcall	_Lcd_Write_Char
  1050  01FB                     l1999:
  1051                           
  1052                           ;L3.c: 138:         Lcd_Set_Cursor(2, 2);
  1053  01FB  3002               	movlw	2
  1054  01FC  00FF               	movwf	btemp+1
  1055  01FD  087F               	movf	btemp+1,w
  1056  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1057  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0200  00A4               	movwf	Lcd_Set_Cursor@b
  1059  0201  3002               	movlw	2
  1060  0202  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
  1061  0207                     l2001:
  1062                           
  1063                           ;L3.c: 139:         Lcd_Write_String(".");
  1064  0207  300C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1065  0208  120A  118A  263E  120A  118A  	fcall	_Lcd_Write_String
  1066  020D                     l2003:
  1067                           
  1068                           ;L3.c: 140:         Lcd_Write_Char(D1);
  1069  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1070  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1071  020F  083B               	movf	_D1,w
  1072  0210  120A  118A  26E9  120A  118A  	fcall	_Lcd_Write_Char
  1073  0215                     l2005:
  1074                           
  1075                           ;L3.c: 141:         Lcd_Set_Cursor(2, 4);
  1076  0215  3004               	movlw	4
  1077  0216  00FF               	movwf	btemp+1
  1078  0217  087F               	movf	btemp+1,w
  1079  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1081  021A  00A4               	movwf	Lcd_Set_Cursor@b
  1082  021B  3002               	movlw	2
  1083  021C  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
  1084  0221                     l2007:
  1085                           
  1086                           ;L3.c: 142:         Lcd_Write_Char(U1);
  1087  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0223  083A               	movf	_U1,w
  1090  0224  120A  118A  26E9  120A  118A  	fcall	_Lcd_Write_Char
  1091  0229                     l2009:
  1092                           
  1093                           ;L3.c: 145:         Lcd_Set_Cursor(2, 7);
  1094  0229  3007               	movlw	7
  1095  022A  00FF               	movwf	btemp+1
  1096  022B  087F               	movf	btemp+1,w
  1097  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1098  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1099  022E  00A4               	movwf	Lcd_Set_Cursor@b
  1100  022F  3002               	movlw	2
  1101  0230  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
  1102  0235                     l2011:
  1103                           
  1104                           ;L3.c: 146:         Lcd_Write_Char(C2);
  1105  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0237  0839               	movf	_C2,w
  1108  0238  120A  118A  26E9  120A  118A  	fcall	_Lcd_Write_Char
  1109  023D                     l2013:
  1110                           
  1111                           ;L3.c: 147:         Lcd_Set_Cursor(2, 8);
  1112  023D  3008               	movlw	8
  1113  023E  00FF               	movwf	btemp+1
  1114  023F  087F               	movf	btemp+1,w
  1115  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0242  00A4               	movwf	Lcd_Set_Cursor@b
  1118  0243  3002               	movlw	2
  1119  0244  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
  1120  0249                     l2015:
  1121                           
  1122                           ;L3.c: 148:         Lcd_Write_String(".");
  1123  0249  300C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1124  024A  120A  118A  263E  120A  118A  	fcall	_Lcd_Write_String
  1125  024F                     l2017:
  1126                           
  1127                           ;L3.c: 149:         Lcd_Set_Cursor(2, 9);
  1128  024F  3009               	movlw	9
  1129  0250  00FF               	movwf	btemp+1
  1130  0251  087F               	movf	btemp+1,w
  1131  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0254  00A4               	movwf	Lcd_Set_Cursor@b
  1134  0255  3002               	movlw	2
  1135  0256  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
  1136  025B                     l2019:
  1137                           
  1138                           ;L3.c: 150:         Lcd_Write_Char(D2);
  1139  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1140  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1141  025D  0838               	movf	_D2,w
  1142  025E  120A  118A  26E9  120A  118A  	fcall	_Lcd_Write_Char
  1143  0263                     l2021:
  1144                           
  1145                           ;L3.c: 151:         Lcd_Set_Cursor(2, 10);
  1146  0263  300A               	movlw	10
  1147  0264  00FF               	movwf	btemp+1
  1148  0265  087F               	movf	btemp+1,w
  1149  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0268  00A4               	movwf	Lcd_Set_Cursor@b
  1152  0269  3002               	movlw	2
  1153  026A  120A  118A  268E  120A  118A  	fcall	_Lcd_Set_Cursor
  1154  026F                     l2023:
  1155                           
  1156                           ;L3.c: 152:         Lcd_Write_Char(U2);
  1157  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0271  0837               	movf	_U2,w
  1160  0272  120A  118A  26E9  120A  118A  	fcall	_Lcd_Write_Char
  1161  0277  29D8               	goto	l1985
  1162  0278  120A  118A  2812   	ljmp	start
  1163  027B                     __end_of_main:
  1164                           
  1165                           	psect	text1
  1166  0028                     __ptext1:	
  1167 ;; *************** function _map *****************
  1168 ;; Defined at:
  1169 ;;		line 223 in file "L3.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         0       0       0       0       0
  1184 ;;      Locals:         0       2       0       0       0
  1185 ;;      Temps:          0       6       0       0       0
  1186 ;;      Totals:         0       8       0       0       0
  1187 ;;Total ram usage:        8 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    4
  1190 ;; This function calls:
  1191 ;;		___awdiv
  1192 ;;		___bmul
  1193 ;;		___wmul
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           
  1200                           ;psect for function _map
  1201  0028                     _map:
  1202  0028                     l1929:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1205                           
  1206                           
  1207                           ;L3.c: 224:     CP1 = ((pot1) / 51);
  1208  0028  3033               	movlw	51
  1209  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1210  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1211  002B  00A6               	movwf	___awdiv@divisor
  1212  002C  3000               	movlw	0
  1213  002D  00A7               	movwf	___awdiv@divisor+1
  1214  002E  0845               	movf	_pot1,w
  1215  002F  00AE               	movwf	??_map
  1216  0030  01AF               	clrf	??_map+1
  1217  0031  082E               	movf	??_map,w
  1218  0032  00A8               	movwf	___awdiv@dividend
  1219  0033  082F               	movf	??_map+1,w
  1220  0034  00A9               	movwf	___awdiv@dividend+1
  1221  0035  120A  118A  248C  120A  118A  	fcall	___awdiv
  1222  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1223  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1224  003C  0826               	movf	?___awdiv,w
  1225  003D  00FF               	movwf	btemp+1
  1226  003E  087F               	movf	btemp+1,w
  1227  003F  00C2               	movwf	_CP1
  1228                           
  1229                           ;L3.c: 225:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  1230  0040  3033               	movlw	51
  1231  0041  00A6               	movwf	___awdiv@divisor
  1232  0042  3000               	movlw	0
  1233  0043  00A7               	movwf	___awdiv@divisor+1
  1234  0044  0845               	movf	_pot1,w
  1235  0045  00AE               	movwf	??_map
  1236  0046  01AF               	clrf	??_map+1
  1237  0047  082E               	movf	??_map,w
  1238  0048  00A0               	movwf	___wmul@multiplier
  1239  0049  082F               	movf	??_map+1,w
  1240  004A  00A1               	movwf	___wmul@multiplier+1
  1241  004B  3064               	movlw	100
  1242  004C  00A2               	movwf	___wmul@multiplicand
  1243  004D  3000               	movlw	0
  1244  004E  00A3               	movwf	___wmul@multiplicand+1
  1245  004F  120A  118A  2667  120A  118A  	fcall	___wmul
  1246  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0056  0821               	movf	?___wmul+1,w
  1249  0057  00A9               	movwf	___awdiv@dividend+1
  1250  0058  0820               	movf	?___wmul,w
  1251  0059  00A8               	movwf	___awdiv@dividend
  1252  005A  120A  118A  248C  120A  118A  	fcall	___awdiv
  1253  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0061  0826               	movf	?___awdiv,w
  1256  0062  00B0               	movwf	??_map+2
  1257  0063  0827               	movf	?___awdiv+1,w
  1258  0064  00B1               	movwf	??_map+3
  1259  0065  0842               	movf	_CP1,w
  1260  0066  00B2               	movwf	??_map+4
  1261  0067  01B3               	clrf	??_map+5
  1262  0068  0832               	movf	??_map+4,w
  1263  0069  00A0               	movwf	___wmul@multiplier
  1264  006A  0833               	movf	??_map+5,w
  1265  006B  00A1               	movwf	___wmul@multiplier+1
  1266  006C  309C               	movlw	156
  1267  006D  00A2               	movwf	___wmul@multiplicand
  1268  006E  30FF               	movlw	255
  1269  006F  00A3               	movwf	___wmul@multiplicand+1
  1270  0070  120A  118A  2667  120A  118A  	fcall	___wmul
  1271  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0077  0820               	movf	?___wmul,w
  1274  0078  0730               	addwf	??_map+2,w
  1275  0079  00B4               	movwf	_map$1126
  1276  007A  0821               	movf	?___wmul+1,w
  1277  007B  1803               	skipnc
  1278  007C  0A21               	incf	?___wmul+1,w
  1279  007D  0731               	addwf	??_map+3,w
  1280  007E  00B5               	movwf	_map$1126+1
  1281                           
  1282                           ;L3.c: 225:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  1283  007F  300A               	movlw	10
  1284  0080  00A6               	movwf	___awdiv@divisor
  1285  0081  3000               	movlw	0
  1286  0082  00A7               	movwf	___awdiv@divisor+1
  1287  0083  0835               	movf	_map$1126+1,w
  1288  0084  00A9               	movwf	___awdiv@dividend+1
  1289  0085  0834               	movf	_map$1126,w
  1290  0086  00A8               	movwf	___awdiv@dividend
  1291  0087  120A  118A  248C  120A  118A  	fcall	___awdiv
  1292  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1293  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1294  008E  0826               	movf	?___awdiv,w
  1295  008F  00FF               	movwf	btemp+1
  1296  0090  087F               	movf	btemp+1,w
  1297  0091  00C1               	movwf	_DP1
  1298                           
  1299                           ;L3.c: 226:     UP1 = (((pot1 * 100) / 51)-(CP1 * 100)-(DP1 * 10));
  1300  0092  3033               	movlw	51
  1301  0093  00A6               	movwf	___awdiv@divisor
  1302  0094  3000               	movlw	0
  1303  0095  00A7               	movwf	___awdiv@divisor+1
  1304  0096  0845               	movf	_pot1,w
  1305  0097  00AE               	movwf	??_map
  1306  0098  01AF               	clrf	??_map+1
  1307  0099  082E               	movf	??_map,w
  1308  009A  00A0               	movwf	___wmul@multiplier
  1309  009B  082F               	movf	??_map+1,w
  1310  009C  00A1               	movwf	___wmul@multiplier+1
  1311  009D  3064               	movlw	100
  1312  009E  00A2               	movwf	___wmul@multiplicand
  1313  009F  3000               	movlw	0
  1314  00A0  00A3               	movwf	___wmul@multiplicand+1
  1315  00A1  120A  118A  2667  120A  118A  	fcall	___wmul
  1316  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1317  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1318  00A8  0821               	movf	?___wmul+1,w
  1319  00A9  00A9               	movwf	___awdiv@dividend+1
  1320  00AA  0820               	movf	?___wmul,w
  1321  00AB  00A8               	movwf	___awdiv@dividend
  1322  00AC  120A  118A  248C  120A  118A  	fcall	___awdiv
  1323  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1324  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1325  00B3  0826               	movf	?___awdiv,w
  1326  00B4  00B0               	movwf	??_map+2
  1327  00B5  0827               	movf	?___awdiv+1,w
  1328  00B6  00B1               	movwf	??_map+3
  1329  00B7  309C               	movlw	156
  1330  00B8  00FF               	movwf	btemp+1
  1331  00B9  087F               	movf	btemp+1,w
  1332  00BA  00A0               	movwf	___bmul@multiplicand
  1333  00BB  0842               	movf	_CP1,w
  1334  00BC  120A  118A  2702  120A  118A  	fcall	___bmul
  1335  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1336  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1337  00C3  00B2               	movwf	??_map+4
  1338  00C4  30F6               	movlw	246
  1339  00C5  00FF               	movwf	btemp+1
  1340  00C6  087F               	movf	btemp+1,w
  1341  00C7  00A0               	movwf	___bmul@multiplicand
  1342  00C8  0841               	movf	_DP1,w
  1343  00C9  120A  118A  2702  120A  118A  	fcall	___bmul
  1344  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1345  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1346  00D0  0732               	addwf	??_map+4,w
  1347  00D1  0730               	addwf	??_map+2,w
  1348  00D2  00FF               	movwf	btemp+1
  1349  00D3  087F               	movf	btemp+1,w
  1350  00D4  00C0               	movwf	_UP1
  1351                           
  1352                           ;L3.c: 228:     CP2 = ((pot2) / 51);
  1353  00D5  3033               	movlw	51
  1354  00D6  00A6               	movwf	___awdiv@divisor
  1355  00D7  3000               	movlw	0
  1356  00D8  00A7               	movwf	___awdiv@divisor+1
  1357  00D9  0844               	movf	_pot2,w
  1358  00DA  00AE               	movwf	??_map
  1359  00DB  01AF               	clrf	??_map+1
  1360  00DC  082E               	movf	??_map,w
  1361  00DD  00A8               	movwf	___awdiv@dividend
  1362  00DE  082F               	movf	??_map+1,w
  1363  00DF  00A9               	movwf	___awdiv@dividend+1
  1364  00E0  120A  118A  248C  120A  118A  	fcall	___awdiv
  1365  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1366  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1367  00E7  0826               	movf	?___awdiv,w
  1368  00E8  00FF               	movwf	btemp+1
  1369  00E9  087F               	movf	btemp+1,w
  1370  00EA  00BF               	movwf	_CP2
  1371                           
  1372                           ;L3.c: 229:     DP2 = (((pot2 * 100) / 51)-(CP2 * 100)) / 10;
  1373  00EB  3033               	movlw	51
  1374  00EC  00A6               	movwf	___awdiv@divisor
  1375  00ED  3000               	movlw	0
  1376  00EE  00A7               	movwf	___awdiv@divisor+1
  1377  00EF  0844               	movf	_pot2,w
  1378  00F0  00AE               	movwf	??_map
  1379  00F1  01AF               	clrf	??_map+1
  1380  00F2  082E               	movf	??_map,w
  1381  00F3  00A0               	movwf	___wmul@multiplier
  1382  00F4  082F               	movf	??_map+1,w
  1383  00F5  00A1               	movwf	___wmul@multiplier+1
  1384  00F6  3064               	movlw	100
  1385  00F7  00A2               	movwf	___wmul@multiplicand
  1386  00F8  3000               	movlw	0
  1387  00F9  00A3               	movwf	___wmul@multiplicand+1
  1388  00FA  120A  118A  2667  120A  118A  	fcall	___wmul
  1389  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0101  0821               	movf	?___wmul+1,w
  1392  0102  00A9               	movwf	___awdiv@dividend+1
  1393  0103  0820               	movf	?___wmul,w
  1394  0104  00A8               	movwf	___awdiv@dividend
  1395  0105  120A  118A  248C  120A  118A  	fcall	___awdiv
  1396  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1397  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1398  010C  0826               	movf	?___awdiv,w
  1399  010D  00B0               	movwf	??_map+2
  1400  010E  0827               	movf	?___awdiv+1,w
  1401  010F  00B1               	movwf	??_map+3
  1402  0110  083F               	movf	_CP2,w
  1403  0111  00B2               	movwf	??_map+4
  1404  0112  01B3               	clrf	??_map+5
  1405  0113  0832               	movf	??_map+4,w
  1406  0114  00A0               	movwf	___wmul@multiplier
  1407  0115  0833               	movf	??_map+5,w
  1408  0116  00A1               	movwf	___wmul@multiplier+1
  1409  0117  309C               	movlw	156
  1410  0118  00A2               	movwf	___wmul@multiplicand
  1411  0119  30FF               	movlw	255
  1412  011A  00A3               	movwf	___wmul@multiplicand+1
  1413  011B  120A  118A  2667  120A  118A  	fcall	___wmul
  1414  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0122  0820               	movf	?___wmul,w
  1417  0123  0730               	addwf	??_map+2,w
  1418  0124  00B4               	movwf	_map$1126
  1419  0125  0821               	movf	?___wmul+1,w
  1420  0126  1803               	skipnc
  1421  0127  0A21               	incf	?___wmul+1,w
  1422  0128  0731               	addwf	??_map+3,w
  1423  0129  00B5               	movwf	_map$1126+1
  1424                           
  1425                           ;L3.c: 229:     DP2 = (((pot2 * 100) / 51)-(CP2 * 100)) / 10;
  1426  012A  300A               	movlw	10
  1427  012B  00A6               	movwf	___awdiv@divisor
  1428  012C  3000               	movlw	0
  1429  012D  00A7               	movwf	___awdiv@divisor+1
  1430  012E  0835               	movf	_map$1126+1,w
  1431  012F  00A9               	movwf	___awdiv@dividend+1
  1432  0130  0834               	movf	_map$1126,w
  1433  0131  00A8               	movwf	___awdiv@dividend
  1434  0132  120A  118A  248C  120A  118A  	fcall	___awdiv
  1435  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0139  0826               	movf	?___awdiv,w
  1438  013A  00FF               	movwf	btemp+1
  1439  013B  087F               	movf	btemp+1,w
  1440  013C  00BE               	movwf	_DP2
  1441                           
  1442                           ;L3.c: 230:     UP2 = (((pot2 * 100) / 51)-(CP2 * 100)-(DP2 * 10));
  1443  013D  3033               	movlw	51
  1444  013E  00A6               	movwf	___awdiv@divisor
  1445  013F  3000               	movlw	0
  1446  0140  00A7               	movwf	___awdiv@divisor+1
  1447  0141  0844               	movf	_pot2,w
  1448  0142  00AE               	movwf	??_map
  1449  0143  01AF               	clrf	??_map+1
  1450  0144  082E               	movf	??_map,w
  1451  0145  00A0               	movwf	___wmul@multiplier
  1452  0146  082F               	movf	??_map+1,w
  1453  0147  00A1               	movwf	___wmul@multiplier+1
  1454  0148  3064               	movlw	100
  1455  0149  00A2               	movwf	___wmul@multiplicand
  1456  014A  3000               	movlw	0
  1457  014B  00A3               	movwf	___wmul@multiplicand+1
  1458  014C  120A  118A  2667  120A  118A  	fcall	___wmul
  1459  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0153  0821               	movf	?___wmul+1,w
  1462  0154  00A9               	movwf	___awdiv@dividend+1
  1463  0155  0820               	movf	?___wmul,w
  1464  0156  00A8               	movwf	___awdiv@dividend
  1465  0157  120A  118A  248C  120A  118A  	fcall	___awdiv
  1466  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1467  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1468  015E  0826               	movf	?___awdiv,w
  1469  015F  00B0               	movwf	??_map+2
  1470  0160  0827               	movf	?___awdiv+1,w
  1471  0161  00B1               	movwf	??_map+3
  1472  0162  309C               	movlw	156
  1473  0163  00FF               	movwf	btemp+1
  1474  0164  087F               	movf	btemp+1,w
  1475  0165  00A0               	movwf	___bmul@multiplicand
  1476  0166  083F               	movf	_CP2,w
  1477  0167  120A  118A  2702  120A  118A  	fcall	___bmul
  1478  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1479  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1480  016E  00B2               	movwf	??_map+4
  1481  016F  30F6               	movlw	246
  1482  0170  00FF               	movwf	btemp+1
  1483  0171  087F               	movf	btemp+1,w
  1484  0172  00A0               	movwf	___bmul@multiplicand
  1485  0173  083E               	movf	_DP2,w
  1486  0174  120A  118A  2702  120A  118A  	fcall	___bmul
  1487  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1488  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1489  017B  0732               	addwf	??_map+4,w
  1490  017C  0730               	addwf	??_map+2,w
  1491  017D  00FF               	movwf	btemp+1
  1492  017E  087F               	movf	btemp+1,w
  1493  017F  00BD               	movwf	_UP2
  1494  0180                     l1931:
  1495                           
  1496                           ;L3.c: 232:     C1 = (CP1 + 0x30);
  1497  0180  0842               	movf	_CP1,w
  1498  0181  3E30               	addlw	48
  1499  0182  00FF               	movwf	btemp+1
  1500  0183  087F               	movf	btemp+1,w
  1501  0184  00BC               	movwf	_C1
  1502  0185                     l1933:
  1503                           
  1504                           ;L3.c: 233:     D1 = (DP1 + 0x30);
  1505  0185  0841               	movf	_DP1,w
  1506  0186  3E30               	addlw	48
  1507  0187  00FF               	movwf	btemp+1
  1508  0188  087F               	movf	btemp+1,w
  1509  0189  00BB               	movwf	_D1
  1510  018A                     l1935:
  1511                           
  1512                           ;L3.c: 234:     U1 = (UP1 + 0x30);
  1513  018A  0840               	movf	_UP1,w
  1514  018B  3E30               	addlw	48
  1515  018C  00FF               	movwf	btemp+1
  1516  018D  087F               	movf	btemp+1,w
  1517  018E  00BA               	movwf	_U1
  1518  018F                     l1937:
  1519                           
  1520                           ;L3.c: 236:     C2 = (CP2 + 0x30);
  1521  018F  083F               	movf	_CP2,w
  1522  0190  3E30               	addlw	48
  1523  0191  00FF               	movwf	btemp+1
  1524  0192  087F               	movf	btemp+1,w
  1525  0193  00B9               	movwf	_C2
  1526  0194                     l1939:
  1527                           
  1528                           ;L3.c: 237:     D2 = (DP2 + 0x30);
  1529  0194  083E               	movf	_DP2,w
  1530  0195  3E30               	addlw	48
  1531  0196  00FF               	movwf	btemp+1
  1532  0197  087F               	movf	btemp+1,w
  1533  0198  00B8               	movwf	_D2
  1534  0199                     l1941:
  1535                           
  1536                           ;L3.c: 238:     U2 = (UP2 + 0x30);
  1537  0199  083D               	movf	_UP2,w
  1538  019A  3E30               	addlw	48
  1539  019B  00FF               	movwf	btemp+1
  1540  019C  087F               	movf	btemp+1,w
  1541  019D  00B7               	movwf	_U2
  1542  019E                     l141:
  1543  019E  0008               	return
  1544  019F                     __end_of_map:
  1545                           
  1546                           	psect	text2
  1547  0667                     __ptext2:	
  1548 ;; *************** function ___wmul *****************
  1549 ;; Defined at:
  1550 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1553 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  product         2    4[BANK0 ] unsigned int 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  2    0[BANK0 ] unsigned int 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       4       0       0       0
  1566 ;;      Locals:         0       2       0       0       0
  1567 ;;      Temps:          0       0       0       0       0
  1568 ;;      Totals:         0       6       0       0       0
  1569 ;;Total ram usage:        6 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    3
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_map
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           
  1580                           ;psect for function ___wmul
  1581  0667                     ___wmul:
  1582  0667                     l1633:	
  1583                           ;incstack = 0
  1584                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1585                           
  1586  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0669  01A4               	clrf	___wmul@product
  1589  066A  01A5               	clrf	___wmul@product+1
  1590  066B                     l1635:
  1591  066B  1C20               	btfss	___wmul@multiplier,0
  1592  066C  2E6E               	goto	u321
  1593  066D  2E6F               	goto	u320
  1594  066E                     u321:
  1595  066E  2E75               	goto	l359
  1596  066F                     u320:
  1597  066F                     l1637:
  1598  066F  0822               	movf	___wmul@multiplicand,w
  1599  0670  07A4               	addwf	___wmul@product,f
  1600  0671  1803               	skipnc
  1601  0672  0AA5               	incf	___wmul@product+1,f
  1602  0673  0823               	movf	___wmul@multiplicand+1,w
  1603  0674  07A5               	addwf	___wmul@product+1,f
  1604  0675                     l359:
  1605  0675  3001               	movlw	1
  1606  0676                     u335:
  1607  0676  1003               	clrc
  1608  0677  0DA2               	rlf	___wmul@multiplicand,f
  1609  0678  0DA3               	rlf	___wmul@multiplicand+1,f
  1610  0679  3EFF               	addlw	-1
  1611  067A  1D03               	skipz
  1612  067B  2E76               	goto	u335
  1613  067C                     l1639:
  1614  067C  3001               	movlw	1
  1615  067D                     u345:
  1616  067D  1003               	clrc
  1617  067E  0CA1               	rrf	___wmul@multiplier+1,f
  1618  067F  0CA0               	rrf	___wmul@multiplier,f
  1619  0680  3EFF               	addlw	-1
  1620  0681  1D03               	skipz
  1621  0682  2E7D               	goto	u345
  1622  0683                     l1641:
  1623  0683  0820               	movf	___wmul@multiplier,w
  1624  0684  0421               	iorwf	___wmul@multiplier+1,w
  1625  0685  1D03               	btfss	3,2
  1626  0686  2E88               	goto	u351
  1627  0687  2E89               	goto	u350
  1628  0688                     u351:
  1629  0688  2E6B               	goto	l1635
  1630  0689                     u350:
  1631  0689                     l1643:
  1632  0689  0825               	movf	___wmul@product+1,w
  1633  068A  00A1               	movwf	?___wmul+1
  1634  068B  0824               	movf	___wmul@product,w
  1635  068C  00A0               	movwf	?___wmul
  1636  068D                     l361:
  1637  068D  0008               	return
  1638  068E                     __end_of___wmul:
  1639                           
  1640                           	psect	text3
  1641  0702                     __ptext3:	
  1642 ;; *************** function ___bmul *****************
  1643 ;; Defined at:
  1644 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  multiplier      1    wreg     unsigned char 
  1647 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1650 ;;  product         1    1[BANK0 ] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      unsigned char 
  1653 ;; Registers used:
  1654 ;;		wreg, status,2, status,0, btemp+1
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         0       1       0       0       0
  1661 ;;      Locals:         0       2       0       0       0
  1662 ;;      Temps:          0       0       0       0       0
  1663 ;;      Totals:         0       3       0       0       0
  1664 ;;Total ram usage:        3 bytes
  1665 ;; Hardware stack levels used:    1
  1666 ;; Hardware stack levels required when called:    3
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_map
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function ___bmul
  1676  0702                     ___bmul:
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1680                           ;___bmul@multiplier stored from wreg
  1681  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0704  00A2               	movwf	___bmul@multiplier
  1684  0705                     l1647:
  1685  0705  01A1               	clrf	___bmul@product
  1686  0706                     l1649:
  1687  0706  1C22               	btfss	___bmul@multiplier,0
  1688  0707  2F09               	goto	u361
  1689  0708  2F0A               	goto	u360
  1690  0709                     u361:
  1691  0709  2F0E               	goto	l1653
  1692  070A                     u360:
  1693  070A                     l1651:
  1694  070A  0820               	movf	___bmul@multiplicand,w
  1695  070B  00FF               	movwf	btemp+1
  1696  070C  087F               	movf	btemp+1,w
  1697  070D  07A1               	addwf	___bmul@product,f
  1698  070E                     l1653:
  1699  070E  1003               	clrc
  1700  070F  0DA0               	rlf	___bmul@multiplicand,f
  1701  0710                     l1655:
  1702  0710  1003               	clrc
  1703  0711  0CA2               	rrf	___bmul@multiplier,f
  1704  0712                     l1657:
  1705  0712  0822               	movf	___bmul@multiplier,w
  1706  0713  1D03               	btfss	3,2
  1707  0714  2F16               	goto	u371
  1708  0715  2F17               	goto	u370
  1709  0716                     u371:
  1710  0716  2F06               	goto	l1649
  1711  0717                     u370:
  1712  0717                     l1659:
  1713  0717  0821               	movf	___bmul@product,w
  1714  0718                     l385:
  1715  0718  0008               	return
  1716  0719                     __end_of___bmul:
  1717                           
  1718                           	psect	text4
  1719  048C                     __ptext4:	
  1720 ;; *************** function ___awdiv *****************
  1721 ;; Defined at:
  1722 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  divisor         2    6[BANK0 ] int 
  1725 ;;  dividend        2    8[BANK0 ] int 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  quotient        2   12[BANK0 ] int 
  1728 ;;  sign            1   11[BANK0 ] unsigned char 
  1729 ;;  counter         1   10[BANK0 ] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  2    6[BANK0 ] int 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, btemp+1
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       4       0       0       0
  1740 ;;      Locals:         0       4       0       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         0       8       0       0       0
  1743 ;;Total ram usage:        8 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    3
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_map
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function ___awdiv
  1755  048C                     ___awdiv:
  1756  048C                     l1663:	
  1757                           ;incstack = 0
  1758                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1759                           
  1760  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1761  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1762  048E  01AB               	clrf	___awdiv@sign
  1763  048F                     l1665:
  1764  048F  1FA7               	btfss	___awdiv@divisor+1,7
  1765  0490  2C92               	goto	u381
  1766  0491  2C93               	goto	u380
  1767  0492                     u381:
  1768  0492  2C9A               	goto	l1671
  1769  0493                     u380:
  1770  0493                     l1667:
  1771  0493  09A6               	comf	___awdiv@divisor,f
  1772  0494  09A7               	comf	___awdiv@divisor+1,f
  1773  0495  0AA6               	incf	___awdiv@divisor,f
  1774  0496  1903               	skipnz
  1775  0497  0AA7               	incf	___awdiv@divisor+1,f
  1776  0498                     l1669:
  1777  0498  01AB               	clrf	___awdiv@sign
  1778  0499  0AAB               	incf	___awdiv@sign,f
  1779  049A                     l1671:
  1780  049A  1FA9               	btfss	___awdiv@dividend+1,7
  1781  049B  2C9D               	goto	u391
  1782  049C  2C9E               	goto	u390
  1783  049D                     u391:
  1784  049D  2CA7               	goto	l1677
  1785  049E                     u390:
  1786  049E                     l1673:
  1787  049E  09A8               	comf	___awdiv@dividend,f
  1788  049F  09A9               	comf	___awdiv@dividend+1,f
  1789  04A0  0AA8               	incf	___awdiv@dividend,f
  1790  04A1  1903               	skipnz
  1791  04A2  0AA9               	incf	___awdiv@dividend+1,f
  1792  04A3                     l1675:
  1793  04A3  3001               	movlw	1
  1794  04A4  00FF               	movwf	btemp+1
  1795  04A5  087F               	movf	btemp+1,w
  1796  04A6  06AB               	xorwf	___awdiv@sign,f
  1797  04A7                     l1677:
  1798  04A7  01AC               	clrf	___awdiv@quotient
  1799  04A8  01AD               	clrf	___awdiv@quotient+1
  1800  04A9                     l1679:
  1801  04A9  0826               	movf	___awdiv@divisor,w
  1802  04AA  0427               	iorwf	___awdiv@divisor+1,w
  1803  04AB  1903               	btfsc	3,2
  1804  04AC  2CAE               	goto	u401
  1805  04AD  2CAF               	goto	u400
  1806  04AE                     u401:
  1807  04AE  2CE6               	goto	l1699
  1808  04AF                     u400:
  1809  04AF                     l1681:
  1810  04AF  01AA               	clrf	___awdiv@counter
  1811  04B0  0AAA               	incf	___awdiv@counter,f
  1812  04B1  2CBD               	goto	l1687
  1813  04B2                     l1683:
  1814  04B2  3001               	movlw	1
  1815  04B3                     u415:
  1816  04B3  1003               	clrc
  1817  04B4  0DA6               	rlf	___awdiv@divisor,f
  1818  04B5  0DA7               	rlf	___awdiv@divisor+1,f
  1819  04B6  3EFF               	addlw	-1
  1820  04B7  1D03               	skipz
  1821  04B8  2CB3               	goto	u415
  1822  04B9                     l1685:
  1823  04B9  3001               	movlw	1
  1824  04BA  00FF               	movwf	btemp+1
  1825  04BB  087F               	movf	btemp+1,w
  1826  04BC  07AA               	addwf	___awdiv@counter,f
  1827  04BD                     l1687:
  1828  04BD  1FA7               	btfss	___awdiv@divisor+1,7
  1829  04BE  2CC0               	goto	u421
  1830  04BF  2CC1               	goto	u420
  1831  04C0                     u421:
  1832  04C0  2CB2               	goto	l1683
  1833  04C1                     u420:
  1834  04C1                     l1689:
  1835  04C1  3001               	movlw	1
  1836  04C2                     u435:
  1837  04C2  1003               	clrc
  1838  04C3  0DAC               	rlf	___awdiv@quotient,f
  1839  04C4  0DAD               	rlf	___awdiv@quotient+1,f
  1840  04C5  3EFF               	addlw	-1
  1841  04C6  1D03               	skipz
  1842  04C7  2CC2               	goto	u435
  1843  04C8  0827               	movf	___awdiv@divisor+1,w
  1844  04C9  0229               	subwf	___awdiv@dividend+1,w
  1845  04CA  1D03               	skipz
  1846  04CB  2CCE               	goto	u445
  1847  04CC  0826               	movf	___awdiv@divisor,w
  1848  04CD  0228               	subwf	___awdiv@dividend,w
  1849  04CE                     u445:
  1850  04CE  1C03               	skipc
  1851  04CF  2CD1               	goto	u441
  1852  04D0  2CD2               	goto	u440
  1853  04D1                     u441:
  1854  04D1  2CD9               	goto	l1695
  1855  04D2                     u440:
  1856  04D2                     l1691:
  1857  04D2  0826               	movf	___awdiv@divisor,w
  1858  04D3  02A8               	subwf	___awdiv@dividend,f
  1859  04D4  0827               	movf	___awdiv@divisor+1,w
  1860  04D5  1C03               	skipc
  1861  04D6  03A9               	decf	___awdiv@dividend+1,f
  1862  04D7  02A9               	subwf	___awdiv@dividend+1,f
  1863  04D8                     l1693:
  1864  04D8  142C               	bsf	___awdiv@quotient,0
  1865  04D9                     l1695:
  1866  04D9  3001               	movlw	1
  1867  04DA                     u455:
  1868  04DA  1003               	clrc
  1869  04DB  0CA7               	rrf	___awdiv@divisor+1,f
  1870  04DC  0CA6               	rrf	___awdiv@divisor,f
  1871  04DD  3EFF               	addlw	-1
  1872  04DE  1D03               	skipz
  1873  04DF  2CDA               	goto	u455
  1874  04E0                     l1697:
  1875  04E0  3001               	movlw	1
  1876  04E1  02AA               	subwf	___awdiv@counter,f
  1877  04E2  1D03               	btfss	3,2
  1878  04E3  2CE5               	goto	u461
  1879  04E4  2CE6               	goto	u460
  1880  04E5                     u461:
  1881  04E5  2CC1               	goto	l1689
  1882  04E6                     u460:
  1883  04E6                     l1699:
  1884  04E6  082B               	movf	___awdiv@sign,w
  1885  04E7  1903               	btfsc	3,2
  1886  04E8  2CEA               	goto	u471
  1887  04E9  2CEB               	goto	u470
  1888  04EA                     u471:
  1889  04EA  2CF0               	goto	l1703
  1890  04EB                     u470:
  1891  04EB                     l1701:
  1892  04EB  09AC               	comf	___awdiv@quotient,f
  1893  04EC  09AD               	comf	___awdiv@quotient+1,f
  1894  04ED  0AAC               	incf	___awdiv@quotient,f
  1895  04EE  1903               	skipnz
  1896  04EF  0AAD               	incf	___awdiv@quotient+1,f
  1897  04F0                     l1703:
  1898  04F0  082D               	movf	___awdiv@quotient+1,w
  1899  04F1  00A7               	movwf	?___awdiv+1
  1900  04F2  082C               	movf	___awdiv@quotient,w
  1901  04F3  00A6               	movwf	?___awdiv
  1902  04F4                     l512:
  1903  04F4  0008               	return
  1904  04F5                     __end_of___awdiv:
  1905                           
  1906                           	psect	text5
  1907  0553                     __ptext5:	
  1908 ;; *************** function _Setup *****************
  1909 ;; Defined at:
  1910 ;;		line 171 in file "L3.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1924 ;;      Params:         0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0
  1927 ;;      Totals:         0       0       0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    6
  1931 ;; This function calls:
  1932 ;;		_Lcd_Cmd
  1933 ;;		_Lcd_Init
  1934 ;;		_configADC2
  1935 ;;		_initOsc
  1936 ;;		_usart
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _Setup
  1944  0553                     _Setup:
  1945  0553                     l1855:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1948                           
  1949                           
  1950                           ;L3.c: 172:     TRISD = 0;
  1951  0553  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0554  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0555  0188               	clrf	8	;volatile
  1954                           
  1955                           ;L3.c: 173:     TRISE = 0;
  1956  0556  0189               	clrf	9	;volatile
  1957  0557                     l1857:
  1958                           
  1959                           ;L3.c: 174:     initOsc(6);
  1960  0557  3006               	movlw	6
  1961  0558  120A  118A  24F5  120A  118A  	fcall	_initOsc
  1962  055D                     l1859:
  1963                           
  1964                           ;L3.c: 175:     configADC2(1, 12);
  1965  055D  300C               	movlw	12
  1966  055E  00FF               	movwf	btemp+1
  1967  055F  087F               	movf	btemp+1,w
  1968  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0562  00A0               	movwf	configADC2@chan
  1971  0563  3001               	movlw	1
  1972  0564  120A  118A  234A  120A  118A  	fcall	_configADC2
  1973  0569                     l1861:
  1974                           
  1975                           ;L3.c: 176:     usart();
  1976  0569  120A  118A  2719  120A  118A  	fcall	_usart
  1977  056E                     l1863:
  1978                           
  1979                           ;L3.c: 177:     Lcd_Init();
  1980  056E  120A  118A  26D0  120A  118A  	fcall	_Lcd_Init
  1981  0573                     l1865:
  1982                           
  1983                           ;L3.c: 178:     Lcd_Cmd(0x8A);
  1984  0573  308A               	movlw	138
  1985  0574  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  1986  0579                     l1867:
  1987                           
  1988                           ;L3.c: 179:     ANSEL = 0;
  1989  0579  1683               	bsf	3,5	;RP0=1, select bank3
  1990  057A  1703               	bsf	3,6	;RP1=1, select bank3
  1991  057B  0188               	clrf	8	;volatile
  1992  057C                     l1869:
  1993                           
  1994                           ;L3.c: 180:     ANSELH = 0b00000011;
  1995  057C  3003               	movlw	3
  1996  057D  0089               	movwf	9	;volatile
  1997  057E                     l1871:
  1998                           
  1999                           ;L3.c: 181:     PORTA = 0;
  2000  057E  1283               	bcf	3,5	;RP0=0, select bank0
  2001  057F  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0580  0185               	clrf	5	;volatile
  2003  0581                     l1873:
  2004                           
  2005                           ;L3.c: 182:     PORTB = 0;
  2006  0581  0186               	clrf	6	;volatile
  2007  0582                     l1875:
  2008                           
  2009                           ;L3.c: 183:     PORTC = 0;
  2010  0582  0187               	clrf	7	;volatile
  2011  0583                     l1877:
  2012                           
  2013                           ;L3.c: 184:     PORTD = 0;
  2014  0583  0188               	clrf	8	;volatile
  2015  0584                     l1879:
  2016                           
  2017                           ;L3.c: 185:     PORTE = 0;
  2018  0584  0189               	clrf	9	;volatile
  2019  0585                     l1881:
  2020                           
  2021                           ;L3.c: 187:     TRISC = 0b10000000;
  2022  0585  3080               	movlw	128
  2023  0586  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0587  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0588  0087               	movwf	7	;volatile
  2026  0589                     l1883:
  2027                           
  2028                           ;L3.c: 188:     TRISA = 0;
  2029  0589  0185               	clrf	5	;volatile
  2030  058A                     l1885:
  2031                           
  2032                           ;L3.c: 189:     TRISB = 0b00000011;
  2033  058A  3003               	movlw	3
  2034  058B  0086               	movwf	6	;volatile
  2035  058C                     l1887:
  2036                           
  2037                           ;L3.c: 190:     OPTION_REG = 0b10000111;
  2038  058C  3087               	movlw	135
  2039  058D  0081               	movwf	1	;volatile
  2040  058E                     l1889:
  2041                           
  2042                           ;L3.c: 191:     INTCONbits.GIE = 1;
  2043  058E  178B               	bsf	11,7	;volatile
  2044  058F                     l1891:
  2045                           
  2046                           ;L3.c: 192:     INTCONbits.T0IE = 1;
  2047  058F  168B               	bsf	11,5	;volatile
  2048  0590                     l1893:
  2049                           
  2050                           ;L3.c: 193:     INTCONbits.PEIE = 1;
  2051  0590  170B               	bsf	11,6	;volatile
  2052  0591                     l1895:
  2053                           
  2054                           ;L3.c: 194:     PIE1bits.ADIE = 1;
  2055  0591  170C               	bsf	12,6	;volatile
  2056  0592                     l1897:
  2057                           
  2058                           ;L3.c: 195:     INTCONbits.T0IF = 0;
  2059  0592  110B               	bcf	11,2	;volatile
  2060  0593                     l1899:
  2061                           
  2062                           ;L3.c: 196:     PIR1bits.ADIF = 0;
  2063  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0595  130C               	bcf	12,6	;volatile
  2066  0596                     l1901:
  2067                           
  2068                           ;L3.c: 197:     PIR1bits.TXIF = 0;
  2069  0596  120C               	bcf	12,4	;volatile
  2070  0597                     l1903:
  2071                           
  2072                           ;L3.c: 198:     PIE1bits.TXIE = 1;
  2073  0597  1683               	bsf	3,5	;RP0=1, select bank1
  2074  0598  1303               	bcf	3,6	;RP1=0, select bank1
  2075  0599  160C               	bsf	12,4	;volatile
  2076  059A                     l1905:
  2077                           
  2078                           ;L3.c: 199:     PIE1bits.RCIE = 1;
  2079  059A  168C               	bsf	12,5	;volatile
  2080  059B                     l1907:
  2081                           
  2082                           ;L3.c: 200:     PIR1bits.RCIF = 0;
  2083  059B  1283               	bcf	3,5	;RP0=0, select bank0
  2084  059C  1303               	bcf	3,6	;RP1=0, select bank0
  2085  059D  128C               	bcf	12,5	;volatile
  2086  059E                     l133:
  2087  059E  0008               	return
  2088  059F                     __end_of_Setup:
  2089                           
  2090                           	psect	text6
  2091  0719                     __ptext6:	
  2092 ;; *************** function _usart *****************
  2093 ;; Defined at:
  2094 ;;		line 5 in file "usart.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0
  2111 ;;      Totals:         0       0       0       0       0
  2112 ;;Total ram usage:        0 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    3
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_Setup
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function _usart
  2124  0719                     _usart:
  2125  0719                     l1615:	
  2126                           ;incstack = 0
  2127                           ; Regs used in _usart: [wreg+status,2]
  2128                           
  2129                           
  2130                           ;usart.c: 8:     TXSTAbits.TX9 = 0;
  2131  0719  1683               	bsf	3,5	;RP0=1, select bank1
  2132  071A  1303               	bcf	3,6	;RP1=0, select bank1
  2133  071B  1318               	bcf	24,6	;volatile
  2134                           
  2135                           ;usart.c: 9:     TXSTAbits.SYNC = 0;
  2136  071C  1218               	bcf	24,4	;volatile
  2137                           
  2138                           ;usart.c: 10:     TXSTAbits.BRGH = 1;
  2139  071D  1518               	bsf	24,2	;volatile
  2140                           
  2141                           ;usart.c: 11:     BAUDCTLbits.BRG16 = 0;
  2142  071E  1683               	bsf	3,5	;RP0=1, select bank3
  2143  071F  1703               	bsf	3,6	;RP1=1, select bank3
  2144  0720  1187               	bcf	7,3	;volatile
  2145  0721                     l1617:
  2146                           
  2147                           ;usart.c: 12:     SPBRGH = 0;
  2148  0721  1683               	bsf	3,5	;RP0=1, select bank1
  2149  0722  1303               	bcf	3,6	;RP1=0, select bank1
  2150  0723  019A               	clrf	26	;volatile
  2151  0724                     l1619:
  2152                           
  2153                           ;usart.c: 13:     SPBRG = 25;
  2154  0724  3019               	movlw	25
  2155  0725  0099               	movwf	25	;volatile
  2156  0726                     l1621:
  2157                           
  2158                           ;usart.c: 14:     PIE1bits.TXIE = 1;
  2159  0726  160C               	bsf	12,4	;volatile
  2160  0727                     l1623:
  2161                           
  2162                           ;usart.c: 15:     TXSTAbits.TXEN = 1;
  2163  0727  1698               	bsf	24,5	;volatile
  2164  0728                     l1625:
  2165                           
  2166                           ;usart.c: 18:     RCSTAbits.SPEN = 1;
  2167  0728  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0729  1303               	bcf	3,6	;RP1=0, select bank0
  2169  072A  1798               	bsf	24,7	;volatile
  2170  072B                     l1627:
  2171                           
  2172                           ;usart.c: 19:     RCSTAbits. RX9 = 0;
  2173  072B  1318               	bcf	24,6	;volatile
  2174  072C                     l1629:
  2175                           
  2176                           ;usart.c: 20:     RCSTAbits.CREN = 1;
  2177  072C  1618               	bsf	24,4	;volatile
  2178  072D                     l257:
  2179  072D  0008               	return
  2180  072E                     __end_of_usart:
  2181                           
  2182                           	psect	text7
  2183  04F5                     __ptext7:	
  2184 ;; *************** function _initOsc *****************
  2185 ;; Defined at:
  2186 ;;		line 7 in file "osc.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;  IRCF            1    wreg     unsigned char 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  IRCF            1    2[BANK0 ] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       0       0       0       0
  2201 ;;      Locals:         0       1       0       0       0
  2202 ;;      Temps:          0       2       0       0       0
  2203 ;;      Totals:         0       3       0       0       0
  2204 ;;Total ram usage:        3 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    3
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_Setup
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _initOsc
  2216  04F5                     _initOsc:
  2217                           
  2218                           ;incstack = 0
  2219                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2220                           ;initOsc@IRCF stored from wreg
  2221  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2222  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2223  04F7  00A2               	movwf	initOsc@IRCF
  2224  04F8                     l1529:
  2225                           
  2226                           ;osc.c: 9:     switch (IRCF){
  2227  04F8  2D2F               	goto	l1533
  2228  04F9                     l263:	
  2229                           ;osc.c: 11:         case 0:
  2230                           
  2231                           
  2232                           ;osc.c: 12:             OSCCONbits.IRCF2 = 0;
  2233  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2234  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  2235  04FB  130F               	bcf	15,6	;volatile
  2236                           
  2237                           ;osc.c: 13:             OSCCONbits.IRCF1 = 0;
  2238  04FC  128F               	bcf	15,5	;volatile
  2239                           
  2240                           ;osc.c: 14:             OSCCONbits.IRCF0 = 0;
  2241  04FD  120F               	bcf	15,4	;volatile
  2242                           
  2243                           ;osc.c: 16:             break;
  2244  04FE  2D51               	goto	l264
  2245  04FF                     l265:	
  2246                           ;osc.c: 18:         case 1:
  2247                           
  2248                           
  2249                           ;osc.c: 19:             OSCCONbits.IRCF2 = 0;
  2250  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0500  1303               	bcf	3,6	;RP1=0, select bank1
  2252  0501  130F               	bcf	15,6	;volatile
  2253                           
  2254                           ;osc.c: 20:             OSCCONbits.IRCF1 = 0;
  2255  0502  128F               	bcf	15,5	;volatile
  2256                           
  2257                           ;osc.c: 21:             OSCCONbits.IRCF0 = 1;
  2258  0503  160F               	bsf	15,4	;volatile
  2259                           
  2260                           ;osc.c: 22:             break;
  2261  0504  2D51               	goto	l264
  2262  0505                     l266:	
  2263                           ;osc.c: 24:         case 2:
  2264                           
  2265                           
  2266                           ;osc.c: 25:             OSCCONbits.IRCF2 = 0;
  2267  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2268  0506  1303               	bcf	3,6	;RP1=0, select bank1
  2269  0507  130F               	bcf	15,6	;volatile
  2270                           
  2271                           ;osc.c: 26:             OSCCONbits.IRCF1 = 1;
  2272  0508  168F               	bsf	15,5	;volatile
  2273                           
  2274                           ;osc.c: 27:             OSCCONbits.IRCF0 = 0;
  2275  0509  120F               	bcf	15,4	;volatile
  2276                           
  2277                           ;osc.c: 28:             break;
  2278  050A  2D51               	goto	l264
  2279  050B                     l267:	
  2280                           ;osc.c: 30:         case 3:
  2281                           
  2282                           
  2283                           ;osc.c: 31:             OSCCONbits.IRCF2 = 0;
  2284  050B  1683               	bsf	3,5	;RP0=1, select bank1
  2285  050C  1303               	bcf	3,6	;RP1=0, select bank1
  2286  050D  130F               	bcf	15,6	;volatile
  2287                           
  2288                           ;osc.c: 32:             OSCCONbits.IRCF1 = 1;
  2289  050E  168F               	bsf	15,5	;volatile
  2290                           
  2291                           ;osc.c: 33:             OSCCONbits.IRCF0 = 1;
  2292  050F  160F               	bsf	15,4	;volatile
  2293                           
  2294                           ;osc.c: 34:             break;
  2295  0510  2D51               	goto	l264
  2296  0511                     l268:	
  2297                           ;osc.c: 36:         case 4:
  2298                           
  2299                           
  2300                           ;osc.c: 37:             OSCCONbits.IRCF2 = 1;
  2301  0511  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0512  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0513  170F               	bsf	15,6	;volatile
  2304                           
  2305                           ;osc.c: 38:             OSCCONbits.IRCF1 = 0;
  2306  0514  128F               	bcf	15,5	;volatile
  2307                           
  2308                           ;osc.c: 39:             OSCCONbits.IRCF0 = 0;
  2309  0515  120F               	bcf	15,4	;volatile
  2310                           
  2311                           ;osc.c: 40:             break;
  2312  0516  2D51               	goto	l264
  2313  0517                     l269:	
  2314                           ;osc.c: 42:         case 5:
  2315                           
  2316                           
  2317                           ;osc.c: 43:             OSCCONbits.IRCF2 = 1;
  2318  0517  1683               	bsf	3,5	;RP0=1, select bank1
  2319  0518  1303               	bcf	3,6	;RP1=0, select bank1
  2320  0519  170F               	bsf	15,6	;volatile
  2321                           
  2322                           ;osc.c: 44:             OSCCONbits.IRCF1 = 0;
  2323  051A  128F               	bcf	15,5	;volatile
  2324                           
  2325                           ;osc.c: 45:             OSCCONbits.IRCF0 = 1;
  2326  051B  160F               	bsf	15,4	;volatile
  2327                           
  2328                           ;osc.c: 46:             break;
  2329  051C  2D51               	goto	l264
  2330  051D                     l270:	
  2331                           ;osc.c: 49:         case 6:
  2332                           
  2333                           
  2334                           ;osc.c: 50:             OSCCONbits.IRCF2 = 1;
  2335  051D  1683               	bsf	3,5	;RP0=1, select bank1
  2336  051E  1303               	bcf	3,6	;RP1=0, select bank1
  2337  051F  170F               	bsf	15,6	;volatile
  2338                           
  2339                           ;osc.c: 51:             OSCCONbits.IRCF1 = 1;
  2340  0520  168F               	bsf	15,5	;volatile
  2341                           
  2342                           ;osc.c: 52:             OSCCONbits.IRCF0 = 0;
  2343  0521  120F               	bcf	15,4	;volatile
  2344                           
  2345                           ;osc.c: 53:             break;
  2346  0522  2D51               	goto	l264
  2347  0523                     l271:	
  2348                           ;osc.c: 55:         case 7:
  2349                           
  2350                           
  2351                           ;osc.c: 56:             OSCCONbits.IRCF2 = 1;
  2352  0523  1683               	bsf	3,5	;RP0=1, select bank1
  2353  0524  1303               	bcf	3,6	;RP1=0, select bank1
  2354  0525  170F               	bsf	15,6	;volatile
  2355                           
  2356                           ;osc.c: 57:             OSCCONbits.IRCF1 = 1;
  2357  0526  168F               	bsf	15,5	;volatile
  2358                           
  2359                           ;osc.c: 58:             OSCCONbits.IRCF0 = 1;
  2360  0527  160F               	bsf	15,4	;volatile
  2361                           
  2362                           ;osc.c: 59:             break;
  2363  0528  2D51               	goto	l264
  2364  0529                     l272:	
  2365                           ;osc.c: 64:         default:
  2366                           
  2367                           
  2368                           ;osc.c: 65:             OSCCONbits.IRCF2 = 1;
  2369  0529  1683               	bsf	3,5	;RP0=1, select bank1
  2370  052A  1303               	bcf	3,6	;RP1=0, select bank1
  2371  052B  170F               	bsf	15,6	;volatile
  2372                           
  2373                           ;osc.c: 66:             OSCCONbits.IRCF1 = 1;
  2374  052C  168F               	bsf	15,5	;volatile
  2375                           
  2376                           ;osc.c: 67:             OSCCONbits.IRCF0 = 0;
  2377  052D  120F               	bcf	15,4	;volatile
  2378                           
  2379                           ;osc.c: 68:             break;
  2380  052E  2D51               	goto	l264
  2381  052F                     l1533:
  2382  052F  0822               	movf	initOsc@IRCF,w
  2383  0530  00A0               	movwf	??_initOsc
  2384  0531  01A1               	clrf	??_initOsc+1
  2385                           
  2386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2387                           ; Switch size 1, requested type "simple"
  2388                           ; Number of cases is 1, Range of values is 0 to 0
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte            4     3 (average)
  2392                           ; direct_byte           11     8 (fixed)
  2393                           ; jumptable            260     6 (fixed)
  2394                           ;	Chosen strategy is simple_byte
  2395  0532  0821               	movf	??_initOsc+1,w
  2396  0533  3A00               	xorlw	0	; case 0
  2397  0534  1903               	skipnz
  2398  0535  2D37               	goto	l2181
  2399  0536  2D29               	goto	l272
  2400  0537                     l2181:
  2401                           
  2402                           ; Switch size 1, requested type "simple"
  2403                           ; Number of cases is 8, Range of values is 0 to 7
  2404                           ; switch strategies available:
  2405                           ; Name         Instructions Cycles
  2406                           ; simple_byte           25    13 (average)
  2407                           ; direct_byte           32     8 (fixed)
  2408                           ; jumptable            260     6 (fixed)
  2409                           ;	Chosen strategy is simple_byte
  2410  0537  0820               	movf	??_initOsc,w
  2411  0538  3A00               	xorlw	0	; case 0
  2412  0539  1903               	skipnz
  2413  053A  2CF9               	goto	l263
  2414  053B  3A01               	xorlw	1	; case 1
  2415  053C  1903               	skipnz
  2416  053D  2CFF               	goto	l265
  2417  053E  3A03               	xorlw	3	; case 2
  2418  053F  1903               	skipnz
  2419  0540  2D05               	goto	l266
  2420  0541  3A01               	xorlw	1	; case 3
  2421  0542  1903               	skipnz
  2422  0543  2D0B               	goto	l267
  2423  0544  3A07               	xorlw	7	; case 4
  2424  0545  1903               	skipnz
  2425  0546  2D11               	goto	l268
  2426  0547  3A01               	xorlw	1	; case 5
  2427  0548  1903               	skipnz
  2428  0549  2D17               	goto	l269
  2429  054A  3A03               	xorlw	3	; case 6
  2430  054B  1903               	skipnz
  2431  054C  2D1D               	goto	l270
  2432  054D  3A01               	xorlw	1	; case 7
  2433  054E  1903               	skipnz
  2434  054F  2D23               	goto	l271
  2435  0550  2D29               	goto	l272
  2436  0551                     l264:
  2437                           
  2438                           ;osc.c: 72:     OSCCONbits.SCS = 1;
  2439  0551  140F               	bsf	15,0	;volatile
  2440  0552                     l273:
  2441  0552  0008               	return
  2442  0553                     __end_of_initOsc:
  2443                           
  2444                           	psect	text8
  2445  034A                     __ptext8:	
  2446 ;; *************** function _configADC2 *****************
  2447 ;; Defined at:
  2448 ;;		line 17 in file "adc2.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  fosc            1    wreg     unsigned char 
  2451 ;;  chan            1    0[BANK0 ] unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  fosc            1    3[BANK0 ] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2463 ;;      Params:         0       1       0       0       0
  2464 ;;      Locals:         0       1       0       0       0
  2465 ;;      Temps:          0       2       0       0       0
  2466 ;;      Totals:         0       4       0       0       0
  2467 ;;Total ram usage:        4 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    3
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_Setup
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function _configADC2
  2479  034A                     _configADC2:
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _configADC2: [wreg-fsr0h+status,2+status,0]
  2483                           ;configADC2@fosc stored from wreg
  2484  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2485  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2486  034C  00A3               	movwf	configADC2@fosc
  2487  034D                     l1541:
  2488                           
  2489                           ;adc2.c: 19:     switch (fosc) {
  2490  034D  2B61               	goto	l1555
  2491  034E                     l1543:
  2492                           
  2493                           ;adc2.c: 22:             ADCON0bits.ADCS = 0b00;
  2494  034E  303F               	movlw	-193
  2495  034F  059F               	andwf	31,f	;volatile
  2496                           
  2497                           ;adc2.c: 23:             break;
  2498  0350  2BC6               	goto	l1593
  2499  0351                     l1545:
  2500                           
  2501                           ;adc2.c: 26:             ADCON0bits.ADCS = 0b01;
  2502  0351  081F               	movf	31,w	;volatile
  2503  0352  393F               	andlw	-193
  2504  0353  3840               	iorlw	64
  2505  0354  009F               	movwf	31	;volatile
  2506                           
  2507                           ;adc2.c: 27:             break;
  2508  0355  2BC6               	goto	l1593
  2509  0356                     l1547:
  2510                           
  2511                           ;adc2.c: 30:             ADCON0bits.ADCS = 0b10;
  2512  0356  081F               	movf	31,w	;volatile
  2513  0357  393F               	andlw	-193
  2514  0358  3880               	iorlw	128
  2515  0359  009F               	movwf	31	;volatile
  2516                           
  2517                           ;adc2.c: 31:             break;
  2518  035A  2BC6               	goto	l1593
  2519  035B                     l1549:
  2520                           
  2521                           ;adc2.c: 34:             ADCON0bits.ADCS = 0b11;
  2522  035B  30C0               	movlw	192
  2523  035C  049F               	iorwf	31,f	;volatile
  2524                           
  2525                           ;adc2.c: 35:             break;
  2526  035D  2BC6               	goto	l1593
  2527  035E                     l1551:
  2528                           
  2529                           ;adc2.c: 38:             ADCON0bits.ADCS = 0b00;
  2530  035E  303F               	movlw	-193
  2531  035F  059F               	andwf	31,f	;volatile
  2532                           
  2533                           ;adc2.c: 39:             break;
  2534  0360  2BC6               	goto	l1593
  2535  0361                     l1555:
  2536  0361  0823               	movf	configADC2@fosc,w
  2537  0362  00A1               	movwf	??_configADC2
  2538  0363  01A2               	clrf	??_configADC2+1
  2539                           
  2540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2541                           ; Switch size 1, requested type "simple"
  2542                           ; Number of cases is 1, Range of values is 0 to 0
  2543                           ; switch strategies available:
  2544                           ; Name         Instructions Cycles
  2545                           ; simple_byte            4     3 (average)
  2546                           ; direct_byte           11     8 (fixed)
  2547                           ; jumptable            260     6 (fixed)
  2548                           ;	Chosen strategy is simple_byte
  2549  0364  0822               	movf	??_configADC2+1,w
  2550  0365  3A00               	xorlw	0	; case 0
  2551  0366  1903               	skipnz
  2552  0367  2B69               	goto	l2183
  2553  0368  2B5E               	goto	l1551
  2554  0369                     l2183:
  2555                           
  2556                           ; Switch size 1, requested type "simple"
  2557                           ; Number of cases is 4, Range of values is 0 to 3
  2558                           ; switch strategies available:
  2559                           ; Name         Instructions Cycles
  2560                           ; simple_byte           13     7 (average)
  2561                           ; direct_byte           20     8 (fixed)
  2562                           ; jumptable            260     6 (fixed)
  2563                           ;	Chosen strategy is simple_byte
  2564  0369  0821               	movf	??_configADC2,w
  2565  036A  3A00               	xorlw	0	; case 0
  2566  036B  1903               	skipnz
  2567  036C  2B4E               	goto	l1543
  2568  036D  3A01               	xorlw	1	; case 1
  2569  036E  1903               	skipnz
  2570  036F  2B51               	goto	l1545
  2571  0370  3A03               	xorlw	3	; case 2
  2572  0371  1903               	skipnz
  2573  0372  2B56               	goto	l1547
  2574  0373  3A01               	xorlw	1	; case 3
  2575  0374  1903               	skipnz
  2576  0375  2B5B               	goto	l1549
  2577  0376  2B5E               	goto	l1551
  2578  0377                     l1557:
  2579                           
  2580                           ;adc2.c: 43:             ADCON0bits.CHS = 0b0000;
  2581  0377  30C3               	movlw	-61
  2582  0378  059F               	andwf	31,f	;volatile
  2583                           
  2584                           ;adc2.c: 44:             break;
  2585  0379  2C00               	goto	l1595
  2586  037A                     l1559:
  2587                           
  2588                           ;adc2.c: 47:             ADCON0bits.CHS = 0b0001;
  2589  037A  081F               	movf	31,w	;volatile
  2590  037B  39C3               	andlw	-61
  2591  037C  3804               	iorlw	4
  2592  037D  009F               	movwf	31	;volatile
  2593                           
  2594                           ;adc2.c: 48:             break;
  2595  037E  2C00               	goto	l1595
  2596  037F                     l1561:
  2597                           
  2598                           ;adc2.c: 51:             ADCON0bits.CHS = 0b0010;
  2599  037F  081F               	movf	31,w	;volatile
  2600  0380  39C3               	andlw	-61
  2601  0381  3808               	iorlw	8
  2602  0382  009F               	movwf	31	;volatile
  2603                           
  2604                           ;adc2.c: 52:             break;
  2605  0383  2C00               	goto	l1595
  2606  0384                     l1563:
  2607                           
  2608                           ;adc2.c: 55:             ADCON0bits.CHS = 0b0011;
  2609  0384  081F               	movf	31,w	;volatile
  2610  0385  39C3               	andlw	-61
  2611  0386  380C               	iorlw	12
  2612  0387  009F               	movwf	31	;volatile
  2613                           
  2614                           ;adc2.c: 56:             break;
  2615  0388  2C00               	goto	l1595
  2616  0389                     l1565:
  2617                           
  2618                           ;adc2.c: 59:             ADCON0bits.CHS = 0b0100;
  2619  0389  081F               	movf	31,w	;volatile
  2620  038A  39C3               	andlw	-61
  2621  038B  3810               	iorlw	16
  2622  038C  009F               	movwf	31	;volatile
  2623                           
  2624                           ;adc2.c: 60:             break;
  2625  038D  2C00               	goto	l1595
  2626  038E                     l1567:
  2627                           
  2628                           ;adc2.c: 63:             ADCON0bits.CHS = 0b0101;
  2629  038E  081F               	movf	31,w	;volatile
  2630  038F  39C3               	andlw	-61
  2631  0390  3814               	iorlw	20
  2632  0391  009F               	movwf	31	;volatile
  2633                           
  2634                           ;adc2.c: 64:             break;
  2635  0392  2C00               	goto	l1595
  2636  0393                     l1569:
  2637                           
  2638                           ;adc2.c: 67:             ADCON0bits.CHS = 0b0110;
  2639  0393  081F               	movf	31,w	;volatile
  2640  0394  39C3               	andlw	-61
  2641  0395  3818               	iorlw	24
  2642  0396  009F               	movwf	31	;volatile
  2643                           
  2644                           ;adc2.c: 68:             break;
  2645  0397  2C00               	goto	l1595
  2646  0398                     l1571:
  2647                           
  2648                           ;adc2.c: 71:             ADCON0bits.CHS = 0b0111;
  2649  0398  081F               	movf	31,w	;volatile
  2650  0399  39C3               	andlw	-61
  2651  039A  381C               	iorlw	28
  2652  039B  009F               	movwf	31	;volatile
  2653                           
  2654                           ;adc2.c: 72:             break;
  2655  039C  2C00               	goto	l1595
  2656  039D                     l1573:
  2657                           
  2658                           ;adc2.c: 75:             ADCON0bits.CHS = 0b1000;
  2659  039D  081F               	movf	31,w	;volatile
  2660  039E  39C3               	andlw	-61
  2661  039F  3820               	iorlw	32
  2662  03A0  009F               	movwf	31	;volatile
  2663                           
  2664                           ;adc2.c: 76:             break;
  2665  03A1  2C00               	goto	l1595
  2666  03A2                     l1575:
  2667                           
  2668                           ;adc2.c: 79:             ADCON0bits.CHS = 0b1001;
  2669  03A2  081F               	movf	31,w	;volatile
  2670  03A3  39C3               	andlw	-61
  2671  03A4  3824               	iorlw	36
  2672  03A5  009F               	movwf	31	;volatile
  2673                           
  2674                           ;adc2.c: 80:             break;
  2675  03A6  2C00               	goto	l1595
  2676  03A7                     l1577:
  2677                           
  2678                           ;adc2.c: 83:             ADCON0bits.CHS = 0b1010;
  2679  03A7  081F               	movf	31,w	;volatile
  2680  03A8  39C3               	andlw	-61
  2681  03A9  3828               	iorlw	40
  2682  03AA  009F               	movwf	31	;volatile
  2683                           
  2684                           ;adc2.c: 84:             break;
  2685  03AB  2C00               	goto	l1595
  2686  03AC                     l1579:
  2687                           
  2688                           ;adc2.c: 87:             ADCON0bits.CHS = 0b1011;
  2689  03AC  081F               	movf	31,w	;volatile
  2690  03AD  39C3               	andlw	-61
  2691  03AE  382C               	iorlw	44
  2692  03AF  009F               	movwf	31	;volatile
  2693                           
  2694                           ;adc2.c: 88:             break;
  2695  03B0  2C00               	goto	l1595
  2696  03B1                     l1581:
  2697                           
  2698                           ;adc2.c: 91:             ADCON0bits.CHS = 0b1100;
  2699  03B1  081F               	movf	31,w	;volatile
  2700  03B2  39C3               	andlw	-61
  2701  03B3  3830               	iorlw	48
  2702  03B4  009F               	movwf	31	;volatile
  2703                           
  2704                           ;adc2.c: 92:             break;
  2705  03B5  2C00               	goto	l1595
  2706  03B6                     l1583:
  2707                           
  2708                           ;adc2.c: 95:             ADCON0bits.CHS = 0b1101;
  2709  03B6  081F               	movf	31,w	;volatile
  2710  03B7  39C3               	andlw	-61
  2711  03B8  3834               	iorlw	52
  2712  03B9  009F               	movwf	31	;volatile
  2713                           
  2714                           ;adc2.c: 96:             break;
  2715  03BA  2C00               	goto	l1595
  2716  03BB                     l1585:
  2717                           
  2718                           ;adc2.c: 99:             ADCON0bits.CHS = 0b1110;
  2719  03BB  081F               	movf	31,w	;volatile
  2720  03BC  39C3               	andlw	-61
  2721  03BD  3838               	iorlw	56
  2722  03BE  009F               	movwf	31	;volatile
  2723                           
  2724                           ;adc2.c: 100:             break;
  2725  03BF  2C00               	goto	l1595
  2726  03C0                     l1587:
  2727                           
  2728                           ;adc2.c: 103:             ADCON0bits.CHS = 0b1111;
  2729  03C0  303C               	movlw	60
  2730  03C1  049F               	iorwf	31,f	;volatile
  2731                           
  2732                           ;adc2.c: 104:             break;
  2733  03C2  2C00               	goto	l1595
  2734  03C3                     l1589:
  2735                           
  2736                           ;adc2.c: 107:             ADCON0bits.CHS = 0b0000;
  2737  03C3  30C3               	movlw	-61
  2738  03C4  059F               	andwf	31,f	;volatile
  2739                           
  2740                           ;adc2.c: 108:             break;
  2741  03C5  2C00               	goto	l1595
  2742  03C6                     l1593:
  2743  03C6  0820               	movf	configADC2@chan,w
  2744  03C7  00A1               	movwf	??_configADC2
  2745  03C8  01A2               	clrf	??_configADC2+1
  2746                           
  2747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2748                           ; Switch size 1, requested type "simple"
  2749                           ; Number of cases is 1, Range of values is 0 to 0
  2750                           ; switch strategies available:
  2751                           ; Name         Instructions Cycles
  2752                           ; simple_byte            4     3 (average)
  2753                           ; direct_byte           11     8 (fixed)
  2754                           ; jumptable            260     6 (fixed)
  2755                           ;	Chosen strategy is simple_byte
  2756  03C9  0822               	movf	??_configADC2+1,w
  2757  03CA  3A00               	xorlw	0	; case 0
  2758  03CB  1903               	skipnz
  2759  03CC  2BCE               	goto	l2185
  2760  03CD  2BC3               	goto	l1589
  2761  03CE                     l2185:
  2762                           
  2763                           ; Switch size 1, requested type "simple"
  2764                           ; Number of cases is 16, Range of values is 0 to 15
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte           49    25 (average)
  2768                           ; direct_byte           56     8 (fixed)
  2769                           ; jumptable            260     6 (fixed)
  2770                           ;	Chosen strategy is simple_byte
  2771  03CE  0821               	movf	??_configADC2,w
  2772  03CF  3A00               	xorlw	0	; case 0
  2773  03D0  1903               	skipnz
  2774  03D1  2B77               	goto	l1557
  2775  03D2  3A01               	xorlw	1	; case 1
  2776  03D3  1903               	skipnz
  2777  03D4  2B7A               	goto	l1559
  2778  03D5  3A03               	xorlw	3	; case 2
  2779  03D6  1903               	skipnz
  2780  03D7  2B7F               	goto	l1561
  2781  03D8  3A01               	xorlw	1	; case 3
  2782  03D9  1903               	skipnz
  2783  03DA  2B84               	goto	l1563
  2784  03DB  3A07               	xorlw	7	; case 4
  2785  03DC  1903               	skipnz
  2786  03DD  2B89               	goto	l1565
  2787  03DE  3A01               	xorlw	1	; case 5
  2788  03DF  1903               	skipnz
  2789  03E0  2B8E               	goto	l1567
  2790  03E1  3A03               	xorlw	3	; case 6
  2791  03E2  1903               	skipnz
  2792  03E3  2B93               	goto	l1569
  2793  03E4  3A01               	xorlw	1	; case 7
  2794  03E5  1903               	skipnz
  2795  03E6  2B98               	goto	l1571
  2796  03E7  3A0F               	xorlw	15	; case 8
  2797  03E8  1903               	skipnz
  2798  03E9  2B9D               	goto	l1573
  2799  03EA  3A01               	xorlw	1	; case 9
  2800  03EB  1903               	skipnz
  2801  03EC  2BA2               	goto	l1575
  2802  03ED  3A03               	xorlw	3	; case 10
  2803  03EE  1903               	skipnz
  2804  03EF  2BA7               	goto	l1577
  2805  03F0  3A01               	xorlw	1	; case 11
  2806  03F1  1903               	skipnz
  2807  03F2  2BAC               	goto	l1579
  2808  03F3  3A07               	xorlw	7	; case 12
  2809  03F4  1903               	skipnz
  2810  03F5  2BB1               	goto	l1581
  2811  03F6  3A01               	xorlw	1	; case 13
  2812  03F7  1903               	skipnz
  2813  03F8  2BB6               	goto	l1583
  2814  03F9  3A03               	xorlw	3	; case 14
  2815  03FA  1903               	skipnz
  2816  03FB  2BBB               	goto	l1585
  2817  03FC  3A01               	xorlw	1	; case 15
  2818  03FD  1903               	skipnz
  2819  03FE  2BC0               	goto	l1587
  2820  03FF  2BC3               	goto	l1589
  2821  0400                     l1595:
  2822                           
  2823                           ;adc2.c: 113:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2824  0400  300D               	movlw	13
  2825  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2827  0403  00A2               	movwf	??_configADC2+1
  2828  0404  30FB               	movlw	251
  2829  0405  00A1               	movwf	??_configADC2
  2830  0406                     u637:
  2831  0406  0BA1               	decfsz	??_configADC2,f
  2832  0407  2C06               	goto	u637
  2833  0408  0BA2               	decfsz	??_configADC2+1,f
  2834  0409  2C06               	goto	u637
  2835  040A                     l1597:
  2836                           
  2837                           ;adc2.c: 116:     ADCON0bits.GO_nDONE = 1;
  2838  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2839  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2840  040C  149F               	bsf	31,1	;volatile
  2841  040D                     l1599:
  2842                           
  2843                           ;adc2.c: 120:     ADCON0bits.ADON = 1;
  2844  040D  141F               	bsf	31,0	;volatile
  2845  040E                     l1601:
  2846                           
  2847                           ;adc2.c: 121:     ADCON1 = 0;
  2848  040E  1683               	bsf	3,5	;RP0=1, select bank1
  2849  040F  1303               	bcf	3,6	;RP1=0, select bank1
  2850  0410  019F               	clrf	31	;volatile
  2851  0411                     l242:
  2852  0411  0008               	return
  2853  0412                     __end_of_configADC2:
  2854                           
  2855                           	psect	text9
  2856  06D0                     __ptext9:	
  2857 ;; *************** function _Lcd_Init *****************
  2858 ;; Defined at:
  2859 ;;		line 41 in file "LCD.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    5
  2880 ;; This function calls:
  2881 ;;		_Lcd_Cmd
  2882 ;; This function is called by:
  2883 ;;		_Setup
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _Lcd_Init
  2889  06D0                     _Lcd_Init:
  2890  06D0                     l1631:	
  2891                           ;incstack = 0
  2892                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2893                           
  2894                           
  2895                           ;LCD.c: 45:     Lcd_Cmd(0x38);
  2896  06D0  3038               	movlw	56
  2897  06D1  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2898                           
  2899                           ;LCD.c: 46:     Lcd_Cmd(0x0C);
  2900  06D6  300C               	movlw	12
  2901  06D7  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2902                           
  2903                           ;LCD.c: 47:     Lcd_Cmd(0x06);
  2904  06DC  3006               	movlw	6
  2905  06DD  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2906                           
  2907                           ;LCD.c: 48:     Lcd_Cmd(0x80);
  2908  06E2  3080               	movlw	128
  2909  06E3  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  2910  06E8                     l192:
  2911  06E8  0008               	return
  2912  06E9                     __end_of_Lcd_Init:
  2913                           
  2914                           	psect	text10
  2915  063E                     __ptext10:	
  2916 ;; *************** function _Lcd_Write_String *****************
  2917 ;; Defined at:
  2918 ;;		line 60 in file "LCD.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  a               1    wreg     PTR unsigned char 
  2921 ;;		 -> STR_5(2), STR_4(2), STR_3(5), STR_2(3), 
  2922 ;;		 -> STR_1(3), 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  a               1    5[BANK0 ] PTR unsigned char 
  2925 ;;		 -> STR_5(2), STR_4(2), STR_3(5), STR_2(3), 
  2926 ;;		 -> STR_1(3), 
  2927 ;;  i               2    3[BANK0 ] int 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         0       0       0       0       0
  2938 ;;      Locals:         0       3       0       0       0
  2939 ;;      Temps:          0       0       0       0       0
  2940 ;;      Totals:         0       3       0       0       0
  2941 ;;Total ram usage:        3 bytes
  2942 ;; Hardware stack levels used:    1
  2943 ;; Hardware stack levels required when called:    5
  2944 ;; This function calls:
  2945 ;;		_Lcd_Write_Char
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function _Lcd_Write_String
  2953  063E                     _Lcd_Write_String:
  2954                           
  2955                           ;incstack = 0
  2956                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2957                           ;Lcd_Write_String@a stored from wreg
  2958  063E  1283               	bcf	3,5	;RP0=0, select bank0
  2959  063F  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0640  00A5               	movwf	Lcd_Write_String@a
  2961  0641                     l1921:
  2962                           
  2963                           ;LCD.c: 61:    int i;;LCD.c: 62:  for(i=0;a[i]!='\0';i++)
  2964  0641  01A3               	clrf	Lcd_Write_String@i
  2965  0642  01A4               	clrf	Lcd_Write_String@i+1
  2966  0643  2E59               	goto	l1927
  2967  0644                     l1923:
  2968                           
  2969                           ;LCD.c: 63:     Lcd_Write_Char(a[i]);
  2970  0644  0823               	movf	Lcd_Write_String@i,w
  2971  0645  0725               	addwf	Lcd_Write_String@a,w
  2972  0646  0084               	movwf	4
  2973  0647  120A  118A  272E  120A  118A  	fcall	stringdir
  2974  064C  120A  118A  26E9  120A  118A  	fcall	_Lcd_Write_Char
  2975  0651                     l1925:
  2976  0651  3001               	movlw	1
  2977  0652  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0653  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0654  07A3               	addwf	Lcd_Write_String@i,f
  2980  0655  1803               	skipnc
  2981  0656  0AA4               	incf	Lcd_Write_String@i+1,f
  2982  0657  3000               	movlw	0
  2983  0658  07A4               	addwf	Lcd_Write_String@i+1,f
  2984  0659                     l1927:
  2985  0659  0823               	movf	Lcd_Write_String@i,w
  2986  065A  0725               	addwf	Lcd_Write_String@a,w
  2987  065B  0084               	movwf	4
  2988  065C  120A  118A  272E  120A  118A  	fcall	stringdir
  2989  0661  3A00               	xorlw	0
  2990  0662  1D03               	skipz
  2991  0663  2E65               	goto	u571
  2992  0664  2E66               	goto	u570
  2993  0665                     u571:
  2994  0665  2E44               	goto	l1923
  2995  0666                     u570:
  2996  0666                     l201:
  2997  0666  0008               	return
  2998  0667                     __end_of_Lcd_Write_String:
  2999                           
  3000                           	psect	text11
  3001  06E9                     __ptext11:	
  3002 ;; *************** function _Lcd_Write_Char *****************
  3003 ;; Defined at:
  3004 ;;		line 51 in file "LCD.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  a               1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  a               1    2[BANK0 ] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, pclath, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         0       0       0       0       0
  3019 ;;      Locals:         0       1       0       0       0
  3020 ;;      Temps:          0       1       0       0       0
  3021 ;;      Totals:         0       2       0       0       0
  3022 ;;Total ram usage:        2 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    4
  3025 ;; This function calls:
  3026 ;;		_Lcd_Port
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;;		_Lcd_Write_String
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function _Lcd_Write_Char
  3035  06E9                     _Lcd_Write_Char:
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3039                           ;Lcd_Write_Char@a stored from wreg
  3040  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3041  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3042  06EB  00A2               	movwf	Lcd_Write_Char@a
  3043  06EC                     l1517:
  3044                           
  3045                           ;LCD.c: 52:     PORTEbits.RE1 = 1;
  3046  06EC  1489               	bsf	9,1	;volatile
  3047  06ED                     l1519:
  3048                           
  3049                           ;LCD.c: 53:    Lcd_Port(a);
  3050  06ED  0822               	movf	Lcd_Write_Char@a,w
  3051  06EE  120A  118A  2749  120A  118A  	fcall	_Lcd_Port
  3052  06F3                     l1521:
  3053                           
  3054                           ;LCD.c: 54:    PORTEbits.RE0 = 1;
  3055  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3056  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  3057  06F5  1409               	bsf	9,0	;volatile
  3058  06F6                     l1523:
  3059                           
  3060                           ;LCD.c: 55:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3061  06F6  300C               	movlw	12
  3062  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3063  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  3064  06F9  00A1               	movwf	??_Lcd_Write_Char
  3065  06FA                     u647:
  3066  06FA  0BA1               	decfsz	??_Lcd_Write_Char,f
  3067  06FB  2EFA               	goto	u647
  3068  06FC  0000               	nop
  3069  06FD                     l1525:
  3070                           
  3071                           ;LCD.c: 56:    PORTEbits.RE0 = 0;
  3072  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3073  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3074  06FF  1009               	bcf	9,0	;volatile
  3075  0700                     l1527:
  3076                           
  3077                           ;LCD.c: 57:    PORTEbits.RE1 = 0;
  3078  0700  1089               	bcf	9,1	;volatile
  3079  0701                     l195:
  3080  0701  0008               	return
  3081  0702                     __end_of_Lcd_Write_Char:
  3082                           
  3083                           	psect	text12
  3084  068E                     __ptext12:	
  3085 ;; *************** function _Lcd_Set_Cursor *****************
  3086 ;; Defined at:
  3087 ;;		line 30 in file "LCD.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  a               1    wreg     unsigned char 
  3090 ;;  b               1    4[BANK0 ] unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  a               1    5[BANK0 ] unsigned char 
  3093 ;;  temp            1    6[BANK0 ] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       1       0       0       0
  3104 ;;      Locals:         0       2       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       3       0       0       0
  3107 ;;Total ram usage:        3 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    5
  3110 ;; This function calls:
  3111 ;;		_Lcd_Cmd
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _Lcd_Set_Cursor
  3119  068E                     _Lcd_Set_Cursor:
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3123                           ;Lcd_Set_Cursor@a stored from wreg
  3124  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3125  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0690  00A5               	movwf	Lcd_Set_Cursor@a
  3127  0691                     l1909:
  3128                           
  3129                           ;LCD.c: 31:     char temp;;LCD.c: 32:     if (a == 1) {
  3130  0691  0325               	decf	Lcd_Set_Cursor@a,w
  3131  0692  1D03               	btfss	3,2
  3132  0693  2E95               	goto	u551
  3133  0694  2E96               	goto	u550
  3134  0695                     u551:
  3135  0695  2EA2               	goto	l1915
  3136  0696                     u550:
  3137  0696                     l1911:
  3138                           
  3139                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  3140  0696  0824               	movf	Lcd_Set_Cursor@b,w
  3141  0697  3E7F               	addlw	127
  3142  0698  00FF               	movwf	btemp+1
  3143  0699  087F               	movf	btemp+1,w
  3144  069A  00A6               	movwf	Lcd_Set_Cursor@temp
  3145  069B                     l1913:
  3146                           
  3147                           ;LCD.c: 34:         Lcd_Cmd(temp);
  3148  069B  0826               	movf	Lcd_Set_Cursor@temp,w
  3149  069C  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3150                           
  3151                           ;LCD.c: 35:     } else if (a == 2) {
  3152  06A1  2EB3               	goto	l189
  3153  06A2                     l1915:
  3154  06A2  3002               	movlw	2
  3155  06A3  0625               	xorwf	Lcd_Set_Cursor@a,w
  3156  06A4  1D03               	btfss	3,2
  3157  06A5  2EA7               	goto	u561
  3158  06A6  2EA8               	goto	u560
  3159  06A7                     u561:
  3160  06A7  2EB3               	goto	l189
  3161  06A8                     u560:
  3162  06A8                     l1917:
  3163                           
  3164                           ;LCD.c: 36:         temp = 0xC0 + b - 1;
  3165  06A8  0824               	movf	Lcd_Set_Cursor@b,w
  3166  06A9  3EBF               	addlw	191
  3167  06AA  00FF               	movwf	btemp+1
  3168  06AB  087F               	movf	btemp+1,w
  3169  06AC  00A6               	movwf	Lcd_Set_Cursor@temp
  3170  06AD                     l1919:
  3171                           
  3172                           ;LCD.c: 37:         Lcd_Cmd(temp);
  3173  06AD  0826               	movf	Lcd_Set_Cursor@temp,w
  3174  06AE  120A  118A  26B4  120A  118A  	fcall	_Lcd_Cmd
  3175  06B3                     l189:
  3176  06B3  0008               	return
  3177  06B4                     __end_of_Lcd_Set_Cursor:
  3178                           
  3179                           	psect	text13
  3180  06B4                     __ptext13:	
  3181 ;; *************** function _Lcd_Cmd *****************
  3182 ;; Defined at:
  3183 ;;		line 16 in file "LCD.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  a               1    wreg     unsigned char 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  a               1    3[BANK0 ] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, pclath, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         0       0       0       0       0
  3198 ;;      Locals:         0       1       0       0       0
  3199 ;;      Temps:          0       2       0       0       0
  3200 ;;      Totals:         0       3       0       0       0
  3201 ;;Total ram usage:        3 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    4
  3204 ;; This function calls:
  3205 ;;		_Lcd_Port
  3206 ;; This function is called by:
  3207 ;;		_Setup
  3208 ;;		_Lcd_Set_Cursor
  3209 ;;		_Lcd_Init
  3210 ;;		_Lcd_Clear
  3211 ;;		_Lcd_Shift_Right
  3212 ;;		_Lcd_Shift_Left
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function _Lcd_Cmd
  3218  06B4                     _Lcd_Cmd:
  3219                           
  3220                           ;incstack = 0
  3221                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3222                           ;Lcd_Cmd@a stored from wreg
  3223  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3224  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3225  06B6  00A3               	movwf	Lcd_Cmd@a
  3226  06B7                     l1507:
  3227                           
  3228                           ;LCD.c: 17:     Lcd_Port(a);
  3229  06B7  0823               	movf	Lcd_Cmd@a,w
  3230  06B8  120A  118A  2749  120A  118A  	fcall	_Lcd_Port
  3231  06BD                     l1509:
  3232                           
  3233                           ;LCD.c: 18:     PORTEbits.RE1 = 0;
  3234  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  3235  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  3236  06BF  1089               	bcf	9,1	;volatile
  3237  06C0                     l1511:
  3238                           
  3239                           ;LCD.c: 20:     PORTEbits.RE0 = 1;
  3240  06C0  1409               	bsf	9,0	;volatile
  3241  06C1                     l1513:
  3242                           
  3243                           ;LCD.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3244  06C1  3007               	movlw	7
  3245  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3246  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3247  06C4  00A2               	movwf	??_Lcd_Cmd+1
  3248  06C5  307C               	movlw	124
  3249  06C6  00A1               	movwf	??_Lcd_Cmd
  3250  06C7                     u657:
  3251  06C7  0BA1               	decfsz	??_Lcd_Cmd,f
  3252  06C8  2EC7               	goto	u657
  3253  06C9  0BA2               	decfsz	??_Lcd_Cmd+1,f
  3254  06CA  2EC7               	goto	u657
  3255  06CB  0000               	nop
  3256  06CC                     l1515:
  3257                           
  3258                           ;LCD.c: 22:     PORTEbits.RE0 = 0;
  3259  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  3260  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  3261  06CE  1009               	bcf	9,0	;volatile
  3262  06CF                     l180:
  3263  06CF  0008               	return
  3264  06D0                     __end_of_Lcd_Cmd:
  3265                           
  3266                           	psect	text14
  3267  0749                     __ptext14:	
  3268 ;; *************** function _Lcd_Port *****************
  3269 ;; Defined at:
  3270 ;;		line 12 in file "LCD.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  a               1    wreg     unsigned char 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  a               1    0[BANK0 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       0       0       0       0
  3285 ;;      Locals:         0       1       0       0       0
  3286 ;;      Temps:          0       0       0       0       0
  3287 ;;      Totals:         0       1       0       0       0
  3288 ;;Total ram usage:        1 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    3
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_Lcd_Cmd
  3295 ;;		_Lcd_Write_Char
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           
  3300                           ;psect for function _Lcd_Port
  3301  0749                     _Lcd_Port:
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in _Lcd_Port: [wreg]
  3305                           ;Lcd_Port@a stored from wreg
  3306  0749  1283               	bcf	3,5	;RP0=0, select bank0
  3307  074A  1303               	bcf	3,6	;RP1=0, select bank0
  3308  074B  00A0               	movwf	Lcd_Port@a
  3309  074C                     l1505:
  3310                           
  3311                           ;LCD.c: 13:     PORTD = a;
  3312  074C  0820               	movf	Lcd_Port@a,w
  3313  074D  0088               	movwf	8	;volatile
  3314  074E                     l177:
  3315  074E  0008               	return
  3316  074F                     __end_of_Lcd_Port:
  3317                           
  3318                           	psect	text15
  3319  059F                     __ptext15:	
  3320 ;; *************** function _ISR *****************
  3321 ;; Defined at:
  3322 ;;		line 79 in file "L3.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0
  3338 ;;      Temps:          4       0       0       0       0
  3339 ;;      Totals:         4       0       0       0       0
  3340 ;;Total ram usage:        4 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    2
  3343 ;; This function calls:
  3344 ;;		_mandar
  3345 ;;		_pots
  3346 ;;		_recibir
  3347 ;; This function is called by:
  3348 ;;		Interrupt level 1
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _ISR
  3354  059F                     _ISR:
  3355  059F                     i1l1943:
  3356                           
  3357                           ;L3.c: 81:     if (INTCONbits.T0IF == 1) {
  3358  059F  1D0B               	btfss	11,2	;volatile
  3359  05A0  2DA2               	goto	u58_21
  3360  05A1  2DA3               	goto	u58_20
  3361  05A2                     u58_21:
  3362  05A2  2DAA               	goto	i1l1951
  3363  05A3                     u58_20:
  3364  05A3                     i1l1945:
  3365                           
  3366                           ;L3.c: 82:         TMR0 = 236;
  3367  05A3  30EC               	movlw	236
  3368  05A4  0081               	movwf	1	;volatile
  3369  05A5                     i1l1947:
  3370                           
  3371                           ;L3.c: 83:         CONTADC++;
  3372  05A5  3001               	movlw	1
  3373  05A6  00FF               	movwf	btemp+1
  3374  05A7  087F               	movf	btemp+1,w
  3375  05A8  07C3               	addwf	_CONTADC,f
  3376  05A9                     i1l1949:
  3377                           
  3378                           ;L3.c: 84:         INTCONbits.T0IF = 0;
  3379  05A9  110B               	bcf	11,2	;volatile
  3380  05AA                     i1l1951:
  3381                           
  3382                           ;L3.c: 87:     if (PIR1bits.ADIF == 1) {
  3383  05AA  1F0C               	btfss	12,6	;volatile
  3384  05AB  2DAD               	goto	u59_21
  3385  05AC  2DAE               	goto	u59_20
  3386  05AD                     u59_21:
  3387  05AD  2DB6               	goto	i1l1957
  3388  05AE                     u59_20:
  3389  05AE                     i1l1953:
  3390                           
  3391                           ;L3.c: 88:         pots();
  3392  05AE  120A  118A  2614  120A  118A  	fcall	_pots
  3393  05B3                     i1l1955:
  3394                           
  3395                           ;L3.c: 89:         PIR1bits.ADIF = 0;
  3396  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3397  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  3398  05B5  130C               	bcf	12,6	;volatile
  3399  05B6                     i1l1957:
  3400                           
  3401                           ;L3.c: 92:     if (PIR1bits.RCIF == 1) {
  3402  05B6  1E8C               	btfss	12,5	;volatile
  3403  05B7  2DB9               	goto	u60_21
  3404  05B8  2DBA               	goto	u60_20
  3405  05B9                     u60_21:
  3406  05B9  2DC3               	goto	i1l1963
  3407  05BA                     u60_20:
  3408  05BA                     i1l1959:
  3409                           
  3410                           ;L3.c: 93:         REC = RCREG;
  3411  05BA  081A               	movf	26,w	;volatile
  3412  05BB  00FF               	movwf	btemp+1
  3413  05BC  087F               	movf	btemp+1,w
  3414  05BD  00FB               	movwf	_REC
  3415  05BE                     i1l1961:
  3416                           
  3417                           ;L3.c: 94:         recibir();
  3418  05BE  120A  118A  25E1  120A  118A  	fcall	_recibir
  3419  05C3                     i1l1963:
  3420                           
  3421                           ;L3.c: 97:     if (PIR1bits.TXIF == 1) {
  3422  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3423  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  3424  05C5  1E0C               	btfss	12,4	;volatile
  3425  05C6  2DC8               	goto	u61_21
  3426  05C7  2DC9               	goto	u61_20
  3427  05C8                     u61_21:
  3428  05C8  2DD5               	goto	i1l121
  3429  05C9                     u61_20:
  3430  05C9                     i1l1965:
  3431                           
  3432                           ;L3.c: 98:         mandar();
  3433  05C9  120A  118A  2412  120A  118A  	fcall	_mandar
  3434  05CE                     i1l1967:
  3435                           
  3436                           ;L3.c: 99:         SEND++;
  3437  05CE  3001               	movlw	1
  3438  05CF  00FF               	movwf	btemp+1
  3439  05D0  087F               	movf	btemp+1,w
  3440  05D1  07FA               	addwf	_SEND,f
  3441  05D2                     i1l1969:
  3442                           
  3443                           ;L3.c: 100:         PIE1bits.TXIE = 0;
  3444  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  3445  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  3446  05D4  120C               	bcf	12,4	;volatile
  3447  05D5                     i1l121:
  3448  05D5  0877               	movf	??_ISR+3,w
  3449  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3450  05D7  00FF               	movwf	btemp+1
  3451  05D8  0876               	movf	??_ISR+2,w
  3452  05D9  008A               	movwf	10
  3453  05DA  0875               	movf	??_ISR+1,w
  3454  05DB  0084               	movwf	4
  3455  05DC  0E74               	swapf	??_ISR^(0+4294967168),w
  3456  05DD  0083               	movwf	3
  3457  05DE  0EFE               	swapf	btemp,f
  3458  05DF  0E7E               	swapf	btemp,w
  3459  05E0  0009               	retfie
  3460  05E1                     __end_of_ISR:
  3461                           
  3462                           	psect	intentry
  3463  0004                     __pintentry:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3466                           
  3467  0004                     interrupt_function:
  3468  007E                     saved_w	set	btemp
  3469  0004  00FE               	movwf	btemp
  3470  0005  0E03               	swapf	3,w
  3471  0006  00F4               	movwf	??_ISR
  3472  0007  0804               	movf	4,w
  3473  0008  00F5               	movwf	??_ISR+1
  3474  0009  080A               	movf	10,w
  3475  000A  00F6               	movwf	??_ISR+2
  3476  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3477  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3478  000D  087F               	movf	btemp+1,w
  3479  000E  00F7               	movwf	??_ISR+3
  3480  000F  120A  118A  2D9F   	ljmp	_ISR
  3481                           
  3482                           	psect	text16
  3483  05E1                     __ptext16:	
  3484 ;; *************** function _recibir *****************
  3485 ;; Defined at:
  3486 ;;		line 303 in file "L3.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0, btemp+1
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3500 ;;      Params:         0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0
  3503 ;;      Totals:         0       0       0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_ISR
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           
  3514                           ;psect for function _recibir
  3515  05E1                     _recibir:
  3516  05E1                     i1l1791:	
  3517                           ;incstack = 0
  3518                           ; Regs used in _recibir: [wreg+status,2+status,0+btemp+1]
  3519                           
  3520                           
  3521                           ;L3.c: 304:     if (REC == 43) {
  3522  05E1  302B               	movlw	43
  3523  05E2  067B               	xorwf	_REC,w
  3524  05E3  1D03               	btfss	3,2
  3525  05E4  2DE6               	goto	u49_21
  3526  05E5  2DE7               	goto	u49_20
  3527  05E6                     u49_21:
  3528  05E6  2DE9               	goto	i1l1795
  3529  05E7                     u49_20:
  3530  05E7                     i1l1793:
  3531                           
  3532                           ;L3.c: 305:         R1 = 1;
  3533  05E7  01F9               	clrf	_R1
  3534  05E8  0AF9               	incf	_R1,f
  3535  05E9                     i1l1795:
  3536                           
  3537                           ;L3.c: 310:     if (REC != 43 && R1 == 1) {
  3538  05E9  302B               	movlw	43
  3539  05EA  067B               	xorwf	_REC,w
  3540  05EB  1903               	btfsc	3,2
  3541  05EC  2DEE               	goto	u50_21
  3542  05ED  2DEF               	goto	u50_20
  3543  05EE                     u50_21:
  3544  05EE  2DFB               	goto	i1l1803
  3545  05EF                     u50_20:
  3546  05EF                     i1l1797:
  3547  05EF  0379               	decf	_R1,w
  3548  05F0  1D03               	btfss	3,2
  3549  05F1  2DF3               	goto	u51_21
  3550  05F2  2DF4               	goto	u51_20
  3551  05F3                     u51_21:
  3552  05F3  2DFB               	goto	i1l1803
  3553  05F4                     u51_20:
  3554  05F4                     i1l1799:
  3555                           
  3556                           ;L3.c: 311:         R1 = 0;
  3557  05F4  01F9               	clrf	_R1
  3558  05F5                     i1l1801:
  3559                           
  3560                           ;L3.c: 312:         CONT++;
  3561  05F5  3001               	movlw	1
  3562  05F6  00FF               	movwf	btemp+1
  3563  05F7  087F               	movf	btemp+1,w
  3564  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3565  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3566  05FA  07B6               	addwf	_CONT,f
  3567  05FB                     i1l1803:
  3568                           
  3569                           ;L3.c: 315:     if (REC == 45) {
  3570  05FB  302D               	movlw	45
  3571  05FC  067B               	xorwf	_REC,w
  3572  05FD  1D03               	btfss	3,2
  3573  05FE  2E00               	goto	u52_21
  3574  05FF  2E01               	goto	u52_20
  3575  0600                     u52_21:
  3576  0600  2E03               	goto	i1l1807
  3577  0601                     u52_20:
  3578  0601                     i1l1805:
  3579                           
  3580                           ;L3.c: 316:         R2 = 1;
  3581  0601  01F8               	clrf	_R2
  3582  0602  0AF8               	incf	_R2,f
  3583  0603                     i1l1807:
  3584                           
  3585                           ;L3.c: 321:     if (REC != 45 && R2 == 1) {
  3586  0603  302D               	movlw	45
  3587  0604  067B               	xorwf	_REC,w
  3588  0605  1903               	btfsc	3,2
  3589  0606  2E08               	goto	u53_21
  3590  0607  2E09               	goto	u53_20
  3591  0608                     u53_21:
  3592  0608  2E13               	goto	i1l168
  3593  0609                     u53_20:
  3594  0609                     i1l1809:
  3595  0609  0378               	decf	_R2,w
  3596  060A  1D03               	btfss	3,2
  3597  060B  2E0D               	goto	u54_21
  3598  060C  2E0E               	goto	u54_20
  3599  060D                     u54_21:
  3600  060D  2E13               	goto	i1l168
  3601  060E                     u54_20:
  3602  060E                     i1l1811:
  3603                           
  3604                           ;L3.c: 322:         R2 = 0;
  3605  060E  01F8               	clrf	_R2
  3606  060F                     i1l1813:
  3607                           
  3608                           ;L3.c: 323:         CONT--;
  3609  060F  3001               	movlw	1
  3610  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0612  02B6               	subwf	_CONT,f
  3613  0613                     i1l168:
  3614  0613  0008               	return
  3615  0614                     __end_of_recibir:
  3616                           
  3617                           	psect	text17
  3618  0614                     __ptext17:	
  3619 ;; *************** function _pots *****************
  3620 ;; Defined at:
  3621 ;;		line 210 in file "L3.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    1
  3642 ;; This function calls:
  3643 ;;		i1_configADC2
  3644 ;; This function is called by:
  3645 ;;		_ISR
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _pots
  3651  0614                     _pots:
  3652  0614                     i1l1777:	
  3653                           ;incstack = 0
  3654                           ; Regs used in _pots: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3655                           
  3656                           
  3657                           ;L3.c: 212:     if (TOGGLE == 0) {
  3658  0614  087C               	movf	_TOGGLE,w
  3659  0615  1D03               	btfss	3,2
  3660  0616  2E18               	goto	u48_21
  3661  0617  2E19               	goto	u48_20
  3662  0618                     u48_21:
  3663  0618  2E2C               	goto	i1l1785
  3664  0619                     u48_20:
  3665  0619                     i1l1779:
  3666                           
  3667                           ;L3.c: 213:         configADC2(1, 12);
  3668  0619  300C               	movlw	12
  3669  061A  00FF               	movwf	btemp+1
  3670  061B  087F               	movf	btemp+1,w
  3671  061C  00F0               	movwf	i1configADC2@chan
  3672  061D  3001               	movlw	1
  3673  061E  120A  118A  227B  120A  118A  	fcall	i1_configADC2
  3674  0623                     i1l1781:
  3675                           
  3676                           ;L3.c: 214:         pot1 = ADRESH;
  3677  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3678  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3679  0625  081E               	movf	30,w	;volatile
  3680  0626  00FF               	movwf	btemp+1
  3681  0627  087F               	movf	btemp+1,w
  3682  0628  00C5               	movwf	_pot1
  3683  0629                     i1l1783:
  3684                           
  3685                           ;L3.c: 215:         TOGGLE = 1;
  3686  0629  01FC               	clrf	_TOGGLE
  3687  062A  0AFC               	incf	_TOGGLE,f
  3688                           
  3689                           ;L3.c: 216:     } else {
  3690  062B  2E3D               	goto	i1l138
  3691  062C                     i1l1785:
  3692                           
  3693                           ;L3.c: 217:         configADC2(1, 10);
  3694  062C  300A               	movlw	10
  3695  062D  00FF               	movwf	btemp+1
  3696  062E  087F               	movf	btemp+1,w
  3697  062F  00F0               	movwf	i1configADC2@chan
  3698  0630  3001               	movlw	1
  3699  0631  120A  118A  227B  120A  118A  	fcall	i1_configADC2
  3700  0636                     i1l1787:
  3701                           
  3702                           ;L3.c: 218:         pot2 = ADRESH;
  3703  0636  1283               	bcf	3,5	;RP0=0, select bank0
  3704  0637  1303               	bcf	3,6	;RP1=0, select bank0
  3705  0638  081E               	movf	30,w	;volatile
  3706  0639  00FF               	movwf	btemp+1
  3707  063A  087F               	movf	btemp+1,w
  3708  063B  00C4               	movwf	_pot2
  3709  063C                     i1l1789:
  3710                           
  3711                           ;L3.c: 219:         TOGGLE = 0;
  3712  063C  01FC               	clrf	_TOGGLE
  3713  063D                     i1l138:
  3714  063D  0008               	return
  3715  063E                     __end_of_pots:
  3716                           
  3717                           	psect	text18
  3718  027B                     __ptext18:	
  3719 ;; *************** function i1_configADC2 *****************
  3720 ;; Defined at:
  3721 ;;		line 17 in file "adc2.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  fosc            1    wreg     unsigned char 
  3724 ;;  chan            1    0[COMMON] unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  fosc            1    3[COMMON] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         1       0       0       0       0
  3737 ;;      Locals:         1       0       0       0       0
  3738 ;;      Temps:          2       0       0       0       0
  3739 ;;      Totals:         4       0       0       0       0
  3740 ;;Total ram usage:        4 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_pots
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           
  3750                           ;psect for function i1_configADC2
  3751  027B                     i1_configADC2:
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in i1_configADC2: [wreg-fsr0h+status,2+status,0]
  3755                           ;i1configADC2@fosc stored from wreg
  3756  027B  00F3               	movwf	i1configADC2@fosc
  3757  027C                     i1l1707:
  3758                           
  3759                           ;adc2.c: 19:     switch (fosc) {
  3760  027C  2A9A               	goto	i1l1721
  3761  027D                     i1l1709:
  3762                           
  3763                           ;adc2.c: 22:             ADCON0bits.ADCS = 0b00;
  3764  027D  303F               	movlw	-193
  3765  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3766  027F  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0280  059F               	andwf	31,f	;volatile
  3768                           
  3769                           ;adc2.c: 23:             break;
  3770  0281  2AFF               	goto	i1l1759
  3771  0282                     i1l1711:
  3772                           
  3773                           ;adc2.c: 26:             ADCON0bits.ADCS = 0b01;
  3774  0282  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0283  1303               	bcf	3,6	;RP1=0, select bank0
  3776  0284  081F               	movf	31,w	;volatile
  3777  0285  393F               	andlw	-193
  3778  0286  3840               	iorlw	64
  3779  0287  009F               	movwf	31	;volatile
  3780                           
  3781                           ;adc2.c: 27:             break;
  3782  0288  2AFF               	goto	i1l1759
  3783  0289                     i1l1713:
  3784                           
  3785                           ;adc2.c: 30:             ADCON0bits.ADCS = 0b10;
  3786  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3787  028A  1303               	bcf	3,6	;RP1=0, select bank0
  3788  028B  081F               	movf	31,w	;volatile
  3789  028C  393F               	andlw	-193
  3790  028D  3880               	iorlw	128
  3791  028E  009F               	movwf	31	;volatile
  3792                           
  3793                           ;adc2.c: 31:             break;
  3794  028F  2AFF               	goto	i1l1759
  3795  0290                     i1l1715:
  3796                           
  3797                           ;adc2.c: 34:             ADCON0bits.ADCS = 0b11;
  3798  0290  30C0               	movlw	192
  3799  0291  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0292  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0293  049F               	iorwf	31,f	;volatile
  3802                           
  3803                           ;adc2.c: 35:             break;
  3804  0294  2AFF               	goto	i1l1759
  3805  0295                     i1l1717:
  3806                           
  3807                           ;adc2.c: 38:             ADCON0bits.ADCS = 0b00;
  3808  0295  303F               	movlw	-193
  3809  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0297  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0298  059F               	andwf	31,f	;volatile
  3812                           
  3813                           ;adc2.c: 39:             break;
  3814  0299  2AFF               	goto	i1l1759
  3815  029A                     i1l1721:
  3816  029A  0873               	movf	i1configADC2@fosc,w
  3817  029B  00F1               	movwf	??i1_configADC2
  3818  029C  01F2               	clrf	??i1_configADC2+1
  3819                           
  3820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3821                           ; Switch size 1, requested type "simple"
  3822                           ; Number of cases is 1, Range of values is 0 to 0
  3823                           ; switch strategies available:
  3824                           ; Name         Instructions Cycles
  3825                           ; simple_byte            4     3 (average)
  3826                           ; direct_byte           11     8 (fixed)
  3827                           ; jumptable            260     6 (fixed)
  3828                           ;	Chosen strategy is simple_byte
  3829  029D  0872               	movf	??i1_configADC2+1,w
  3830  029E  3A00               	xorlw	0	; case 0
  3831  029F  1903               	skipnz
  3832  02A0  2AA2               	goto	i1l2187
  3833  02A1  2A95               	goto	i1l1717
  3834  02A2                     i1l2187:
  3835                           
  3836                           ; Switch size 1, requested type "simple"
  3837                           ; Number of cases is 4, Range of values is 0 to 3
  3838                           ; switch strategies available:
  3839                           ; Name         Instructions Cycles
  3840                           ; simple_byte           13     7 (average)
  3841                           ; direct_byte           20     8 (fixed)
  3842                           ; jumptable            260     6 (fixed)
  3843                           ;	Chosen strategy is simple_byte
  3844  02A2  0871               	movf	??i1_configADC2,w
  3845  02A3  3A00               	xorlw	0	; case 0
  3846  02A4  1903               	skipnz
  3847  02A5  2A7D               	goto	i1l1709
  3848  02A6  3A01               	xorlw	1	; case 1
  3849  02A7  1903               	skipnz
  3850  02A8  2A82               	goto	i1l1711
  3851  02A9  3A03               	xorlw	3	; case 2
  3852  02AA  1903               	skipnz
  3853  02AB  2A89               	goto	i1l1713
  3854  02AC  3A01               	xorlw	1	; case 3
  3855  02AD  1903               	skipnz
  3856  02AE  2A90               	goto	i1l1715
  3857  02AF  2A95               	goto	i1l1717
  3858  02B0                     i1l1723:
  3859                           
  3860                           ;adc2.c: 43:             ADCON0bits.CHS = 0b0000;
  3861  02B0  30C3               	movlw	-61
  3862  02B1  059F               	andwf	31,f	;volatile
  3863                           
  3864                           ;adc2.c: 44:             break;
  3865  02B2  2B39               	goto	i1l1761
  3866  02B3                     i1l1725:
  3867                           
  3868                           ;adc2.c: 47:             ADCON0bits.CHS = 0b0001;
  3869  02B3  081F               	movf	31,w	;volatile
  3870  02B4  39C3               	andlw	-61
  3871  02B5  3804               	iorlw	4
  3872  02B6  009F               	movwf	31	;volatile
  3873                           
  3874                           ;adc2.c: 48:             break;
  3875  02B7  2B39               	goto	i1l1761
  3876  02B8                     i1l1727:
  3877                           
  3878                           ;adc2.c: 51:             ADCON0bits.CHS = 0b0010;
  3879  02B8  081F               	movf	31,w	;volatile
  3880  02B9  39C3               	andlw	-61
  3881  02BA  3808               	iorlw	8
  3882  02BB  009F               	movwf	31	;volatile
  3883                           
  3884                           ;adc2.c: 52:             break;
  3885  02BC  2B39               	goto	i1l1761
  3886  02BD                     i1l1729:
  3887                           
  3888                           ;adc2.c: 55:             ADCON0bits.CHS = 0b0011;
  3889  02BD  081F               	movf	31,w	;volatile
  3890  02BE  39C3               	andlw	-61
  3891  02BF  380C               	iorlw	12
  3892  02C0  009F               	movwf	31	;volatile
  3893                           
  3894                           ;adc2.c: 56:             break;
  3895  02C1  2B39               	goto	i1l1761
  3896  02C2                     i1l1731:
  3897                           
  3898                           ;adc2.c: 59:             ADCON0bits.CHS = 0b0100;
  3899  02C2  081F               	movf	31,w	;volatile
  3900  02C3  39C3               	andlw	-61
  3901  02C4  3810               	iorlw	16
  3902  02C5  009F               	movwf	31	;volatile
  3903                           
  3904                           ;adc2.c: 60:             break;
  3905  02C6  2B39               	goto	i1l1761
  3906  02C7                     i1l1733:
  3907                           
  3908                           ;adc2.c: 63:             ADCON0bits.CHS = 0b0101;
  3909  02C7  081F               	movf	31,w	;volatile
  3910  02C8  39C3               	andlw	-61
  3911  02C9  3814               	iorlw	20
  3912  02CA  009F               	movwf	31	;volatile
  3913                           
  3914                           ;adc2.c: 64:             break;
  3915  02CB  2B39               	goto	i1l1761
  3916  02CC                     i1l1735:
  3917                           
  3918                           ;adc2.c: 67:             ADCON0bits.CHS = 0b0110;
  3919  02CC  081F               	movf	31,w	;volatile
  3920  02CD  39C3               	andlw	-61
  3921  02CE  3818               	iorlw	24
  3922  02CF  009F               	movwf	31	;volatile
  3923                           
  3924                           ;adc2.c: 68:             break;
  3925  02D0  2B39               	goto	i1l1761
  3926  02D1                     i1l1737:
  3927                           
  3928                           ;adc2.c: 71:             ADCON0bits.CHS = 0b0111;
  3929  02D1  081F               	movf	31,w	;volatile
  3930  02D2  39C3               	andlw	-61
  3931  02D3  381C               	iorlw	28
  3932  02D4  009F               	movwf	31	;volatile
  3933                           
  3934                           ;adc2.c: 72:             break;
  3935  02D5  2B39               	goto	i1l1761
  3936  02D6                     i1l1739:
  3937                           
  3938                           ;adc2.c: 75:             ADCON0bits.CHS = 0b1000;
  3939  02D6  081F               	movf	31,w	;volatile
  3940  02D7  39C3               	andlw	-61
  3941  02D8  3820               	iorlw	32
  3942  02D9  009F               	movwf	31	;volatile
  3943                           
  3944                           ;adc2.c: 76:             break;
  3945  02DA  2B39               	goto	i1l1761
  3946  02DB                     i1l1741:
  3947                           
  3948                           ;adc2.c: 79:             ADCON0bits.CHS = 0b1001;
  3949  02DB  081F               	movf	31,w	;volatile
  3950  02DC  39C3               	andlw	-61
  3951  02DD  3824               	iorlw	36
  3952  02DE  009F               	movwf	31	;volatile
  3953                           
  3954                           ;adc2.c: 80:             break;
  3955  02DF  2B39               	goto	i1l1761
  3956  02E0                     i1l1743:
  3957                           
  3958                           ;adc2.c: 83:             ADCON0bits.CHS = 0b1010;
  3959  02E0  081F               	movf	31,w	;volatile
  3960  02E1  39C3               	andlw	-61
  3961  02E2  3828               	iorlw	40
  3962  02E3  009F               	movwf	31	;volatile
  3963                           
  3964                           ;adc2.c: 84:             break;
  3965  02E4  2B39               	goto	i1l1761
  3966  02E5                     i1l1745:
  3967                           
  3968                           ;adc2.c: 87:             ADCON0bits.CHS = 0b1011;
  3969  02E5  081F               	movf	31,w	;volatile
  3970  02E6  39C3               	andlw	-61
  3971  02E7  382C               	iorlw	44
  3972  02E8  009F               	movwf	31	;volatile
  3973                           
  3974                           ;adc2.c: 88:             break;
  3975  02E9  2B39               	goto	i1l1761
  3976  02EA                     i1l1747:
  3977                           
  3978                           ;adc2.c: 91:             ADCON0bits.CHS = 0b1100;
  3979  02EA  081F               	movf	31,w	;volatile
  3980  02EB  39C3               	andlw	-61
  3981  02EC  3830               	iorlw	48
  3982  02ED  009F               	movwf	31	;volatile
  3983                           
  3984                           ;adc2.c: 92:             break;
  3985  02EE  2B39               	goto	i1l1761
  3986  02EF                     i1l1749:
  3987                           
  3988                           ;adc2.c: 95:             ADCON0bits.CHS = 0b1101;
  3989  02EF  081F               	movf	31,w	;volatile
  3990  02F0  39C3               	andlw	-61
  3991  02F1  3834               	iorlw	52
  3992  02F2  009F               	movwf	31	;volatile
  3993                           
  3994                           ;adc2.c: 96:             break;
  3995  02F3  2B39               	goto	i1l1761
  3996  02F4                     i1l1751:
  3997                           
  3998                           ;adc2.c: 99:             ADCON0bits.CHS = 0b1110;
  3999  02F4  081F               	movf	31,w	;volatile
  4000  02F5  39C3               	andlw	-61
  4001  02F6  3838               	iorlw	56
  4002  02F7  009F               	movwf	31	;volatile
  4003                           
  4004                           ;adc2.c: 100:             break;
  4005  02F8  2B39               	goto	i1l1761
  4006  02F9                     i1l1753:
  4007                           
  4008                           ;adc2.c: 103:             ADCON0bits.CHS = 0b1111;
  4009  02F9  303C               	movlw	60
  4010  02FA  049F               	iorwf	31,f	;volatile
  4011                           
  4012                           ;adc2.c: 104:             break;
  4013  02FB  2B39               	goto	i1l1761
  4014  02FC                     i1l1755:
  4015                           
  4016                           ;adc2.c: 107:             ADCON0bits.CHS = 0b0000;
  4017  02FC  30C3               	movlw	-61
  4018  02FD  059F               	andwf	31,f	;volatile
  4019                           
  4020                           ;adc2.c: 108:             break;
  4021  02FE  2B39               	goto	i1l1761
  4022  02FF                     i1l1759:
  4023  02FF  0870               	movf	i1configADC2@chan,w
  4024  0300  00F1               	movwf	??i1_configADC2
  4025  0301  01F2               	clrf	??i1_configADC2+1
  4026                           
  4027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4028                           ; Switch size 1, requested type "simple"
  4029                           ; Number of cases is 1, Range of values is 0 to 0
  4030                           ; switch strategies available:
  4031                           ; Name         Instructions Cycles
  4032                           ; simple_byte            4     3 (average)
  4033                           ; direct_byte           11     8 (fixed)
  4034                           ; jumptable            260     6 (fixed)
  4035                           ;	Chosen strategy is simple_byte
  4036  0302  0872               	movf	??i1_configADC2+1,w
  4037  0303  3A00               	xorlw	0	; case 0
  4038  0304  1903               	skipnz
  4039  0305  2B07               	goto	i1l2189
  4040  0306  2AFC               	goto	i1l1755
  4041  0307                     i1l2189:
  4042                           
  4043                           ; Switch size 1, requested type "simple"
  4044                           ; Number of cases is 16, Range of values is 0 to 15
  4045                           ; switch strategies available:
  4046                           ; Name         Instructions Cycles
  4047                           ; simple_byte           49    25 (average)
  4048                           ; direct_byte           56     8 (fixed)
  4049                           ; jumptable            260     6 (fixed)
  4050                           ;	Chosen strategy is simple_byte
  4051  0307  0871               	movf	??i1_configADC2,w
  4052  0308  3A00               	xorlw	0	; case 0
  4053  0309  1903               	skipnz
  4054  030A  2AB0               	goto	i1l1723
  4055  030B  3A01               	xorlw	1	; case 1
  4056  030C  1903               	skipnz
  4057  030D  2AB3               	goto	i1l1725
  4058  030E  3A03               	xorlw	3	; case 2
  4059  030F  1903               	skipnz
  4060  0310  2AB8               	goto	i1l1727
  4061  0311  3A01               	xorlw	1	; case 3
  4062  0312  1903               	skipnz
  4063  0313  2ABD               	goto	i1l1729
  4064  0314  3A07               	xorlw	7	; case 4
  4065  0315  1903               	skipnz
  4066  0316  2AC2               	goto	i1l1731
  4067  0317  3A01               	xorlw	1	; case 5
  4068  0318  1903               	skipnz
  4069  0319  2AC7               	goto	i1l1733
  4070  031A  3A03               	xorlw	3	; case 6
  4071  031B  1903               	skipnz
  4072  031C  2ACC               	goto	i1l1735
  4073  031D  3A01               	xorlw	1	; case 7
  4074  031E  1903               	skipnz
  4075  031F  2AD1               	goto	i1l1737
  4076  0320  3A0F               	xorlw	15	; case 8
  4077  0321  1903               	skipnz
  4078  0322  2AD6               	goto	i1l1739
  4079  0323  3A01               	xorlw	1	; case 9
  4080  0324  1903               	skipnz
  4081  0325  2ADB               	goto	i1l1741
  4082  0326  3A03               	xorlw	3	; case 10
  4083  0327  1903               	skipnz
  4084  0328  2AE0               	goto	i1l1743
  4085  0329  3A01               	xorlw	1	; case 11
  4086  032A  1903               	skipnz
  4087  032B  2AE5               	goto	i1l1745
  4088  032C  3A07               	xorlw	7	; case 12
  4089  032D  1903               	skipnz
  4090  032E  2AEA               	goto	i1l1747
  4091  032F  3A01               	xorlw	1	; case 13
  4092  0330  1903               	skipnz
  4093  0331  2AEF               	goto	i1l1749
  4094  0332  3A03               	xorlw	3	; case 14
  4095  0333  1903               	skipnz
  4096  0334  2AF4               	goto	i1l1751
  4097  0335  3A01               	xorlw	1	; case 15
  4098  0336  1903               	skipnz
  4099  0337  2AF9               	goto	i1l1753
  4100  0338  2AFC               	goto	i1l1755
  4101  0339                     i1l1761:
  4102                           
  4103                           ;adc2.c: 113:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4104  0339  300D               	movlw	13
  4105  033A  00F2               	movwf	??i1_configADC2+1
  4106  033B  30FB               	movlw	251
  4107  033C  00F1               	movwf	??i1_configADC2
  4108  033D                     u66_27:
  4109  033D  0BF1               	decfsz	??i1_configADC2,f
  4110  033E  2B3D               	goto	u66_27
  4111  033F  0BF2               	decfsz	??i1_configADC2+1,f
  4112  0340  2B3D               	goto	u66_27
  4113  0341  2B42               	nop2
  4114  0342                     i1l1763:
  4115                           
  4116                           ;adc2.c: 116:     ADCON0bits.GO_nDONE = 1;
  4117  0342  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0343  1303               	bcf	3,6	;RP1=0, select bank0
  4119  0344  149F               	bsf	31,1	;volatile
  4120  0345                     i1l1765:
  4121                           
  4122                           ;adc2.c: 120:     ADCON0bits.ADON = 1;
  4123  0345  141F               	bsf	31,0	;volatile
  4124  0346                     i1l1767:
  4125                           
  4126                           ;adc2.c: 121:     ADCON1 = 0;
  4127  0346  1683               	bsf	3,5	;RP0=1, select bank1
  4128  0347  1303               	bcf	3,6	;RP1=0, select bank1
  4129  0348  019F               	clrf	31	;volatile
  4130  0349                     i1l242:
  4131  0349  0008               	return
  4132  034A                     __end_ofi1_configADC2:
  4133                           
  4134                           	psect	text19
  4135  0412                     __ptext19:	
  4136 ;; *************** function _mandar *****************
  4137 ;; Defined at:
  4138 ;;		line 241 in file "L3.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;		None
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       0       0       0       0
  4153 ;;      Locals:         0       0       0       0       0
  4154 ;;      Temps:          2       0       0       0       0
  4155 ;;      Totals:         2       0       0       0       0
  4156 ;;Total ram usage:        2 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_ISR
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           
  4166                           ;psect for function _mandar
  4167  0412                     _mandar:
  4168  0412                     i1l1815:	
  4169                           ;incstack = 0
  4170                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  4171                           
  4172                           
  4173                           ;L3.c: 242:     switch (SEND) {
  4174  0412  2C54               	goto	i1l1849
  4175  0413                     i1l1817:
  4176                           
  4177                           ;L3.c: 245:             TXREG = 0x28;
  4178  0413  3028               	movlw	40
  4179  0414  1283               	bcf	3,5	;RP0=0, select bank0
  4180  0415  1303               	bcf	3,6	;RP1=0, select bank0
  4181  0416  0099               	movwf	25	;volatile
  4182                           
  4183                           ;L3.c: 246:             break;
  4184  0417  2C8B               	goto	i1l161
  4185  0418                     i1l1819:
  4186                           
  4187                           ;L3.c: 249:             TXREG = C1;
  4188  0418  1283               	bcf	3,5	;RP0=0, select bank0
  4189  0419  1303               	bcf	3,6	;RP1=0, select bank0
  4190  041A  083C               	movf	_C1,w
  4191  041B  0099               	movwf	25	;volatile
  4192                           
  4193                           ;L3.c: 250:             break;
  4194  041C  2C8B               	goto	i1l161
  4195  041D                     i1l1821:
  4196                           
  4197                           ;L3.c: 253:             TXREG = 0x2E;
  4198  041D  302E               	movlw	46
  4199  041E  1283               	bcf	3,5	;RP0=0, select bank0
  4200  041F  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0420  0099               	movwf	25	;volatile
  4202                           
  4203                           ;L3.c: 254:             break;
  4204  0421  2C8B               	goto	i1l161
  4205  0422                     i1l1823:
  4206                           
  4207                           ;L3.c: 256:             TXREG = D1;
  4208  0422  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0423  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0424  083B               	movf	_D1,w
  4211  0425  0099               	movwf	25	;volatile
  4212                           
  4213                           ;L3.c: 257:             break;
  4214  0426  2C8B               	goto	i1l161
  4215  0427                     i1l1825:
  4216                           
  4217                           ;L3.c: 259:             TXREG = U1;
  4218  0427  1283               	bcf	3,5	;RP0=0, select bank0
  4219  0428  1303               	bcf	3,6	;RP1=0, select bank0
  4220  0429  083A               	movf	_U1,w
  4221  042A  0099               	movwf	25	;volatile
  4222                           
  4223                           ;L3.c: 260:             break;
  4224  042B  2C8B               	goto	i1l161
  4225  042C                     i1l1827:
  4226                           
  4227                           ;L3.c: 262:             TXREG = 0x29;
  4228  042C  3029               	movlw	41
  4229  042D  1283               	bcf	3,5	;RP0=0, select bank0
  4230  042E  1303               	bcf	3,6	;RP1=0, select bank0
  4231  042F  0099               	movwf	25	;volatile
  4232                           
  4233                           ;L3.c: 263:             break;
  4234  0430  2C8B               	goto	i1l161
  4235  0431                     i1l1829:
  4236                           
  4237                           ;L3.c: 266:             TXREG = 0x2C;
  4238  0431  302C               	movlw	44
  4239  0432  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0433  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0434  0099               	movwf	25	;volatile
  4242                           
  4243                           ;L3.c: 267:             break;
  4244  0435  2C8B               	goto	i1l161
  4245  0436                     i1l1831:
  4246                           
  4247                           ;L3.c: 270:             TXREG = 0x20;
  4248  0436  3020               	movlw	32
  4249  0437  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0438  1303               	bcf	3,6	;RP1=0, select bank0
  4251  0439  0099               	movwf	25	;volatile
  4252                           
  4253                           ;L3.c: 271:             break;
  4254  043A  2C8B               	goto	i1l161
  4255  043B                     i1l1835:
  4256                           
  4257                           ;L3.c: 278:             TXREG = C2;
  4258  043B  1283               	bcf	3,5	;RP0=0, select bank0
  4259  043C  1303               	bcf	3,6	;RP1=0, select bank0
  4260  043D  0839               	movf	_C2,w
  4261  043E  0099               	movwf	25	;volatile
  4262                           
  4263                           ;L3.c: 279:             break;
  4264  043F  2C8B               	goto	i1l161
  4265  0440                     i1l1839:
  4266                           
  4267                           ;L3.c: 284:             TXREG = D2;
  4268  0440  1283               	bcf	3,5	;RP0=0, select bank0
  4269  0441  1303               	bcf	3,6	;RP1=0, select bank0
  4270  0442  0838               	movf	_D2,w
  4271  0443  0099               	movwf	25	;volatile
  4272                           
  4273                           ;L3.c: 285:             break;
  4274  0444  2C8B               	goto	i1l161
  4275  0445                     i1l1841:
  4276                           
  4277                           ;L3.c: 287:             TXREG = U2;
  4278  0445  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0446  1303               	bcf	3,6	;RP1=0, select bank0
  4280  0447  0837               	movf	_U2,w
  4281  0448  0099               	movwf	25	;volatile
  4282                           
  4283                           ;L3.c: 289:             break;
  4284  0449  2C8B               	goto	i1l161
  4285  044A                     i1l1843:
  4286                           
  4287                           ;L3.c: 292:             TXREG = 0x29;
  4288  044A  3029               	movlw	41
  4289  044B  1283               	bcf	3,5	;RP0=0, select bank0
  4290  044C  1303               	bcf	3,6	;RP1=0, select bank0
  4291  044D  0099               	movwf	25	;volatile
  4292  044E                     i1l160:	
  4293                           ;L3.c: 295:         case 14:
  4294                           
  4295                           
  4296                           ;L3.c: 296:             TXREG = 0x0D;
  4297  044E  300D               	movlw	13
  4298  044F  1283               	bcf	3,5	;RP0=0, select bank0
  4299  0450  1303               	bcf	3,6	;RP1=0, select bank0
  4300  0451  0099               	movwf	25	;volatile
  4301  0452                     i1l1845:
  4302                           
  4303                           ;L3.c: 297:             SEND = 0;
  4304  0452  01FA               	clrf	_SEND
  4305                           
  4306                           ;L3.c: 298:             break;
  4307  0453  2C8B               	goto	i1l161
  4308  0454                     i1l1849:
  4309  0454  087A               	movf	_SEND,w
  4310  0455  00F0               	movwf	??_mandar
  4311  0456  01F1               	clrf	??_mandar+1
  4312                           
  4313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4314                           ; Switch size 1, requested type "simple"
  4315                           ; Number of cases is 1, Range of values is 0 to 0
  4316                           ; switch strategies available:
  4317                           ; Name         Instructions Cycles
  4318                           ; simple_byte            4     3 (average)
  4319                           ; direct_byte           11     8 (fixed)
  4320                           ; jumptable            260     6 (fixed)
  4321                           ;	Chosen strategy is simple_byte
  4322  0457  0871               	movf	??_mandar+1,w
  4323  0458  3A00               	xorlw	0	; case 0
  4324  0459  1903               	skipnz
  4325  045A  2C5C               	goto	i1l2191
  4326  045B  2C8B               	goto	i1l161
  4327  045C                     i1l2191:
  4328                           
  4329                           ; Switch size 1, requested type "simple"
  4330                           ; Number of cases is 15, Range of values is 0 to 14
  4331                           ; switch strategies available:
  4332                           ; Name         Instructions Cycles
  4333                           ; simple_byte           46    24 (average)
  4334                           ; direct_byte           53     8 (fixed)
  4335                           ; jumptable            260     6 (fixed)
  4336                           ;	Chosen strategy is simple_byte
  4337  045C  0870               	movf	??_mandar,w
  4338  045D  3A00               	xorlw	0	; case 0
  4339  045E  1903               	skipnz
  4340  045F  2C13               	goto	i1l1817
  4341  0460  3A01               	xorlw	1	; case 1
  4342  0461  1903               	skipnz
  4343  0462  2C18               	goto	i1l1819
  4344  0463  3A03               	xorlw	3	; case 2
  4345  0464  1903               	skipnz
  4346  0465  2C1D               	goto	i1l1821
  4347  0466  3A01               	xorlw	1	; case 3
  4348  0467  1903               	skipnz
  4349  0468  2C22               	goto	i1l1823
  4350  0469  3A07               	xorlw	7	; case 4
  4351  046A  1903               	skipnz
  4352  046B  2C27               	goto	i1l1825
  4353  046C  3A01               	xorlw	1	; case 5
  4354  046D  1903               	skipnz
  4355  046E  2C2C               	goto	i1l1827
  4356  046F  3A03               	xorlw	3	; case 6
  4357  0470  1903               	skipnz
  4358  0471  2C31               	goto	i1l1829
  4359  0472  3A01               	xorlw	1	; case 7
  4360  0473  1903               	skipnz
  4361  0474  2C36               	goto	i1l1831
  4362  0475  3A0F               	xorlw	15	; case 8
  4363  0476  1903               	skipnz
  4364  0477  2C13               	goto	i1l1817
  4365  0478  3A01               	xorlw	1	; case 9
  4366  0479  1903               	skipnz
  4367  047A  2C3B               	goto	i1l1835
  4368  047B  3A03               	xorlw	3	; case 10
  4369  047C  1903               	skipnz
  4370  047D  2C1D               	goto	i1l1821
  4371  047E  3A01               	xorlw	1	; case 11
  4372  047F  1903               	skipnz
  4373  0480  2C40               	goto	i1l1839
  4374  0481  3A07               	xorlw	7	; case 12
  4375  0482  1903               	skipnz
  4376  0483  2C45               	goto	i1l1841
  4377  0484  3A01               	xorlw	1	; case 13
  4378  0485  1903               	skipnz
  4379  0486  2C4A               	goto	i1l1843
  4380  0487  3A03               	xorlw	3	; case 14
  4381  0488  1903               	skipnz
  4382  0489  2C4E               	goto	i1l160
  4383  048A  2C8B               	goto	i1l161
  4384  048B                     i1l161:
  4385  048B  0008               	return
  4386  048C                     __end_of_mandar:
  4387  007E                     btemp	set	126	;btemp
  4388  007E                     wtemp0	set	126
  4389                           
  4390                           	psect	config
  4391                           
  4392                           ;Config register CONFIG1 @ 0x2007
  4393                           ;	Oscillator Selection bits
  4394                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4395                           ;	Watchdog Timer Enable bit
  4396                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4397                           ;	Power-up Timer Enable bit
  4398                           ;	PWRTE = OFF, PWRT disabled
  4399                           ;	RE3/MCLR pin function select bit
  4400                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4401                           ;	Code Protection bit
  4402                           ;	CP = OFF, Program memory code protection is disabled
  4403                           ;	Data Code Protection bit
  4404                           ;	CPD = OFF, Data memory code protection is disabled
  4405                           ;	Brown Out Reset Selection bits
  4406                           ;	BOREN = OFF, BOR disabled
  4407                           ;	Internal External Switchover bit
  4408                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4409                           ;	Fail-Safe Clock Monitor Enabled bit
  4410                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4411                           ;	Low Voltage Programming Enable bit
  4412                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4413                           ;	In-Circuit Debugger Mode bit
  4414                           ;	DEBUG = 0x1, unprogrammed default
  4415  2007                     	org	8199
  4416  2007  20D4               	dw	8404
  4417                           
  4418                           ;Config register CONFIG2 @ 0x2008
  4419                           ;	Brown-out Reset Selection bit
  4420                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4421                           ;	Flash Program Memory Self Write Enable bits
  4422                           ;	WRT = OFF, Write protection off
  4423  2008                     	org	8200
  4424  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     22      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[5]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _pots->i1_configADC2

Critical Paths under _main in BANK0

    _main->_map
    _map->___awdiv
    ___awdiv->___wmul
    _Setup->_Lcd_Cmd
    _Setup->_configADC2
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4573
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _Setup
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                  8     8      0    2962
                                             14 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     396
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1516
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     330
                            _Lcd_Cmd
                           _Lcd_Init
                         _configADC2
                            _initOsc
                              _usart
 ---------------------------------------------------------------------------------
 (2) _usart                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _configADC2                                           4     3      1     220
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     299
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     938
                                              4 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0      96
                                              4 COMMON     4     4      0
                             _mandar
                               _pots
                            _recibir
 ---------------------------------------------------------------------------------
 (6) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pots                                                 0     0      0      96
                       i1_configADC2
 ---------------------------------------------------------------------------------
 (7) i1_configADC2                                         4     3      1      96
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
     _configADC2
     _initOsc
     _usart
   _map
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul

 _ISR (ROOT)
   _mandar
   _pots
     i1_configADC2
   _recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      34       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      34      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 08 02:15:52 2021

                        pc 0002             ___bmul@product 0021                         _C1 003C  
                       _C2 0039                         _D1 003B                         _D2 0038  
                       _R1 0079                         _R2 0078                         _U1 003A  
                       _U2 0037               ___awdiv@sign 002B                         fsr 0004  
      ___wmul@multiplicand 0022                        l201 0666                        l133 059E  
                      l141 019E                        l242 0411                        l180 06CF  
                      l270 051D                        l271 0523                        l263 04F9  
                      l192 06E8                        l272 0529                        l264 0551  
                      l512 04F4                        l177 074E                        l273 0552  
                      l265 04FF                        l257 072D                        l361 068D  
                      l266 0505                        l195 0701                        l267 050B  
                      l268 0511                        l189 06B3                        l269 0517  
                      l359 0675                        l385 0718                        _CP1 0042  
                      _CP2 003F                        _DP1 0041                        _DP2 003E  
                      u400 04AF                        u320 066F                        u401 04AE  
                      u321 066E                        u420 04C1                        u421 04C0  
                      _REC 007B                        u350 0689                        u415 04B3  
                      u351 0688                        u335 0676                        u440 04D2  
                      u360 070A                        u441 04D1                        u361 0709  
                      u345 067D                        u370 0717                        u435 04C2  
                      u371 0716                        u460 04E6                        u380 0493  
                      u620 01E5                        _ISR 059F                        u461 04E5  
                      u445 04CE                        u381 0492                        u621 01E4  
                      u550 0696                        u470 04EB                        u390 049E  
                      u551 0695                        u471 04EA                        u455 04DA  
                      u391 049D                        u560 06A8                        u561 06A7  
                      u570 0666                        u571 0665                        u637 0406  
                      _UP1 0040                        _UP2 003D                        u647 06FA  
                      u657 06C7                        _map 0028                        fsr0 0004  
                      indf 0000                       ?_ISR 0070                       l2001 0207  
                     l2011 0235                       l2003 020D                       l2021 0263  
                     l2013 023D                       l2005 0215                       l2023 026F  
                     l2015 0249                       l2007 0221                       l2017 024F  
                     l2009 0229                       l2019 025B                       l1511 06C0  
                     l1505 074C                       l1513 06C1                       l1521 06F3  
                     l1601 040E                       l1515 06CC                       l1507 06B7  
                     l1523 06F6                       l1509 06BD                       l1525 06FD  
                     l1517 06EC                       l1541 034D                       l2181 0537  
                     l1533 052F                       l1621 0726                       l1701 04EB  
                     l1527 0700                       l1519 06ED                       l1631 06D0  
                     l2183 0369                       l1551 035E                       l1543 034E  
                     l1623 0727                       l1615 0719                       l1703 04F0  
                     l2185 03CE                       l1561 037F                       l1545 0351  
                     l1529 04F8                       l1625 0728                       l1617 0721  
                     l1641 0683                       l1633 0667                       l1571 0398  
                     l1563 0384                       l1547 0356                       l1555 0361  
                     l1627 072B                       l1619 0724                       l1651 070A  
                     l1643 0689                       l1635 066B                       l1581 03B1  
                     l1573 039D                       l1565 0389                       l1557 0377  
                     l1549 035B                       l1629 072C                       l1901 0596  
                     l1653 070E                       l1637 066F                       l1911 0696  
                     l1583 03B6                       l1575 03A2                       l1567 038E  
                     l1559 037A                       l1903 0597                       l1671 049A  
                     l1663 048C                       l1655 0710                       l1647 0705  
                     l1639 067C                       l1913 069B                       l1921 0641  
                     l1585 03BB                       l1577 03A7                       l1569 0393  
                     l1593 03C6                       l1905 059A                       l1681 04AF  
                     l1673 049E                       l1665 048F                       l1657 0712  
                     l1649 0706                       l1915 06A2                       l1923 0644  
                     l1587 03C0                       l1579 03AC                       l1595 0400  
                     l1907 059B                       l1691 04D2                       l1683 04B2  
                     l1675 04A3                       l1667 0493                       l1659 0717  
                     l1931 0180                       l1917 06A8                       l1909 0691  
                     l1925 0651                       l1597 040A                       l1589 03C3  
                     l1861 0569                       l1693 04D8                       l1685 04B9  
                     l1677 04A7                       l1669 0498                       l1941 0199  
                     l1933 0185                       l1919 06AD                       l1927 0659  
                     l1599 040D                       l1871 057E                       l1863 056E  
                     l1855 0553                       l1695 04D9                       l1687 04BD  
                     l1679 04A9                       l1935 018A                       l1881 0585  
                     l1873 0581                       l1865 0573                       l1857 0557  
                     l1697 04E0                       l1689 04C1                       l1937 018F  
                     l1929 0028                       l1891 058F                       l1883 0589  
                     l1875 0582                       l1867 0579                       l1859 055D  
                     l1699 04E6                       l1939 0194                       l1971 019F  
                     l1893 0590                       l1885 058A                       l1877 0583  
                     l1869 057C                       l1981 01C6                       l1973 01A4  
                     ?_map 0070                       l1895 0591                       l1887 058C  
                     l1879 0584                       l1991 01E6                       l1983 01D2  
                     l1975 01AE                       l1897 0592                       l1889 058E  
                     l1993 01E7                       l1985 01D8                       l1977 01B4  
                     l1899 0593                       l1995 01EA                       l1987 01DD  
                     l1979 01C0                       l1997 01F3                       l1989 01E5  
                     l1999 01FB                       STR_1 0739                       STR_2 073C  
                     STR_3 0734                       STR_4 073F                       STR_5 073F  
                     _CONT 0036                       _SEND 007A                       _TMR0 0001  
        ?_Lcd_Write_String 0070                       _main 019F                       _pot1 0045  
                     _pot2 0044                       _pots 0614                       btemp 007E  
                     start 0012         ??_Lcd_Write_String 0023            __end_of_Lcd_Cmd 06D0  
        ___bmul@multiplier 0022                      ??_ISR 0074      __size_ofi1_configADC2 00CF  
                    ??_map 002E                      ?_main 0070            __end_of___awdiv 04F5  
                    ?_pots 0070                      _ANSEL 0188            ___awdiv@divisor 0026  
                    i1l121 05D5                      i1l160 044E                      i1l161 048B  
                    i1l242 0349                      i1l138 063D                      i1l168 0613  
          ___awdiv@counter 002A                      _RCREG 001A                      u50_20 05EF  
                    u50_21 05EE                      _SPBRG 0099                      u51_20 05F4  
                    u51_21 05F3                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u52_20 0601                      u60_20 05BA                      u52_21 0600  
                    u60_21 05B9                      u53_20 0609                      u61_20 05C9  
                    u53_21 0608                      u61_21 05C8                      u54_20 060E  
                    u54_21 060D                      u48_20 0619                      u48_21 0618  
                    u49_20 05E7                      u49_21 05E6    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      u58_20 05A3  
                    u58_21 05A2                      u66_27 033D                      u59_20 05AE  
                    u59_21 05AD                      _TXREG 0019                      _Setup 0553  
          __end_of_initOsc 0553            __end_of_recibir 0614                      _usart 0719  
                    pclath 000A                      status 0003                      wtemp0 007E  
             i1_configADC2 027B           __end_of_Lcd_Init 06E9           __end_of_Lcd_Port 074F  
          __initialization 0015               __end_of_main 027B               __end_of_pots 063E  
                   ??_main 0036                     ??_pots 0074                     ?_Setup 0070  
                   _ADCON1 009F                     _ADRESH 001E                initOsc@IRCF 0022  
         ___awdiv@dividend 0028                     _ANSELH 0189                     ?_usart 0070  
                   i1l2191 045C                     i1l1711 0282                     i1l1713 0289  
                   i1l1721 029A                     i1l1801 05F5                     i1l1731 02C2  
                   i1l1723 02B0                     i1l2187 02A2                     i1l1715 0290  
                   i1l1707 027C                     i1l1811 060E                     i1l1803 05FB  
                   i1l1821 041D                     i1l2189 0307                     i1l1741 02DB  
                   i1l1733 02C7                     i1l1725 02B3                     i1l1717 0295  
                   i1l1709 027D                     i1l1813 060F                     i1l1805 0601  
                   i1l1831 0436                     i1l1823 0422                     i1l1815 0412  
                   i1l1751 02F4                     i1l1743 02E0                     i1l1735 02CC  
                   i1l1727 02B8                     i1l1807 0603                     i1l1841 0445  
                   i1l1825 0427                     i1l1817 0413                     i1l1753 02F9  
                   i1l1745 02E5                     i1l1737 02D1                     i1l1729 02BD  
                   i1l1761 0339                     i1l1809 0609                     i1l1843 044A  
                   i1l1835 043B                     i1l1827 042C                     i1l1819 0418  
                   i1l1763 0342                     i1l1755 02FC                     i1l1747 02EA  
                   i1l1739 02D6                     i1l1845 0452                     i1l1829 0431  
                   i1l1765 0345                     i1l1749 02EF                     i1l1781 0623  
                   i1l1839 0440                     i1l1767 0346                     i1l1759 02FF  
                   i1l1783 0629                     i1l1791 05E1                     i1l1951 05AA  
                   i1l1943 059F                     i1l1849 0454                     i1l1785 062C  
                   i1l1777 0614                     i1l1793 05E7                     i1l1961 05BE  
                   i1l1953 05AE                     i1l1945 05A3                     i1l1787 0636  
                   i1l1779 0619                     i1l1795 05E9                     i1l1963 05C3  
                   i1l1955 05B3                     i1l1947 05A5                     i1l1789 063C  
                   i1l1797 05EF                     i1l1965 05C9                     i1l1957 05B6  
                   i1l1949 05A9                     i1l1799 05F4                     i1l1967 05CE  
                   i1l1959 05BA                     i1l1969 05D2                  ??_Lcd_Cmd 0021  
                   _SPBRGH 009A                     _TOGGLE 007C    __size_of_Lcd_Write_Char 0019  
                   ___bmul 0702                     ___wmul 0667                  ??___awdiv 002A  
                   _mandar 0412           ___awdiv@quotient 002C                  ??_initOsc 0020  
                ??_recibir 0070                     saved_w 007E            Lcd_Set_Cursor@a 0025  
          Lcd_Set_Cursor@b 0024    __end_of__initialization 0024           i1configADC2@chan 0070  
         i1configADC2@fosc 0073        ___bmul@multiplicand 0020             __pcstackCOMMON 0070  
            __end_of_Setup 059F              __end_of_usart 072E             _Lcd_Set_Cursor 068E  
                  ??_Setup 0024                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_usart 0020                 __pbssBANK0 0036                 __pmaintext 019F  
                  ?___bmul 0020                    ?___wmul 0020                 __pintentry 0004  
                  ?_mandar 0070  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 06B4  
                  _FLAGADC 007D                    _CONTADC 0043                 _configADC2 034A  
               ??_Lcd_Init 0024                 ??_Lcd_Port 0020                 __stringtab 072E  
           _Lcd_Write_Char 06E9                    _Lcd_Cmd 06B4            __size_of___bmul 0017  
                  ___awdiv 048C            __size_of___wmul 0027            __size_of_mandar 007A  
          ?_Lcd_Set_Cursor 0024                    __ptext1 0028                    __ptext2 0667  
                  __ptext3 0702                    __ptext4 048C                    __ptext5 0553  
                  __ptext6 0719                    __ptext7 04F5                    __ptext8 034A  
                  __ptext9 06D0               __size_of_ISR 0042                    _initOsc 04F5  
             __size_of_map 0177                    _recibir 05E1                    clrloop0 0742  
   __end_of_Lcd_Write_Char 0702       end_of_initialization 0024                  _RCSTAbits 0018  
                Lcd_Port@a 0020                  _PORTEbits 0009                ?_configADC2 0020  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0025          Lcd_Write_String@i 0023  
                _TXSTAbits 0098             __end_of___bmul 0719             __end_of___wmul 068E  
         _Lcd_Write_String 063E                _BAUDCTLbits 0187             __end_of_mandar 048C  
      start_initialization 0015                __end_of_ISR 05E1                __end_of_map 019F  
        __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006        __size_of_configADC2 00C8  
                 ??___bmul 0021                   ??___wmul 0024                   ??_mandar 0070  
          Lcd_Write_Char@a 0022                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070              ?i1_configADC2 0070  
         ??_Lcd_Set_Cursor 0025                   ?___awdiv 0026                  __pstrings 072E  
                 ?_initOsc 0070                   ?_recibir 0070             __size_of_Setup 004C  
           __size_of_usart 0015          interrupt_function 0004             ___wmul@product 0024  
           ??i1_configADC2 0071                  clear_ram0 0741                   _PIE1bits 008C  
                 Lcd_Cmd@a 0023                   _PIR1bits 000C                 _ADCON0bits 001F  
              __stringbase 0733          ___wmul@multiplier 0020               ??_configADC2 0021  
         ??_Lcd_Write_Char 0021                   _Lcd_Init 06D0                   _Lcd_Port 0749  
 __end_of_Lcd_Write_String 0667           __size_of_Lcd_Cmd 001C         __end_of_configADC2 0412  
         __size_of___awdiv 0069                   _map$1126 0034         __end_of__stringtab 0734  
         __size_of_initOsc 005E           __size_of_recibir 0033                   __ptext10 063E  
                 __ptext11 06E9                   __ptext12 068E                   __ptext13 06B4  
                 __ptext14 0749                   __ptext15 059F                   __ptext16 05E1  
                 __ptext17 0614                   __ptext18 027B                   __ptext19 0412  
            __size_of_main 00DC              __size_of_pots 002A       __end_ofi1_configADC2 034A  
               _INTCONbits 000B                   intlevel1 0000                  stringcode 072E  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0026             configADC2@chan 0020  
               _OPTION_REG 0081             configADC2@fosc 0023                   stringdir 072E  
                 stringtab 072E  
