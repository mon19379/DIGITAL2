

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 08 12:40:21 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 09/04/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  000E                     	;# 
   476  000F                     	;# 
   477  0010                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0013                     	;# 
   481  0014                     	;# 
   482  0015                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001D                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  0081                     	;# 
   496  0085                     	;# 
   497  0086                     	;# 
   498  0087                     	;# 
   499  0088                     	;# 
   500  0089                     	;# 
   501  008C                     	;# 
   502  008D                     	;# 
   503  008E                     	;# 
   504  008F                     	;# 
   505  0090                     	;# 
   506  0091                     	;# 
   507  0092                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0093                     	;# 
   511  0094                     	;# 
   512  0095                     	;# 
   513  0096                     	;# 
   514  0097                     	;# 
   515  0098                     	;# 
   516  0099                     	;# 
   517  009A                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  009F                     	;# 
   523  0105                     	;# 
   524  0107                     	;# 
   525  0108                     	;# 
   526  0109                     	;# 
   527  010C                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  010F                     	;# 
   532  0185                     	;# 
   533  0187                     	;# 
   534  0188                     	;# 
   535  0189                     	;# 
   536  018C                     	;# 
   537  018D                     	;# 
   538  0018                     _RCSTAbits	set	24
   539  0009                     _PORTEbits	set	9
   540  0019                     _TXREG	set	25
   541  001E                     _ADRESH	set	30
   542  0009                     _PORTE	set	9
   543  0008                     _PORTD	set	8
   544  0007                     _PORTC	set	7
   545  0006                     _PORTB	set	6
   546  0005                     _PORTA	set	5
   547  001F                     _ADCON0bits	set	31
   548  001A                     _RCREG	set	26
   549  000C                     _PIR1bits	set	12
   550  0001                     _TMR0	set	1
   551  000B                     _INTCONbits	set	11
   552  008F                     _OSCCONbits	set	143
   553  0099                     _SPBRG	set	153
   554  009A                     _SPBRGH	set	154
   555  0098                     _TXSTAbits	set	152
   556  009F                     _ADCON1	set	159
   557  0081                     _OPTION_REG	set	129
   558  0086                     _TRISB	set	134
   559  0085                     _TRISA	set	133
   560  0087                     _TRISC	set	135
   561  0089                     _TRISE	set	137
   562  0088                     _TRISD	set	136
   563  008C                     _PIE1bits	set	140
   564  0187                     _BAUDCTLbits	set	391
   565  0189                     _ANSELH	set	393
   566  0188                     _ANSEL	set	392
   567                           
   568                           	psect	strings
   569  07DD                     __pstrings:
   570  07DD                     stringtab:
   571  07DD                     __stringtab:
   572  07DD                     stringcode:	
   573                           ;	String table - string pointers are 1 byte each
   574                           
   575  07DD                     stringdir:
   576  07DD  3007               	movlw	high stringdir
   577  07DE  008A               	movwf	10
   578  07DF  0804               	movf	4,w
   579  07E0  0A84               	incf	4,f
   580  07E1  0782               	addwf	2,f
   581  07E2                     __stringbase:
   582  07E2  3400               	retlw	0
   583  07E3                     __end_of__stringtab:
   584  07E3                     STR_3:
   585  07E3  3443               	retlw	67	;'C'
   586  07E4  344F               	retlw	79	;'O'
   587  07E5  344E               	retlw	78	;'N'
   588  07E6  3454               	retlw	84	;'T'
   589  07E7  3400               	retlw	0
   590  07E8                     STR_1:
   591  07E8  3456               	retlw	86	;'V'
   592  07E9  3431               	retlw	49	;'1'
   593  07EA  3400               	retlw	0
   594  07EB                     STR_2:
   595  07EB  3456               	retlw	86	;'V'
   596  07EC  3432               	retlw	50	;'2'
   597  07ED  3400               	retlw	0
   598  07EE                     STR_4:
   599  07EE  342E               	retlw	46	;'.'
   600  07EF  3400               	retlw	0
   601  07EE                     
   602                           	psect	cinit
   603  0015                     start_initialization:	
   604                           ; #config settings
   605                           
   606  0015                     __initialization:
   607                           
   608                           ; Clear objects allocated to COMMON
   609  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   610  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   611  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   612  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   613  0019  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   614  001A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   615                           
   616                           ; Clear objects allocated to BANK0
   617  001B  1383               	bcf	3,7	;select IRP bank0
   618  001C  3020               	movlw	low __pbssBANK0
   619  001D  0084               	movwf	4
   620  001E  3036               	movlw	low (__pbssBANK0+22)
   621  001F  120A  118A  27F0  120A  118A  	fcall	clear_ram0
   622  0024                     end_of_initialization:	
   623                           ;End of C runtime variable initialization code
   624                           
   625  0024                     __end_of__initialization:
   626  0024  0183               	clrf	3
   627  0025  120A  118A  299F   	ljmp	_main	;jump to C main() function
   628                           
   629                           	psect	bssCOMMON
   630  0078                     __pbssCOMMON:
   631  0078                     _R2:
   632  0078                     	ds	1
   633  0079                     _R1:
   634  0079                     	ds	1
   635  007A                     _SEND:
   636  007A                     	ds	1
   637  007B                     _REC:
   638  007B                     	ds	1
   639  007C                     _TOGGLE:
   640  007C                     	ds	1
   641  007D                     _FLAGADC:
   642  007D                     	ds	1
   643                           
   644                           	psect	bssBANK0
   645  0020                     __pbssBANK0:
   646  0020                     _CO3:
   647  0020                     	ds	1
   648  0021                     _CO2:
   649  0021                     	ds	1
   650  0022                     _CO1:
   651  0022                     	ds	1
   652  0023                     _CONTU:
   653  0023                     	ds	1
   654  0024                     _CONTD:
   655  0024                     	ds	1
   656  0025                     _CONTC:
   657  0025                     	ds	1
   658  0026                     _CONT:
   659  0026                     	ds	1
   660  0027                     _U2:
   661  0027                     	ds	1
   662  0028                     _D2:
   663  0028                     	ds	1
   664  0029                     _C2:
   665  0029                     	ds	1
   666  002A                     _U1:
   667  002A                     	ds	1
   668  002B                     _D1:
   669  002B                     	ds	1
   670  002C                     _C1:
   671  002C                     	ds	1
   672  002D                     _UP2:
   673  002D                     	ds	1
   674  002E                     _DP2:
   675  002E                     	ds	1
   676  002F                     _CP2:
   677  002F                     	ds	1
   678  0030                     _UP1:
   679  0030                     	ds	1
   680  0031                     _DP1:
   681  0031                     	ds	1
   682  0032                     _CP1:
   683  0032                     	ds	1
   684  0033                     _CONTADC:
   685  0033                     	ds	1
   686  0034                     _pot2:
   687  0034                     	ds	1
   688  0035                     _pot1:
   689  0035                     	ds	1
   690                           
   691                           	psect	clrtext
   692  07F0                     clear_ram0:	
   693                           ;	Called with FSR containing the base address, and
   694                           ;	W with the last address+1
   695                           
   696  07F0  0064               	clrwdt	;clear the watchdog before getting into this loop
   697  07F1                     clrloop0:
   698  07F1  0180               	clrf	0	;clear RAM location pointed to by FSR
   699  07F2  0A84               	incf	4,f	;increment pointer
   700  07F3  0604               	xorwf	4,w	;XOR with final address
   701  07F4  1903               	btfsc	3,2	;have we reached the end yet?
   702  07F5  3400               	retlw	0	;all done for this memory range, return
   703  07F6  0604               	xorwf	4,w	;XOR again to restore value
   704  07F7  2FF1               	goto	clrloop0	;do the next byte
   705                           
   706                           	psect	cstackCOMMON
   707  0070                     __pcstackCOMMON:
   708  0070                     ?_pots:
   709  0070                     ?_recibir:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ??_recibir:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_mandar:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ??_mandar:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_Setup:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_Lcd_Write_String:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_map:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_map2:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_Lcd_Write_Char:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_initOsc:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_usart:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_Lcd_Init:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_Lcd_Cmd:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_ISR:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_main:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_Lcd_Port:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?i1_configADC2:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     i1configADC2@chan:	
   761                           ; 1 bytes @ 0x0
   762                           
   763                           
   764                           ; 1 bytes @ 0x0
   765  0070                     	ds	1
   766  0071                     ??i1_configADC2:
   767                           
   768                           ; 1 bytes @ 0x1
   769  0071                     	ds	2
   770  0073                     i1configADC2@fosc:
   771                           
   772                           ; 1 bytes @ 0x3
   773  0073                     	ds	1
   774  0074                     ??_pots:
   775  0074                     ??_ISR:	
   776                           ; 1 bytes @ 0x4
   777                           
   778                           
   779                           ; 1 bytes @ 0x4
   780  0074                     	ds	4
   781                           
   782                           	psect	cstackBANK0
   783  0036                     __pcstackBANK0:
   784  0036                     ??_initOsc:
   785  0036                     ?_configADC2:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0036                     ??_usart:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0036                     ??_Lcd_Port:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0036                     ?___bmul:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0036                     ?___wmul:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0036                     Lcd_Port@a:	
   801                           ; 2 bytes @ 0x0
   802                           
   803  0036                     configADC2@chan:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0036                     ___bmul@multiplicand:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0036                     ___wmul@multiplier:	
   810                           ; 1 bytes @ 0x0
   811                           
   812                           
   813                           ; 2 bytes @ 0x0
   814  0036                     	ds	1
   815  0037                     ??_Lcd_Write_Char:
   816  0037                     ??_configADC2:	
   817                           ; 1 bytes @ 0x1
   818                           
   819  0037                     ??_Lcd_Cmd:	
   820                           ; 1 bytes @ 0x1
   821                           
   822  0037                     ??___bmul:	
   823                           ; 1 bytes @ 0x1
   824                           
   825  0037                     ___bmul@product:	
   826                           ; 1 bytes @ 0x1
   827                           
   828                           
   829                           ; 1 bytes @ 0x1
   830  0037                     	ds	1
   831  0038                     Lcd_Write_Char@a:
   832  0038                     initOsc@IRCF:	
   833                           ; 1 bytes @ 0x2
   834                           
   835  0038                     ___bmul@multiplier:	
   836                           ; 1 bytes @ 0x2
   837                           
   838  0038                     ___wmul@multiplicand:	
   839                           ; 1 bytes @ 0x2
   840                           
   841                           
   842                           ; 2 bytes @ 0x2
   843  0038                     	ds	1
   844  0039                     ??_Lcd_Write_String:
   845  0039                     Lcd_Cmd@a:	
   846                           ; 1 bytes @ 0x3
   847                           
   848  0039                     configADC2@fosc:	
   849                           ; 1 bytes @ 0x3
   850                           
   851  0039                     Lcd_Write_String@i:	
   852                           ; 1 bytes @ 0x3
   853                           
   854                           
   855                           ; 2 bytes @ 0x3
   856  0039                     	ds	1
   857  003A                     ??_Setup:
   858  003A                     ?_Lcd_Set_Cursor:	
   859                           ; 1 bytes @ 0x4
   860                           
   861  003A                     ??_Lcd_Init:	
   862                           ; 1 bytes @ 0x4
   863                           
   864  003A                     ??___wmul:	
   865                           ; 1 bytes @ 0x4
   866                           
   867  003A                     Lcd_Set_Cursor@b:	
   868                           ; 1 bytes @ 0x4
   869                           
   870  003A                     ___wmul@product:	
   871                           ; 1 bytes @ 0x4
   872                           
   873                           
   874                           ; 2 bytes @ 0x4
   875  003A                     	ds	1
   876  003B                     ??_Lcd_Set_Cursor:
   877  003B                     Lcd_Set_Cursor@a:	
   878                           ; 1 bytes @ 0x5
   879                           
   880  003B                     Lcd_Write_String@a:	
   881                           ; 1 bytes @ 0x5
   882                           
   883                           
   884                           ; 1 bytes @ 0x5
   885  003B                     	ds	1
   886  003C                     ?___awdiv:
   887  003C                     Lcd_Set_Cursor@temp:	
   888                           ; 2 bytes @ 0x6
   889                           
   890  003C                     ___awdiv@divisor:	
   891                           ; 1 bytes @ 0x6
   892                           
   893                           
   894                           ; 2 bytes @ 0x6
   895  003C                     	ds	2
   896  003E                     ___awdiv@dividend:
   897                           
   898                           ; 2 bytes @ 0x8
   899  003E                     	ds	2
   900  0040                     ??___awdiv:
   901  0040                     ___awdiv@counter:	
   902                           ; 1 bytes @ 0xA
   903                           
   904                           
   905                           ; 1 bytes @ 0xA
   906  0040                     	ds	1
   907  0041                     ___awdiv@sign:
   908                           
   909                           ; 1 bytes @ 0xB
   910  0041                     	ds	1
   911  0042                     ___awdiv@quotient:
   912                           
   913                           ; 2 bytes @ 0xC
   914  0042                     	ds	2
   915  0044                     ??_map:
   916  0044                     ??_map2:	
   917                           ; 1 bytes @ 0xE
   918                           
   919                           
   920                           ; 1 bytes @ 0xE
   921  0044                     	ds	6
   922  004A                     _map$1137:
   923                           
   924                           ; 2 bytes @ 0x14
   925  004A                     	ds	2
   926  004C                     ??_main:
   927                           
   928                           	psect	maintext
   929  019F                     __pmaintext:	
   930                           ; 1 bytes @ 0x16
   931 ;;
   932 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   933 ;;
   934 ;; *************** function _main *****************
   935 ;; Defined at:
   936 ;;		line 115 in file "L3.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : B00/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels required when called:    7
   956 ;; This function calls:
   957 ;;		_Lcd_Set_Cursor
   958 ;;		_Lcd_Write_Char
   959 ;;		_Lcd_Write_String
   960 ;;		_Setup
   961 ;;		_map
   962 ;;		_map2
   963 ;; This function is called by:
   964 ;;		Startup code after reset
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _main
   970  019F                     _main:
   971  019F                     l2018:	
   972                           ;incstack = 0
   973                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   974                           
   975                           
   976                           ;L3.c: 117:     Setup();
   977  019F  120A  118A  2602  120A  118A  	fcall	_Setup
   978  01A4                     l2020:
   979                           
   980                           ;L3.c: 118:     Lcd_Set_Cursor(1, 1);
   981  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   982  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   983  01A6  01BA               	clrf	Lcd_Set_Cursor@b
   984  01A7  0ABA               	incf	Lcd_Set_Cursor@b,f
   985  01A8  3001               	movlw	1
   986  01A9  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
   987  01AE                     l2022:
   988                           
   989                           ;L3.c: 119:     Lcd_Write_String("V1");
   990  01AE  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   991  01AF  120A  118A  26ED  120A  118A  	fcall	_Lcd_Write_String
   992  01B4                     l2024:
   993                           
   994                           ;L3.c: 120:     Lcd_Set_Cursor(1, 7);
   995  01B4  3007               	movlw	7
   996  01B5  00FF               	movwf	btemp+1
   997  01B6  087F               	movf	btemp+1,w
   998  01B7  1283               	bcf	3,5	;RP0=0, select bank0
   999  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1000  01B9  00BA               	movwf	Lcd_Set_Cursor@b
  1001  01BA  3001               	movlw	1
  1002  01BB  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1003  01C0                     l2026:
  1004                           
  1005                           ;L3.c: 121:     Lcd_Write_String("V2");
  1006  01C0  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1007  01C1  120A  118A  26ED  120A  118A  	fcall	_Lcd_Write_String
  1008  01C6                     l2028:
  1009                           
  1010                           ;L3.c: 122:     Lcd_Set_Cursor(1, 13);
  1011  01C6  300D               	movlw	13
  1012  01C7  00FF               	movwf	btemp+1
  1013  01C8  087F               	movf	btemp+1,w
  1014  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1015  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1016  01CB  00BA               	movwf	Lcd_Set_Cursor@b
  1017  01CC  3001               	movlw	1
  1018  01CD  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1019  01D2                     l2030:
  1020                           
  1021                           ;L3.c: 123:     Lcd_Write_String("CONT");
  1022  01D2  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1023  01D3  120A  118A  26ED  120A  118A  	fcall	_Lcd_Write_String
  1024  01D8                     l2032:
  1025                           
  1026                           ;L3.c: 134:         map();
  1027  01D8  120A  118A  2028  120A  118A  	fcall	_map
  1028  01DD                     l2034:
  1029                           
  1030                           ;L3.c: 135:         map2();
  1031  01DD  120A  118A  24CD  120A  118A  	fcall	_map2
  1032  01E2                     l2036:
  1033                           
  1034                           ;L3.c: 136:         if (CONTADC > 20) {
  1035  01E2  3015               	movlw	21
  1036  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1037  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1038  01E5  0233               	subwf	_CONTADC,w
  1039  01E6  1C03               	skipc
  1040  01E7  29E9               	goto	u621
  1041  01E8  29EA               	goto	u620
  1042  01E9                     u621:
  1043  01E9  29EF               	goto	l2044
  1044  01EA                     u620:
  1045  01EA                     l2038:
  1046                           
  1047                           ;L3.c: 137:             ADCON0bits.GO_nDONE = 1;
  1048  01EA  149F               	bsf	31,1	;volatile
  1049  01EB                     l2040:
  1050                           
  1051                           ;L3.c: 138:             CONTADC = 0;
  1052  01EB  01B3               	clrf	_CONTADC
  1053  01EC                     l2042:
  1054                           
  1055                           ;L3.c: 139:             PIE1bits.TXIE = 1;
  1056  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1057  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1058  01EE  160C               	bsf	12,4	;volatile
  1059  01EF                     l2044:
  1060                           
  1061                           ;L3.c: 144:         Lcd_Set_Cursor(2, 1);
  1062  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1063  01F0  01BA               	clrf	Lcd_Set_Cursor@b
  1064  01F1  0ABA               	incf	Lcd_Set_Cursor@b,f
  1065  01F2  3002               	movlw	2
  1066  01F3  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1067  01F8                     l2046:
  1068                           
  1069                           ;L3.c: 145:         Lcd_Write_Char(C1);
  1070  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1071  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1072  01FA  082C               	movf	_C1,w
  1073  01FB  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1074  0200                     l2048:
  1075                           
  1076                           ;L3.c: 146:         Lcd_Set_Cursor(2, 2);
  1077  0200  3002               	movlw	2
  1078  0201  00FF               	movwf	btemp+1
  1079  0202  087F               	movf	btemp+1,w
  1080  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0205  00BA               	movwf	Lcd_Set_Cursor@b
  1083  0206  3002               	movlw	2
  1084  0207  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1085  020C                     l2050:
  1086                           
  1087                           ;L3.c: 147:         Lcd_Write_String(".");
  1088  020C  300C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1089  020D  120A  118A  26ED  120A  118A  	fcall	_Lcd_Write_String
  1090  0212                     l2052:
  1091                           
  1092                           ;L3.c: 148:         Lcd_Write_Char(D1);
  1093  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0214  082B               	movf	_D1,w
  1096  0215  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1097  021A                     l2054:
  1098                           
  1099                           ;L3.c: 149:         Lcd_Set_Cursor(2, 4);
  1100  021A  3004               	movlw	4
  1101  021B  00FF               	movwf	btemp+1
  1102  021C  087F               	movf	btemp+1,w
  1103  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1104  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1105  021F  00BA               	movwf	Lcd_Set_Cursor@b
  1106  0220  3002               	movlw	2
  1107  0221  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1108  0226                     l2056:
  1109                           
  1110                           ;L3.c: 150:         Lcd_Write_Char(U1);
  1111  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0228  082A               	movf	_U1,w
  1114  0229  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1115  022E                     l2058:
  1116                           
  1117                           ;L3.c: 153:         Lcd_Set_Cursor(2, 7);
  1118  022E  3007               	movlw	7
  1119  022F  00FF               	movwf	btemp+1
  1120  0230  087F               	movf	btemp+1,w
  1121  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0233  00BA               	movwf	Lcd_Set_Cursor@b
  1124  0234  3002               	movlw	2
  1125  0235  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1126  023A                     l2060:
  1127                           
  1128                           ;L3.c: 154:         Lcd_Write_Char(C2);
  1129  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1130  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1131  023C  0829               	movf	_C2,w
  1132  023D  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1133  0242                     l2062:
  1134                           
  1135                           ;L3.c: 155:         Lcd_Set_Cursor(2, 8);
  1136  0242  3008               	movlw	8
  1137  0243  00FF               	movwf	btemp+1
  1138  0244  087F               	movf	btemp+1,w
  1139  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0247  00BA               	movwf	Lcd_Set_Cursor@b
  1142  0248  3002               	movlw	2
  1143  0249  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1144  024E                     l2064:
  1145                           
  1146                           ;L3.c: 156:         Lcd_Write_String(".");
  1147  024E  300C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1148  024F  120A  118A  26ED  120A  118A  	fcall	_Lcd_Write_String
  1149  0254                     l2066:
  1150                           
  1151                           ;L3.c: 157:         Lcd_Set_Cursor(2, 9);
  1152  0254  3009               	movlw	9
  1153  0255  00FF               	movwf	btemp+1
  1154  0256  087F               	movf	btemp+1,w
  1155  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0259  00BA               	movwf	Lcd_Set_Cursor@b
  1158  025A  3002               	movlw	2
  1159  025B  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1160  0260                     l2068:
  1161                           
  1162                           ;L3.c: 158:         Lcd_Write_Char(D2);
  1163  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1164  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0262  0828               	movf	_D2,w
  1166  0263  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1167  0268                     l2070:
  1168                           
  1169                           ;L3.c: 159:         Lcd_Set_Cursor(2, 10);
  1170  0268  300A               	movlw	10
  1171  0269  00FF               	movwf	btemp+1
  1172  026A  087F               	movf	btemp+1,w
  1173  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1174  026C  1303               	bcf	3,6	;RP1=0, select bank0
  1175  026D  00BA               	movwf	Lcd_Set_Cursor@b
  1176  026E  3002               	movlw	2
  1177  026F  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1178  0274                     l2072:
  1179                           
  1180                           ;L3.c: 160:         Lcd_Write_Char(U2);
  1181  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0276  0827               	movf	_U2,w
  1184  0277  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1185  027C                     l2074:
  1186                           
  1187                           ;L3.c: 162:         Lcd_Set_Cursor(2, 13);
  1188  027C  300D               	movlw	13
  1189  027D  00FF               	movwf	btemp+1
  1190  027E  087F               	movf	btemp+1,w
  1191  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0281  00BA               	movwf	Lcd_Set_Cursor@b
  1194  0282  3002               	movlw	2
  1195  0283  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1196  0288                     l2076:
  1197                           
  1198                           ;L3.c: 163:         Lcd_Write_Char(CO1);
  1199  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0289  1303               	bcf	3,6	;RP1=0, select bank0
  1201  028A  0822               	movf	_CO1,w
  1202  028B  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1203  0290                     l2078:
  1204                           
  1205                           ;L3.c: 164:         Lcd_Set_Cursor(2, 14);
  1206  0290  300E               	movlw	14
  1207  0291  00FF               	movwf	btemp+1
  1208  0292  087F               	movf	btemp+1,w
  1209  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0295  00BA               	movwf	Lcd_Set_Cursor@b
  1212  0296  3002               	movlw	2
  1213  0297  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1214  029C                     l2080:
  1215                           
  1216                           ;L3.c: 165:         Lcd_Write_Char(CO2);
  1217  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1218  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1219  029E  0821               	movf	_CO2,w
  1220  029F  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1221  02A4                     l2082:
  1222                           
  1223                           ;L3.c: 166:         Lcd_Set_Cursor(2, 15);
  1224  02A4  300F               	movlw	15
  1225  02A5  00FF               	movwf	btemp+1
  1226  02A6  087F               	movf	btemp+1,w
  1227  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1228  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1229  02A9  00BA               	movwf	Lcd_Set_Cursor@b
  1230  02AA  3002               	movlw	2
  1231  02AB  120A  118A  273D  120A  118A  	fcall	_Lcd_Set_Cursor
  1232  02B0                     l2084:
  1233                           
  1234                           ;L3.c: 167:         Lcd_Write_Char(CO3);
  1235  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1236  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1237  02B2  0820               	movf	_CO3,w
  1238  02B3  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  1239  02B8  29D8               	goto	l2032
  1240  02B9  120A  118A  2812   	ljmp	start
  1241  02BC                     __end_of_main:
  1242                           
  1243                           	psect	text1
  1244  04CD                     __ptext1:	
  1245 ;; *************** function _map2 *****************
  1246 ;; Defined at:
  1247 ;;		line 341 in file "L3.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0
  1263 ;;      Temps:          0       2       0       0       0
  1264 ;;      Totals:         0       2       0       0       0
  1265 ;;Total ram usage:        2 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    4
  1268 ;; This function calls:
  1269 ;;		___awdiv
  1270 ;;		___bmul
  1271 ;;		___wmul
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _map2
  1279  04CD                     _map2:
  1280  04CD                     l1982:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _map2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1283                           
  1284                           
  1285                           ;L3.c: 342:     CONTC = (CONT/100);
  1286  04CD  3064               	movlw	100
  1287  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1288  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1289  04D0  00BC               	movwf	___awdiv@divisor
  1290  04D1  3000               	movlw	0
  1291  04D2  00BD               	movwf	___awdiv@divisor+1
  1292  04D3  0826               	movf	_CONT,w
  1293  04D4  00C4               	movwf	??_map2
  1294  04D5  01C5               	clrf	??_map2+1
  1295  04D6  0844               	movf	??_map2,w
  1296  04D7  00BE               	movwf	___awdiv@dividend
  1297  04D8  0845               	movf	??_map2+1,w
  1298  04D9  00BF               	movwf	___awdiv@dividend+1
  1299  04DA  120A  118A  253B  120A  118A  	fcall	___awdiv
  1300  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1301  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1302  04E1  083C               	movf	?___awdiv,w
  1303  04E2  00FF               	movwf	btemp+1
  1304  04E3  087F               	movf	btemp+1,w
  1305  04E4  00A5               	movwf	_CONTC
  1306                           
  1307                           ;L3.c: 343:     CONTD = (CONT- (CONTC*100))/10;
  1308  04E5  300A               	movlw	10
  1309  04E6  00BC               	movwf	___awdiv@divisor
  1310  04E7  3000               	movlw	0
  1311  04E8  00BD               	movwf	___awdiv@divisor+1
  1312  04E9  0825               	movf	_CONTC,w
  1313  04EA  00C4               	movwf	??_map2
  1314  04EB  01C5               	clrf	??_map2+1
  1315  04EC  0844               	movf	??_map2,w
  1316  04ED  00B6               	movwf	___wmul@multiplier
  1317  04EE  0845               	movf	??_map2+1,w
  1318  04EF  00B7               	movwf	___wmul@multiplier+1
  1319  04F0  309C               	movlw	156
  1320  04F1  00B8               	movwf	___wmul@multiplicand
  1321  04F2  30FF               	movlw	255
  1322  04F3  00B9               	movwf	___wmul@multiplicand+1
  1323  04F4  120A  118A  2716  120A  118A  	fcall	___wmul
  1324  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1325  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1326  04FB  0826               	movf	_CONT,w
  1327  04FC  0736               	addwf	?___wmul,w
  1328  04FD  00BE               	movwf	___awdiv@dividend
  1329  04FE  0837               	movf	?___wmul+1,w
  1330  04FF  1803               	skipnc
  1331  0500  0A37               	incf	?___wmul+1,w
  1332  0501  00BF               	movwf	___awdiv@dividend+1
  1333  0502  120A  118A  253B  120A  118A  	fcall	___awdiv
  1334  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0509  083C               	movf	?___awdiv,w
  1337  050A  00FF               	movwf	btemp+1
  1338  050B  087F               	movf	btemp+1,w
  1339  050C  00A4               	movwf	_CONTD
  1340                           
  1341                           ;L3.c: 344:     CONTU = (CONT - (CONTC*100)-(CONTD*10));
  1342  050D  309C               	movlw	156
  1343  050E  00FF               	movwf	btemp+1
  1344  050F  087F               	movf	btemp+1,w
  1345  0510  00B6               	movwf	___bmul@multiplicand
  1346  0511  0825               	movf	_CONTC,w
  1347  0512  120A  118A  27B1  120A  118A  	fcall	___bmul
  1348  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0519  00C4               	movwf	??_map2
  1351  051A  30F6               	movlw	246
  1352  051B  00FF               	movwf	btemp+1
  1353  051C  087F               	movf	btemp+1,w
  1354  051D  00B6               	movwf	___bmul@multiplicand
  1355  051E  0824               	movf	_CONTD,w
  1356  051F  120A  118A  27B1  120A  118A  	fcall	___bmul
  1357  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0526  0744               	addwf	??_map2,w
  1360  0527  0726               	addwf	_CONT,w
  1361  0528  00FF               	movwf	btemp+1
  1362  0529  087F               	movf	btemp+1,w
  1363  052A  00A3               	movwf	_CONTU
  1364  052B                     l1984:
  1365                           
  1366                           ;L3.c: 346:     CO1 = (CONTC + 0x30);
  1367  052B  0825               	movf	_CONTC,w
  1368  052C  3E30               	addlw	48
  1369  052D  00FF               	movwf	btemp+1
  1370  052E  087F               	movf	btemp+1,w
  1371  052F  00A2               	movwf	_CO1
  1372  0530                     l1986:
  1373                           
  1374                           ;L3.c: 347:     CO2 = (CONTD + 0x30);
  1375  0530  0824               	movf	_CONTD,w
  1376  0531  3E30               	addlw	48
  1377  0532  00FF               	movwf	btemp+1
  1378  0533  087F               	movf	btemp+1,w
  1379  0534  00A1               	movwf	_CO2
  1380  0535                     l1988:
  1381                           
  1382                           ;L3.c: 348:     CO3 = (CONTU + 0x30);
  1383  0535  0823               	movf	_CONTU,w
  1384  0536  3E30               	addlw	48
  1385  0537  00FF               	movwf	btemp+1
  1386  0538  087F               	movf	btemp+1,w
  1387  0539  00A0               	movwf	_CO3
  1388  053A                     l185:
  1389  053A  0008               	return
  1390  053B                     __end_of_map2:
  1391                           
  1392                           	psect	text2
  1393  0028                     __ptext2:	
  1394 ;; *************** function _map *****************
  1395 ;; Defined at:
  1396 ;;		line 237 in file "L3.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         0       2       0       0       0
  1412 ;;      Temps:          0       6       0       0       0
  1413 ;;      Totals:         0       8       0       0       0
  1414 ;;Total ram usage:        8 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    4
  1417 ;; This function calls:
  1418 ;;		___awdiv
  1419 ;;		___bmul
  1420 ;;		___wmul
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _map
  1428  0028                     _map:
  1429  0028                     l1968:	
  1430                           ;incstack = 0
  1431                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1432                           
  1433                           
  1434                           ;L3.c: 238:     CP1 = ((pot1) / 51);
  1435  0028  3033               	movlw	51
  1436  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1437  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1438  002B  00BC               	movwf	___awdiv@divisor
  1439  002C  3000               	movlw	0
  1440  002D  00BD               	movwf	___awdiv@divisor+1
  1441  002E  0835               	movf	_pot1,w
  1442  002F  00C4               	movwf	??_map
  1443  0030  01C5               	clrf	??_map+1
  1444  0031  0844               	movf	??_map,w
  1445  0032  00BE               	movwf	___awdiv@dividend
  1446  0033  0845               	movf	??_map+1,w
  1447  0034  00BF               	movwf	___awdiv@dividend+1
  1448  0035  120A  118A  253B  120A  118A  	fcall	___awdiv
  1449  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1450  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1451  003C  083C               	movf	?___awdiv,w
  1452  003D  00FF               	movwf	btemp+1
  1453  003E  087F               	movf	btemp+1,w
  1454  003F  00B2               	movwf	_CP1
  1455                           
  1456                           ;L3.c: 239:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  1457  0040  3033               	movlw	51
  1458  0041  00BC               	movwf	___awdiv@divisor
  1459  0042  3000               	movlw	0
  1460  0043  00BD               	movwf	___awdiv@divisor+1
  1461  0044  0835               	movf	_pot1,w
  1462  0045  00C4               	movwf	??_map
  1463  0046  01C5               	clrf	??_map+1
  1464  0047  0844               	movf	??_map,w
  1465  0048  00B6               	movwf	___wmul@multiplier
  1466  0049  0845               	movf	??_map+1,w
  1467  004A  00B7               	movwf	___wmul@multiplier+1
  1468  004B  3064               	movlw	100
  1469  004C  00B8               	movwf	___wmul@multiplicand
  1470  004D  3000               	movlw	0
  1471  004E  00B9               	movwf	___wmul@multiplicand+1
  1472  004F  120A  118A  2716  120A  118A  	fcall	___wmul
  1473  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0056  0837               	movf	?___wmul+1,w
  1476  0057  00BF               	movwf	___awdiv@dividend+1
  1477  0058  0836               	movf	?___wmul,w
  1478  0059  00BE               	movwf	___awdiv@dividend
  1479  005A  120A  118A  253B  120A  118A  	fcall	___awdiv
  1480  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0061  083C               	movf	?___awdiv,w
  1483  0062  00C6               	movwf	??_map+2
  1484  0063  083D               	movf	?___awdiv+1,w
  1485  0064  00C7               	movwf	??_map+3
  1486  0065  0832               	movf	_CP1,w
  1487  0066  00C8               	movwf	??_map+4
  1488  0067  01C9               	clrf	??_map+5
  1489  0068  0848               	movf	??_map+4,w
  1490  0069  00B6               	movwf	___wmul@multiplier
  1491  006A  0849               	movf	??_map+5,w
  1492  006B  00B7               	movwf	___wmul@multiplier+1
  1493  006C  309C               	movlw	156
  1494  006D  00B8               	movwf	___wmul@multiplicand
  1495  006E  30FF               	movlw	255
  1496  006F  00B9               	movwf	___wmul@multiplicand+1
  1497  0070  120A  118A  2716  120A  118A  	fcall	___wmul
  1498  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0077  0836               	movf	?___wmul,w
  1501  0078  0746               	addwf	??_map+2,w
  1502  0079  00CA               	movwf	_map$1137
  1503  007A  0837               	movf	?___wmul+1,w
  1504  007B  1803               	skipnc
  1505  007C  0A37               	incf	?___wmul+1,w
  1506  007D  0747               	addwf	??_map+3,w
  1507  007E  00CB               	movwf	_map$1137+1
  1508                           
  1509                           ;L3.c: 239:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  1510  007F  300A               	movlw	10
  1511  0080  00BC               	movwf	___awdiv@divisor
  1512  0081  3000               	movlw	0
  1513  0082  00BD               	movwf	___awdiv@divisor+1
  1514  0083  084B               	movf	_map$1137+1,w
  1515  0084  00BF               	movwf	___awdiv@dividend+1
  1516  0085  084A               	movf	_map$1137,w
  1517  0086  00BE               	movwf	___awdiv@dividend
  1518  0087  120A  118A  253B  120A  118A  	fcall	___awdiv
  1519  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1520  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1521  008E  083C               	movf	?___awdiv,w
  1522  008F  00FF               	movwf	btemp+1
  1523  0090  087F               	movf	btemp+1,w
  1524  0091  00B1               	movwf	_DP1
  1525                           
  1526                           ;L3.c: 240:     UP1 = (((pot1 * 100) / 51)-(CP1 * 100)-(DP1 * 10));
  1527  0092  3033               	movlw	51
  1528  0093  00BC               	movwf	___awdiv@divisor
  1529  0094  3000               	movlw	0
  1530  0095  00BD               	movwf	___awdiv@divisor+1
  1531  0096  0835               	movf	_pot1,w
  1532  0097  00C4               	movwf	??_map
  1533  0098  01C5               	clrf	??_map+1
  1534  0099  0844               	movf	??_map,w
  1535  009A  00B6               	movwf	___wmul@multiplier
  1536  009B  0845               	movf	??_map+1,w
  1537  009C  00B7               	movwf	___wmul@multiplier+1
  1538  009D  3064               	movlw	100
  1539  009E  00B8               	movwf	___wmul@multiplicand
  1540  009F  3000               	movlw	0
  1541  00A0  00B9               	movwf	___wmul@multiplicand+1
  1542  00A1  120A  118A  2716  120A  118A  	fcall	___wmul
  1543  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1544  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1545  00A8  0837               	movf	?___wmul+1,w
  1546  00A9  00BF               	movwf	___awdiv@dividend+1
  1547  00AA  0836               	movf	?___wmul,w
  1548  00AB  00BE               	movwf	___awdiv@dividend
  1549  00AC  120A  118A  253B  120A  118A  	fcall	___awdiv
  1550  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1551  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1552  00B3  083C               	movf	?___awdiv,w
  1553  00B4  00C6               	movwf	??_map+2
  1554  00B5  083D               	movf	?___awdiv+1,w
  1555  00B6  00C7               	movwf	??_map+3
  1556  00B7  309C               	movlw	156
  1557  00B8  00FF               	movwf	btemp+1
  1558  00B9  087F               	movf	btemp+1,w
  1559  00BA  00B6               	movwf	___bmul@multiplicand
  1560  00BB  0832               	movf	_CP1,w
  1561  00BC  120A  118A  27B1  120A  118A  	fcall	___bmul
  1562  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1563  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1564  00C3  00C8               	movwf	??_map+4
  1565  00C4  30F6               	movlw	246
  1566  00C5  00FF               	movwf	btemp+1
  1567  00C6  087F               	movf	btemp+1,w
  1568  00C7  00B6               	movwf	___bmul@multiplicand
  1569  00C8  0831               	movf	_DP1,w
  1570  00C9  120A  118A  27B1  120A  118A  	fcall	___bmul
  1571  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1572  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1573  00D0  0748               	addwf	??_map+4,w
  1574  00D1  0746               	addwf	??_map+2,w
  1575  00D2  00FF               	movwf	btemp+1
  1576  00D3  087F               	movf	btemp+1,w
  1577  00D4  00B0               	movwf	_UP1
  1578                           
  1579                           ;L3.c: 242:     CP2 = ((pot2) / 51);
  1580  00D5  3033               	movlw	51
  1581  00D6  00BC               	movwf	___awdiv@divisor
  1582  00D7  3000               	movlw	0
  1583  00D8  00BD               	movwf	___awdiv@divisor+1
  1584  00D9  0834               	movf	_pot2,w
  1585  00DA  00C4               	movwf	??_map
  1586  00DB  01C5               	clrf	??_map+1
  1587  00DC  0844               	movf	??_map,w
  1588  00DD  00BE               	movwf	___awdiv@dividend
  1589  00DE  0845               	movf	??_map+1,w
  1590  00DF  00BF               	movwf	___awdiv@dividend+1
  1591  00E0  120A  118A  253B  120A  118A  	fcall	___awdiv
  1592  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1593  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1594  00E7  083C               	movf	?___awdiv,w
  1595  00E8  00FF               	movwf	btemp+1
  1596  00E9  087F               	movf	btemp+1,w
  1597  00EA  00AF               	movwf	_CP2
  1598                           
  1599                           ;L3.c: 243:     DP2 = (((pot2 * 100) / 51)-(CP2 * 100)) / 10;
  1600  00EB  3033               	movlw	51
  1601  00EC  00BC               	movwf	___awdiv@divisor
  1602  00ED  3000               	movlw	0
  1603  00EE  00BD               	movwf	___awdiv@divisor+1
  1604  00EF  0834               	movf	_pot2,w
  1605  00F0  00C4               	movwf	??_map
  1606  00F1  01C5               	clrf	??_map+1
  1607  00F2  0844               	movf	??_map,w
  1608  00F3  00B6               	movwf	___wmul@multiplier
  1609  00F4  0845               	movf	??_map+1,w
  1610  00F5  00B7               	movwf	___wmul@multiplier+1
  1611  00F6  3064               	movlw	100
  1612  00F7  00B8               	movwf	___wmul@multiplicand
  1613  00F8  3000               	movlw	0
  1614  00F9  00B9               	movwf	___wmul@multiplicand+1
  1615  00FA  120A  118A  2716  120A  118A  	fcall	___wmul
  1616  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1618  0101  0837               	movf	?___wmul+1,w
  1619  0102  00BF               	movwf	___awdiv@dividend+1
  1620  0103  0836               	movf	?___wmul,w
  1621  0104  00BE               	movwf	___awdiv@dividend
  1622  0105  120A  118A  253B  120A  118A  	fcall	___awdiv
  1623  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1624  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1625  010C  083C               	movf	?___awdiv,w
  1626  010D  00C6               	movwf	??_map+2
  1627  010E  083D               	movf	?___awdiv+1,w
  1628  010F  00C7               	movwf	??_map+3
  1629  0110  082F               	movf	_CP2,w
  1630  0111  00C8               	movwf	??_map+4
  1631  0112  01C9               	clrf	??_map+5
  1632  0113  0848               	movf	??_map+4,w
  1633  0114  00B6               	movwf	___wmul@multiplier
  1634  0115  0849               	movf	??_map+5,w
  1635  0116  00B7               	movwf	___wmul@multiplier+1
  1636  0117  309C               	movlw	156
  1637  0118  00B8               	movwf	___wmul@multiplicand
  1638  0119  30FF               	movlw	255
  1639  011A  00B9               	movwf	___wmul@multiplicand+1
  1640  011B  120A  118A  2716  120A  118A  	fcall	___wmul
  1641  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1642  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0122  0836               	movf	?___wmul,w
  1644  0123  0746               	addwf	??_map+2,w
  1645  0124  00CA               	movwf	_map$1137
  1646  0125  0837               	movf	?___wmul+1,w
  1647  0126  1803               	skipnc
  1648  0127  0A37               	incf	?___wmul+1,w
  1649  0128  0747               	addwf	??_map+3,w
  1650  0129  00CB               	movwf	_map$1137+1
  1651                           
  1652                           ;L3.c: 243:     DP2 = (((pot2 * 100) / 51)-(CP2 * 100)) / 10;
  1653  012A  300A               	movlw	10
  1654  012B  00BC               	movwf	___awdiv@divisor
  1655  012C  3000               	movlw	0
  1656  012D  00BD               	movwf	___awdiv@divisor+1
  1657  012E  084B               	movf	_map$1137+1,w
  1658  012F  00BF               	movwf	___awdiv@dividend+1
  1659  0130  084A               	movf	_map$1137,w
  1660  0131  00BE               	movwf	___awdiv@dividend
  1661  0132  120A  118A  253B  120A  118A  	fcall	___awdiv
  1662  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0139  083C               	movf	?___awdiv,w
  1665  013A  00FF               	movwf	btemp+1
  1666  013B  087F               	movf	btemp+1,w
  1667  013C  00AE               	movwf	_DP2
  1668                           
  1669                           ;L3.c: 244:     UP2 = (((pot2 * 100) / 51)-(CP2 * 100)-(DP2 * 10));
  1670  013D  3033               	movlw	51
  1671  013E  00BC               	movwf	___awdiv@divisor
  1672  013F  3000               	movlw	0
  1673  0140  00BD               	movwf	___awdiv@divisor+1
  1674  0141  0834               	movf	_pot2,w
  1675  0142  00C4               	movwf	??_map
  1676  0143  01C5               	clrf	??_map+1
  1677  0144  0844               	movf	??_map,w
  1678  0145  00B6               	movwf	___wmul@multiplier
  1679  0146  0845               	movf	??_map+1,w
  1680  0147  00B7               	movwf	___wmul@multiplier+1
  1681  0148  3064               	movlw	100
  1682  0149  00B8               	movwf	___wmul@multiplicand
  1683  014A  3000               	movlw	0
  1684  014B  00B9               	movwf	___wmul@multiplicand+1
  1685  014C  120A  118A  2716  120A  118A  	fcall	___wmul
  1686  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0153  0837               	movf	?___wmul+1,w
  1689  0154  00BF               	movwf	___awdiv@dividend+1
  1690  0155  0836               	movf	?___wmul,w
  1691  0156  00BE               	movwf	___awdiv@dividend
  1692  0157  120A  118A  253B  120A  118A  	fcall	___awdiv
  1693  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1694  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1695  015E  083C               	movf	?___awdiv,w
  1696  015F  00C6               	movwf	??_map+2
  1697  0160  083D               	movf	?___awdiv+1,w
  1698  0161  00C7               	movwf	??_map+3
  1699  0162  309C               	movlw	156
  1700  0163  00FF               	movwf	btemp+1
  1701  0164  087F               	movf	btemp+1,w
  1702  0165  00B6               	movwf	___bmul@multiplicand
  1703  0166  082F               	movf	_CP2,w
  1704  0167  120A  118A  27B1  120A  118A  	fcall	___bmul
  1705  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1706  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1707  016E  00C8               	movwf	??_map+4
  1708  016F  30F6               	movlw	246
  1709  0170  00FF               	movwf	btemp+1
  1710  0171  087F               	movf	btemp+1,w
  1711  0172  00B6               	movwf	___bmul@multiplicand
  1712  0173  082E               	movf	_DP2,w
  1713  0174  120A  118A  27B1  120A  118A  	fcall	___bmul
  1714  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1715  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1716  017B  0748               	addwf	??_map+4,w
  1717  017C  0746               	addwf	??_map+2,w
  1718  017D  00FF               	movwf	btemp+1
  1719  017E  087F               	movf	btemp+1,w
  1720  017F  00AD               	movwf	_UP2
  1721  0180                     l1970:
  1722                           
  1723                           ;L3.c: 246:     C1 = (CP1 + 0x30);
  1724  0180  0832               	movf	_CP1,w
  1725  0181  3E30               	addlw	48
  1726  0182  00FF               	movwf	btemp+1
  1727  0183  087F               	movf	btemp+1,w
  1728  0184  00AC               	movwf	_C1
  1729  0185                     l1972:
  1730                           
  1731                           ;L3.c: 247:     D1 = (DP1 + 0x30);
  1732  0185  0831               	movf	_DP1,w
  1733  0186  3E30               	addlw	48
  1734  0187  00FF               	movwf	btemp+1
  1735  0188  087F               	movf	btemp+1,w
  1736  0189  00AB               	movwf	_D1
  1737  018A                     l1974:
  1738                           
  1739                           ;L3.c: 248:     U1 = (UP1 + 0x30);
  1740  018A  0830               	movf	_UP1,w
  1741  018B  3E30               	addlw	48
  1742  018C  00FF               	movwf	btemp+1
  1743  018D  087F               	movf	btemp+1,w
  1744  018E  00AA               	movwf	_U1
  1745  018F                     l1976:
  1746                           
  1747                           ;L3.c: 250:     C2 = (CP2 + 0x30);
  1748  018F  082F               	movf	_CP2,w
  1749  0190  3E30               	addlw	48
  1750  0191  00FF               	movwf	btemp+1
  1751  0192  087F               	movf	btemp+1,w
  1752  0193  00A9               	movwf	_C2
  1753  0194                     l1978:
  1754                           
  1755                           ;L3.c: 251:     D2 = (DP2 + 0x30);
  1756  0194  082E               	movf	_DP2,w
  1757  0195  3E30               	addlw	48
  1758  0196  00FF               	movwf	btemp+1
  1759  0197  087F               	movf	btemp+1,w
  1760  0198  00A8               	movwf	_D2
  1761  0199                     l1980:
  1762                           
  1763                           ;L3.c: 252:     U2 = (UP2 + 0x30);
  1764  0199  082D               	movf	_UP2,w
  1765  019A  3E30               	addlw	48
  1766  019B  00FF               	movwf	btemp+1
  1767  019C  087F               	movf	btemp+1,w
  1768  019D  00A7               	movwf	_U2
  1769  019E                     l155:
  1770  019E  0008               	return
  1771  019F                     __end_of_map:
  1772                           
  1773                           	psect	text3
  1774  0716                     __ptext3:	
  1775 ;; *************** function ___wmul *****************
  1776 ;; Defined at:
  1777 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1780 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  product         2    4[BANK0 ] unsigned int 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  2    0[BANK0 ] unsigned int 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       4       0       0       0
  1793 ;;      Locals:         0       2       0       0       0
  1794 ;;      Temps:          0       0       0       0       0
  1795 ;;      Totals:         0       6       0       0       0
  1796 ;;Total ram usage:        6 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    3
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_map
  1803 ;;		_map2
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function ___wmul
  1809  0716                     ___wmul:
  1810  0716                     l1672:	
  1811                           ;incstack = 0
  1812                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1813                           
  1814  0716  1283               	bcf	3,5	;RP0=0, select bank0
  1815  0717  1303               	bcf	3,6	;RP1=0, select bank0
  1816  0718  01BA               	clrf	___wmul@product
  1817  0719  01BB               	clrf	___wmul@product+1
  1818  071A                     l1674:
  1819  071A  1C36               	btfss	___wmul@multiplier,0
  1820  071B  2F1D               	goto	u321
  1821  071C  2F1E               	goto	u320
  1822  071D                     u321:
  1823  071D  2F24               	goto	l376
  1824  071E                     u320:
  1825  071E                     l1676:
  1826  071E  0838               	movf	___wmul@multiplicand,w
  1827  071F  07BA               	addwf	___wmul@product,f
  1828  0720  1803               	skipnc
  1829  0721  0ABB               	incf	___wmul@product+1,f
  1830  0722  0839               	movf	___wmul@multiplicand+1,w
  1831  0723  07BB               	addwf	___wmul@product+1,f
  1832  0724                     l376:
  1833  0724  3001               	movlw	1
  1834  0725                     u335:
  1835  0725  1003               	clrc
  1836  0726  0DB8               	rlf	___wmul@multiplicand,f
  1837  0727  0DB9               	rlf	___wmul@multiplicand+1,f
  1838  0728  3EFF               	addlw	-1
  1839  0729  1D03               	skipz
  1840  072A  2F25               	goto	u335
  1841  072B                     l1678:
  1842  072B  3001               	movlw	1
  1843  072C                     u345:
  1844  072C  1003               	clrc
  1845  072D  0CB7               	rrf	___wmul@multiplier+1,f
  1846  072E  0CB6               	rrf	___wmul@multiplier,f
  1847  072F  3EFF               	addlw	-1
  1848  0730  1D03               	skipz
  1849  0731  2F2C               	goto	u345
  1850  0732                     l1680:
  1851  0732  0836               	movf	___wmul@multiplier,w
  1852  0733  0437               	iorwf	___wmul@multiplier+1,w
  1853  0734  1D03               	btfss	3,2
  1854  0735  2F37               	goto	u351
  1855  0736  2F38               	goto	u350
  1856  0737                     u351:
  1857  0737  2F1A               	goto	l1674
  1858  0738                     u350:
  1859  0738                     l1682:
  1860  0738  083B               	movf	___wmul@product+1,w
  1861  0739  00B7               	movwf	?___wmul+1
  1862  073A  083A               	movf	___wmul@product,w
  1863  073B  00B6               	movwf	?___wmul
  1864  073C                     l378:
  1865  073C  0008               	return
  1866  073D                     __end_of___wmul:
  1867                           
  1868                           	psect	text4
  1869  07B1                     __ptext4:	
  1870 ;; *************** function ___bmul *****************
  1871 ;; Defined at:
  1872 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  multiplier      1    wreg     unsigned char 
  1875 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1878 ;;  product         1    1[BANK0 ] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      unsigned char 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, btemp+1
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       1       0       0       0
  1889 ;;      Locals:         0       2       0       0       0
  1890 ;;      Temps:          0       0       0       0       0
  1891 ;;      Totals:         0       3       0       0       0
  1892 ;;Total ram usage:        3 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    3
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_map
  1899 ;;		_map2
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function ___bmul
  1905  07B1                     ___bmul:
  1906                           
  1907                           ;incstack = 0
  1908                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1909                           ;___bmul@multiplier stored from wreg
  1910  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1911  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1912  07B3  00B8               	movwf	___bmul@multiplier
  1913  07B4                     l1686:
  1914  07B4  01B7               	clrf	___bmul@product
  1915  07B5                     l1688:
  1916  07B5  1C38               	btfss	___bmul@multiplier,0
  1917  07B6  2FB8               	goto	u361
  1918  07B7  2FB9               	goto	u360
  1919  07B8                     u361:
  1920  07B8  2FBD               	goto	l1692
  1921  07B9                     u360:
  1922  07B9                     l1690:
  1923  07B9  0836               	movf	___bmul@multiplicand,w
  1924  07BA  00FF               	movwf	btemp+1
  1925  07BB  087F               	movf	btemp+1,w
  1926  07BC  07B7               	addwf	___bmul@product,f
  1927  07BD                     l1692:
  1928  07BD  1003               	clrc
  1929  07BE  0DB6               	rlf	___bmul@multiplicand,f
  1930  07BF                     l1694:
  1931  07BF  1003               	clrc
  1932  07C0  0CB8               	rrf	___bmul@multiplier,f
  1933  07C1                     l1696:
  1934  07C1  0838               	movf	___bmul@multiplier,w
  1935  07C2  1D03               	btfss	3,2
  1936  07C3  2FC5               	goto	u371
  1937  07C4  2FC6               	goto	u370
  1938  07C5                     u371:
  1939  07C5  2FB5               	goto	l1688
  1940  07C6                     u370:
  1941  07C6                     l1698:
  1942  07C6  0837               	movf	___bmul@product,w
  1943  07C7                     l402:
  1944  07C7  0008               	return
  1945  07C8                     __end_of___bmul:
  1946                           
  1947                           	psect	text5
  1948  053B                     __ptext5:	
  1949 ;; *************** function ___awdiv *****************
  1950 ;; Defined at:
  1951 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  divisor         2    6[BANK0 ] int 
  1954 ;;  dividend        2    8[BANK0 ] int 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  quotient        2   12[BANK0 ] int 
  1957 ;;  sign            1   11[BANK0 ] unsigned char 
  1958 ;;  counter         1   10[BANK0 ] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  2    6[BANK0 ] int 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, btemp+1
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       4       0       0       0
  1969 ;;      Locals:         0       4       0       0       0
  1970 ;;      Temps:          0       0       0       0       0
  1971 ;;      Totals:         0       8       0       0       0
  1972 ;;Total ram usage:        8 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    3
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_map
  1979 ;;		_map2
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function ___awdiv
  1985  053B                     ___awdiv:
  1986  053B                     l1702:	
  1987                           ;incstack = 0
  1988                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1989                           
  1990  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1991  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1992  053D  01C1               	clrf	___awdiv@sign
  1993  053E                     l1704:
  1994  053E  1FBD               	btfss	___awdiv@divisor+1,7
  1995  053F  2D41               	goto	u381
  1996  0540  2D42               	goto	u380
  1997  0541                     u381:
  1998  0541  2D49               	goto	l1710
  1999  0542                     u380:
  2000  0542                     l1706:
  2001  0542  09BC               	comf	___awdiv@divisor,f
  2002  0543  09BD               	comf	___awdiv@divisor+1,f
  2003  0544  0ABC               	incf	___awdiv@divisor,f
  2004  0545  1903               	skipnz
  2005  0546  0ABD               	incf	___awdiv@divisor+1,f
  2006  0547                     l1708:
  2007  0547  01C1               	clrf	___awdiv@sign
  2008  0548  0AC1               	incf	___awdiv@sign,f
  2009  0549                     l1710:
  2010  0549  1FBF               	btfss	___awdiv@dividend+1,7
  2011  054A  2D4C               	goto	u391
  2012  054B  2D4D               	goto	u390
  2013  054C                     u391:
  2014  054C  2D56               	goto	l1716
  2015  054D                     u390:
  2016  054D                     l1712:
  2017  054D  09BE               	comf	___awdiv@dividend,f
  2018  054E  09BF               	comf	___awdiv@dividend+1,f
  2019  054F  0ABE               	incf	___awdiv@dividend,f
  2020  0550  1903               	skipnz
  2021  0551  0ABF               	incf	___awdiv@dividend+1,f
  2022  0552                     l1714:
  2023  0552  3001               	movlw	1
  2024  0553  00FF               	movwf	btemp+1
  2025  0554  087F               	movf	btemp+1,w
  2026  0555  06C1               	xorwf	___awdiv@sign,f
  2027  0556                     l1716:
  2028  0556  01C2               	clrf	___awdiv@quotient
  2029  0557  01C3               	clrf	___awdiv@quotient+1
  2030  0558                     l1718:
  2031  0558  083C               	movf	___awdiv@divisor,w
  2032  0559  043D               	iorwf	___awdiv@divisor+1,w
  2033  055A  1903               	btfsc	3,2
  2034  055B  2D5D               	goto	u401
  2035  055C  2D5E               	goto	u400
  2036  055D                     u401:
  2037  055D  2D95               	goto	l1738
  2038  055E                     u400:
  2039  055E                     l1720:
  2040  055E  01C0               	clrf	___awdiv@counter
  2041  055F  0AC0               	incf	___awdiv@counter,f
  2042  0560  2D6C               	goto	l1726
  2043  0561                     l1722:
  2044  0561  3001               	movlw	1
  2045  0562                     u415:
  2046  0562  1003               	clrc
  2047  0563  0DBC               	rlf	___awdiv@divisor,f
  2048  0564  0DBD               	rlf	___awdiv@divisor+1,f
  2049  0565  3EFF               	addlw	-1
  2050  0566  1D03               	skipz
  2051  0567  2D62               	goto	u415
  2052  0568                     l1724:
  2053  0568  3001               	movlw	1
  2054  0569  00FF               	movwf	btemp+1
  2055  056A  087F               	movf	btemp+1,w
  2056  056B  07C0               	addwf	___awdiv@counter,f
  2057  056C                     l1726:
  2058  056C  1FBD               	btfss	___awdiv@divisor+1,7
  2059  056D  2D6F               	goto	u421
  2060  056E  2D70               	goto	u420
  2061  056F                     u421:
  2062  056F  2D61               	goto	l1722
  2063  0570                     u420:
  2064  0570                     l1728:
  2065  0570  3001               	movlw	1
  2066  0571                     u435:
  2067  0571  1003               	clrc
  2068  0572  0DC2               	rlf	___awdiv@quotient,f
  2069  0573  0DC3               	rlf	___awdiv@quotient+1,f
  2070  0574  3EFF               	addlw	-1
  2071  0575  1D03               	skipz
  2072  0576  2D71               	goto	u435
  2073  0577  083D               	movf	___awdiv@divisor+1,w
  2074  0578  023F               	subwf	___awdiv@dividend+1,w
  2075  0579  1D03               	skipz
  2076  057A  2D7D               	goto	u445
  2077  057B  083C               	movf	___awdiv@divisor,w
  2078  057C  023E               	subwf	___awdiv@dividend,w
  2079  057D                     u445:
  2080  057D  1C03               	skipc
  2081  057E  2D80               	goto	u441
  2082  057F  2D81               	goto	u440
  2083  0580                     u441:
  2084  0580  2D88               	goto	l1734
  2085  0581                     u440:
  2086  0581                     l1730:
  2087  0581  083C               	movf	___awdiv@divisor,w
  2088  0582  02BE               	subwf	___awdiv@dividend,f
  2089  0583  083D               	movf	___awdiv@divisor+1,w
  2090  0584  1C03               	skipc
  2091  0585  03BF               	decf	___awdiv@dividend+1,f
  2092  0586  02BF               	subwf	___awdiv@dividend+1,f
  2093  0587                     l1732:
  2094  0587  1442               	bsf	___awdiv@quotient,0
  2095  0588                     l1734:
  2096  0588  3001               	movlw	1
  2097  0589                     u455:
  2098  0589  1003               	clrc
  2099  058A  0CBD               	rrf	___awdiv@divisor+1,f
  2100  058B  0CBC               	rrf	___awdiv@divisor,f
  2101  058C  3EFF               	addlw	-1
  2102  058D  1D03               	skipz
  2103  058E  2D89               	goto	u455
  2104  058F                     l1736:
  2105  058F  3001               	movlw	1
  2106  0590  02C0               	subwf	___awdiv@counter,f
  2107  0591  1D03               	btfss	3,2
  2108  0592  2D94               	goto	u461
  2109  0593  2D95               	goto	u460
  2110  0594                     u461:
  2111  0594  2D70               	goto	l1728
  2112  0595                     u460:
  2113  0595                     l1738:
  2114  0595  0841               	movf	___awdiv@sign,w
  2115  0596  1903               	btfsc	3,2
  2116  0597  2D99               	goto	u471
  2117  0598  2D9A               	goto	u470
  2118  0599                     u471:
  2119  0599  2D9F               	goto	l1742
  2120  059A                     u470:
  2121  059A                     l1740:
  2122  059A  09C2               	comf	___awdiv@quotient,f
  2123  059B  09C3               	comf	___awdiv@quotient+1,f
  2124  059C  0AC2               	incf	___awdiv@quotient,f
  2125  059D  1903               	skipnz
  2126  059E  0AC3               	incf	___awdiv@quotient+1,f
  2127  059F                     l1742:
  2128  059F  0843               	movf	___awdiv@quotient+1,w
  2129  05A0  00BD               	movwf	?___awdiv+1
  2130  05A1  0842               	movf	___awdiv@quotient,w
  2131  05A2  00BC               	movwf	?___awdiv
  2132  05A3                     l529:
  2133  05A3  0008               	return
  2134  05A4                     __end_of___awdiv:
  2135                           
  2136                           	psect	text6
  2137  0602                     __ptext6:	
  2138 ;; *************** function _Setup *****************
  2139 ;; Defined at:
  2140 ;;		line 185 in file "L3.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;		None
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2154 ;;      Params:         0       0       0       0       0
  2155 ;;      Locals:         0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0
  2157 ;;      Totals:         0       0       0       0       0
  2158 ;;Total ram usage:        0 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    6
  2161 ;; This function calls:
  2162 ;;		_Lcd_Cmd
  2163 ;;		_Lcd_Init
  2164 ;;		_configADC2
  2165 ;;		_initOsc
  2166 ;;		_usart
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           
  2173                           ;psect for function _Setup
  2174  0602                     _Setup:
  2175  0602                     l1894:	
  2176                           ;incstack = 0
  2177                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2178                           
  2179                           
  2180                           ;L3.c: 186:     TRISD = 0;
  2181  0602  1683               	bsf	3,5	;RP0=1, select bank1
  2182  0603  1303               	bcf	3,6	;RP1=0, select bank1
  2183  0604  0188               	clrf	8	;volatile
  2184                           
  2185                           ;L3.c: 187:     TRISE = 0;
  2186  0605  0189               	clrf	9	;volatile
  2187  0606                     l1896:
  2188                           
  2189                           ;L3.c: 188:     initOsc(6);
  2190  0606  3006               	movlw	6
  2191  0607  120A  118A  25A4  120A  118A  	fcall	_initOsc
  2192  060C                     l1898:
  2193                           
  2194                           ;L3.c: 189:     configADC2(1, 12);
  2195  060C  300C               	movlw	12
  2196  060D  00FF               	movwf	btemp+1
  2197  060E  087F               	movf	btemp+1,w
  2198  060F  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0610  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0611  00B6               	movwf	configADC2@chan
  2201  0612  3001               	movlw	1
  2202  0613  120A  118A  238B  120A  118A  	fcall	_configADC2
  2203  0618                     l1900:
  2204                           
  2205                           ;L3.c: 190:     usart();
  2206  0618  120A  118A  27C8  120A  118A  	fcall	_usart
  2207  061D                     l1902:
  2208                           
  2209                           ;L3.c: 191:     Lcd_Init();
  2210  061D  120A  118A  277F  120A  118A  	fcall	_Lcd_Init
  2211  0622                     l1904:
  2212                           
  2213                           ;L3.c: 192:     Lcd_Cmd(0x8A);
  2214  0622  308A               	movlw	138
  2215  0623  120A  118A  2763  120A  118A  	fcall	_Lcd_Cmd
  2216  0628                     l1906:
  2217                           
  2218                           ;L3.c: 193:     ANSEL = 0;
  2219  0628  1683               	bsf	3,5	;RP0=1, select bank3
  2220  0629  1703               	bsf	3,6	;RP1=1, select bank3
  2221  062A  0188               	clrf	8	;volatile
  2222  062B                     l1908:
  2223                           
  2224                           ;L3.c: 194:     ANSELH = 0b00000011;
  2225  062B  3003               	movlw	3
  2226  062C  0089               	movwf	9	;volatile
  2227  062D                     l1910:
  2228                           
  2229                           ;L3.c: 195:     PORTA = 0;
  2230  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2231  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2232  062F  0185               	clrf	5	;volatile
  2233  0630                     l1912:
  2234                           
  2235                           ;L3.c: 196:     PORTB = 0;
  2236  0630  0186               	clrf	6	;volatile
  2237  0631                     l1914:
  2238                           
  2239                           ;L3.c: 197:     PORTC = 0;
  2240  0631  0187               	clrf	7	;volatile
  2241  0632                     l1916:
  2242                           
  2243                           ;L3.c: 198:     PORTD = 0;
  2244  0632  0188               	clrf	8	;volatile
  2245  0633                     l1918:
  2246                           
  2247                           ;L3.c: 199:     PORTE = 0;
  2248  0633  0189               	clrf	9	;volatile
  2249  0634                     l1920:
  2250                           
  2251                           ;L3.c: 201:     TRISC = 0b10000000;
  2252  0634  3080               	movlw	128
  2253  0635  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0636  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0637  0087               	movwf	7	;volatile
  2256  0638                     l1922:
  2257                           
  2258                           ;L3.c: 202:     TRISA = 0;
  2259  0638  0185               	clrf	5	;volatile
  2260  0639                     l1924:
  2261                           
  2262                           ;L3.c: 203:     TRISB = 0b00000011;
  2263  0639  3003               	movlw	3
  2264  063A  0086               	movwf	6	;volatile
  2265  063B                     l1926:
  2266                           
  2267                           ;L3.c: 204:     OPTION_REG = 0b10000111;
  2268  063B  3087               	movlw	135
  2269  063C  0081               	movwf	1	;volatile
  2270  063D                     l1928:
  2271                           
  2272                           ;L3.c: 205:     INTCONbits.GIE = 1;
  2273  063D  178B               	bsf	11,7	;volatile
  2274  063E                     l1930:
  2275                           
  2276                           ;L3.c: 206:     INTCONbits.T0IE = 1;
  2277  063E  168B               	bsf	11,5	;volatile
  2278  063F                     l1932:
  2279                           
  2280                           ;L3.c: 207:     INTCONbits.PEIE = 1;
  2281  063F  170B               	bsf	11,6	;volatile
  2282  0640                     l1934:
  2283                           
  2284                           ;L3.c: 208:     PIE1bits.ADIE = 1;
  2285  0640  170C               	bsf	12,6	;volatile
  2286  0641                     l1936:
  2287                           
  2288                           ;L3.c: 209:     INTCONbits.T0IF = 0;
  2289  0641  110B               	bcf	11,2	;volatile
  2290  0642                     l1938:
  2291                           
  2292                           ;L3.c: 210:     PIR1bits.ADIF = 0;
  2293  0642  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0643  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0644  130C               	bcf	12,6	;volatile
  2296  0645                     l1940:
  2297                           
  2298                           ;L3.c: 211:     PIR1bits.TXIF = 0;
  2299  0645  120C               	bcf	12,4	;volatile
  2300  0646                     l1942:
  2301                           
  2302                           ;L3.c: 212:     PIE1bits.TXIE = 1;
  2303  0646  1683               	bsf	3,5	;RP0=1, select bank1
  2304  0647  1303               	bcf	3,6	;RP1=0, select bank1
  2305  0648  160C               	bsf	12,4	;volatile
  2306  0649                     l1944:
  2307                           
  2308                           ;L3.c: 213:     PIE1bits.RCIE = 1;
  2309  0649  168C               	bsf	12,5	;volatile
  2310  064A                     l1946:
  2311                           
  2312                           ;L3.c: 214:     PIR1bits.RCIF = 0;
  2313  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2314  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2315  064C  128C               	bcf	12,5	;volatile
  2316  064D                     l147:
  2317  064D  0008               	return
  2318  064E                     __end_of_Setup:
  2319                           
  2320                           	psect	text7
  2321  07C8                     __ptext7:	
  2322 ;; *************** function _usart *****************
  2323 ;; Defined at:
  2324 ;;		line 5 in file "usart.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         0       0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0
  2340 ;;      Temps:          0       0       0       0       0
  2341 ;;      Totals:         0       0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    3
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_Setup
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _usart
  2354  07C8                     _usart:
  2355  07C8                     l1654:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _usart: [wreg+status,2]
  2358                           
  2359                           
  2360                           ;usart.c: 8:     TXSTAbits.TX9 = 0;
  2361  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  2362  07C9  1303               	bcf	3,6	;RP1=0, select bank1
  2363  07CA  1318               	bcf	24,6	;volatile
  2364                           
  2365                           ;usart.c: 9:     TXSTAbits.SYNC = 0;
  2366  07CB  1218               	bcf	24,4	;volatile
  2367                           
  2368                           ;usart.c: 10:     TXSTAbits.BRGH = 1;
  2369  07CC  1518               	bsf	24,2	;volatile
  2370                           
  2371                           ;usart.c: 11:     BAUDCTLbits.BRG16 = 0;
  2372  07CD  1683               	bsf	3,5	;RP0=1, select bank3
  2373  07CE  1703               	bsf	3,6	;RP1=1, select bank3
  2374  07CF  1187               	bcf	7,3	;volatile
  2375  07D0                     l1656:
  2376                           
  2377                           ;usart.c: 12:     SPBRGH = 0;
  2378  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  2379  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  2380  07D2  019A               	clrf	26	;volatile
  2381  07D3                     l1658:
  2382                           
  2383                           ;usart.c: 13:     SPBRG = 25;
  2384  07D3  3019               	movlw	25
  2385  07D4  0099               	movwf	25	;volatile
  2386  07D5                     l1660:
  2387                           
  2388                           ;usart.c: 14:     PIE1bits.TXIE = 1;
  2389  07D5  160C               	bsf	12,4	;volatile
  2390  07D6                     l1662:
  2391                           
  2392                           ;usart.c: 15:     TXSTAbits.TXEN = 1;
  2393  07D6  1698               	bsf	24,5	;volatile
  2394  07D7                     l1664:
  2395                           
  2396                           ;usart.c: 18:     RCSTAbits.SPEN = 1;
  2397  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  2398  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  2399  07D9  1798               	bsf	24,7	;volatile
  2400  07DA                     l1666:
  2401                           
  2402                           ;usart.c: 19:     RCSTAbits. RX9 = 0;
  2403  07DA  1318               	bcf	24,6	;volatile
  2404  07DB                     l1668:
  2405                           
  2406                           ;usart.c: 20:     RCSTAbits.CREN = 1;
  2407  07DB  1618               	bsf	24,4	;volatile
  2408  07DC                     l274:
  2409  07DC  0008               	return
  2410  07DD                     __end_of_usart:
  2411                           
  2412                           	psect	text8
  2413  05A4                     __ptext8:	
  2414 ;; *************** function _initOsc *****************
  2415 ;; Defined at:
  2416 ;;		line 7 in file "osc.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  IRCF            1    wreg     unsigned char 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  IRCF            1    2[BANK0 ] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       1       0       0       0
  2432 ;;      Temps:          0       2       0       0       0
  2433 ;;      Totals:         0       3       0       0       0
  2434 ;;Total ram usage:        3 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    3
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_Setup
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           
  2445                           ;psect for function _initOsc
  2446  05A4                     _initOsc:
  2447                           
  2448                           ;incstack = 0
  2449                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2450                           ;initOsc@IRCF stored from wreg
  2451  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2452  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2453  05A6  00B8               	movwf	initOsc@IRCF
  2454  05A7                     l1568:
  2455                           
  2456                           ;osc.c: 9:     switch (IRCF){
  2457  05A7  2DDE               	goto	l1572
  2458  05A8                     l280:	
  2459                           ;osc.c: 11:         case 0:
  2460                           
  2461                           
  2462                           ;osc.c: 12:             OSCCONbits.IRCF2 = 0;
  2463  05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2464  05A9  1303               	bcf	3,6	;RP1=0, select bank1
  2465  05AA  130F               	bcf	15,6	;volatile
  2466                           
  2467                           ;osc.c: 13:             OSCCONbits.IRCF1 = 0;
  2468  05AB  128F               	bcf	15,5	;volatile
  2469                           
  2470                           ;osc.c: 14:             OSCCONbits.IRCF0 = 0;
  2471  05AC  120F               	bcf	15,4	;volatile
  2472                           
  2473                           ;osc.c: 16:             break;
  2474  05AD  2E00               	goto	l281
  2475  05AE                     l282:	
  2476                           ;osc.c: 18:         case 1:
  2477                           
  2478                           
  2479                           ;osc.c: 19:             OSCCONbits.IRCF2 = 0;
  2480  05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2481  05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2482  05B0  130F               	bcf	15,6	;volatile
  2483                           
  2484                           ;osc.c: 20:             OSCCONbits.IRCF1 = 0;
  2485  05B1  128F               	bcf	15,5	;volatile
  2486                           
  2487                           ;osc.c: 21:             OSCCONbits.IRCF0 = 1;
  2488  05B2  160F               	bsf	15,4	;volatile
  2489                           
  2490                           ;osc.c: 22:             break;
  2491  05B3  2E00               	goto	l281
  2492  05B4                     l283:	
  2493                           ;osc.c: 24:         case 2:
  2494                           
  2495                           
  2496                           ;osc.c: 25:             OSCCONbits.IRCF2 = 0;
  2497  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  2498  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  2499  05B6  130F               	bcf	15,6	;volatile
  2500                           
  2501                           ;osc.c: 26:             OSCCONbits.IRCF1 = 1;
  2502  05B7  168F               	bsf	15,5	;volatile
  2503                           
  2504                           ;osc.c: 27:             OSCCONbits.IRCF0 = 0;
  2505  05B8  120F               	bcf	15,4	;volatile
  2506                           
  2507                           ;osc.c: 28:             break;
  2508  05B9  2E00               	goto	l281
  2509  05BA                     l284:	
  2510                           ;osc.c: 30:         case 3:
  2511                           
  2512                           
  2513                           ;osc.c: 31:             OSCCONbits.IRCF2 = 0;
  2514  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  2515  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  2516  05BC  130F               	bcf	15,6	;volatile
  2517                           
  2518                           ;osc.c: 32:             OSCCONbits.IRCF1 = 1;
  2519  05BD  168F               	bsf	15,5	;volatile
  2520                           
  2521                           ;osc.c: 33:             OSCCONbits.IRCF0 = 1;
  2522  05BE  160F               	bsf	15,4	;volatile
  2523                           
  2524                           ;osc.c: 34:             break;
  2525  05BF  2E00               	goto	l281
  2526  05C0                     l285:	
  2527                           ;osc.c: 36:         case 4:
  2528                           
  2529                           
  2530                           ;osc.c: 37:             OSCCONbits.IRCF2 = 1;
  2531  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  2532  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  2533  05C2  170F               	bsf	15,6	;volatile
  2534                           
  2535                           ;osc.c: 38:             OSCCONbits.IRCF1 = 0;
  2536  05C3  128F               	bcf	15,5	;volatile
  2537                           
  2538                           ;osc.c: 39:             OSCCONbits.IRCF0 = 0;
  2539  05C4  120F               	bcf	15,4	;volatile
  2540                           
  2541                           ;osc.c: 40:             break;
  2542  05C5  2E00               	goto	l281
  2543  05C6                     l286:	
  2544                           ;osc.c: 42:         case 5:
  2545                           
  2546                           
  2547                           ;osc.c: 43:             OSCCONbits.IRCF2 = 1;
  2548  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2549  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2550  05C8  170F               	bsf	15,6	;volatile
  2551                           
  2552                           ;osc.c: 44:             OSCCONbits.IRCF1 = 0;
  2553  05C9  128F               	bcf	15,5	;volatile
  2554                           
  2555                           ;osc.c: 45:             OSCCONbits.IRCF0 = 1;
  2556  05CA  160F               	bsf	15,4	;volatile
  2557                           
  2558                           ;osc.c: 46:             break;
  2559  05CB  2E00               	goto	l281
  2560  05CC                     l287:	
  2561                           ;osc.c: 49:         case 6:
  2562                           
  2563                           
  2564                           ;osc.c: 50:             OSCCONbits.IRCF2 = 1;
  2565  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  2566  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  2567  05CE  170F               	bsf	15,6	;volatile
  2568                           
  2569                           ;osc.c: 51:             OSCCONbits.IRCF1 = 1;
  2570  05CF  168F               	bsf	15,5	;volatile
  2571                           
  2572                           ;osc.c: 52:             OSCCONbits.IRCF0 = 0;
  2573  05D0  120F               	bcf	15,4	;volatile
  2574                           
  2575                           ;osc.c: 53:             break;
  2576  05D1  2E00               	goto	l281
  2577  05D2                     l288:	
  2578                           ;osc.c: 55:         case 7:
  2579                           
  2580                           
  2581                           ;osc.c: 56:             OSCCONbits.IRCF2 = 1;
  2582  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  2583  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  2584  05D4  170F               	bsf	15,6	;volatile
  2585                           
  2586                           ;osc.c: 57:             OSCCONbits.IRCF1 = 1;
  2587  05D5  168F               	bsf	15,5	;volatile
  2588                           
  2589                           ;osc.c: 58:             OSCCONbits.IRCF0 = 1;
  2590  05D6  160F               	bsf	15,4	;volatile
  2591                           
  2592                           ;osc.c: 59:             break;
  2593  05D7  2E00               	goto	l281
  2594  05D8                     l289:	
  2595                           ;osc.c: 64:         default:
  2596                           
  2597                           
  2598                           ;osc.c: 65:             OSCCONbits.IRCF2 = 1;
  2599  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  2600  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  2601  05DA  170F               	bsf	15,6	;volatile
  2602                           
  2603                           ;osc.c: 66:             OSCCONbits.IRCF1 = 1;
  2604  05DB  168F               	bsf	15,5	;volatile
  2605                           
  2606                           ;osc.c: 67:             OSCCONbits.IRCF0 = 0;
  2607  05DC  120F               	bcf	15,4	;volatile
  2608                           
  2609                           ;osc.c: 68:             break;
  2610  05DD  2E00               	goto	l281
  2611  05DE                     l1572:
  2612  05DE  0838               	movf	initOsc@IRCF,w
  2613  05DF  00B6               	movwf	??_initOsc
  2614  05E0  01B7               	clrf	??_initOsc+1
  2615                           
  2616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2617                           ; Switch size 1, requested type "simple"
  2618                           ; Number of cases is 1, Range of values is 0 to 0
  2619                           ; switch strategies available:
  2620                           ; Name         Instructions Cycles
  2621                           ; simple_byte            4     3 (average)
  2622                           ; direct_byte           11     8 (fixed)
  2623                           ; jumptable            260     6 (fixed)
  2624                           ;	Chosen strategy is simple_byte
  2625  05E1  0837               	movf	??_initOsc+1,w
  2626  05E2  3A00               	xorlw	0	; case 0
  2627  05E3  1903               	skipnz
  2628  05E4  2DE6               	goto	l2242
  2629  05E5  2DD8               	goto	l289
  2630  05E6                     l2242:
  2631                           
  2632                           ; Switch size 1, requested type "simple"
  2633                           ; Number of cases is 8, Range of values is 0 to 7
  2634                           ; switch strategies available:
  2635                           ; Name         Instructions Cycles
  2636                           ; simple_byte           25    13 (average)
  2637                           ; direct_byte           32     8 (fixed)
  2638                           ; jumptable            260     6 (fixed)
  2639                           ;	Chosen strategy is simple_byte
  2640  05E6  0836               	movf	??_initOsc,w
  2641  05E7  3A00               	xorlw	0	; case 0
  2642  05E8  1903               	skipnz
  2643  05E9  2DA8               	goto	l280
  2644  05EA  3A01               	xorlw	1	; case 1
  2645  05EB  1903               	skipnz
  2646  05EC  2DAE               	goto	l282
  2647  05ED  3A03               	xorlw	3	; case 2
  2648  05EE  1903               	skipnz
  2649  05EF  2DB4               	goto	l283
  2650  05F0  3A01               	xorlw	1	; case 3
  2651  05F1  1903               	skipnz
  2652  05F2  2DBA               	goto	l284
  2653  05F3  3A07               	xorlw	7	; case 4
  2654  05F4  1903               	skipnz
  2655  05F5  2DC0               	goto	l285
  2656  05F6  3A01               	xorlw	1	; case 5
  2657  05F7  1903               	skipnz
  2658  05F8  2DC6               	goto	l286
  2659  05F9  3A03               	xorlw	3	; case 6
  2660  05FA  1903               	skipnz
  2661  05FB  2DCC               	goto	l287
  2662  05FC  3A01               	xorlw	1	; case 7
  2663  05FD  1903               	skipnz
  2664  05FE  2DD2               	goto	l288
  2665  05FF  2DD8               	goto	l289
  2666  0600                     l281:
  2667                           
  2668                           ;osc.c: 72:     OSCCONbits.SCS = 1;
  2669  0600  140F               	bsf	15,0	;volatile
  2670  0601                     l290:
  2671  0601  0008               	return
  2672  0602                     __end_of_initOsc:
  2673                           
  2674                           	psect	text9
  2675  038B                     __ptext9:	
  2676 ;; *************** function _configADC2 *****************
  2677 ;; Defined at:
  2678 ;;		line 17 in file "adc2.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  fosc            1    wreg     unsigned char 
  2681 ;;  chan            1    0[BANK0 ] unsigned char 
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;  fosc            1    3[BANK0 ] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2693 ;;      Params:         0       1       0       0       0
  2694 ;;      Locals:         0       1       0       0       0
  2695 ;;      Temps:          0       2       0       0       0
  2696 ;;      Totals:         0       4       0       0       0
  2697 ;;Total ram usage:        4 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    3
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_Setup
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _configADC2
  2709  038B                     _configADC2:
  2710                           
  2711                           ;incstack = 0
  2712                           ; Regs used in _configADC2: [wreg-fsr0h+status,2+status,0]
  2713                           ;configADC2@fosc stored from wreg
  2714  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2715  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2716  038D  00B9               	movwf	configADC2@fosc
  2717  038E                     l1580:
  2718                           
  2719                           ;adc2.c: 19:     switch (fosc) {
  2720  038E  2BA2               	goto	l1594
  2721  038F                     l1582:
  2722                           
  2723                           ;adc2.c: 22:             ADCON0bits.ADCS = 0b00;
  2724  038F  303F               	movlw	-193
  2725  0390  059F               	andwf	31,f	;volatile
  2726                           
  2727                           ;adc2.c: 23:             break;
  2728  0391  2C07               	goto	l1632
  2729  0392                     l1584:
  2730                           
  2731                           ;adc2.c: 26:             ADCON0bits.ADCS = 0b01;
  2732  0392  081F               	movf	31,w	;volatile
  2733  0393  393F               	andlw	-193
  2734  0394  3840               	iorlw	64
  2735  0395  009F               	movwf	31	;volatile
  2736                           
  2737                           ;adc2.c: 27:             break;
  2738  0396  2C07               	goto	l1632
  2739  0397                     l1586:
  2740                           
  2741                           ;adc2.c: 30:             ADCON0bits.ADCS = 0b10;
  2742  0397  081F               	movf	31,w	;volatile
  2743  0398  393F               	andlw	-193
  2744  0399  3880               	iorlw	128
  2745  039A  009F               	movwf	31	;volatile
  2746                           
  2747                           ;adc2.c: 31:             break;
  2748  039B  2C07               	goto	l1632
  2749  039C                     l1588:
  2750                           
  2751                           ;adc2.c: 34:             ADCON0bits.ADCS = 0b11;
  2752  039C  30C0               	movlw	192
  2753  039D  049F               	iorwf	31,f	;volatile
  2754                           
  2755                           ;adc2.c: 35:             break;
  2756  039E  2C07               	goto	l1632
  2757  039F                     l1590:
  2758                           
  2759                           ;adc2.c: 38:             ADCON0bits.ADCS = 0b00;
  2760  039F  303F               	movlw	-193
  2761  03A0  059F               	andwf	31,f	;volatile
  2762                           
  2763                           ;adc2.c: 39:             break;
  2764  03A1  2C07               	goto	l1632
  2765  03A2                     l1594:
  2766  03A2  0839               	movf	configADC2@fosc,w
  2767  03A3  00B7               	movwf	??_configADC2
  2768  03A4  01B8               	clrf	??_configADC2+1
  2769                           
  2770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2771                           ; Switch size 1, requested type "simple"
  2772                           ; Number of cases is 1, Range of values is 0 to 0
  2773                           ; switch strategies available:
  2774                           ; Name         Instructions Cycles
  2775                           ; simple_byte            4     3 (average)
  2776                           ; direct_byte           11     8 (fixed)
  2777                           ; jumptable            260     6 (fixed)
  2778                           ;	Chosen strategy is simple_byte
  2779  03A5  0838               	movf	??_configADC2+1,w
  2780  03A6  3A00               	xorlw	0	; case 0
  2781  03A7  1903               	skipnz
  2782  03A8  2BAA               	goto	l2244
  2783  03A9  2B9F               	goto	l1590
  2784  03AA                     l2244:
  2785                           
  2786                           ; Switch size 1, requested type "simple"
  2787                           ; Number of cases is 4, Range of values is 0 to 3
  2788                           ; switch strategies available:
  2789                           ; Name         Instructions Cycles
  2790                           ; simple_byte           13     7 (average)
  2791                           ; direct_byte           20     8 (fixed)
  2792                           ; jumptable            260     6 (fixed)
  2793                           ;	Chosen strategy is simple_byte
  2794  03AA  0837               	movf	??_configADC2,w
  2795  03AB  3A00               	xorlw	0	; case 0
  2796  03AC  1903               	skipnz
  2797  03AD  2B8F               	goto	l1582
  2798  03AE  3A01               	xorlw	1	; case 1
  2799  03AF  1903               	skipnz
  2800  03B0  2B92               	goto	l1584
  2801  03B1  3A03               	xorlw	3	; case 2
  2802  03B2  1903               	skipnz
  2803  03B3  2B97               	goto	l1586
  2804  03B4  3A01               	xorlw	1	; case 3
  2805  03B5  1903               	skipnz
  2806  03B6  2B9C               	goto	l1588
  2807  03B7  2B9F               	goto	l1590
  2808  03B8                     l1596:
  2809                           
  2810                           ;adc2.c: 43:             ADCON0bits.CHS = 0b0000;
  2811  03B8  30C3               	movlw	-61
  2812  03B9  059F               	andwf	31,f	;volatile
  2813                           
  2814                           ;adc2.c: 44:             break;
  2815  03BA  2C41               	goto	l1634
  2816  03BB                     l1598:
  2817                           
  2818                           ;adc2.c: 47:             ADCON0bits.CHS = 0b0001;
  2819  03BB  081F               	movf	31,w	;volatile
  2820  03BC  39C3               	andlw	-61
  2821  03BD  3804               	iorlw	4
  2822  03BE  009F               	movwf	31	;volatile
  2823                           
  2824                           ;adc2.c: 48:             break;
  2825  03BF  2C41               	goto	l1634
  2826  03C0                     l1600:
  2827                           
  2828                           ;adc2.c: 51:             ADCON0bits.CHS = 0b0010;
  2829  03C0  081F               	movf	31,w	;volatile
  2830  03C1  39C3               	andlw	-61
  2831  03C2  3808               	iorlw	8
  2832  03C3  009F               	movwf	31	;volatile
  2833                           
  2834                           ;adc2.c: 52:             break;
  2835  03C4  2C41               	goto	l1634
  2836  03C5                     l1602:
  2837                           
  2838                           ;adc2.c: 55:             ADCON0bits.CHS = 0b0011;
  2839  03C5  081F               	movf	31,w	;volatile
  2840  03C6  39C3               	andlw	-61
  2841  03C7  380C               	iorlw	12
  2842  03C8  009F               	movwf	31	;volatile
  2843                           
  2844                           ;adc2.c: 56:             break;
  2845  03C9  2C41               	goto	l1634
  2846  03CA                     l1604:
  2847                           
  2848                           ;adc2.c: 59:             ADCON0bits.CHS = 0b0100;
  2849  03CA  081F               	movf	31,w	;volatile
  2850  03CB  39C3               	andlw	-61
  2851  03CC  3810               	iorlw	16
  2852  03CD  009F               	movwf	31	;volatile
  2853                           
  2854                           ;adc2.c: 60:             break;
  2855  03CE  2C41               	goto	l1634
  2856  03CF                     l1606:
  2857                           
  2858                           ;adc2.c: 63:             ADCON0bits.CHS = 0b0101;
  2859  03CF  081F               	movf	31,w	;volatile
  2860  03D0  39C3               	andlw	-61
  2861  03D1  3814               	iorlw	20
  2862  03D2  009F               	movwf	31	;volatile
  2863                           
  2864                           ;adc2.c: 64:             break;
  2865  03D3  2C41               	goto	l1634
  2866  03D4                     l1608:
  2867                           
  2868                           ;adc2.c: 67:             ADCON0bits.CHS = 0b0110;
  2869  03D4  081F               	movf	31,w	;volatile
  2870  03D5  39C3               	andlw	-61
  2871  03D6  3818               	iorlw	24
  2872  03D7  009F               	movwf	31	;volatile
  2873                           
  2874                           ;adc2.c: 68:             break;
  2875  03D8  2C41               	goto	l1634
  2876  03D9                     l1610:
  2877                           
  2878                           ;adc2.c: 71:             ADCON0bits.CHS = 0b0111;
  2879  03D9  081F               	movf	31,w	;volatile
  2880  03DA  39C3               	andlw	-61
  2881  03DB  381C               	iorlw	28
  2882  03DC  009F               	movwf	31	;volatile
  2883                           
  2884                           ;adc2.c: 72:             break;
  2885  03DD  2C41               	goto	l1634
  2886  03DE                     l1612:
  2887                           
  2888                           ;adc2.c: 75:             ADCON0bits.CHS = 0b1000;
  2889  03DE  081F               	movf	31,w	;volatile
  2890  03DF  39C3               	andlw	-61
  2891  03E0  3820               	iorlw	32
  2892  03E1  009F               	movwf	31	;volatile
  2893                           
  2894                           ;adc2.c: 76:             break;
  2895  03E2  2C41               	goto	l1634
  2896  03E3                     l1614:
  2897                           
  2898                           ;adc2.c: 79:             ADCON0bits.CHS = 0b1001;
  2899  03E3  081F               	movf	31,w	;volatile
  2900  03E4  39C3               	andlw	-61
  2901  03E5  3824               	iorlw	36
  2902  03E6  009F               	movwf	31	;volatile
  2903                           
  2904                           ;adc2.c: 80:             break;
  2905  03E7  2C41               	goto	l1634
  2906  03E8                     l1616:
  2907                           
  2908                           ;adc2.c: 83:             ADCON0bits.CHS = 0b1010;
  2909  03E8  081F               	movf	31,w	;volatile
  2910  03E9  39C3               	andlw	-61
  2911  03EA  3828               	iorlw	40
  2912  03EB  009F               	movwf	31	;volatile
  2913                           
  2914                           ;adc2.c: 84:             break;
  2915  03EC  2C41               	goto	l1634
  2916  03ED                     l1618:
  2917                           
  2918                           ;adc2.c: 87:             ADCON0bits.CHS = 0b1011;
  2919  03ED  081F               	movf	31,w	;volatile
  2920  03EE  39C3               	andlw	-61
  2921  03EF  382C               	iorlw	44
  2922  03F0  009F               	movwf	31	;volatile
  2923                           
  2924                           ;adc2.c: 88:             break;
  2925  03F1  2C41               	goto	l1634
  2926  03F2                     l1620:
  2927                           
  2928                           ;adc2.c: 91:             ADCON0bits.CHS = 0b1100;
  2929  03F2  081F               	movf	31,w	;volatile
  2930  03F3  39C3               	andlw	-61
  2931  03F4  3830               	iorlw	48
  2932  03F5  009F               	movwf	31	;volatile
  2933                           
  2934                           ;adc2.c: 92:             break;
  2935  03F6  2C41               	goto	l1634
  2936  03F7                     l1622:
  2937                           
  2938                           ;adc2.c: 95:             ADCON0bits.CHS = 0b1101;
  2939  03F7  081F               	movf	31,w	;volatile
  2940  03F8  39C3               	andlw	-61
  2941  03F9  3834               	iorlw	52
  2942  03FA  009F               	movwf	31	;volatile
  2943                           
  2944                           ;adc2.c: 96:             break;
  2945  03FB  2C41               	goto	l1634
  2946  03FC                     l1624:
  2947                           
  2948                           ;adc2.c: 99:             ADCON0bits.CHS = 0b1110;
  2949  03FC  081F               	movf	31,w	;volatile
  2950  03FD  39C3               	andlw	-61
  2951  03FE  3838               	iorlw	56
  2952  03FF  009F               	movwf	31	;volatile
  2953                           
  2954                           ;adc2.c: 100:             break;
  2955  0400  2C41               	goto	l1634
  2956  0401                     l1626:
  2957                           
  2958                           ;adc2.c: 103:             ADCON0bits.CHS = 0b1111;
  2959  0401  303C               	movlw	60
  2960  0402  049F               	iorwf	31,f	;volatile
  2961                           
  2962                           ;adc2.c: 104:             break;
  2963  0403  2C41               	goto	l1634
  2964  0404                     l1628:
  2965                           
  2966                           ;adc2.c: 107:             ADCON0bits.CHS = 0b0000;
  2967  0404  30C3               	movlw	-61
  2968  0405  059F               	andwf	31,f	;volatile
  2969                           
  2970                           ;adc2.c: 108:             break;
  2971  0406  2C41               	goto	l1634
  2972  0407                     l1632:
  2973  0407  0836               	movf	configADC2@chan,w
  2974  0408  00B7               	movwf	??_configADC2
  2975  0409  01B8               	clrf	??_configADC2+1
  2976                           
  2977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2978                           ; Switch size 1, requested type "simple"
  2979                           ; Number of cases is 1, Range of values is 0 to 0
  2980                           ; switch strategies available:
  2981                           ; Name         Instructions Cycles
  2982                           ; simple_byte            4     3 (average)
  2983                           ; direct_byte           11     8 (fixed)
  2984                           ; jumptable            260     6 (fixed)
  2985                           ;	Chosen strategy is simple_byte
  2986  040A  0838               	movf	??_configADC2+1,w
  2987  040B  3A00               	xorlw	0	; case 0
  2988  040C  1903               	skipnz
  2989  040D  2C0F               	goto	l2246
  2990  040E  2C04               	goto	l1628
  2991  040F                     l2246:
  2992                           
  2993                           ; Switch size 1, requested type "simple"
  2994                           ; Number of cases is 16, Range of values is 0 to 15
  2995                           ; switch strategies available:
  2996                           ; Name         Instructions Cycles
  2997                           ; simple_byte           49    25 (average)
  2998                           ; direct_byte           56     8 (fixed)
  2999                           ; jumptable            260     6 (fixed)
  3000                           ;	Chosen strategy is simple_byte
  3001  040F  0837               	movf	??_configADC2,w
  3002  0410  3A00               	xorlw	0	; case 0
  3003  0411  1903               	skipnz
  3004  0412  2BB8               	goto	l1596
  3005  0413  3A01               	xorlw	1	; case 1
  3006  0414  1903               	skipnz
  3007  0415  2BBB               	goto	l1598
  3008  0416  3A03               	xorlw	3	; case 2
  3009  0417  1903               	skipnz
  3010  0418  2BC0               	goto	l1600
  3011  0419  3A01               	xorlw	1	; case 3
  3012  041A  1903               	skipnz
  3013  041B  2BC5               	goto	l1602
  3014  041C  3A07               	xorlw	7	; case 4
  3015  041D  1903               	skipnz
  3016  041E  2BCA               	goto	l1604
  3017  041F  3A01               	xorlw	1	; case 5
  3018  0420  1903               	skipnz
  3019  0421  2BCF               	goto	l1606
  3020  0422  3A03               	xorlw	3	; case 6
  3021  0423  1903               	skipnz
  3022  0424  2BD4               	goto	l1608
  3023  0425  3A01               	xorlw	1	; case 7
  3024  0426  1903               	skipnz
  3025  0427  2BD9               	goto	l1610
  3026  0428  3A0F               	xorlw	15	; case 8
  3027  0429  1903               	skipnz
  3028  042A  2BDE               	goto	l1612
  3029  042B  3A01               	xorlw	1	; case 9
  3030  042C  1903               	skipnz
  3031  042D  2BE3               	goto	l1614
  3032  042E  3A03               	xorlw	3	; case 10
  3033  042F  1903               	skipnz
  3034  0430  2BE8               	goto	l1616
  3035  0431  3A01               	xorlw	1	; case 11
  3036  0432  1903               	skipnz
  3037  0433  2BED               	goto	l1618
  3038  0434  3A07               	xorlw	7	; case 12
  3039  0435  1903               	skipnz
  3040  0436  2BF2               	goto	l1620
  3041  0437  3A01               	xorlw	1	; case 13
  3042  0438  1903               	skipnz
  3043  0439  2BF7               	goto	l1622
  3044  043A  3A03               	xorlw	3	; case 14
  3045  043B  1903               	skipnz
  3046  043C  2BFC               	goto	l1624
  3047  043D  3A01               	xorlw	1	; case 15
  3048  043E  1903               	skipnz
  3049  043F  2C01               	goto	l1626
  3050  0440  2C04               	goto	l1628
  3051  0441                     l1634:
  3052                           
  3053                           ;adc2.c: 113:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3054  0441  300D               	movlw	13
  3055  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3056  0443  1303               	bcf	3,6	;RP1=0, select bank0
  3057  0444  00B8               	movwf	??_configADC2+1
  3058  0445  30FB               	movlw	251
  3059  0446  00B7               	movwf	??_configADC2
  3060  0447                     u637:
  3061  0447  0BB7               	decfsz	??_configADC2,f
  3062  0448  2C47               	goto	u637
  3063  0449  0BB8               	decfsz	??_configADC2+1,f
  3064  044A  2C47               	goto	u637
  3065  044B                     l1636:
  3066                           
  3067                           ;adc2.c: 116:     ADCON0bits.GO_nDONE = 1;
  3068  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3069  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3070  044D  149F               	bsf	31,1	;volatile
  3071  044E                     l1638:
  3072                           
  3073                           ;adc2.c: 120:     ADCON0bits.ADON = 1;
  3074  044E  141F               	bsf	31,0	;volatile
  3075  044F                     l1640:
  3076                           
  3077                           ;adc2.c: 121:     ADCON1 = 0;
  3078  044F  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0450  1303               	bcf	3,6	;RP1=0, select bank1
  3080  0451  019F               	clrf	31	;volatile
  3081  0452                     l259:
  3082  0452  0008               	return
  3083  0453                     __end_of_configADC2:
  3084                           
  3085                           	psect	text10
  3086  077F                     __ptext10:	
  3087 ;; *************** function _Lcd_Init *****************
  3088 ;; Defined at:
  3089 ;;		line 41 in file "LCD.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       0       0       0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    5
  3110 ;; This function calls:
  3111 ;;		_Lcd_Cmd
  3112 ;; This function is called by:
  3113 ;;		_Setup
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           
  3118                           ;psect for function _Lcd_Init
  3119  077F                     _Lcd_Init:
  3120  077F                     l1670:	
  3121                           ;incstack = 0
  3122                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3123                           
  3124                           
  3125                           ;LCD.c: 45:     Lcd_Cmd(0x38);
  3126  077F  3038               	movlw	56
  3127  0780  120A  118A  2763  120A  118A  	fcall	_Lcd_Cmd
  3128                           
  3129                           ;LCD.c: 46:     Lcd_Cmd(0x0C);
  3130  0785  300C               	movlw	12
  3131  0786  120A  118A  2763  120A  118A  	fcall	_Lcd_Cmd
  3132                           
  3133                           ;LCD.c: 47:     Lcd_Cmd(0x06);
  3134  078B  3006               	movlw	6
  3135  078C  120A  118A  2763  120A  118A  	fcall	_Lcd_Cmd
  3136                           
  3137                           ;LCD.c: 48:     Lcd_Cmd(0x80);
  3138  0791  3080               	movlw	128
  3139  0792  120A  118A  2763  120A  118A  	fcall	_Lcd_Cmd
  3140  0797                     l209:
  3141  0797  0008               	return
  3142  0798                     __end_of_Lcd_Init:
  3143                           
  3144                           	psect	text11
  3145  06ED                     __ptext11:	
  3146 ;; *************** function _Lcd_Write_String *****************
  3147 ;; Defined at:
  3148 ;;		line 60 in file "LCD.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  a               1    wreg     PTR unsigned char 
  3151 ;;		 -> STR_5(2), STR_4(2), STR_3(5), STR_2(3), 
  3152 ;;		 -> STR_1(3), 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  a               1    5[BANK0 ] PTR unsigned char 
  3155 ;;		 -> STR_5(2), STR_4(2), STR_3(5), STR_2(3), 
  3156 ;;		 -> STR_1(3), 
  3157 ;;  i               2    3[BANK0 ] int 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3167 ;;      Params:         0       0       0       0       0
  3168 ;;      Locals:         0       3       0       0       0
  3169 ;;      Temps:          0       0       0       0       0
  3170 ;;      Totals:         0       3       0       0       0
  3171 ;;Total ram usage:        3 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    5
  3174 ;; This function calls:
  3175 ;;		_Lcd_Write_Char
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function _Lcd_Write_String
  3183  06ED                     _Lcd_Write_String:
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3187                           ;Lcd_Write_String@a stored from wreg
  3188  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3189  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  3190  06EF  00BB               	movwf	Lcd_Write_String@a
  3191  06F0                     l1960:
  3192                           
  3193                           ;LCD.c: 61:    int i;;LCD.c: 62:  for(i=0;a[i]!='\0';i++)
  3194  06F0  01B9               	clrf	Lcd_Write_String@i
  3195  06F1  01BA               	clrf	Lcd_Write_String@i+1
  3196  06F2  2F08               	goto	l1966
  3197  06F3                     l1962:
  3198                           
  3199                           ;LCD.c: 63:     Lcd_Write_Char(a[i]);
  3200  06F3  0839               	movf	Lcd_Write_String@i,w
  3201  06F4  073B               	addwf	Lcd_Write_String@a,w
  3202  06F5  0084               	movwf	4
  3203  06F6  120A  118A  27DD  120A  118A  	fcall	stringdir
  3204  06FB  120A  118A  2798  120A  118A  	fcall	_Lcd_Write_Char
  3205  0700                     l1964:
  3206  0700  3001               	movlw	1
  3207  0701  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0702  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0703  07B9               	addwf	Lcd_Write_String@i,f
  3210  0704  1803               	skipnc
  3211  0705  0ABA               	incf	Lcd_Write_String@i+1,f
  3212  0706  3000               	movlw	0
  3213  0707  07BA               	addwf	Lcd_Write_String@i+1,f
  3214  0708                     l1966:
  3215  0708  0839               	movf	Lcd_Write_String@i,w
  3216  0709  073B               	addwf	Lcd_Write_String@a,w
  3217  070A  0084               	movwf	4
  3218  070B  120A  118A  27DD  120A  118A  	fcall	stringdir
  3219  0710  3A00               	xorlw	0
  3220  0711  1D03               	skipz
  3221  0712  2F14               	goto	u571
  3222  0713  2F15               	goto	u570
  3223  0714                     u571:
  3224  0714  2EF3               	goto	l1962
  3225  0715                     u570:
  3226  0715                     l218:
  3227  0715  0008               	return
  3228  0716                     __end_of_Lcd_Write_String:
  3229                           
  3230                           	psect	text12
  3231  0798                     __ptext12:	
  3232 ;; *************** function _Lcd_Write_Char *****************
  3233 ;; Defined at:
  3234 ;;		line 51 in file "LCD.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  a               1    wreg     unsigned char 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  a               1    2[BANK0 ] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0, pclath, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         0       0       0       0       0
  3249 ;;      Locals:         0       1       0       0       0
  3250 ;;      Temps:          0       1       0       0       0
  3251 ;;      Totals:         0       2       0       0       0
  3252 ;;Total ram usage:        2 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    4
  3255 ;; This function calls:
  3256 ;;		_Lcd_Port
  3257 ;; This function is called by:
  3258 ;;		_main
  3259 ;;		_Lcd_Write_String
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _Lcd_Write_Char
  3265  0798                     _Lcd_Write_Char:
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3269                           ;Lcd_Write_Char@a stored from wreg
  3270  0798  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0799  1303               	bcf	3,6	;RP1=0, select bank0
  3272  079A  00B8               	movwf	Lcd_Write_Char@a
  3273  079B                     l1556:
  3274                           
  3275                           ;LCD.c: 52:     PORTEbits.RE1 = 1;
  3276  079B  1489               	bsf	9,1	;volatile
  3277  079C                     l1558:
  3278                           
  3279                           ;LCD.c: 53:    Lcd_Port(a);
  3280  079C  0838               	movf	Lcd_Write_Char@a,w
  3281  079D  120A  118A  27F8  120A  118A  	fcall	_Lcd_Port
  3282  07A2                     l1560:
  3283                           
  3284                           ;LCD.c: 54:    PORTEbits.RE0 = 1;
  3285  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3286  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3287  07A4  1409               	bsf	9,0	;volatile
  3288  07A5                     l1562:
  3289                           
  3290                           ;LCD.c: 55:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3291  07A5  300C               	movlw	12
  3292  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  3293  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  3294  07A8  00B7               	movwf	??_Lcd_Write_Char
  3295  07A9                     u647:
  3296  07A9  0BB7               	decfsz	??_Lcd_Write_Char,f
  3297  07AA  2FA9               	goto	u647
  3298  07AB  0000               	nop
  3299  07AC                     l1564:
  3300                           
  3301                           ;LCD.c: 56:    PORTEbits.RE0 = 0;
  3302  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3303  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3304  07AE  1009               	bcf	9,0	;volatile
  3305  07AF                     l1566:
  3306                           
  3307                           ;LCD.c: 57:    PORTEbits.RE1 = 0;
  3308  07AF  1089               	bcf	9,1	;volatile
  3309  07B0                     l212:
  3310  07B0  0008               	return
  3311  07B1                     __end_of_Lcd_Write_Char:
  3312                           
  3313                           	psect	text13
  3314  073D                     __ptext13:	
  3315 ;; *************** function _Lcd_Set_Cursor *****************
  3316 ;; Defined at:
  3317 ;;		line 30 in file "LCD.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  a               1    wreg     unsigned char 
  3320 ;;  b               1    4[BANK0 ] unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  a               1    5[BANK0 ] unsigned char 
  3323 ;;  temp            1    6[BANK0 ] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         0       1       0       0       0
  3334 ;;      Locals:         0       2       0       0       0
  3335 ;;      Temps:          0       0       0       0       0
  3336 ;;      Totals:         0       3       0       0       0
  3337 ;;Total ram usage:        3 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    5
  3340 ;; This function calls:
  3341 ;;		_Lcd_Cmd
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _Lcd_Set_Cursor
  3349  073D                     _Lcd_Set_Cursor:
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3353                           ;Lcd_Set_Cursor@a stored from wreg
  3354  073D  1283               	bcf	3,5	;RP0=0, select bank0
  3355  073E  1303               	bcf	3,6	;RP1=0, select bank0
  3356  073F  00BB               	movwf	Lcd_Set_Cursor@a
  3357  0740                     l1948:
  3358                           
  3359                           ;LCD.c: 31:     char temp;;LCD.c: 32:     if (a == 1) {
  3360  0740  033B               	decf	Lcd_Set_Cursor@a,w
  3361  0741  1D03               	btfss	3,2
  3362  0742  2F44               	goto	u551
  3363  0743  2F45               	goto	u550
  3364  0744                     u551:
  3365  0744  2F51               	goto	l1954
  3366  0745                     u550:
  3367  0745                     l1950:
  3368                           
  3369                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  3370  0745  083A               	movf	Lcd_Set_Cursor@b,w
  3371  0746  3E7F               	addlw	127
  3372  0747  00FF               	movwf	btemp+1
  3373  0748  087F               	movf	btemp+1,w
  3374  0749  00BC               	movwf	Lcd_Set_Cursor@temp
  3375  074A                     l1952:
  3376                           
  3377                           ;LCD.c: 34:         Lcd_Cmd(temp);
  3378  074A  083C               	movf	Lcd_Set_Cursor@temp,w
  3379  074B  120A  118A  2763  120A  118A  	fcall	_Lcd_Cmd
  3380                           
  3381                           ;LCD.c: 35:     } else if (a == 2) {
  3382  0750  2F62               	goto	l206
  3383  0751                     l1954:
  3384  0751  3002               	movlw	2
  3385  0752  063B               	xorwf	Lcd_Set_Cursor@a,w
  3386  0753  1D03               	btfss	3,2
  3387  0754  2F56               	goto	u561
  3388  0755  2F57               	goto	u560
  3389  0756                     u561:
  3390  0756  2F62               	goto	l206
  3391  0757                     u560:
  3392  0757                     l1956:
  3393                           
  3394                           ;LCD.c: 36:         temp = 0xC0 + b - 1;
  3395  0757  083A               	movf	Lcd_Set_Cursor@b,w
  3396  0758  3EBF               	addlw	191
  3397  0759  00FF               	movwf	btemp+1
  3398  075A  087F               	movf	btemp+1,w
  3399  075B  00BC               	movwf	Lcd_Set_Cursor@temp
  3400  075C                     l1958:
  3401                           
  3402                           ;LCD.c: 37:         Lcd_Cmd(temp);
  3403  075C  083C               	movf	Lcd_Set_Cursor@temp,w
  3404  075D  120A  118A  2763  120A  118A  	fcall	_Lcd_Cmd
  3405  0762                     l206:
  3406  0762  0008               	return
  3407  0763                     __end_of_Lcd_Set_Cursor:
  3408                           
  3409                           	psect	text14
  3410  0763                     __ptext14:	
  3411 ;; *************** function _Lcd_Cmd *****************
  3412 ;; Defined at:
  3413 ;;		line 16 in file "LCD.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  a               1    wreg     unsigned char 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  a               1    3[BANK0 ] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, status,0, pclath, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3427 ;;      Params:         0       0       0       0       0
  3428 ;;      Locals:         0       1       0       0       0
  3429 ;;      Temps:          0       2       0       0       0
  3430 ;;      Totals:         0       3       0       0       0
  3431 ;;Total ram usage:        3 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    4
  3434 ;; This function calls:
  3435 ;;		_Lcd_Port
  3436 ;; This function is called by:
  3437 ;;		_Setup
  3438 ;;		_Lcd_Set_Cursor
  3439 ;;		_Lcd_Init
  3440 ;;		_Lcd_Clear
  3441 ;;		_Lcd_Shift_Right
  3442 ;;		_Lcd_Shift_Left
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           
  3447                           ;psect for function _Lcd_Cmd
  3448  0763                     _Lcd_Cmd:
  3449                           
  3450                           ;incstack = 0
  3451                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3452                           ;Lcd_Cmd@a stored from wreg
  3453  0763  1283               	bcf	3,5	;RP0=0, select bank0
  3454  0764  1303               	bcf	3,6	;RP1=0, select bank0
  3455  0765  00B9               	movwf	Lcd_Cmd@a
  3456  0766                     l1546:
  3457                           
  3458                           ;LCD.c: 17:     Lcd_Port(a);
  3459  0766  0839               	movf	Lcd_Cmd@a,w
  3460  0767  120A  118A  27F8  120A  118A  	fcall	_Lcd_Port
  3461  076C                     l1548:
  3462                           
  3463                           ;LCD.c: 18:     PORTEbits.RE1 = 0;
  3464  076C  1283               	bcf	3,5	;RP0=0, select bank0
  3465  076D  1303               	bcf	3,6	;RP1=0, select bank0
  3466  076E  1089               	bcf	9,1	;volatile
  3467  076F                     l1550:
  3468                           
  3469                           ;LCD.c: 20:     PORTEbits.RE0 = 1;
  3470  076F  1409               	bsf	9,0	;volatile
  3471  0770                     l1552:
  3472                           
  3473                           ;LCD.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3474  0770  3007               	movlw	7
  3475  0771  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0772  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0773  00B8               	movwf	??_Lcd_Cmd+1
  3478  0774  307C               	movlw	124
  3479  0775  00B7               	movwf	??_Lcd_Cmd
  3480  0776                     u657:
  3481  0776  0BB7               	decfsz	??_Lcd_Cmd,f
  3482  0777  2F76               	goto	u657
  3483  0778  0BB8               	decfsz	??_Lcd_Cmd+1,f
  3484  0779  2F76               	goto	u657
  3485  077A  0000               	nop
  3486  077B                     l1554:
  3487                           
  3488                           ;LCD.c: 22:     PORTEbits.RE0 = 0;
  3489  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3490  077C  1303               	bcf	3,6	;RP1=0, select bank0
  3491  077D  1009               	bcf	9,0	;volatile
  3492  077E                     l197:
  3493  077E  0008               	return
  3494  077F                     __end_of_Lcd_Cmd:
  3495                           
  3496                           	psect	text15
  3497  07F8                     __ptext15:	
  3498 ;; *************** function _Lcd_Port *****************
  3499 ;; Defined at:
  3500 ;;		line 12 in file "LCD.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  a               1    wreg     unsigned char 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  a               1    0[BANK0 ] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       0       0       0       0
  3515 ;;      Locals:         0       1       0       0       0
  3516 ;;      Temps:          0       0       0       0       0
  3517 ;;      Totals:         0       1       0       0       0
  3518 ;;Total ram usage:        1 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    3
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_Lcd_Cmd
  3525 ;;		_Lcd_Write_Char
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function _Lcd_Port
  3531  07F8                     _Lcd_Port:
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _Lcd_Port: [wreg]
  3535                           ;Lcd_Port@a stored from wreg
  3536  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  3537  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  3538  07FA  00B6               	movwf	Lcd_Port@a
  3539  07FB                     l1544:
  3540                           
  3541                           ;LCD.c: 13:     PORTD = a;
  3542  07FB  0836               	movf	Lcd_Port@a,w
  3543  07FC  0088               	movwf	8	;volatile
  3544  07FD                     l194:
  3545  07FD  0008               	return
  3546  07FE                     __end_of_Lcd_Port:
  3547                           
  3548                           	psect	text16
  3549  064E                     __ptext16:	
  3550 ;; *************** function _ISR *****************
  3551 ;; Defined at:
  3552 ;;		line 86 in file "L3.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3566 ;;      Params:         0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0
  3568 ;;      Temps:          4       0       0       0       0
  3569 ;;      Totals:         4       0       0       0       0
  3570 ;;Total ram usage:        4 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    2
  3573 ;; This function calls:
  3574 ;;		_mandar
  3575 ;;		_pots
  3576 ;;		_recibir
  3577 ;; This function is called by:
  3578 ;;		Interrupt level 1
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           
  3583                           ;psect for function _ISR
  3584  064E                     _ISR:
  3585  064E                     i1l1990:
  3586                           
  3587                           ;L3.c: 88:     if (INTCONbits.T0IF == 1) {
  3588  064E  1D0B               	btfss	11,2	;volatile
  3589  064F  2E51               	goto	u58_21
  3590  0650  2E52               	goto	u58_20
  3591  0651                     u58_21:
  3592  0651  2E59               	goto	i1l1998
  3593  0652                     u58_20:
  3594  0652                     i1l1992:
  3595                           
  3596                           ;L3.c: 89:         TMR0 = 236;
  3597  0652  30EC               	movlw	236
  3598  0653  0081               	movwf	1	;volatile
  3599  0654                     i1l1994:
  3600                           
  3601                           ;L3.c: 90:         CONTADC++;
  3602  0654  3001               	movlw	1
  3603  0655  00FF               	movwf	btemp+1
  3604  0656  087F               	movf	btemp+1,w
  3605  0657  07B3               	addwf	_CONTADC,f
  3606  0658                     i1l1996:
  3607                           
  3608                           ;L3.c: 91:         INTCONbits.T0IF = 0;
  3609  0658  110B               	bcf	11,2	;volatile
  3610  0659                     i1l1998:
  3611                           
  3612                           ;L3.c: 94:     if (PIR1bits.ADIF == 1) {
  3613  0659  1F0C               	btfss	12,6	;volatile
  3614  065A  2E5C               	goto	u59_21
  3615  065B  2E5D               	goto	u59_20
  3616  065C                     u59_21:
  3617  065C  2E65               	goto	i1l2004
  3618  065D                     u59_20:
  3619  065D                     i1l2000:
  3620                           
  3621                           ;L3.c: 95:         pots();
  3622  065D  120A  118A  26C3  120A  118A  	fcall	_pots
  3623  0662                     i1l2002:
  3624                           
  3625                           ;L3.c: 96:         PIR1bits.ADIF = 0;
  3626  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3628  0664  130C               	bcf	12,6	;volatile
  3629  0665                     i1l2004:
  3630                           
  3631                           ;L3.c: 99:     if (PIR1bits.RCIF == 1) {
  3632  0665  1E8C               	btfss	12,5	;volatile
  3633  0666  2E68               	goto	u60_21
  3634  0667  2E69               	goto	u60_20
  3635  0668                     u60_21:
  3636  0668  2E72               	goto	i1l2010
  3637  0669                     u60_20:
  3638  0669                     i1l2006:
  3639                           
  3640                           ;L3.c: 100:         REC = RCREG;
  3641  0669  081A               	movf	26,w	;volatile
  3642  066A  00FF               	movwf	btemp+1
  3643  066B  087F               	movf	btemp+1,w
  3644  066C  00FB               	movwf	_REC
  3645  066D                     i1l2008:
  3646                           
  3647                           ;L3.c: 101:         recibir();
  3648  066D  120A  118A  2690  120A  118A  	fcall	_recibir
  3649  0672                     i1l2010:
  3650                           
  3651                           ;L3.c: 104:     if (PIR1bits.TXIF == 1) {
  3652  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0674  1E0C               	btfss	12,4	;volatile
  3655  0675  2E77               	goto	u61_21
  3656  0676  2E78               	goto	u61_20
  3657  0677                     u61_21:
  3658  0677  2E84               	goto	i1l135
  3659  0678                     u61_20:
  3660  0678                     i1l2012:
  3661                           
  3662                           ;L3.c: 105:         mandar();
  3663  0678  120A  118A  2453  120A  118A  	fcall	_mandar
  3664  067D                     i1l2014:
  3665                           
  3666                           ;L3.c: 106:         SEND++;
  3667  067D  3001               	movlw	1
  3668  067E  00FF               	movwf	btemp+1
  3669  067F  087F               	movf	btemp+1,w
  3670  0680  07FA               	addwf	_SEND,f
  3671  0681                     i1l2016:
  3672                           
  3673                           ;L3.c: 107:         PIE1bits.TXIE = 0;
  3674  0681  1683               	bsf	3,5	;RP0=1, select bank1
  3675  0682  1303               	bcf	3,6	;RP1=0, select bank1
  3676  0683  120C               	bcf	12,4	;volatile
  3677  0684                     i1l135:
  3678  0684  0877               	movf	??_ISR+3,w
  3679  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0686  00FF               	movwf	btemp+1
  3681  0687  0876               	movf	??_ISR+2,w
  3682  0688  008A               	movwf	10
  3683  0689  0875               	movf	??_ISR+1,w
  3684  068A  0084               	movwf	4
  3685  068B  0E74               	swapf	??_ISR^(0+4294967168),w
  3686  068C  0083               	movwf	3
  3687  068D  0EFE               	swapf	btemp,f
  3688  068E  0E7E               	swapf	btemp,w
  3689  068F  0009               	retfie
  3690  0690                     __end_of_ISR:
  3691                           
  3692                           	psect	intentry
  3693  0004                     __pintentry:	
  3694                           ;incstack = 0
  3695                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3696                           
  3697  0004                     interrupt_function:
  3698  007E                     saved_w	set	btemp
  3699  0004  00FE               	movwf	btemp
  3700  0005  0E03               	swapf	3,w
  3701  0006  00F4               	movwf	??_ISR
  3702  0007  0804               	movf	4,w
  3703  0008  00F5               	movwf	??_ISR+1
  3704  0009  080A               	movf	10,w
  3705  000A  00F6               	movwf	??_ISR+2
  3706  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3707  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3708  000D  087F               	movf	btemp+1,w
  3709  000E  00F7               	movwf	??_ISR+3
  3710  000F  120A  118A  2E4E   	ljmp	_ISR
  3711                           
  3712                           	psect	text17
  3713  0690                     __ptext17:	
  3714 ;; *************** function _recibir *****************
  3715 ;; Defined at:
  3716 ;;		line 317 in file "L3.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0, btemp+1
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3730 ;;      Params:         0       0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0
  3733 ;;      Totals:         0       0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_ISR
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _recibir
  3745  0690                     _recibir:
  3746  0690                     i1l1830:	
  3747                           ;incstack = 0
  3748                           ; Regs used in _recibir: [wreg+status,2+status,0+btemp+1]
  3749                           
  3750                           
  3751                           ;L3.c: 318:     if (REC == 43) {
  3752  0690  302B               	movlw	43
  3753  0691  067B               	xorwf	_REC,w
  3754  0692  1D03               	btfss	3,2
  3755  0693  2E95               	goto	u49_21
  3756  0694  2E96               	goto	u49_20
  3757  0695                     u49_21:
  3758  0695  2E98               	goto	i1l1834
  3759  0696                     u49_20:
  3760  0696                     i1l1832:
  3761                           
  3762                           ;L3.c: 319:         R1 = 1;
  3763  0696  01F9               	clrf	_R1
  3764  0697  0AF9               	incf	_R1,f
  3765  0698                     i1l1834:
  3766                           
  3767                           ;L3.c: 324:     if (REC != 43 && R1 == 1) {
  3768  0698  302B               	movlw	43
  3769  0699  067B               	xorwf	_REC,w
  3770  069A  1903               	btfsc	3,2
  3771  069B  2E9D               	goto	u50_21
  3772  069C  2E9E               	goto	u50_20
  3773  069D                     u50_21:
  3774  069D  2EAA               	goto	i1l1842
  3775  069E                     u50_20:
  3776  069E                     i1l1836:
  3777  069E  0379               	decf	_R1,w
  3778  069F  1D03               	btfss	3,2
  3779  06A0  2EA2               	goto	u51_21
  3780  06A1  2EA3               	goto	u51_20
  3781  06A2                     u51_21:
  3782  06A2  2EAA               	goto	i1l1842
  3783  06A3                     u51_20:
  3784  06A3                     i1l1838:
  3785                           
  3786                           ;L3.c: 325:         R1 = 0;
  3787  06A3  01F9               	clrf	_R1
  3788  06A4                     i1l1840:
  3789                           
  3790                           ;L3.c: 326:         CONT++;
  3791  06A4  3001               	movlw	1
  3792  06A5  00FF               	movwf	btemp+1
  3793  06A6  087F               	movf	btemp+1,w
  3794  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3795  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3796  06A9  07A6               	addwf	_CONT,f
  3797  06AA                     i1l1842:
  3798                           
  3799                           ;L3.c: 329:     if (REC == 45) {
  3800  06AA  302D               	movlw	45
  3801  06AB  067B               	xorwf	_REC,w
  3802  06AC  1D03               	btfss	3,2
  3803  06AD  2EAF               	goto	u52_21
  3804  06AE  2EB0               	goto	u52_20
  3805  06AF                     u52_21:
  3806  06AF  2EB2               	goto	i1l1846
  3807  06B0                     u52_20:
  3808  06B0                     i1l1844:
  3809                           
  3810                           ;L3.c: 330:         R2 = 1;
  3811  06B0  01F8               	clrf	_R2
  3812  06B1  0AF8               	incf	_R2,f
  3813  06B2                     i1l1846:
  3814                           
  3815                           ;L3.c: 335:     if (REC != 45 && R2 == 1) {
  3816  06B2  302D               	movlw	45
  3817  06B3  067B               	xorwf	_REC,w
  3818  06B4  1903               	btfsc	3,2
  3819  06B5  2EB7               	goto	u53_21
  3820  06B6  2EB8               	goto	u53_20
  3821  06B7                     u53_21:
  3822  06B7  2EC2               	goto	i1l182
  3823  06B8                     u53_20:
  3824  06B8                     i1l1848:
  3825  06B8  0378               	decf	_R2,w
  3826  06B9  1D03               	btfss	3,2
  3827  06BA  2EBC               	goto	u54_21
  3828  06BB  2EBD               	goto	u54_20
  3829  06BC                     u54_21:
  3830  06BC  2EC2               	goto	i1l182
  3831  06BD                     u54_20:
  3832  06BD                     i1l1850:
  3833                           
  3834                           ;L3.c: 336:         R2 = 0;
  3835  06BD  01F8               	clrf	_R2
  3836  06BE                     i1l1852:
  3837                           
  3838                           ;L3.c: 337:         CONT--;
  3839  06BE  3001               	movlw	1
  3840  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3841  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3842  06C1  02A6               	subwf	_CONT,f
  3843  06C2                     i1l182:
  3844  06C2  0008               	return
  3845  06C3                     __end_of_recibir:
  3846                           
  3847                           	psect	text18
  3848  06C3                     __ptext18:	
  3849 ;; *************** function _pots *****************
  3850 ;; Defined at:
  3851 ;;		line 224 in file "L3.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      void 
  3858 ;; Registers used:
  3859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3865 ;;      Params:         0       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0
  3868 ;;      Totals:         0       0       0       0       0
  3869 ;;Total ram usage:        0 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    1
  3872 ;; This function calls:
  3873 ;;		i1_configADC2
  3874 ;; This function is called by:
  3875 ;;		_ISR
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _pots
  3881  06C3                     _pots:
  3882  06C3                     i1l1816:	
  3883                           ;incstack = 0
  3884                           ; Regs used in _pots: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3885                           
  3886                           
  3887                           ;L3.c: 226:     if (TOGGLE == 0) {
  3888  06C3  087C               	movf	_TOGGLE,w
  3889  06C4  1D03               	btfss	3,2
  3890  06C5  2EC7               	goto	u48_21
  3891  06C6  2EC8               	goto	u48_20
  3892  06C7                     u48_21:
  3893  06C7  2EDB               	goto	i1l1824
  3894  06C8                     u48_20:
  3895  06C8                     i1l1818:
  3896                           
  3897                           ;L3.c: 227:         configADC2(1, 12);
  3898  06C8  300C               	movlw	12
  3899  06C9  00FF               	movwf	btemp+1
  3900  06CA  087F               	movf	btemp+1,w
  3901  06CB  00F0               	movwf	i1configADC2@chan
  3902  06CC  3001               	movlw	1
  3903  06CD  120A  118A  22BC  120A  118A  	fcall	i1_configADC2
  3904  06D2                     i1l1820:
  3905                           
  3906                           ;L3.c: 228:         pot1 = ADRESH;
  3907  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3908  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  3909  06D4  081E               	movf	30,w	;volatile
  3910  06D5  00FF               	movwf	btemp+1
  3911  06D6  087F               	movf	btemp+1,w
  3912  06D7  00B5               	movwf	_pot1
  3913  06D8                     i1l1822:
  3914                           
  3915                           ;L3.c: 229:         TOGGLE = 1;
  3916  06D8  01FC               	clrf	_TOGGLE
  3917  06D9  0AFC               	incf	_TOGGLE,f
  3918                           
  3919                           ;L3.c: 230:     } else {
  3920  06DA  2EEC               	goto	i1l152
  3921  06DB                     i1l1824:
  3922                           
  3923                           ;L3.c: 231:         configADC2(1, 10);
  3924  06DB  300A               	movlw	10
  3925  06DC  00FF               	movwf	btemp+1
  3926  06DD  087F               	movf	btemp+1,w
  3927  06DE  00F0               	movwf	i1configADC2@chan
  3928  06DF  3001               	movlw	1
  3929  06E0  120A  118A  22BC  120A  118A  	fcall	i1_configADC2
  3930  06E5                     i1l1826:
  3931                           
  3932                           ;L3.c: 232:         pot2 = ADRESH;
  3933  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3934  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  3935  06E7  081E               	movf	30,w	;volatile
  3936  06E8  00FF               	movwf	btemp+1
  3937  06E9  087F               	movf	btemp+1,w
  3938  06EA  00B4               	movwf	_pot2
  3939  06EB                     i1l1828:
  3940                           
  3941                           ;L3.c: 233:         TOGGLE = 0;
  3942  06EB  01FC               	clrf	_TOGGLE
  3943  06EC                     i1l152:
  3944  06EC  0008               	return
  3945  06ED                     __end_of_pots:
  3946                           
  3947                           	psect	text19
  3948  02BC                     __ptext19:	
  3949 ;; *************** function i1_configADC2 *****************
  3950 ;; Defined at:
  3951 ;;		line 17 in file "adc2.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  fosc            1    wreg     unsigned char 
  3954 ;;  chan            1    0[COMMON] unsigned char 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  fosc            1    3[COMMON] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         1       0       0       0       0
  3967 ;;      Locals:         1       0       0       0       0
  3968 ;;      Temps:          2       0       0       0       0
  3969 ;;      Totals:         4       0       0       0       0
  3970 ;;Total ram usage:        4 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_pots
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           
  3980                           ;psect for function i1_configADC2
  3981  02BC                     i1_configADC2:
  3982                           
  3983                           ;incstack = 0
  3984                           ; Regs used in i1_configADC2: [wreg-fsr0h+status,2+status,0]
  3985                           ;i1configADC2@fosc stored from wreg
  3986  02BC  00F3               	movwf	i1configADC2@fosc
  3987  02BD                     i1l1746:
  3988                           
  3989                           ;adc2.c: 19:     switch (fosc) {
  3990  02BD  2ADB               	goto	i1l1760
  3991  02BE                     i1l1748:
  3992                           
  3993                           ;adc2.c: 22:             ADCON0bits.ADCS = 0b00;
  3994  02BE  303F               	movlw	-193
  3995  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  3996  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  3997  02C1  059F               	andwf	31,f	;volatile
  3998                           
  3999                           ;adc2.c: 23:             break;
  4000  02C2  2B40               	goto	i1l1798
  4001  02C3                     i1l1750:
  4002                           
  4003                           ;adc2.c: 26:             ADCON0bits.ADCS = 0b01;
  4004  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  4005  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  4006  02C5  081F               	movf	31,w	;volatile
  4007  02C6  393F               	andlw	-193
  4008  02C7  3840               	iorlw	64
  4009  02C8  009F               	movwf	31	;volatile
  4010                           
  4011                           ;adc2.c: 27:             break;
  4012  02C9  2B40               	goto	i1l1798
  4013  02CA                     i1l1752:
  4014                           
  4015                           ;adc2.c: 30:             ADCON0bits.ADCS = 0b10;
  4016  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  4017  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  4018  02CC  081F               	movf	31,w	;volatile
  4019  02CD  393F               	andlw	-193
  4020  02CE  3880               	iorlw	128
  4021  02CF  009F               	movwf	31	;volatile
  4022                           
  4023                           ;adc2.c: 31:             break;
  4024  02D0  2B40               	goto	i1l1798
  4025  02D1                     i1l1754:
  4026                           
  4027                           ;adc2.c: 34:             ADCON0bits.ADCS = 0b11;
  4028  02D1  30C0               	movlw	192
  4029  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  4030  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  4031  02D4  049F               	iorwf	31,f	;volatile
  4032                           
  4033                           ;adc2.c: 35:             break;
  4034  02D5  2B40               	goto	i1l1798
  4035  02D6                     i1l1756:
  4036                           
  4037                           ;adc2.c: 38:             ADCON0bits.ADCS = 0b00;
  4038  02D6  303F               	movlw	-193
  4039  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  4040  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  4041  02D9  059F               	andwf	31,f	;volatile
  4042                           
  4043                           ;adc2.c: 39:             break;
  4044  02DA  2B40               	goto	i1l1798
  4045  02DB                     i1l1760:
  4046  02DB  0873               	movf	i1configADC2@fosc,w
  4047  02DC  00F1               	movwf	??i1_configADC2
  4048  02DD  01F2               	clrf	??i1_configADC2+1
  4049                           
  4050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4051                           ; Switch size 1, requested type "simple"
  4052                           ; Number of cases is 1, Range of values is 0 to 0
  4053                           ; switch strategies available:
  4054                           ; Name         Instructions Cycles
  4055                           ; simple_byte            4     3 (average)
  4056                           ; direct_byte           11     8 (fixed)
  4057                           ; jumptable            260     6 (fixed)
  4058                           ;	Chosen strategy is simple_byte
  4059  02DE  0872               	movf	??i1_configADC2+1,w
  4060  02DF  3A00               	xorlw	0	; case 0
  4061  02E0  1903               	skipnz
  4062  02E1  2AE3               	goto	i1l2248
  4063  02E2  2AD6               	goto	i1l1756
  4064  02E3                     i1l2248:
  4065                           
  4066                           ; Switch size 1, requested type "simple"
  4067                           ; Number of cases is 4, Range of values is 0 to 3
  4068                           ; switch strategies available:
  4069                           ; Name         Instructions Cycles
  4070                           ; simple_byte           13     7 (average)
  4071                           ; direct_byte           20     8 (fixed)
  4072                           ; jumptable            260     6 (fixed)
  4073                           ;	Chosen strategy is simple_byte
  4074  02E3  0871               	movf	??i1_configADC2,w
  4075  02E4  3A00               	xorlw	0	; case 0
  4076  02E5  1903               	skipnz
  4077  02E6  2ABE               	goto	i1l1748
  4078  02E7  3A01               	xorlw	1	; case 1
  4079  02E8  1903               	skipnz
  4080  02E9  2AC3               	goto	i1l1750
  4081  02EA  3A03               	xorlw	3	; case 2
  4082  02EB  1903               	skipnz
  4083  02EC  2ACA               	goto	i1l1752
  4084  02ED  3A01               	xorlw	1	; case 3
  4085  02EE  1903               	skipnz
  4086  02EF  2AD1               	goto	i1l1754
  4087  02F0  2AD6               	goto	i1l1756
  4088  02F1                     i1l1762:
  4089                           
  4090                           ;adc2.c: 43:             ADCON0bits.CHS = 0b0000;
  4091  02F1  30C3               	movlw	-61
  4092  02F2  059F               	andwf	31,f	;volatile
  4093                           
  4094                           ;adc2.c: 44:             break;
  4095  02F3  2B7A               	goto	i1l1800
  4096  02F4                     i1l1764:
  4097                           
  4098                           ;adc2.c: 47:             ADCON0bits.CHS = 0b0001;
  4099  02F4  081F               	movf	31,w	;volatile
  4100  02F5  39C3               	andlw	-61
  4101  02F6  3804               	iorlw	4
  4102  02F7  009F               	movwf	31	;volatile
  4103                           
  4104                           ;adc2.c: 48:             break;
  4105  02F8  2B7A               	goto	i1l1800
  4106  02F9                     i1l1766:
  4107                           
  4108                           ;adc2.c: 51:             ADCON0bits.CHS = 0b0010;
  4109  02F9  081F               	movf	31,w	;volatile
  4110  02FA  39C3               	andlw	-61
  4111  02FB  3808               	iorlw	8
  4112  02FC  009F               	movwf	31	;volatile
  4113                           
  4114                           ;adc2.c: 52:             break;
  4115  02FD  2B7A               	goto	i1l1800
  4116  02FE                     i1l1768:
  4117                           
  4118                           ;adc2.c: 55:             ADCON0bits.CHS = 0b0011;
  4119  02FE  081F               	movf	31,w	;volatile
  4120  02FF  39C3               	andlw	-61
  4121  0300  380C               	iorlw	12
  4122  0301  009F               	movwf	31	;volatile
  4123                           
  4124                           ;adc2.c: 56:             break;
  4125  0302  2B7A               	goto	i1l1800
  4126  0303                     i1l1770:
  4127                           
  4128                           ;adc2.c: 59:             ADCON0bits.CHS = 0b0100;
  4129  0303  081F               	movf	31,w	;volatile
  4130  0304  39C3               	andlw	-61
  4131  0305  3810               	iorlw	16
  4132  0306  009F               	movwf	31	;volatile
  4133                           
  4134                           ;adc2.c: 60:             break;
  4135  0307  2B7A               	goto	i1l1800
  4136  0308                     i1l1772:
  4137                           
  4138                           ;adc2.c: 63:             ADCON0bits.CHS = 0b0101;
  4139  0308  081F               	movf	31,w	;volatile
  4140  0309  39C3               	andlw	-61
  4141  030A  3814               	iorlw	20
  4142  030B  009F               	movwf	31	;volatile
  4143                           
  4144                           ;adc2.c: 64:             break;
  4145  030C  2B7A               	goto	i1l1800
  4146  030D                     i1l1774:
  4147                           
  4148                           ;adc2.c: 67:             ADCON0bits.CHS = 0b0110;
  4149  030D  081F               	movf	31,w	;volatile
  4150  030E  39C3               	andlw	-61
  4151  030F  3818               	iorlw	24
  4152  0310  009F               	movwf	31	;volatile
  4153                           
  4154                           ;adc2.c: 68:             break;
  4155  0311  2B7A               	goto	i1l1800
  4156  0312                     i1l1776:
  4157                           
  4158                           ;adc2.c: 71:             ADCON0bits.CHS = 0b0111;
  4159  0312  081F               	movf	31,w	;volatile
  4160  0313  39C3               	andlw	-61
  4161  0314  381C               	iorlw	28
  4162  0315  009F               	movwf	31	;volatile
  4163                           
  4164                           ;adc2.c: 72:             break;
  4165  0316  2B7A               	goto	i1l1800
  4166  0317                     i1l1778:
  4167                           
  4168                           ;adc2.c: 75:             ADCON0bits.CHS = 0b1000;
  4169  0317  081F               	movf	31,w	;volatile
  4170  0318  39C3               	andlw	-61
  4171  0319  3820               	iorlw	32
  4172  031A  009F               	movwf	31	;volatile
  4173                           
  4174                           ;adc2.c: 76:             break;
  4175  031B  2B7A               	goto	i1l1800
  4176  031C                     i1l1780:
  4177                           
  4178                           ;adc2.c: 79:             ADCON0bits.CHS = 0b1001;
  4179  031C  081F               	movf	31,w	;volatile
  4180  031D  39C3               	andlw	-61
  4181  031E  3824               	iorlw	36
  4182  031F  009F               	movwf	31	;volatile
  4183                           
  4184                           ;adc2.c: 80:             break;
  4185  0320  2B7A               	goto	i1l1800
  4186  0321                     i1l1782:
  4187                           
  4188                           ;adc2.c: 83:             ADCON0bits.CHS = 0b1010;
  4189  0321  081F               	movf	31,w	;volatile
  4190  0322  39C3               	andlw	-61
  4191  0323  3828               	iorlw	40
  4192  0324  009F               	movwf	31	;volatile
  4193                           
  4194                           ;adc2.c: 84:             break;
  4195  0325  2B7A               	goto	i1l1800
  4196  0326                     i1l1784:
  4197                           
  4198                           ;adc2.c: 87:             ADCON0bits.CHS = 0b1011;
  4199  0326  081F               	movf	31,w	;volatile
  4200  0327  39C3               	andlw	-61
  4201  0328  382C               	iorlw	44
  4202  0329  009F               	movwf	31	;volatile
  4203                           
  4204                           ;adc2.c: 88:             break;
  4205  032A  2B7A               	goto	i1l1800
  4206  032B                     i1l1786:
  4207                           
  4208                           ;adc2.c: 91:             ADCON0bits.CHS = 0b1100;
  4209  032B  081F               	movf	31,w	;volatile
  4210  032C  39C3               	andlw	-61
  4211  032D  3830               	iorlw	48
  4212  032E  009F               	movwf	31	;volatile
  4213                           
  4214                           ;adc2.c: 92:             break;
  4215  032F  2B7A               	goto	i1l1800
  4216  0330                     i1l1788:
  4217                           
  4218                           ;adc2.c: 95:             ADCON0bits.CHS = 0b1101;
  4219  0330  081F               	movf	31,w	;volatile
  4220  0331  39C3               	andlw	-61
  4221  0332  3834               	iorlw	52
  4222  0333  009F               	movwf	31	;volatile
  4223                           
  4224                           ;adc2.c: 96:             break;
  4225  0334  2B7A               	goto	i1l1800
  4226  0335                     i1l1790:
  4227                           
  4228                           ;adc2.c: 99:             ADCON0bits.CHS = 0b1110;
  4229  0335  081F               	movf	31,w	;volatile
  4230  0336  39C3               	andlw	-61
  4231  0337  3838               	iorlw	56
  4232  0338  009F               	movwf	31	;volatile
  4233                           
  4234                           ;adc2.c: 100:             break;
  4235  0339  2B7A               	goto	i1l1800
  4236  033A                     i1l1792:
  4237                           
  4238                           ;adc2.c: 103:             ADCON0bits.CHS = 0b1111;
  4239  033A  303C               	movlw	60
  4240  033B  049F               	iorwf	31,f	;volatile
  4241                           
  4242                           ;adc2.c: 104:             break;
  4243  033C  2B7A               	goto	i1l1800
  4244  033D                     i1l1794:
  4245                           
  4246                           ;adc2.c: 107:             ADCON0bits.CHS = 0b0000;
  4247  033D  30C3               	movlw	-61
  4248  033E  059F               	andwf	31,f	;volatile
  4249                           
  4250                           ;adc2.c: 108:             break;
  4251  033F  2B7A               	goto	i1l1800
  4252  0340                     i1l1798:
  4253  0340  0870               	movf	i1configADC2@chan,w
  4254  0341  00F1               	movwf	??i1_configADC2
  4255  0342  01F2               	clrf	??i1_configADC2+1
  4256                           
  4257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4258                           ; Switch size 1, requested type "simple"
  4259                           ; Number of cases is 1, Range of values is 0 to 0
  4260                           ; switch strategies available:
  4261                           ; Name         Instructions Cycles
  4262                           ; simple_byte            4     3 (average)
  4263                           ; direct_byte           11     8 (fixed)
  4264                           ; jumptable            260     6 (fixed)
  4265                           ;	Chosen strategy is simple_byte
  4266  0343  0872               	movf	??i1_configADC2+1,w
  4267  0344  3A00               	xorlw	0	; case 0
  4268  0345  1903               	skipnz
  4269  0346  2B48               	goto	i1l2250
  4270  0347  2B3D               	goto	i1l1794
  4271  0348                     i1l2250:
  4272                           
  4273                           ; Switch size 1, requested type "simple"
  4274                           ; Number of cases is 16, Range of values is 0 to 15
  4275                           ; switch strategies available:
  4276                           ; Name         Instructions Cycles
  4277                           ; simple_byte           49    25 (average)
  4278                           ; direct_byte           56     8 (fixed)
  4279                           ; jumptable            260     6 (fixed)
  4280                           ;	Chosen strategy is simple_byte
  4281  0348  0871               	movf	??i1_configADC2,w
  4282  0349  3A00               	xorlw	0	; case 0
  4283  034A  1903               	skipnz
  4284  034B  2AF1               	goto	i1l1762
  4285  034C  3A01               	xorlw	1	; case 1
  4286  034D  1903               	skipnz
  4287  034E  2AF4               	goto	i1l1764
  4288  034F  3A03               	xorlw	3	; case 2
  4289  0350  1903               	skipnz
  4290  0351  2AF9               	goto	i1l1766
  4291  0352  3A01               	xorlw	1	; case 3
  4292  0353  1903               	skipnz
  4293  0354  2AFE               	goto	i1l1768
  4294  0355  3A07               	xorlw	7	; case 4
  4295  0356  1903               	skipnz
  4296  0357  2B03               	goto	i1l1770
  4297  0358  3A01               	xorlw	1	; case 5
  4298  0359  1903               	skipnz
  4299  035A  2B08               	goto	i1l1772
  4300  035B  3A03               	xorlw	3	; case 6
  4301  035C  1903               	skipnz
  4302  035D  2B0D               	goto	i1l1774
  4303  035E  3A01               	xorlw	1	; case 7
  4304  035F  1903               	skipnz
  4305  0360  2B12               	goto	i1l1776
  4306  0361  3A0F               	xorlw	15	; case 8
  4307  0362  1903               	skipnz
  4308  0363  2B17               	goto	i1l1778
  4309  0364  3A01               	xorlw	1	; case 9
  4310  0365  1903               	skipnz
  4311  0366  2B1C               	goto	i1l1780
  4312  0367  3A03               	xorlw	3	; case 10
  4313  0368  1903               	skipnz
  4314  0369  2B21               	goto	i1l1782
  4315  036A  3A01               	xorlw	1	; case 11
  4316  036B  1903               	skipnz
  4317  036C  2B26               	goto	i1l1784
  4318  036D  3A07               	xorlw	7	; case 12
  4319  036E  1903               	skipnz
  4320  036F  2B2B               	goto	i1l1786
  4321  0370  3A01               	xorlw	1	; case 13
  4322  0371  1903               	skipnz
  4323  0372  2B30               	goto	i1l1788
  4324  0373  3A03               	xorlw	3	; case 14
  4325  0374  1903               	skipnz
  4326  0375  2B35               	goto	i1l1790
  4327  0376  3A01               	xorlw	1	; case 15
  4328  0377  1903               	skipnz
  4329  0378  2B3A               	goto	i1l1792
  4330  0379  2B3D               	goto	i1l1794
  4331  037A                     i1l1800:
  4332                           
  4333                           ;adc2.c: 113:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4334  037A  300D               	movlw	13
  4335  037B  00F2               	movwf	??i1_configADC2+1
  4336  037C  30FB               	movlw	251
  4337  037D  00F1               	movwf	??i1_configADC2
  4338  037E                     u66_27:
  4339  037E  0BF1               	decfsz	??i1_configADC2,f
  4340  037F  2B7E               	goto	u66_27
  4341  0380  0BF2               	decfsz	??i1_configADC2+1,f
  4342  0381  2B7E               	goto	u66_27
  4343  0382  2B83               	nop2
  4344  0383                     i1l1802:
  4345                           
  4346                           ;adc2.c: 116:     ADCON0bits.GO_nDONE = 1;
  4347  0383  1283               	bcf	3,5	;RP0=0, select bank0
  4348  0384  1303               	bcf	3,6	;RP1=0, select bank0
  4349  0385  149F               	bsf	31,1	;volatile
  4350  0386                     i1l1804:
  4351                           
  4352                           ;adc2.c: 120:     ADCON0bits.ADON = 1;
  4353  0386  141F               	bsf	31,0	;volatile
  4354  0387                     i1l1806:
  4355                           
  4356                           ;adc2.c: 121:     ADCON1 = 0;
  4357  0387  1683               	bsf	3,5	;RP0=1, select bank1
  4358  0388  1303               	bcf	3,6	;RP1=0, select bank1
  4359  0389  019F               	clrf	31	;volatile
  4360  038A                     i1l259:
  4361  038A  0008               	return
  4362  038B                     __end_ofi1_configADC2:
  4363                           
  4364                           	psect	text20
  4365  0453                     __ptext20:	
  4366 ;; *************** function _mandar *****************
  4367 ;; Defined at:
  4368 ;;		line 255 in file "L3.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4382 ;;      Params:         0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0
  4384 ;;      Temps:          2       0       0       0       0
  4385 ;;      Totals:         2       0       0       0       0
  4386 ;;Total ram usage:        2 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_ISR
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           
  4396                           ;psect for function _mandar
  4397  0453                     _mandar:
  4398  0453                     i1l1854:	
  4399                           ;incstack = 0
  4400                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  4401                           
  4402                           
  4403                           ;L3.c: 256:     switch (SEND) {
  4404  0453  2C95               	goto	i1l1888
  4405  0454                     i1l1856:
  4406                           
  4407                           ;L3.c: 259:             TXREG = 0x28;
  4408  0454  3028               	movlw	40
  4409  0455  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0456  1303               	bcf	3,6	;RP1=0, select bank0
  4411  0457  0099               	movwf	25	;volatile
  4412                           
  4413                           ;L3.c: 260:             break;
  4414  0458  2CCC               	goto	i1l175
  4415  0459                     i1l1858:
  4416                           
  4417                           ;L3.c: 263:             TXREG = C1;
  4418  0459  1283               	bcf	3,5	;RP0=0, select bank0
  4419  045A  1303               	bcf	3,6	;RP1=0, select bank0
  4420  045B  082C               	movf	_C1,w
  4421  045C  0099               	movwf	25	;volatile
  4422                           
  4423                           ;L3.c: 264:             break;
  4424  045D  2CCC               	goto	i1l175
  4425  045E                     i1l1860:
  4426                           
  4427                           ;L3.c: 267:             TXREG = 0x2E;
  4428  045E  302E               	movlw	46
  4429  045F  1283               	bcf	3,5	;RP0=0, select bank0
  4430  0460  1303               	bcf	3,6	;RP1=0, select bank0
  4431  0461  0099               	movwf	25	;volatile
  4432                           
  4433                           ;L3.c: 268:             break;
  4434  0462  2CCC               	goto	i1l175
  4435  0463                     i1l1862:
  4436                           
  4437                           ;L3.c: 270:             TXREG = D1;
  4438  0463  1283               	bcf	3,5	;RP0=0, select bank0
  4439  0464  1303               	bcf	3,6	;RP1=0, select bank0
  4440  0465  082B               	movf	_D1,w
  4441  0466  0099               	movwf	25	;volatile
  4442                           
  4443                           ;L3.c: 271:             break;
  4444  0467  2CCC               	goto	i1l175
  4445  0468                     i1l1864:
  4446                           
  4447                           ;L3.c: 273:             TXREG = U1;
  4448  0468  1283               	bcf	3,5	;RP0=0, select bank0
  4449  0469  1303               	bcf	3,6	;RP1=0, select bank0
  4450  046A  082A               	movf	_U1,w
  4451  046B  0099               	movwf	25	;volatile
  4452                           
  4453                           ;L3.c: 274:             break;
  4454  046C  2CCC               	goto	i1l175
  4455  046D                     i1l1866:
  4456                           
  4457                           ;L3.c: 276:             TXREG = 0x29;
  4458  046D  3029               	movlw	41
  4459  046E  1283               	bcf	3,5	;RP0=0, select bank0
  4460  046F  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0470  0099               	movwf	25	;volatile
  4462                           
  4463                           ;L3.c: 277:             break;
  4464  0471  2CCC               	goto	i1l175
  4465  0472                     i1l1868:
  4466                           
  4467                           ;L3.c: 280:             TXREG = 0x2C;
  4468  0472  302C               	movlw	44
  4469  0473  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0474  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0475  0099               	movwf	25	;volatile
  4472                           
  4473                           ;L3.c: 281:             break;
  4474  0476  2CCC               	goto	i1l175
  4475  0477                     i1l1870:
  4476                           
  4477                           ;L3.c: 284:             TXREG = 0x20;
  4478  0477  3020               	movlw	32
  4479  0478  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0479  1303               	bcf	3,6	;RP1=0, select bank0
  4481  047A  0099               	movwf	25	;volatile
  4482                           
  4483                           ;L3.c: 285:             break;
  4484  047B  2CCC               	goto	i1l175
  4485  047C                     i1l1874:
  4486                           
  4487                           ;L3.c: 292:             TXREG = C2;
  4488  047C  1283               	bcf	3,5	;RP0=0, select bank0
  4489  047D  1303               	bcf	3,6	;RP1=0, select bank0
  4490  047E  0829               	movf	_C2,w
  4491  047F  0099               	movwf	25	;volatile
  4492                           
  4493                           ;L3.c: 293:             break;
  4494  0480  2CCC               	goto	i1l175
  4495  0481                     i1l1878:
  4496                           
  4497                           ;L3.c: 298:             TXREG = D2;
  4498  0481  1283               	bcf	3,5	;RP0=0, select bank0
  4499  0482  1303               	bcf	3,6	;RP1=0, select bank0
  4500  0483  0828               	movf	_D2,w
  4501  0484  0099               	movwf	25	;volatile
  4502                           
  4503                           ;L3.c: 299:             break;
  4504  0485  2CCC               	goto	i1l175
  4505  0486                     i1l1880:
  4506                           
  4507                           ;L3.c: 301:             TXREG = U2;
  4508  0486  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0487  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0488  0827               	movf	_U2,w
  4511  0489  0099               	movwf	25	;volatile
  4512                           
  4513                           ;L3.c: 303:             break;
  4514  048A  2CCC               	goto	i1l175
  4515  048B                     i1l1882:
  4516                           
  4517                           ;L3.c: 306:             TXREG = 0x29;
  4518  048B  3029               	movlw	41
  4519  048C  1283               	bcf	3,5	;RP0=0, select bank0
  4520  048D  1303               	bcf	3,6	;RP1=0, select bank0
  4521  048E  0099               	movwf	25	;volatile
  4522  048F                     i1l174:	
  4523                           ;L3.c: 309:         case 14:
  4524                           
  4525                           
  4526                           ;L3.c: 310:             TXREG = 0x0D;
  4527  048F  300D               	movlw	13
  4528  0490  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0491  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0492  0099               	movwf	25	;volatile
  4531  0493                     i1l1884:
  4532                           
  4533                           ;L3.c: 311:             SEND = 0;
  4534  0493  01FA               	clrf	_SEND
  4535                           
  4536                           ;L3.c: 312:             break;
  4537  0494  2CCC               	goto	i1l175
  4538  0495                     i1l1888:
  4539  0495  087A               	movf	_SEND,w
  4540  0496  00F0               	movwf	??_mandar
  4541  0497  01F1               	clrf	??_mandar+1
  4542                           
  4543                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4544                           ; Switch size 1, requested type "simple"
  4545                           ; Number of cases is 1, Range of values is 0 to 0
  4546                           ; switch strategies available:
  4547                           ; Name         Instructions Cycles
  4548                           ; simple_byte            4     3 (average)
  4549                           ; direct_byte           11     8 (fixed)
  4550                           ; jumptable            260     6 (fixed)
  4551                           ;	Chosen strategy is simple_byte
  4552  0498  0871               	movf	??_mandar+1,w
  4553  0499  3A00               	xorlw	0	; case 0
  4554  049A  1903               	skipnz
  4555  049B  2C9D               	goto	i1l2252
  4556  049C  2CCC               	goto	i1l175
  4557  049D                     i1l2252:
  4558                           
  4559                           ; Switch size 1, requested type "simple"
  4560                           ; Number of cases is 15, Range of values is 0 to 14
  4561                           ; switch strategies available:
  4562                           ; Name         Instructions Cycles
  4563                           ; simple_byte           46    24 (average)
  4564                           ; direct_byte           53     8 (fixed)
  4565                           ; jumptable            260     6 (fixed)
  4566                           ;	Chosen strategy is simple_byte
  4567  049D  0870               	movf	??_mandar,w
  4568  049E  3A00               	xorlw	0	; case 0
  4569  049F  1903               	skipnz
  4570  04A0  2C54               	goto	i1l1856
  4571  04A1  3A01               	xorlw	1	; case 1
  4572  04A2  1903               	skipnz
  4573  04A3  2C59               	goto	i1l1858
  4574  04A4  3A03               	xorlw	3	; case 2
  4575  04A5  1903               	skipnz
  4576  04A6  2C5E               	goto	i1l1860
  4577  04A7  3A01               	xorlw	1	; case 3
  4578  04A8  1903               	skipnz
  4579  04A9  2C63               	goto	i1l1862
  4580  04AA  3A07               	xorlw	7	; case 4
  4581  04AB  1903               	skipnz
  4582  04AC  2C68               	goto	i1l1864
  4583  04AD  3A01               	xorlw	1	; case 5
  4584  04AE  1903               	skipnz
  4585  04AF  2C6D               	goto	i1l1866
  4586  04B0  3A03               	xorlw	3	; case 6
  4587  04B1  1903               	skipnz
  4588  04B2  2C72               	goto	i1l1868
  4589  04B3  3A01               	xorlw	1	; case 7
  4590  04B4  1903               	skipnz
  4591  04B5  2C77               	goto	i1l1870
  4592  04B6  3A0F               	xorlw	15	; case 8
  4593  04B7  1903               	skipnz
  4594  04B8  2C54               	goto	i1l1856
  4595  04B9  3A01               	xorlw	1	; case 9
  4596  04BA  1903               	skipnz
  4597  04BB  2C7C               	goto	i1l1874
  4598  04BC  3A03               	xorlw	3	; case 10
  4599  04BD  1903               	skipnz
  4600  04BE  2C5E               	goto	i1l1860
  4601  04BF  3A01               	xorlw	1	; case 11
  4602  04C0  1903               	skipnz
  4603  04C1  2C81               	goto	i1l1878
  4604  04C2  3A07               	xorlw	7	; case 12
  4605  04C3  1903               	skipnz
  4606  04C4  2C86               	goto	i1l1880
  4607  04C5  3A01               	xorlw	1	; case 13
  4608  04C6  1903               	skipnz
  4609  04C7  2C8B               	goto	i1l1882
  4610  04C8  3A03               	xorlw	3	; case 14
  4611  04C9  1903               	skipnz
  4612  04CA  2C8F               	goto	i1l174
  4613  04CB  2CCC               	goto	i1l175
  4614  04CC                     i1l175:
  4615  04CC  0008               	return
  4616  04CD                     __end_of_mandar:
  4617  007E                     btemp	set	126	;btemp
  4618  007E                     wtemp0	set	126
  4619                           
  4620                           	psect	config
  4621                           
  4622                           ;Config register CONFIG1 @ 0x2007
  4623                           ;	Oscillator Selection bits
  4624                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4625                           ;	Watchdog Timer Enable bit
  4626                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4627                           ;	Power-up Timer Enable bit
  4628                           ;	PWRTE = OFF, PWRT disabled
  4629                           ;	RE3/MCLR pin function select bit
  4630                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4631                           ;	Code Protection bit
  4632                           ;	CP = OFF, Program memory code protection is disabled
  4633                           ;	Data Code Protection bit
  4634                           ;	CPD = OFF, Data memory code protection is disabled
  4635                           ;	Brown Out Reset Selection bits
  4636                           ;	BOREN = OFF, BOR disabled
  4637                           ;	Internal External Switchover bit
  4638                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4639                           ;	Fail-Safe Clock Monitor Enabled bit
  4640                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4641                           ;	Low Voltage Programming Enable bit
  4642                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4643                           ;	In-Circuit Debugger Mode bit
  4644                           ;	DEBUG = 0x1, unprogrammed default
  4645  2007                     	org	8199
  4646  2007  20D4               	dw	8404
  4647                           
  4648                           ;Config register CONFIG2 @ 0x2008
  4649                           ;	Brown-out Reset Selection bit
  4650                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4651                           ;	Flash Program Memory Self Write Enable bits
  4652                           ;	WRT = OFF, Write protection off
  4653  2008                     	org	8200
  4654  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     22      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[5]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _pots->i1_configADC2

Critical Paths under _main in BANK0

    _main->_map
    _map2->___awdiv
    _map->___awdiv
    ___awdiv->___wmul
    _Setup->_Lcd_Cmd
    _Setup->_configADC2
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8933
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _Setup
                                _map
                               _map2
 ---------------------------------------------------------------------------------
 (1) _map2                                                 2     2      0    3524
                                             14 BANK0      2     2      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _map                                                  8     8      0    3570
                                             14 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     548
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1820
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     330
                            _Lcd_Cmd
                           _Lcd_Init
                         _configADC2
                            _initOsc
                              _usart
 ---------------------------------------------------------------------------------
 (2) _usart                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _configADC2                                           4     3      1     220
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     299
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1    1166
                                              4 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0      96
                                              4 COMMON     4     4      0
                             _mandar
                               _pots
                            _recibir
 ---------------------------------------------------------------------------------
 (6) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pots                                                 0     0      0      96
                       i1_configADC2
 ---------------------------------------------------------------------------------
 (7) i1_configADC2                                         4     3      1      96
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
     _configADC2
     _initOsc
     _usart
   _map
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _map2
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul

 _ISR (ROOT)
   _mandar
   _pots
     i1_configADC2
   _recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 08 12:40:21 2021

                        pc 0002             ___bmul@product 0037                         _C1 002C  
                       _C2 0029                         _D1 002B                         _D2 0028  
                       _R1 0079                         _R2 0078                         _U1 002A  
                       _U2 0027               ___awdiv@sign 0041                         fsr 0004  
      ___wmul@multiplicand 0038                        l212 07B0                        l206 0762  
                      l209 0797                        l218 0715                        l402 07C7  
                      l147 064D                        l155 019E                        l280 05A8  
                      l281 0600                        l185 053A                        l194 07FD  
                      l290 0601                        l282 05AE                        l274 07DC  
                      l259 0452                        l283 05B4                        l284 05BA  
                      l197 077E                        l285 05C0                        l286 05C6  
                      l287 05CC                        l288 05D2                        l376 0724  
                      l289 05D8                        l529 05A3                        l378 073C  
                      _CO1 0022                        _CO2 0021                        _CP1 0032  
                      _CO3 0020                        _CP2 002F                        _DP1 0031  
                      _DP2 002E                        u400 055E                        u320 071E  
                      u401 055D                        u321 071D                        u420 0570  
                      u421 056F                        _REC 007B                        u350 0738  
                      u415 0562                        u351 0737                        u335 0725  
                      u440 0581                        u360 07B9                        u441 0580  
                      u361 07B8                        u345 072C                        u370 07C6  
                      u435 0571                        u371 07C5                        u460 0595  
                      u380 0542                        u620 01EA                        _ISR 064E  
                      u461 0594                        u445 057D                        u381 0541  
                      u621 01E9                        u550 0745                        u470 059A  
                      u390 054D                        u551 0744                        u471 0599  
                      u455 0589                        u391 054C                        u560 0757  
                      u561 0756                        u570 0715                        u571 0714  
                      u637 0447                        _UP1 0030                        _UP2 002D  
                      u647 07A9                        u657 0776                        _map 0028  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l2020 01A4                       l2030 01D2                       l2022 01AE  
                     l2040 01EB                       l2032 01D8                       l2024 01B4  
                     l2050 020C                       l2042 01EC                       l2034 01DD  
                     l2026 01C0                       l2018 019F                       l2060 023A  
                     l2052 0212                       l2044 01EF                       l2036 01E2  
                     l2028 01C6                       l2070 0268                       l2062 0242  
                     l2054 021A                       l2046 01F8                       l2038 01EA  
                     l1600 03C0                       l2080 029C                       l2072 0274  
                     l2064 024E                       l2056 0226                       l2048 0200  
                     l1610 03D9                       l1602 03C5                       l2242 05E6  
                     l2082 02A4                       l2074 027C                       l2066 0254  
                     l2058 022E                       l1620 03F2                       l1612 03DE  
                     l1604 03CA                       l2244 03AA                       l2084 02B0  
                     l2076 0288                       l2068 0260                       l1550 076F  
                     l2246 040F                       l1622 03F7                       l1614 03E3  
                     l1606 03CF                       l1710 0549                       l1702 053B  
                     l2078 0290                       l1544 07FB                       l1552 0770  
                     l1560 07A2                       l1640 044F                       l1624 03FC  
                     l1616 03E8                       l1608 03D4                       l1632 0407  
                     l1720 055E                       l1712 054D                       l1704 053E  
                     l1554 077B                       l1546 0766                       l1562 07A5  
                     l1626 0401                       l1618 03ED                       l1634 0441  
                     l1730 0581                       l1722 0561                       l1714 0552  
                     l1706 0542                       l1548 076C                       l1564 07AC  
                     l1556 079B                       l1636 044B                       l1628 0404  
                     l1580 038E                       l1572 05DE                       l1660 07D5  
                     l1900 0618                       l1740 059A                       l1732 0587  
                     l1724 0568                       l1716 0556                       l1708 0547  
                     l1566 07AF                       l1558 079C                       l1670 077F  
                     l1638 044E                       l1590 039F                       l1582 038F  
                     l1662 07D6                       l1654 07C8                       l1910 062D  
                     l1902 061D                       l1742 059F                       l1734 0588  
                     l1726 056C                       l1718 0558                       l1584 0392  
                     l1568 05A7                       l1664 07D7                       l1656 07D0  
                     l1920 0634                       l1912 0630                       l1904 0622  
                     l1736 058F                       l1728 0570                       l1680 0732  
                     l1672 0716                       l1586 0397                       l1594 03A2  
                     l1666 07DA                       l1658 07D3                       l1930 063E  
                     l1922 0638                       l1914 0631                       l1906 0628  
                     l1738 0595                       l1690 07B9                       l1682 0738  
                     l1674 071A                       l1596 03B8                       l1588 039C  
                     l1668 07DB                       l1940 0645                       l1932 063F  
                     l1924 0639                       l1916 0632                       l1908 062B  
                     l1692 07BD                       l1676 071E                       l1950 0745  
                     l1598 03BB                       l1942 0646                       l1934 0640  
                     l1926 063B                       l1918 0633                       l1694 07BF  
                     l1686 07B4                       l1678 072B                       l1952 074A  
                     l1960 06F0                       l1944 0649                       l1936 0641  
                     l1928 063D                       l1696 07C1                       l1688 07B5  
                     l1954 0751                       l1962 06F3                       l1946 064A  
                     l1938 0642                       l1698 07C6                       l1970 0180  
                     l1956 0757                       l1948 0740                       l1964 0700  
                     l1980 0199                       l1972 0185                       l1958 075C  
                     l1966 0708                       l1894 0602                       l1974 018A  
                     l1982 04CD                       ?_map 0070                       l1896 0606  
                     l1976 018F                       l1968 0028                       l1984 052B  
                     l1898 060C                       l1978 0194                       l1986 0530  
                     l1988 0535                       STR_1 07E8                       STR_2 07EB  
                     STR_3 07E3                       STR_4 07EE                       STR_5 07EE  
                     _CONT 0026                       _SEND 007A                       _TMR0 0001  
        ?_Lcd_Write_String 0070                       _map2 04CD                       _main 019F  
                     _pot1 0035                       _pot2 0034                       _pots 06C3  
                     btemp 007E                       start 0012         ??_Lcd_Write_String 0039  
          __end_of_Lcd_Cmd 077F          ___bmul@multiplier 0038                      ??_ISR 0074  
    __size_ofi1_configADC2 00CF                      ??_map 0044                      ?_map2 0070  
                    ?_main 0070            __end_of___awdiv 05A4                      ?_pots 0070  
                    _ANSEL 0188            ___awdiv@divisor 003C                      _CONTC 0025  
                    _CONTD 0024                      _CONTU 0023                      i1l135 0684  
                    i1l152 06EC                      i1l174 048F                      i1l182 06C2  
                    i1l175 04CC                      i1l259 038A            ___awdiv@counter 0040  
                    _RCREG 001A                      u50_20 069E                      u50_21 069D  
                    _SPBRG 0099                      u51_20 06A3                      u51_21 06A2  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u52_20 06B0  
                    u60_20 0669                      u52_21 06AF                      u60_21 0668  
                    u53_20 06B8                      u61_20 0678                      u53_21 06B7  
                    u61_21 0677                      u54_20 06BD                      u54_21 06BC  
                    u48_20 06C8                      u48_21 06C7                      u49_20 0696  
                    u49_21 0695    __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      u58_20 0652                      u58_21 0651  
                    u66_27 037E                      u59_20 065D                      u59_21 065C  
                    _TXREG 0019                      _Setup 0602            __end_of_initOsc 0602  
          __end_of_recibir 06C3                      _usart 07C8                      pclath 000A  
                    status 0003                      wtemp0 007E               i1_configADC2 02BC  
         __end_of_Lcd_Init 0798           __end_of_Lcd_Port 07FE            __initialization 0015  
             __end_of_map2 053B               __end_of_main 02BC               __end_of_pots 06ED  
                   ??_map2 0044                     ??_main 004C                     ??_pots 0074  
                   ?_Setup 0070                     _ADCON1 009F                     _ADRESH 001E  
              initOsc@IRCF 0038           ___awdiv@dividend 003E                     _ANSELH 0189  
                   ?_usart 0070                     i1l2000 065D                     i1l2010 0672  
                   i1l2002 0662                     i1l2012 0678                     i1l2004 0665  
                   i1l2014 067D                     i1l2006 0669                     i1l2016 0681  
                   i1l2008 066D                     i1l2250 0348                     i1l2252 049D  
                   i1l1800 037A                     i1l2248 02E3                     i1l1802 0383  
                   i1l1804 0386                     i1l1820 06D2                     i1l1806 0387  
                   i1l1750 02C3                     i1l1822 06D8                     i1l1830 0690  
                   i1l1752 02CA                     i1l1760 02DB                     i1l1824 06DB  
                   i1l1816 06C3                     i1l1840 06A4                     i1l1832 0696  
                   i1l1770 0303                     i1l1762 02F1                     i1l1754 02D1  
                   i1l1746 02BD                     i1l1826 06E5                     i1l1818 06C8  
                   i1l1850 06BD                     i1l1842 06AA                     i1l1834 0698  
                   i1l1860 045E                     i1l1780 031C                     i1l1772 0308  
                   i1l1764 02F4                     i1l1756 02D6                     i1l1748 02BE  
                   i1l1828 06EB                     i1l1852 06BE                     i1l1844 06B0  
                   i1l1836 069E                     i1l1870 0477                     i1l1862 0463  
                   i1l1854 0453                     i1l1790 0335                     i1l1782 0321  
                   i1l1774 030D                     i1l1766 02F9                     i1l1846 06B2  
                   i1l1838 06A3                     i1l1880 0486                     i1l1864 0468  
                   i1l1856 0454                     i1l1792 033A                     i1l1784 0326  
                   i1l1776 0312                     i1l1768 02FE                     i1l1848 06B8  
                   i1l1882 048B                     i1l1874 047C                     i1l1866 046D  
                   i1l1858 0459                     i1l1794 033D                     i1l1786 032B  
                   i1l1778 0317                     i1l1884 0493                     i1l1868 0472  
                   i1l1788 0330                     i1l1878 0481                     i1l1798 0340  
                   i1l1990 064E                     i1l1888 0495                     i1l1992 0652  
                   i1l1994 0654                     i1l1996 0658                     i1l1998 0659  
                ??_Lcd_Cmd 0037                     _SPBRGH 009A                     _TOGGLE 007C  
  __size_of_Lcd_Write_Char 0019                     ___bmul 07B1                     ___wmul 0716  
                ??___awdiv 0040                     _mandar 0453           ___awdiv@quotient 0042  
                ??_initOsc 0036                  ??_recibir 0070                     saved_w 007E  
          Lcd_Set_Cursor@a 003B            Lcd_Set_Cursor@b 003A    __end_of__initialization 0024  
         i1configADC2@chan 0070           i1configADC2@fosc 0073        ___bmul@multiplicand 0036  
           __pcstackCOMMON 0070              __end_of_Setup 064E              __end_of_usart 07DD  
           _Lcd_Set_Cursor 073D                    ??_Setup 003A                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_usart 0036                 __pbssBANK0 0020  
               __pmaintext 019F                    ?___bmul 0036                    ?___wmul 0036  
               __pintentry 0004                    ?_mandar 0070  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 0763                    _FLAGADC 007D                    _CONTADC 0033  
               _configADC2 038B                 ??_Lcd_Init 003A                 ??_Lcd_Port 0036  
               __stringtab 07DD             _Lcd_Write_Char 0798                    _Lcd_Cmd 0763  
          __size_of___bmul 0017                    ___awdiv 053B            __size_of___wmul 0027  
          __size_of_mandar 007A            ?_Lcd_Set_Cursor 003A                    __ptext1 04CD  
                  __ptext2 0028                    __ptext3 0716                    __ptext4 07B1  
                  __ptext5 053B                    __ptext6 0602                    __ptext7 07C8  
                  __ptext8 05A4                    __ptext9 038B               __size_of_ISR 0042  
                  _initOsc 05A4               __size_of_map 0177                    _recibir 0690  
                  clrloop0 07F1     __end_of_Lcd_Write_Char 07B1       end_of_initialization 0024  
                _RCSTAbits 0018                  Lcd_Port@a 0036                  _PORTEbits 0009  
              ?_configADC2 0036            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 003B  
        Lcd_Write_String@i 0039                  _TXSTAbits 0098             __end_of___bmul 07C8  
           __end_of___wmul 073D           _Lcd_Write_String 06ED                _BAUDCTLbits 0187  
           __end_of_mandar 04CD        start_initialization 0015                __end_of_ISR 0690  
              __end_of_map 019F          __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006  
      __size_of_configADC2 00C8                   ??___bmul 0037                   ??___wmul 003A  
                 ??_mandar 0070            Lcd_Write_Char@a 0038                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0036                   ?_Lcd_Cmd 0070  
            ?i1_configADC2 0070           ??_Lcd_Set_Cursor 003B                   ?___awdiv 003C  
                __pstrings 07DD                   ?_initOsc 0070                   ?_recibir 0070  
           __size_of_Setup 004C             __size_of_usart 0015          interrupt_function 0004  
           ___wmul@product 003A             ??i1_configADC2 0071                  clear_ram0 07F0  
                 _PIE1bits 008C                   Lcd_Cmd@a 0039                   _PIR1bits 000C  
               _ADCON0bits 001F                __stringbase 07E2          ___wmul@multiplier 0036  
             ??_configADC2 0037           ??_Lcd_Write_Char 0037                   _Lcd_Init 077F  
                 _Lcd_Port 07F8   __end_of_Lcd_Write_String 0716           __size_of_Lcd_Cmd 001C  
       __end_of_configADC2 0453           __size_of___awdiv 0069                   _map$1137 004A  
       __end_of__stringtab 07E3           __size_of_initOsc 005E           __size_of_recibir 0033  
                 __ptext10 077F                   __ptext11 06ED                   __ptext20 0453  
                 __ptext12 0798                   __ptext13 073D                   __ptext14 0763  
                 __ptext15 07F8                   __ptext16 064E                   __ptext17 0690  
                 __ptext18 06C3                   __ptext19 02BC              __size_of_map2 006E  
            __size_of_main 011D              __size_of_pots 002A       __end_ofi1_configADC2 038B  
               _INTCONbits 000B                   intlevel1 0000                  stringcode 07DD  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 003C             configADC2@chan 0036  
               _OPTION_REG 0081             configADC2@fosc 0039                   stringdir 07DD  
                 stringtab 07DD  
