

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 08 01:27:20 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 09/04/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0088                     	;# 
   497  0089                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  008F                     	;# 
   502  0090                     	;# 
   503  0091                     	;# 
   504  0092                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0093                     	;# 
   508  0094                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0097                     	;# 
   512  0098                     	;# 
   513  0099                     	;# 
   514  009A                     	;# 
   515  009B                     	;# 
   516  009C                     	;# 
   517  009D                     	;# 
   518  009E                     	;# 
   519  009F                     	;# 
   520  0105                     	;# 
   521  0107                     	;# 
   522  0108                     	;# 
   523  0109                     	;# 
   524  010C                     	;# 
   525  010C                     	;# 
   526  010D                     	;# 
   527  010E                     	;# 
   528  010F                     	;# 
   529  0185                     	;# 
   530  0187                     	;# 
   531  0188                     	;# 
   532  0189                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  0018                     _RCSTAbits	set	24
   536  0009                     _PORTEbits	set	9
   537  0019                     _TXREG	set	25
   538  001E                     _ADRESH	set	30
   539  0009                     _PORTE	set	9
   540  0008                     _PORTD	set	8
   541  0007                     _PORTC	set	7
   542  0006                     _PORTB	set	6
   543  0005                     _PORTA	set	5
   544  001F                     _ADCON0bits	set	31
   545  001A                     _RCREG	set	26
   546  000C                     _PIR1bits	set	12
   547  0001                     _TMR0	set	1
   548  000B                     _INTCONbits	set	11
   549  008F                     _OSCCONbits	set	143
   550  0099                     _SPBRG	set	153
   551  009A                     _SPBRGH	set	154
   552  0098                     _TXSTAbits	set	152
   553  009F                     _ADCON1	set	159
   554  0081                     _OPTION_REG	set	129
   555  0086                     _TRISB	set	134
   556  0085                     _TRISA	set	133
   557  0087                     _TRISC	set	135
   558  0089                     _TRISE	set	137
   559  0088                     _TRISD	set	136
   560  008C                     _PIE1bits	set	140
   561  0187                     _BAUDCTLbits	set	391
   562  0189                     _ANSELH	set	393
   563  0188                     _ANSEL	set	392
   564                           
   565                           	psect	strings
   566  067A                     __pstrings:
   567  067A                     stringtab:
   568  067A                     __stringtab:
   569  067A                     stringcode:	
   570                           ;	String table - string pointers are 1 byte each
   571                           
   572  067A                     stringdir:
   573  067A  3006               	movlw	high stringdir
   574  067B  008A               	movwf	10
   575  067C  0804               	movf	4,w
   576  067D  0A84               	incf	4,f
   577  067E  0782               	addwf	2,f
   578  067F                     __stringbase:
   579  067F  3400               	retlw	0
   580  0680                     __end_of__stringtab:
   581  0680                     STR_3:
   582  0680  3443               	retlw	67	;'C'
   583  0681  344F               	retlw	79	;'O'
   584  0682  344E               	retlw	78	;'N'
   585  0683  3454               	retlw	84	;'T'
   586  0684  3400               	retlw	0
   587  0685                     STR_1:
   588  0685  3456               	retlw	86	;'V'
   589  0686  3431               	retlw	49	;'1'
   590  0687  3400               	retlw	0
   591  0688                     STR_2:
   592  0688  3456               	retlw	86	;'V'
   593  0689  3432               	retlw	50	;'2'
   594  068A  3400               	retlw	0
   595                           
   596                           	psect	cinit
   597  0015                     start_initialization:	
   598                           ; #config settings
   599                           
   600  0015                     __initialization:
   601                           
   602                           ; Clear objects allocated to COMMON
   603  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   604  0016  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   605  0017  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   606  0018  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   607                           
   608                           ; Clear objects allocated to BANK0
   609  0019  1283               	bcf	3,5	;RP0=0, select bank0
   610  001A  1303               	bcf	3,6	;RP1=0, select bank0
   611  001B  01B6               	clrf	__pbssBANK0& (0+127)
   612  001C  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   613  001D  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   614  001E  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   615  001F  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   616  0020  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   617  0021  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   618  0022  01BD               	clrf	(__pbssBANK0+7)& (0+127)
   619  0023  01BE               	clrf	(__pbssBANK0+8)& (0+127)
   620  0024  01BF               	clrf	(__pbssBANK0+9)& (0+127)
   621  0025  01C0               	clrf	(__pbssBANK0+10)& (0+127)
   622  0026  01C1               	clrf	(__pbssBANK0+11)& (0+127)
   623  0027  01C2               	clrf	(__pbssBANK0+12)& (0+127)
   624  0028  01C3               	clrf	(__pbssBANK0+13)& (0+127)
   625  0029  01C4               	clrf	(__pbssBANK0+14)& (0+127)
   626  002A                     end_of_initialization:	
   627                           ;End of C runtime variable initialization code
   628                           
   629  002A                     __end_of__initialization:
   630  002A  0183               	clrf	3
   631  002B  120A  118A  2C7E   	ljmp	_main	;jump to C main() function
   632                           
   633                           	psect	bssCOMMON
   634  0078                     __pbssCOMMON:
   635  0078                     _SEND:
   636  0078                     	ds	1
   637  0079                     _REC:
   638  0079                     	ds	1
   639  007A                     _TOGGLE:
   640  007A                     	ds	1
   641  007B                     _FLAGADC:
   642  007B                     	ds	1
   643                           
   644                           	psect	bssBANK0
   645  0036                     __pbssBANK0:
   646  0036                     _U2:
   647  0036                     	ds	1
   648  0037                     _D2:
   649  0037                     	ds	1
   650  0038                     _C2:
   651  0038                     	ds	1
   652  0039                     _U1:
   653  0039                     	ds	1
   654  003A                     _D1:
   655  003A                     	ds	1
   656  003B                     _C1:
   657  003B                     	ds	1
   658  003C                     _UP2:
   659  003C                     	ds	1
   660  003D                     _DP2:
   661  003D                     	ds	1
   662  003E                     _CP2:
   663  003E                     	ds	1
   664  003F                     _UP1:
   665  003F                     	ds	1
   666  0040                     _DP1:
   667  0040                     	ds	1
   668  0041                     _CP1:
   669  0041                     	ds	1
   670  0042                     _CONTADC:
   671  0042                     	ds	1
   672  0043                     _pot2:
   673  0043                     	ds	1
   674  0044                     _pot1:
   675  0044                     	ds	1
   676                           
   677                           	psect	cstackCOMMON
   678  0070                     __pcstackCOMMON:
   679  0070                     ?_pots:
   680  0070                     ?_mandar:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ??_mandar:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_Setup:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Lcd_Write_String:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_map:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_initOsc:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_usart:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_Lcd_Init:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_Lcd_Cmd:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_ISR:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_main:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_Lcd_Port:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_Lcd_Write_Char:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?i1_configADC2:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     i1configADC2@chan:	
   723                           ; 1 bytes @ 0x0
   724                           
   725                           
   726                           ; 1 bytes @ 0x0
   727  0070                     	ds	1
   728  0071                     ??i1_configADC2:
   729                           
   730                           ; 1 bytes @ 0x1
   731  0071                     	ds	2
   732  0073                     i1configADC2@fosc:
   733                           
   734                           ; 1 bytes @ 0x3
   735  0073                     	ds	1
   736  0074                     ??_pots:
   737  0074                     ??_ISR:	
   738                           ; 1 bytes @ 0x4
   739                           
   740                           
   741                           ; 1 bytes @ 0x4
   742  0074                     	ds	4
   743                           
   744                           	psect	cstackBANK0
   745  0020                     __pcstackBANK0:
   746  0020                     ??_initOsc:
   747  0020                     ?_configADC2:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0020                     ??_usart:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0020                     ??_Lcd_Port:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0020                     ?___bmul:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0020                     ?___wmul:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0020                     Lcd_Port@a:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0020                     configADC2@chan:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0020                     ___bmul@multiplicand:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0020                     ___wmul@multiplier:	
   772                           ; 1 bytes @ 0x0
   773                           
   774                           
   775                           ; 2 bytes @ 0x0
   776  0020                     	ds	1
   777  0021                     ??_configADC2:
   778  0021                     ??_Lcd_Cmd:	
   779                           ; 1 bytes @ 0x1
   780                           
   781  0021                     ??_Lcd_Write_Char:	
   782                           ; 1 bytes @ 0x1
   783                           
   784  0021                     ??___bmul:	
   785                           ; 1 bytes @ 0x1
   786                           
   787  0021                     ___bmul@product:	
   788                           ; 1 bytes @ 0x1
   789                           
   790                           
   791                           ; 1 bytes @ 0x1
   792  0021                     	ds	1
   793  0022                     Lcd_Write_Char@a:
   794  0022                     initOsc@IRCF:	
   795                           ; 1 bytes @ 0x2
   796                           
   797  0022                     ___bmul@multiplier:	
   798                           ; 1 bytes @ 0x2
   799                           
   800  0022                     ___wmul@multiplicand:	
   801                           ; 1 bytes @ 0x2
   802                           
   803                           
   804                           ; 2 bytes @ 0x2
   805  0022                     	ds	1
   806  0023                     ??_Lcd_Write_String:
   807  0023                     Lcd_Cmd@a:	
   808                           ; 1 bytes @ 0x3
   809                           
   810  0023                     configADC2@fosc:	
   811                           ; 1 bytes @ 0x3
   812                           
   813  0023                     Lcd_Write_String@i:	
   814                           ; 1 bytes @ 0x3
   815                           
   816                           
   817                           ; 2 bytes @ 0x3
   818  0023                     	ds	1
   819  0024                     ??_Setup:
   820  0024                     ?_Lcd_Set_Cursor:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0024                     ??_Lcd_Init:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0024                     ??___wmul:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0024                     Lcd_Set_Cursor@b:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0024                     ___wmul@product:	
   833                           ; 1 bytes @ 0x4
   834                           
   835                           
   836                           ; 2 bytes @ 0x4
   837  0024                     	ds	1
   838  0025                     ??_Lcd_Set_Cursor:
   839  0025                     Lcd_Set_Cursor@a:	
   840                           ; 1 bytes @ 0x5
   841                           
   842  0025                     Lcd_Write_String@a:	
   843                           ; 1 bytes @ 0x5
   844                           
   845                           
   846                           ; 1 bytes @ 0x5
   847  0025                     	ds	1
   848  0026                     ?___awdiv:
   849  0026                     Lcd_Set_Cursor@temp:	
   850                           ; 2 bytes @ 0x6
   851                           
   852  0026                     ___awdiv@divisor:	
   853                           ; 1 bytes @ 0x6
   854                           
   855                           
   856                           ; 2 bytes @ 0x6
   857  0026                     	ds	2
   858  0028                     ___awdiv@dividend:
   859                           
   860                           ; 2 bytes @ 0x8
   861  0028                     	ds	2
   862  002A                     ??___awdiv:
   863  002A                     ___awdiv@counter:	
   864                           ; 1 bytes @ 0xA
   865                           
   866                           
   867                           ; 1 bytes @ 0xA
   868  002A                     	ds	1
   869  002B                     ___awdiv@sign:
   870                           
   871                           ; 1 bytes @ 0xB
   872  002B                     	ds	1
   873  002C                     ___awdiv@quotient:
   874                           
   875                           ; 2 bytes @ 0xC
   876  002C                     	ds	2
   877  002E                     ??_map:
   878                           
   879                           ; 1 bytes @ 0xE
   880  002E                     	ds	6
   881  0034                     _map$1114:
   882                           
   883                           ; 2 bytes @ 0x14
   884  0034                     	ds	2
   885  0036                     ??_main:
   886                           
   887                           	psect	maintext
   888  047E                     __pmaintext:	
   889                           ; 1 bytes @ 0x16
   890 ;;
   891 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   892 ;;
   893 ;; *************** function _main *****************
   894 ;; Defined at:
   895 ;;		line 105 in file "L3.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : B00/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels required when called:    7
   915 ;; This function calls:
   916 ;;		_Lcd_Set_Cursor
   917 ;;		_Lcd_Write_String
   918 ;;		_Setup
   919 ;;		_map
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _main
   927  047E                     _main:
   928  047E                     l1878:	
   929                           ;incstack = 0
   930                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   931                           
   932                           
   933                           ;L3.c: 107:     Setup();
   934  047E  120A  118A  24D9  120A  118A  	fcall	_Setup
   935  0483                     l1880:
   936                           
   937                           ;L3.c: 108:     Lcd_Set_Cursor(1, 1);
   938  0483  1283               	bcf	3,5	;RP0=0, select bank0
   939  0484  1303               	bcf	3,6	;RP1=0, select bank0
   940  0485  01A4               	clrf	Lcd_Set_Cursor@b
   941  0486  0AA4               	incf	Lcd_Set_Cursor@b,f
   942  0487  3001               	movlw	1
   943  0488  120A  118A  25DA  120A  118A  	fcall	_Lcd_Set_Cursor
   944  048D                     l1882:
   945                           
   946                           ;L3.c: 109:     Lcd_Write_String("V1");
   947  048D  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   948  048E  120A  118A  258A  120A  118A  	fcall	_Lcd_Write_String
   949  0493                     l1884:
   950                           
   951                           ;L3.c: 110:     Lcd_Set_Cursor(1, 5);
   952  0493  3005               	movlw	5
   953  0494  00FF               	movwf	btemp+1
   954  0495  087F               	movf	btemp+1,w
   955  0496  1283               	bcf	3,5	;RP0=0, select bank0
   956  0497  1303               	bcf	3,6	;RP1=0, select bank0
   957  0498  00A4               	movwf	Lcd_Set_Cursor@b
   958  0499  3001               	movlw	1
   959  049A  120A  118A  25DA  120A  118A  	fcall	_Lcd_Set_Cursor
   960  049F                     l1886:
   961                           
   962                           ;L3.c: 111:     Lcd_Write_String("V2");
   963  049F  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   964  04A0  120A  118A  258A  120A  118A  	fcall	_Lcd_Write_String
   965  04A5                     l1888:
   966                           
   967                           ;L3.c: 112:     Lcd_Set_Cursor(1, 10);
   968  04A5  300A               	movlw	10
   969  04A6  00FF               	movwf	btemp+1
   970  04A7  087F               	movf	btemp+1,w
   971  04A8  1283               	bcf	3,5	;RP0=0, select bank0
   972  04A9  1303               	bcf	3,6	;RP1=0, select bank0
   973  04AA  00A4               	movwf	Lcd_Set_Cursor@b
   974  04AB  3001               	movlw	1
   975  04AC  120A  118A  25DA  120A  118A  	fcall	_Lcd_Set_Cursor
   976  04B1                     l1890:
   977                           
   978                           ;L3.c: 113:     Lcd_Write_String("CONT");
   979  04B1  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   980  04B2  120A  118A  258A  120A  118A  	fcall	_Lcd_Write_String
   981  04B7                     l1892:
   982                           
   983                           ;L3.c: 114:     Lcd_Set_Cursor(2, 2);
   984  04B7  3002               	movlw	2
   985  04B8  00FF               	movwf	btemp+1
   986  04B9  087F               	movf	btemp+1,w
   987  04BA  1283               	bcf	3,5	;RP0=0, select bank0
   988  04BB  1303               	bcf	3,6	;RP1=0, select bank0
   989  04BC  00A4               	movwf	Lcd_Set_Cursor@b
   990  04BD  3002               	movlw	2
   991  04BE  120A  118A  25DA  120A  118A  	fcall	_Lcd_Set_Cursor
   992  04C3                     l1894:
   993                           
   994                           ;L3.c: 123:         map();
   995  04C3  120A  118A  202E  120A  118A  	fcall	_map
   996  04C8                     l1896:
   997                           
   998                           ;L3.c: 124:         if (CONTADC > 20) {
   999  04C8  3015               	movlw	21
  1000  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1001  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1002  04CB  0242               	subwf	_CONTADC,w
  1003  04CC  1C03               	skipc
  1004  04CD  2CCF               	goto	u501
  1005  04CE  2CD0               	goto	u500
  1006  04CF                     u501:
  1007  04CF  2CC3               	goto	l1894
  1008  04D0                     u500:
  1009  04D0                     l1898:
  1010                           
  1011                           ;L3.c: 125:             ADCON0bits.GO_nDONE = 1;
  1012  04D0  149F               	bsf	31,1	;volatile
  1013  04D1                     l1900:
  1014                           
  1015                           ;L3.c: 126:             CONTADC = 0;
  1016  04D1  01C2               	clrf	_CONTADC
  1017  04D2                     l1902:
  1018                           
  1019                           ;L3.c: 127:             PIE1bits.TXIE = 1;
  1020  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  1021  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  1022  04D4  160C               	bsf	12,4	;volatile
  1023  04D5  2CC3               	goto	l1894
  1024  04D6  120A  118A  2812   	ljmp	start
  1025  04D9                     __end_of_main:
  1026                           
  1027                           	psect	text1
  1028  002E                     __ptext1:	
  1029 ;; *************** function _map *****************
  1030 ;; Defined at:
  1031 ;;		line 199 in file "L3.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0
  1046 ;;      Locals:         0       2       0       0       0
  1047 ;;      Temps:          0       6       0       0       0
  1048 ;;      Totals:         0       8       0       0       0
  1049 ;;Total ram usage:        8 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    4
  1052 ;; This function calls:
  1053 ;;		___awdiv
  1054 ;;		___bmul
  1055 ;;		___wmul
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _map
  1063  002E                     _map:
  1064  002E                     l1838:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1067                           
  1068                           
  1069                           ;L3.c: 200:     CP1 = ((pot1) / 51);
  1070  002E  3033               	movlw	51
  1071  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0031  00A6               	movwf	___awdiv@divisor
  1074  0032  3000               	movlw	0
  1075  0033  00A7               	movwf	___awdiv@divisor+1
  1076  0034  0844               	movf	_pot1,w
  1077  0035  00AE               	movwf	??_map
  1078  0036  01AF               	clrf	??_map+1
  1079  0037  082E               	movf	??_map,w
  1080  0038  00A8               	movwf	___awdiv@dividend
  1081  0039  082F               	movf	??_map+1,w
  1082  003A  00A9               	movwf	___awdiv@dividend+1
  1083  003B  120A  118A  23B7  120A  118A  	fcall	___awdiv
  1084  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0042  0826               	movf	?___awdiv,w
  1087  0043  00FF               	movwf	btemp+1
  1088  0044  087F               	movf	btemp+1,w
  1089  0045  00C1               	movwf	_CP1
  1090                           
  1091                           ;L3.c: 201:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  1092  0046  3033               	movlw	51
  1093  0047  00A6               	movwf	___awdiv@divisor
  1094  0048  3000               	movlw	0
  1095  0049  00A7               	movwf	___awdiv@divisor+1
  1096  004A  0844               	movf	_pot1,w
  1097  004B  00AE               	movwf	??_map
  1098  004C  01AF               	clrf	??_map+1
  1099  004D  082E               	movf	??_map,w
  1100  004E  00A0               	movwf	___wmul@multiplier
  1101  004F  082F               	movf	??_map+1,w
  1102  0050  00A1               	movwf	___wmul@multiplier+1
  1103  0051  3064               	movlw	100
  1104  0052  00A2               	movwf	___wmul@multiplicand
  1105  0053  3000               	movlw	0
  1106  0054  00A3               	movwf	___wmul@multiplicand+1
  1107  0055  120A  118A  25B3  120A  118A  	fcall	___wmul
  1108  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1109  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1110  005C  0821               	movf	?___wmul+1,w
  1111  005D  00A9               	movwf	___awdiv@dividend+1
  1112  005E  0820               	movf	?___wmul,w
  1113  005F  00A8               	movwf	___awdiv@dividend
  1114  0060  120A  118A  23B7  120A  118A  	fcall	___awdiv
  1115  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0067  0826               	movf	?___awdiv,w
  1118  0068  00B0               	movwf	??_map+2
  1119  0069  0827               	movf	?___awdiv+1,w
  1120  006A  00B1               	movwf	??_map+3
  1121  006B  0841               	movf	_CP1,w
  1122  006C  00B2               	movwf	??_map+4
  1123  006D  01B3               	clrf	??_map+5
  1124  006E  0832               	movf	??_map+4,w
  1125  006F  00A0               	movwf	___wmul@multiplier
  1126  0070  0833               	movf	??_map+5,w
  1127  0071  00A1               	movwf	___wmul@multiplier+1
  1128  0072  309C               	movlw	156
  1129  0073  00A2               	movwf	___wmul@multiplicand
  1130  0074  30FF               	movlw	255
  1131  0075  00A3               	movwf	___wmul@multiplicand+1
  1132  0076  120A  118A  25B3  120A  118A  	fcall	___wmul
  1133  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1134  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1135  007D  0820               	movf	?___wmul,w
  1136  007E  0730               	addwf	??_map+2,w
  1137  007F  00B4               	movwf	_map$1114
  1138  0080  0821               	movf	?___wmul+1,w
  1139  0081  1803               	skipnc
  1140  0082  0A21               	incf	?___wmul+1,w
  1141  0083  0731               	addwf	??_map+3,w
  1142  0084  00B5               	movwf	_map$1114+1
  1143                           
  1144                           ;L3.c: 201:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  1145  0085  300A               	movlw	10
  1146  0086  00A6               	movwf	___awdiv@divisor
  1147  0087  3000               	movlw	0
  1148  0088  00A7               	movwf	___awdiv@divisor+1
  1149  0089  0835               	movf	_map$1114+1,w
  1150  008A  00A9               	movwf	___awdiv@dividend+1
  1151  008B  0834               	movf	_map$1114,w
  1152  008C  00A8               	movwf	___awdiv@dividend
  1153  008D  120A  118A  23B7  120A  118A  	fcall	___awdiv
  1154  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0094  0826               	movf	?___awdiv,w
  1157  0095  00FF               	movwf	btemp+1
  1158  0096  087F               	movf	btemp+1,w
  1159  0097  00C0               	movwf	_DP1
  1160                           
  1161                           ;L3.c: 202:     UP1 = (((pot1 * 100) / 51)-(CP1 * 100)-(DP1 * 10));
  1162  0098  3033               	movlw	51
  1163  0099  00A6               	movwf	___awdiv@divisor
  1164  009A  3000               	movlw	0
  1165  009B  00A7               	movwf	___awdiv@divisor+1
  1166  009C  0844               	movf	_pot1,w
  1167  009D  00AE               	movwf	??_map
  1168  009E  01AF               	clrf	??_map+1
  1169  009F  082E               	movf	??_map,w
  1170  00A0  00A0               	movwf	___wmul@multiplier
  1171  00A1  082F               	movf	??_map+1,w
  1172  00A2  00A1               	movwf	___wmul@multiplier+1
  1173  00A3  3064               	movlw	100
  1174  00A4  00A2               	movwf	___wmul@multiplicand
  1175  00A5  3000               	movlw	0
  1176  00A6  00A3               	movwf	___wmul@multiplicand+1
  1177  00A7  120A  118A  25B3  120A  118A  	fcall	___wmul
  1178  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1179  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1180  00AE  0821               	movf	?___wmul+1,w
  1181  00AF  00A9               	movwf	___awdiv@dividend+1
  1182  00B0  0820               	movf	?___wmul,w
  1183  00B1  00A8               	movwf	___awdiv@dividend
  1184  00B2  120A  118A  23B7  120A  118A  	fcall	___awdiv
  1185  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1186  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1187  00B9  0826               	movf	?___awdiv,w
  1188  00BA  00B0               	movwf	??_map+2
  1189  00BB  0827               	movf	?___awdiv+1,w
  1190  00BC  00B1               	movwf	??_map+3
  1191  00BD  309C               	movlw	156
  1192  00BE  00FF               	movwf	btemp+1
  1193  00BF  087F               	movf	btemp+1,w
  1194  00C0  00A0               	movwf	___bmul@multiplicand
  1195  00C1  0841               	movf	_CP1,w
  1196  00C2  120A  118A  264E  120A  118A  	fcall	___bmul
  1197  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1198  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1199  00C9  00B2               	movwf	??_map+4
  1200  00CA  30F6               	movlw	246
  1201  00CB  00FF               	movwf	btemp+1
  1202  00CC  087F               	movf	btemp+1,w
  1203  00CD  00A0               	movwf	___bmul@multiplicand
  1204  00CE  0840               	movf	_DP1,w
  1205  00CF  120A  118A  264E  120A  118A  	fcall	___bmul
  1206  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1207  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1208  00D6  0732               	addwf	??_map+4,w
  1209  00D7  0730               	addwf	??_map+2,w
  1210  00D8  00FF               	movwf	btemp+1
  1211  00D9  087F               	movf	btemp+1,w
  1212  00DA  00BF               	movwf	_UP1
  1213                           
  1214                           ;L3.c: 204:     CP2 = ((pot2) / 51);
  1215  00DB  3033               	movlw	51
  1216  00DC  00A6               	movwf	___awdiv@divisor
  1217  00DD  3000               	movlw	0
  1218  00DE  00A7               	movwf	___awdiv@divisor+1
  1219  00DF  0843               	movf	_pot2,w
  1220  00E0  00AE               	movwf	??_map
  1221  00E1  01AF               	clrf	??_map+1
  1222  00E2  082E               	movf	??_map,w
  1223  00E3  00A8               	movwf	___awdiv@dividend
  1224  00E4  082F               	movf	??_map+1,w
  1225  00E5  00A9               	movwf	___awdiv@dividend+1
  1226  00E6  120A  118A  23B7  120A  118A  	fcall	___awdiv
  1227  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1228  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1229  00ED  0826               	movf	?___awdiv,w
  1230  00EE  00FF               	movwf	btemp+1
  1231  00EF  087F               	movf	btemp+1,w
  1232  00F0  00BE               	movwf	_CP2
  1233                           
  1234                           ;L3.c: 205:     DP2 = (((pot2 * 100) / 51)-(CP2 * 100)) / 10;
  1235  00F1  3033               	movlw	51
  1236  00F2  00A6               	movwf	___awdiv@divisor
  1237  00F3  3000               	movlw	0
  1238  00F4  00A7               	movwf	___awdiv@divisor+1
  1239  00F5  0843               	movf	_pot2,w
  1240  00F6  00AE               	movwf	??_map
  1241  00F7  01AF               	clrf	??_map+1
  1242  00F8  082E               	movf	??_map,w
  1243  00F9  00A0               	movwf	___wmul@multiplier
  1244  00FA  082F               	movf	??_map+1,w
  1245  00FB  00A1               	movwf	___wmul@multiplier+1
  1246  00FC  3064               	movlw	100
  1247  00FD  00A2               	movwf	___wmul@multiplicand
  1248  00FE  3000               	movlw	0
  1249  00FF  00A3               	movwf	___wmul@multiplicand+1
  1250  0100  120A  118A  25B3  120A  118A  	fcall	___wmul
  1251  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0107  0821               	movf	?___wmul+1,w
  1254  0108  00A9               	movwf	___awdiv@dividend+1
  1255  0109  0820               	movf	?___wmul,w
  1256  010A  00A8               	movwf	___awdiv@dividend
  1257  010B  120A  118A  23B7  120A  118A  	fcall	___awdiv
  1258  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0112  0826               	movf	?___awdiv,w
  1261  0113  00B0               	movwf	??_map+2
  1262  0114  0827               	movf	?___awdiv+1,w
  1263  0115  00B1               	movwf	??_map+3
  1264  0116  083E               	movf	_CP2,w
  1265  0117  00B2               	movwf	??_map+4
  1266  0118  01B3               	clrf	??_map+5
  1267  0119  0832               	movf	??_map+4,w
  1268  011A  00A0               	movwf	___wmul@multiplier
  1269  011B  0833               	movf	??_map+5,w
  1270  011C  00A1               	movwf	___wmul@multiplier+1
  1271  011D  309C               	movlw	156
  1272  011E  00A2               	movwf	___wmul@multiplicand
  1273  011F  30FF               	movlw	255
  1274  0120  00A3               	movwf	___wmul@multiplicand+1
  1275  0121  120A  118A  25B3  120A  118A  	fcall	___wmul
  1276  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0128  0820               	movf	?___wmul,w
  1279  0129  0730               	addwf	??_map+2,w
  1280  012A  00B4               	movwf	_map$1114
  1281  012B  0821               	movf	?___wmul+1,w
  1282  012C  1803               	skipnc
  1283  012D  0A21               	incf	?___wmul+1,w
  1284  012E  0731               	addwf	??_map+3,w
  1285  012F  00B5               	movwf	_map$1114+1
  1286                           
  1287                           ;L3.c: 205:     DP2 = (((pot2 * 100) / 51)-(CP2 * 100)) / 10;
  1288  0130  300A               	movlw	10
  1289  0131  00A6               	movwf	___awdiv@divisor
  1290  0132  3000               	movlw	0
  1291  0133  00A7               	movwf	___awdiv@divisor+1
  1292  0134  0835               	movf	_map$1114+1,w
  1293  0135  00A9               	movwf	___awdiv@dividend+1
  1294  0136  0834               	movf	_map$1114,w
  1295  0137  00A8               	movwf	___awdiv@dividend
  1296  0138  120A  118A  23B7  120A  118A  	fcall	___awdiv
  1297  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1298  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1299  013F  0826               	movf	?___awdiv,w
  1300  0140  00FF               	movwf	btemp+1
  1301  0141  087F               	movf	btemp+1,w
  1302  0142  00BD               	movwf	_DP2
  1303                           
  1304                           ;L3.c: 206:     UP2 = (((pot2 * 100) / 51)-(CP2 * 100)-(DP2 * 10));
  1305  0143  3033               	movlw	51
  1306  0144  00A6               	movwf	___awdiv@divisor
  1307  0145  3000               	movlw	0
  1308  0146  00A7               	movwf	___awdiv@divisor+1
  1309  0147  0843               	movf	_pot2,w
  1310  0148  00AE               	movwf	??_map
  1311  0149  01AF               	clrf	??_map+1
  1312  014A  082E               	movf	??_map,w
  1313  014B  00A0               	movwf	___wmul@multiplier
  1314  014C  082F               	movf	??_map+1,w
  1315  014D  00A1               	movwf	___wmul@multiplier+1
  1316  014E  3064               	movlw	100
  1317  014F  00A2               	movwf	___wmul@multiplicand
  1318  0150  3000               	movlw	0
  1319  0151  00A3               	movwf	___wmul@multiplicand+1
  1320  0152  120A  118A  25B3  120A  118A  	fcall	___wmul
  1321  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0159  0821               	movf	?___wmul+1,w
  1324  015A  00A9               	movwf	___awdiv@dividend+1
  1325  015B  0820               	movf	?___wmul,w
  1326  015C  00A8               	movwf	___awdiv@dividend
  1327  015D  120A  118A  23B7  120A  118A  	fcall	___awdiv
  1328  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0164  0826               	movf	?___awdiv,w
  1331  0165  00B0               	movwf	??_map+2
  1332  0166  0827               	movf	?___awdiv+1,w
  1333  0167  00B1               	movwf	??_map+3
  1334  0168  309C               	movlw	156
  1335  0169  00FF               	movwf	btemp+1
  1336  016A  087F               	movf	btemp+1,w
  1337  016B  00A0               	movwf	___bmul@multiplicand
  1338  016C  083E               	movf	_CP2,w
  1339  016D  120A  118A  264E  120A  118A  	fcall	___bmul
  1340  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0174  00B2               	movwf	??_map+4
  1343  0175  30F6               	movlw	246
  1344  0176  00FF               	movwf	btemp+1
  1345  0177  087F               	movf	btemp+1,w
  1346  0178  00A0               	movwf	___bmul@multiplicand
  1347  0179  083D               	movf	_DP2,w
  1348  017A  120A  118A  264E  120A  118A  	fcall	___bmul
  1349  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0181  0732               	addwf	??_map+4,w
  1352  0182  0730               	addwf	??_map+2,w
  1353  0183  00FF               	movwf	btemp+1
  1354  0184  087F               	movf	btemp+1,w
  1355  0185  00BC               	movwf	_UP2
  1356  0186                     l1840:
  1357                           
  1358                           ;L3.c: 208:     C1 = (CP1 + 0x30);
  1359  0186  0841               	movf	_CP1,w
  1360  0187  3E30               	addlw	48
  1361  0188  00FF               	movwf	btemp+1
  1362  0189  087F               	movf	btemp+1,w
  1363  018A  00BB               	movwf	_C1
  1364  018B                     l1842:
  1365                           
  1366                           ;L3.c: 209:     D1 = (DP1 + 0x30);
  1367  018B  0840               	movf	_DP1,w
  1368  018C  3E30               	addlw	48
  1369  018D  00FF               	movwf	btemp+1
  1370  018E  087F               	movf	btemp+1,w
  1371  018F  00BA               	movwf	_D1
  1372  0190                     l1844:
  1373                           
  1374                           ;L3.c: 210:     U1 = (UP1 + 0x30);
  1375  0190  083F               	movf	_UP1,w
  1376  0191  3E30               	addlw	48
  1377  0192  00FF               	movwf	btemp+1
  1378  0193  087F               	movf	btemp+1,w
  1379  0194  00B9               	movwf	_U1
  1380  0195                     l1846:
  1381                           
  1382                           ;L3.c: 212:     C2 = (CP2 + 0x30);
  1383  0195  083E               	movf	_CP2,w
  1384  0196  3E30               	addlw	48
  1385  0197  00FF               	movwf	btemp+1
  1386  0198  087F               	movf	btemp+1,w
  1387  0199  00B8               	movwf	_C2
  1388  019A                     l1848:
  1389                           
  1390                           ;L3.c: 213:     D2 = (DP2 + 0x30);
  1391  019A  083D               	movf	_DP2,w
  1392  019B  3E30               	addlw	48
  1393  019C  00FF               	movwf	btemp+1
  1394  019D  087F               	movf	btemp+1,w
  1395  019E  00B7               	movwf	_D2
  1396  019F                     l1850:
  1397                           
  1398                           ;L3.c: 214:     U2 = (UP2 + 0x30);
  1399  019F  083C               	movf	_UP2,w
  1400  01A0  3E30               	addlw	48
  1401  01A1  00FF               	movwf	btemp+1
  1402  01A2  087F               	movf	btemp+1,w
  1403  01A3  00B6               	movwf	_U2
  1404  01A4                     l131:
  1405  01A4  0008               	return
  1406  01A5                     __end_of_map:
  1407                           
  1408                           	psect	text2
  1409  05B3                     __ptext2:	
  1410 ;; *************** function ___wmul *****************
  1411 ;; Defined at:
  1412 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1415 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  product         2    4[BANK0 ] unsigned int 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  2    0[BANK0 ] unsigned int 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       4       0       0       0
  1428 ;;      Locals:         0       2       0       0       0
  1429 ;;      Temps:          0       0       0       0       0
  1430 ;;      Totals:         0       6       0       0       0
  1431 ;;Total ram usage:        6 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    3
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_map
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function ___wmul
  1443  05B3                     ___wmul:
  1444  05B3                     l1564:	
  1445                           ;incstack = 0
  1446                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1447                           
  1448  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1449  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1450  05B5  01A4               	clrf	___wmul@product
  1451  05B6  01A5               	clrf	___wmul@product+1
  1452  05B7                     l1566:
  1453  05B7  1C20               	btfss	___wmul@multiplier,0
  1454  05B8  2DBA               	goto	u261
  1455  05B9  2DBB               	goto	u260
  1456  05BA                     u261:
  1457  05BA  2DC1               	goto	l342
  1458  05BB                     u260:
  1459  05BB                     l1568:
  1460  05BB  0822               	movf	___wmul@multiplicand,w
  1461  05BC  07A4               	addwf	___wmul@product,f
  1462  05BD  1803               	skipnc
  1463  05BE  0AA5               	incf	___wmul@product+1,f
  1464  05BF  0823               	movf	___wmul@multiplicand+1,w
  1465  05C0  07A5               	addwf	___wmul@product+1,f
  1466  05C1                     l342:
  1467  05C1  3001               	movlw	1
  1468  05C2                     u275:
  1469  05C2  1003               	clrc
  1470  05C3  0DA2               	rlf	___wmul@multiplicand,f
  1471  05C4  0DA3               	rlf	___wmul@multiplicand+1,f
  1472  05C5  3EFF               	addlw	-1
  1473  05C6  1D03               	skipz
  1474  05C7  2DC2               	goto	u275
  1475  05C8                     l1570:
  1476  05C8  3001               	movlw	1
  1477  05C9                     u285:
  1478  05C9  1003               	clrc
  1479  05CA  0CA1               	rrf	___wmul@multiplier+1,f
  1480  05CB  0CA0               	rrf	___wmul@multiplier,f
  1481  05CC  3EFF               	addlw	-1
  1482  05CD  1D03               	skipz
  1483  05CE  2DC9               	goto	u285
  1484  05CF                     l1572:
  1485  05CF  0820               	movf	___wmul@multiplier,w
  1486  05D0  0421               	iorwf	___wmul@multiplier+1,w
  1487  05D1  1D03               	btfss	3,2
  1488  05D2  2DD4               	goto	u291
  1489  05D3  2DD5               	goto	u290
  1490  05D4                     u291:
  1491  05D4  2DB7               	goto	l1566
  1492  05D5                     u290:
  1493  05D5                     l1574:
  1494  05D5  0825               	movf	___wmul@product+1,w
  1495  05D6  00A1               	movwf	?___wmul+1
  1496  05D7  0824               	movf	___wmul@product,w
  1497  05D8  00A0               	movwf	?___wmul
  1498  05D9                     l344:
  1499  05D9  0008               	return
  1500  05DA                     __end_of___wmul:
  1501                           
  1502                           	psect	text3
  1503  064E                     __ptext3:	
  1504 ;; *************** function ___bmul *****************
  1505 ;; Defined at:
  1506 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  multiplier      1    wreg     unsigned char 
  1509 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1512 ;;  product         1    1[BANK0 ] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      unsigned char 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0, btemp+1
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       1       0       0       0
  1523 ;;      Locals:         0       2       0       0       0
  1524 ;;      Temps:          0       0       0       0       0
  1525 ;;      Totals:         0       3       0       0       0
  1526 ;;Total ram usage:        3 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    3
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_map
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function ___bmul
  1538  064E                     ___bmul:
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1542                           ;___bmul@multiplier stored from wreg
  1543  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1544  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0650  00A2               	movwf	___bmul@multiplier
  1546  0651                     l1578:
  1547  0651  01A1               	clrf	___bmul@product
  1548  0652                     l1580:
  1549  0652  1C22               	btfss	___bmul@multiplier,0
  1550  0653  2E55               	goto	u301
  1551  0654  2E56               	goto	u300
  1552  0655                     u301:
  1553  0655  2E5A               	goto	l1584
  1554  0656                     u300:
  1555  0656                     l1582:
  1556  0656  0820               	movf	___bmul@multiplicand,w
  1557  0657  00FF               	movwf	btemp+1
  1558  0658  087F               	movf	btemp+1,w
  1559  0659  07A1               	addwf	___bmul@product,f
  1560  065A                     l1584:
  1561  065A  1003               	clrc
  1562  065B  0DA0               	rlf	___bmul@multiplicand,f
  1563  065C                     l1586:
  1564  065C  1003               	clrc
  1565  065D  0CA2               	rrf	___bmul@multiplier,f
  1566  065E                     l1588:
  1567  065E  0822               	movf	___bmul@multiplier,w
  1568  065F  1D03               	btfss	3,2
  1569  0660  2E62               	goto	u311
  1570  0661  2E63               	goto	u310
  1571  0662                     u311:
  1572  0662  2E52               	goto	l1580
  1573  0663                     u310:
  1574  0663                     l1590:
  1575  0663  0821               	movf	___bmul@product,w
  1576  0664                     l368:
  1577  0664  0008               	return
  1578  0665                     __end_of___bmul:
  1579                           
  1580                           	psect	text4
  1581  03B7                     __ptext4:	
  1582 ;; *************** function ___awdiv *****************
  1583 ;; Defined at:
  1584 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  divisor         2    6[BANK0 ] int 
  1587 ;;  dividend        2    8[BANK0 ] int 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  quotient        2   12[BANK0 ] int 
  1590 ;;  sign            1   11[BANK0 ] unsigned char 
  1591 ;;  counter         1   10[BANK0 ] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2    6[BANK0 ] int 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, btemp+1
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       4       0       0       0
  1602 ;;      Locals:         0       4       0       0       0
  1603 ;;      Temps:          0       0       0       0       0
  1604 ;;      Totals:         0       8       0       0       0
  1605 ;;Total ram usage:        8 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    3
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_map
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function ___awdiv
  1617  03B7                     ___awdiv:
  1618  03B7                     l1594:	
  1619                           ;incstack = 0
  1620                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1621                           
  1622  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1623  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1624  03B9  01AB               	clrf	___awdiv@sign
  1625  03BA                     l1596:
  1626  03BA  1FA7               	btfss	___awdiv@divisor+1,7
  1627  03BB  2BBD               	goto	u321
  1628  03BC  2BBE               	goto	u320
  1629  03BD                     u321:
  1630  03BD  2BC5               	goto	l1602
  1631  03BE                     u320:
  1632  03BE                     l1598:
  1633  03BE  09A6               	comf	___awdiv@divisor,f
  1634  03BF  09A7               	comf	___awdiv@divisor+1,f
  1635  03C0  0AA6               	incf	___awdiv@divisor,f
  1636  03C1  1903               	skipnz
  1637  03C2  0AA7               	incf	___awdiv@divisor+1,f
  1638  03C3                     l1600:
  1639  03C3  01AB               	clrf	___awdiv@sign
  1640  03C4  0AAB               	incf	___awdiv@sign,f
  1641  03C5                     l1602:
  1642  03C5  1FA9               	btfss	___awdiv@dividend+1,7
  1643  03C6  2BC8               	goto	u331
  1644  03C7  2BC9               	goto	u330
  1645  03C8                     u331:
  1646  03C8  2BD2               	goto	l1608
  1647  03C9                     u330:
  1648  03C9                     l1604:
  1649  03C9  09A8               	comf	___awdiv@dividend,f
  1650  03CA  09A9               	comf	___awdiv@dividend+1,f
  1651  03CB  0AA8               	incf	___awdiv@dividend,f
  1652  03CC  1903               	skipnz
  1653  03CD  0AA9               	incf	___awdiv@dividend+1,f
  1654  03CE                     l1606:
  1655  03CE  3001               	movlw	1
  1656  03CF  00FF               	movwf	btemp+1
  1657  03D0  087F               	movf	btemp+1,w
  1658  03D1  06AB               	xorwf	___awdiv@sign,f
  1659  03D2                     l1608:
  1660  03D2  01AC               	clrf	___awdiv@quotient
  1661  03D3  01AD               	clrf	___awdiv@quotient+1
  1662  03D4                     l1610:
  1663  03D4  0826               	movf	___awdiv@divisor,w
  1664  03D5  0427               	iorwf	___awdiv@divisor+1,w
  1665  03D6  1903               	btfsc	3,2
  1666  03D7  2BD9               	goto	u341
  1667  03D8  2BDA               	goto	u340
  1668  03D9                     u341:
  1669  03D9  2C11               	goto	l1630
  1670  03DA                     u340:
  1671  03DA                     l1612:
  1672  03DA  01AA               	clrf	___awdiv@counter
  1673  03DB  0AAA               	incf	___awdiv@counter,f
  1674  03DC  2BE8               	goto	l1618
  1675  03DD                     l1614:
  1676  03DD  3001               	movlw	1
  1677  03DE                     u355:
  1678  03DE  1003               	clrc
  1679  03DF  0DA6               	rlf	___awdiv@divisor,f
  1680  03E0  0DA7               	rlf	___awdiv@divisor+1,f
  1681  03E1  3EFF               	addlw	-1
  1682  03E2  1D03               	skipz
  1683  03E3  2BDE               	goto	u355
  1684  03E4                     l1616:
  1685  03E4  3001               	movlw	1
  1686  03E5  00FF               	movwf	btemp+1
  1687  03E6  087F               	movf	btemp+1,w
  1688  03E7  07AA               	addwf	___awdiv@counter,f
  1689  03E8                     l1618:
  1690  03E8  1FA7               	btfss	___awdiv@divisor+1,7
  1691  03E9  2BEB               	goto	u361
  1692  03EA  2BEC               	goto	u360
  1693  03EB                     u361:
  1694  03EB  2BDD               	goto	l1614
  1695  03EC                     u360:
  1696  03EC                     l1620:
  1697  03EC  3001               	movlw	1
  1698  03ED                     u375:
  1699  03ED  1003               	clrc
  1700  03EE  0DAC               	rlf	___awdiv@quotient,f
  1701  03EF  0DAD               	rlf	___awdiv@quotient+1,f
  1702  03F0  3EFF               	addlw	-1
  1703  03F1  1D03               	skipz
  1704  03F2  2BED               	goto	u375
  1705  03F3  0827               	movf	___awdiv@divisor+1,w
  1706  03F4  0229               	subwf	___awdiv@dividend+1,w
  1707  03F5  1D03               	skipz
  1708  03F6  2BF9               	goto	u385
  1709  03F7  0826               	movf	___awdiv@divisor,w
  1710  03F8  0228               	subwf	___awdiv@dividend,w
  1711  03F9                     u385:
  1712  03F9  1C03               	skipc
  1713  03FA  2BFC               	goto	u381
  1714  03FB  2BFD               	goto	u380
  1715  03FC                     u381:
  1716  03FC  2C04               	goto	l1626
  1717  03FD                     u380:
  1718  03FD                     l1622:
  1719  03FD  0826               	movf	___awdiv@divisor,w
  1720  03FE  02A8               	subwf	___awdiv@dividend,f
  1721  03FF  0827               	movf	___awdiv@divisor+1,w
  1722  0400  1C03               	skipc
  1723  0401  03A9               	decf	___awdiv@dividend+1,f
  1724  0402  02A9               	subwf	___awdiv@dividend+1,f
  1725  0403                     l1624:
  1726  0403  142C               	bsf	___awdiv@quotient,0
  1727  0404                     l1626:
  1728  0404  3001               	movlw	1
  1729  0405                     u395:
  1730  0405  1003               	clrc
  1731  0406  0CA7               	rrf	___awdiv@divisor+1,f
  1732  0407  0CA6               	rrf	___awdiv@divisor,f
  1733  0408  3EFF               	addlw	-1
  1734  0409  1D03               	skipz
  1735  040A  2C05               	goto	u395
  1736  040B                     l1628:
  1737  040B  3001               	movlw	1
  1738  040C  02AA               	subwf	___awdiv@counter,f
  1739  040D  1D03               	btfss	3,2
  1740  040E  2C10               	goto	u401
  1741  040F  2C11               	goto	u400
  1742  0410                     u401:
  1743  0410  2BEC               	goto	l1620
  1744  0411                     u400:
  1745  0411                     l1630:
  1746  0411  082B               	movf	___awdiv@sign,w
  1747  0412  1903               	btfsc	3,2
  1748  0413  2C15               	goto	u411
  1749  0414  2C16               	goto	u410
  1750  0415                     u411:
  1751  0415  2C1B               	goto	l1634
  1752  0416                     u410:
  1753  0416                     l1632:
  1754  0416  09AC               	comf	___awdiv@quotient,f
  1755  0417  09AD               	comf	___awdiv@quotient+1,f
  1756  0418  0AAC               	incf	___awdiv@quotient,f
  1757  0419  1903               	skipnz
  1758  041A  0AAD               	incf	___awdiv@quotient+1,f
  1759  041B                     l1634:
  1760  041B  082D               	movf	___awdiv@quotient+1,w
  1761  041C  00A7               	movwf	?___awdiv+1
  1762  041D  082C               	movf	___awdiv@quotient,w
  1763  041E  00A6               	movwf	?___awdiv
  1764  041F                     l495:
  1765  041F  0008               	return
  1766  0420                     __end_of___awdiv:
  1767                           
  1768                           	psect	text5
  1769  04D9                     __ptext5:	
  1770 ;; *************** function _Setup *****************
  1771 ;; Defined at:
  1772 ;;		line 147 in file "L3.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1786 ;;      Params:         0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    6
  1793 ;; This function calls:
  1794 ;;		_Lcd_Cmd
  1795 ;;		_Lcd_Init
  1796 ;;		_configADC2
  1797 ;;		_initOsc
  1798 ;;		_usart
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function _Setup
  1806  04D9                     _Setup:
  1807  04D9                     l1764:	
  1808                           ;incstack = 0
  1809                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1810                           
  1811                           
  1812                           ;L3.c: 148:     TRISD = 0;
  1813  04D9  1683               	bsf	3,5	;RP0=1, select bank1
  1814  04DA  1303               	bcf	3,6	;RP1=0, select bank1
  1815  04DB  0188               	clrf	8	;volatile
  1816                           
  1817                           ;L3.c: 149:     TRISE = 0;
  1818  04DC  0189               	clrf	9	;volatile
  1819  04DD                     l1766:
  1820                           
  1821                           ;L3.c: 150:     initOsc(6);
  1822  04DD  3006               	movlw	6
  1823  04DE  120A  118A  2420  120A  118A  	fcall	_initOsc
  1824  04E3                     l1768:
  1825                           
  1826                           ;L3.c: 151:     configADC2(1, 12);
  1827  04E3  300C               	movlw	12
  1828  04E4  00FF               	movwf	btemp+1
  1829  04E5  087F               	movf	btemp+1,w
  1830  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1831  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1832  04E8  00A0               	movwf	configADC2@chan
  1833  04E9  3001               	movlw	1
  1834  04EA  120A  118A  2274  120A  118A  	fcall	_configADC2
  1835  04EF                     l1770:
  1836                           
  1837                           ;L3.c: 152:     usart();
  1838  04EF  120A  118A  2665  120A  118A  	fcall	_usart
  1839  04F4                     l1772:
  1840                           
  1841                           ;L3.c: 153:     Lcd_Init();
  1842  04F4  120A  118A  261C  120A  118A  	fcall	_Lcd_Init
  1843  04F9                     l1774:
  1844                           
  1845                           ;L3.c: 154:     Lcd_Cmd(0x8A);
  1846  04F9  308A               	movlw	138
  1847  04FA  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  1848  04FF                     l1776:
  1849                           
  1850                           ;L3.c: 155:     ANSEL = 0;
  1851  04FF  1683               	bsf	3,5	;RP0=1, select bank3
  1852  0500  1703               	bsf	3,6	;RP1=1, select bank3
  1853  0501  0188               	clrf	8	;volatile
  1854  0502                     l1778:
  1855                           
  1856                           ;L3.c: 156:     ANSELH = 0b00000011;
  1857  0502  3003               	movlw	3
  1858  0503  0089               	movwf	9	;volatile
  1859  0504                     l1780:
  1860                           
  1861                           ;L3.c: 157:     PORTA = 0;
  1862  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0506  0185               	clrf	5	;volatile
  1865  0507                     l1782:
  1866                           
  1867                           ;L3.c: 158:     PORTB = 0;
  1868  0507  0186               	clrf	6	;volatile
  1869  0508                     l1784:
  1870                           
  1871                           ;L3.c: 159:     PORTC = 0;
  1872  0508  0187               	clrf	7	;volatile
  1873  0509                     l1786:
  1874                           
  1875                           ;L3.c: 160:     PORTD = 0;
  1876  0509  0188               	clrf	8	;volatile
  1877  050A                     l1788:
  1878                           
  1879                           ;L3.c: 161:     PORTE = 0;
  1880  050A  0189               	clrf	9	;volatile
  1881  050B                     l1790:
  1882                           
  1883                           ;L3.c: 163:     TRISC = 0b10000000;
  1884  050B  3080               	movlw	128
  1885  050C  1683               	bsf	3,5	;RP0=1, select bank1
  1886  050D  1303               	bcf	3,6	;RP1=0, select bank1
  1887  050E  0087               	movwf	7	;volatile
  1888  050F                     l1792:
  1889                           
  1890                           ;L3.c: 164:     TRISA = 0;
  1891  050F  0185               	clrf	5	;volatile
  1892  0510                     l1794:
  1893                           
  1894                           ;L3.c: 165:     TRISB = 0b00000011;
  1895  0510  3003               	movlw	3
  1896  0511  0086               	movwf	6	;volatile
  1897  0512                     l1796:
  1898                           
  1899                           ;L3.c: 166:     OPTION_REG = 0b10000111;
  1900  0512  3087               	movlw	135
  1901  0513  0081               	movwf	1	;volatile
  1902  0514                     l1798:
  1903                           
  1904                           ;L3.c: 167:     INTCONbits.GIE = 1;
  1905  0514  178B               	bsf	11,7	;volatile
  1906  0515                     l1800:
  1907                           
  1908                           ;L3.c: 168:     INTCONbits.T0IE = 1;
  1909  0515  168B               	bsf	11,5	;volatile
  1910  0516                     l1802:
  1911                           
  1912                           ;L3.c: 169:     INTCONbits.PEIE = 1;
  1913  0516  170B               	bsf	11,6	;volatile
  1914  0517                     l1804:
  1915                           
  1916                           ;L3.c: 170:     PIE1bits.ADIE = 1;
  1917  0517  170C               	bsf	12,6	;volatile
  1918  0518                     l1806:
  1919                           
  1920                           ;L3.c: 171:     INTCONbits.T0IF = 0;
  1921  0518  110B               	bcf	11,2	;volatile
  1922  0519                     l1808:
  1923                           
  1924                           ;L3.c: 172:     PIR1bits.ADIF = 0;
  1925  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1926  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1927  051B  130C               	bcf	12,6	;volatile
  1928  051C                     l1810:
  1929                           
  1930                           ;L3.c: 173:     PIR1bits.TXIF = 0;
  1931  051C  120C               	bcf	12,4	;volatile
  1932  051D                     l1812:
  1933                           
  1934                           ;L3.c: 174:     PIE1bits.TXIE = 1;
  1935  051D  1683               	bsf	3,5	;RP0=1, select bank1
  1936  051E  1303               	bcf	3,6	;RP1=0, select bank1
  1937  051F  160C               	bsf	12,4	;volatile
  1938  0520                     l1814:
  1939                           
  1940                           ;L3.c: 175:     PIE1bits.RCIE = 1;
  1941  0520  168C               	bsf	12,5	;volatile
  1942  0521                     l1816:
  1943                           
  1944                           ;L3.c: 176:     PIR1bits.RCIF = 0;
  1945  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0523  128C               	bcf	12,5	;volatile
  1948  0524                     l123:
  1949  0524  0008               	return
  1950  0525                     __end_of_Setup:
  1951                           
  1952                           	psect	text6
  1953  0665                     __ptext6:	
  1954 ;; *************** function _usart *****************
  1955 ;; Defined at:
  1956 ;;		line 5 in file "usart.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0
  1973 ;;      Totals:         0       0       0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    3
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_Setup
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           
  1985                           ;psect for function _usart
  1986  0665                     _usart:
  1987  0665                     l1534:	
  1988                           ;incstack = 0
  1989                           ; Regs used in _usart: [wreg+status,2]
  1990                           
  1991                           
  1992                           ;usart.c: 8:     TXSTAbits.TX9 = 0;
  1993  0665  1683               	bsf	3,5	;RP0=1, select bank1
  1994  0666  1303               	bcf	3,6	;RP1=0, select bank1
  1995  0667  1318               	bcf	24,6	;volatile
  1996                           
  1997                           ;usart.c: 9:     TXSTAbits.SYNC = 0;
  1998  0668  1218               	bcf	24,4	;volatile
  1999                           
  2000                           ;usart.c: 10:     TXSTAbits.BRGH = 1;
  2001  0669  1518               	bsf	24,2	;volatile
  2002                           
  2003                           ;usart.c: 11:     BAUDCTLbits.BRG16 = 0;
  2004  066A  1683               	bsf	3,5	;RP0=1, select bank3
  2005  066B  1703               	bsf	3,6	;RP1=1, select bank3
  2006  066C  1187               	bcf	7,3	;volatile
  2007  066D                     l1536:
  2008                           
  2009                           ;usart.c: 12:     SPBRGH = 0;
  2010  066D  1683               	bsf	3,5	;RP0=1, select bank1
  2011  066E  1303               	bcf	3,6	;RP1=0, select bank1
  2012  066F  019A               	clrf	26	;volatile
  2013  0670                     l1538:
  2014                           
  2015                           ;usart.c: 13:     SPBRG = 25;
  2016  0670  3019               	movlw	25
  2017  0671  0099               	movwf	25	;volatile
  2018  0672                     l1540:
  2019                           
  2020                           ;usart.c: 14:     PIE1bits.TXIE = 1;
  2021  0672  160C               	bsf	12,4	;volatile
  2022  0673                     l1542:
  2023                           
  2024                           ;usart.c: 15:     TXSTAbits.TXEN = 1;
  2025  0673  1698               	bsf	24,5	;volatile
  2026  0674                     l1544:
  2027                           
  2028                           ;usart.c: 18:     RCSTAbits.SPEN = 1;
  2029  0674  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0675  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0676  1798               	bsf	24,7	;volatile
  2032  0677                     l1546:
  2033                           
  2034                           ;usart.c: 19:     RCSTAbits. RX9 = 0;
  2035  0677  1318               	bcf	24,6	;volatile
  2036  0678                     l1548:
  2037                           
  2038                           ;usart.c: 20:     RCSTAbits.CREN = 1;
  2039  0678  1618               	bsf	24,4	;volatile
  2040  0679                     l240:
  2041  0679  0008               	return
  2042  067A                     __end_of_usart:
  2043                           
  2044                           	psect	text7
  2045  0420                     __ptext7:	
  2046 ;; *************** function _initOsc *****************
  2047 ;; Defined at:
  2048 ;;		line 7 in file "osc.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  IRCF            1    wreg     unsigned char 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  IRCF            1    2[BANK0 ] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         0       1       0       0       0
  2064 ;;      Temps:          0       2       0       0       0
  2065 ;;      Totals:         0       3       0       0       0
  2066 ;;Total ram usage:        3 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    3
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_Setup
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _initOsc
  2078  0420                     _initOsc:
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2082                           ;initOsc@IRCF stored from wreg
  2083  0420  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0421  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0422  00A2               	movwf	initOsc@IRCF
  2086  0423                     l1448:
  2087                           
  2088                           ;osc.c: 9:     switch (IRCF){
  2089  0423  2C5A               	goto	l1452
  2090  0424                     l246:	
  2091                           ;osc.c: 11:         case 0:
  2092                           
  2093                           
  2094                           ;osc.c: 12:             OSCCONbits.IRCF2 = 0;
  2095  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2096  0425  1303               	bcf	3,6	;RP1=0, select bank1
  2097  0426  130F               	bcf	15,6	;volatile
  2098                           
  2099                           ;osc.c: 13:             OSCCONbits.IRCF1 = 0;
  2100  0427  128F               	bcf	15,5	;volatile
  2101                           
  2102                           ;osc.c: 14:             OSCCONbits.IRCF0 = 0;
  2103  0428  120F               	bcf	15,4	;volatile
  2104                           
  2105                           ;osc.c: 16:             break;
  2106  0429  2C7C               	goto	l247
  2107  042A                     l248:	
  2108                           ;osc.c: 18:         case 1:
  2109                           
  2110                           
  2111                           ;osc.c: 19:             OSCCONbits.IRCF2 = 0;
  2112  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2113  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2114  042C  130F               	bcf	15,6	;volatile
  2115                           
  2116                           ;osc.c: 20:             OSCCONbits.IRCF1 = 0;
  2117  042D  128F               	bcf	15,5	;volatile
  2118                           
  2119                           ;osc.c: 21:             OSCCONbits.IRCF0 = 1;
  2120  042E  160F               	bsf	15,4	;volatile
  2121                           
  2122                           ;osc.c: 22:             break;
  2123  042F  2C7C               	goto	l247
  2124  0430                     l249:	
  2125                           ;osc.c: 24:         case 2:
  2126                           
  2127                           
  2128                           ;osc.c: 25:             OSCCONbits.IRCF2 = 0;
  2129  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0432  130F               	bcf	15,6	;volatile
  2132                           
  2133                           ;osc.c: 26:             OSCCONbits.IRCF1 = 1;
  2134  0433  168F               	bsf	15,5	;volatile
  2135                           
  2136                           ;osc.c: 27:             OSCCONbits.IRCF0 = 0;
  2137  0434  120F               	bcf	15,4	;volatile
  2138                           
  2139                           ;osc.c: 28:             break;
  2140  0435  2C7C               	goto	l247
  2141  0436                     l250:	
  2142                           ;osc.c: 30:         case 3:
  2143                           
  2144                           
  2145                           ;osc.c: 31:             OSCCONbits.IRCF2 = 0;
  2146  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2147  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2148  0438  130F               	bcf	15,6	;volatile
  2149                           
  2150                           ;osc.c: 32:             OSCCONbits.IRCF1 = 1;
  2151  0439  168F               	bsf	15,5	;volatile
  2152                           
  2153                           ;osc.c: 33:             OSCCONbits.IRCF0 = 1;
  2154  043A  160F               	bsf	15,4	;volatile
  2155                           
  2156                           ;osc.c: 34:             break;
  2157  043B  2C7C               	goto	l247
  2158  043C                     l251:	
  2159                           ;osc.c: 36:         case 4:
  2160                           
  2161                           
  2162                           ;osc.c: 37:             OSCCONbits.IRCF2 = 1;
  2163  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2164  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2165  043E  170F               	bsf	15,6	;volatile
  2166                           
  2167                           ;osc.c: 38:             OSCCONbits.IRCF1 = 0;
  2168  043F  128F               	bcf	15,5	;volatile
  2169                           
  2170                           ;osc.c: 39:             OSCCONbits.IRCF0 = 0;
  2171  0440  120F               	bcf	15,4	;volatile
  2172                           
  2173                           ;osc.c: 40:             break;
  2174  0441  2C7C               	goto	l247
  2175  0442                     l252:	
  2176                           ;osc.c: 42:         case 5:
  2177                           
  2178                           
  2179                           ;osc.c: 43:             OSCCONbits.IRCF2 = 1;
  2180  0442  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0443  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0444  170F               	bsf	15,6	;volatile
  2183                           
  2184                           ;osc.c: 44:             OSCCONbits.IRCF1 = 0;
  2185  0445  128F               	bcf	15,5	;volatile
  2186                           
  2187                           ;osc.c: 45:             OSCCONbits.IRCF0 = 1;
  2188  0446  160F               	bsf	15,4	;volatile
  2189                           
  2190                           ;osc.c: 46:             break;
  2191  0447  2C7C               	goto	l247
  2192  0448                     l253:	
  2193                           ;osc.c: 49:         case 6:
  2194                           
  2195                           
  2196                           ;osc.c: 50:             OSCCONbits.IRCF2 = 1;
  2197  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2198  0449  1303               	bcf	3,6	;RP1=0, select bank1
  2199  044A  170F               	bsf	15,6	;volatile
  2200                           
  2201                           ;osc.c: 51:             OSCCONbits.IRCF1 = 1;
  2202  044B  168F               	bsf	15,5	;volatile
  2203                           
  2204                           ;osc.c: 52:             OSCCONbits.IRCF0 = 0;
  2205  044C  120F               	bcf	15,4	;volatile
  2206                           
  2207                           ;osc.c: 53:             break;
  2208  044D  2C7C               	goto	l247
  2209  044E                     l254:	
  2210                           ;osc.c: 55:         case 7:
  2211                           
  2212                           
  2213                           ;osc.c: 56:             OSCCONbits.IRCF2 = 1;
  2214  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2215  044F  1303               	bcf	3,6	;RP1=0, select bank1
  2216  0450  170F               	bsf	15,6	;volatile
  2217                           
  2218                           ;osc.c: 57:             OSCCONbits.IRCF1 = 1;
  2219  0451  168F               	bsf	15,5	;volatile
  2220                           
  2221                           ;osc.c: 58:             OSCCONbits.IRCF0 = 1;
  2222  0452  160F               	bsf	15,4	;volatile
  2223                           
  2224                           ;osc.c: 59:             break;
  2225  0453  2C7C               	goto	l247
  2226  0454                     l255:	
  2227                           ;osc.c: 64:         default:
  2228                           
  2229                           
  2230                           ;osc.c: 65:             OSCCONbits.IRCF2 = 1;
  2231  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0455  1303               	bcf	3,6	;RP1=0, select bank1
  2233  0456  170F               	bsf	15,6	;volatile
  2234                           
  2235                           ;osc.c: 66:             OSCCONbits.IRCF1 = 1;
  2236  0457  168F               	bsf	15,5	;volatile
  2237                           
  2238                           ;osc.c: 67:             OSCCONbits.IRCF0 = 0;
  2239  0458  120F               	bcf	15,4	;volatile
  2240                           
  2241                           ;osc.c: 68:             break;
  2242  0459  2C7C               	goto	l247
  2243  045A                     l1452:
  2244  045A  0822               	movf	initOsc@IRCF,w
  2245  045B  00A0               	movwf	??_initOsc
  2246  045C  01A1               	clrf	??_initOsc+1
  2247                           
  2248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2249                           ; Switch size 1, requested type "simple"
  2250                           ; Number of cases is 1, Range of values is 0 to 0
  2251                           ; switch strategies available:
  2252                           ; Name         Instructions Cycles
  2253                           ; simple_byte            4     3 (average)
  2254                           ; direct_byte           11     8 (fixed)
  2255                           ; jumptable            260     6 (fixed)
  2256                           ;	Chosen strategy is simple_byte
  2257  045D  0821               	movf	??_initOsc+1,w
  2258  045E  3A00               	xorlw	0	; case 0
  2259  045F  1903               	skipnz
  2260  0460  2C62               	goto	l2060
  2261  0461  2C54               	goto	l255
  2262  0462                     l2060:
  2263                           
  2264                           ; Switch size 1, requested type "simple"
  2265                           ; Number of cases is 8, Range of values is 0 to 7
  2266                           ; switch strategies available:
  2267                           ; Name         Instructions Cycles
  2268                           ; simple_byte           25    13 (average)
  2269                           ; direct_byte           32     8 (fixed)
  2270                           ; jumptable            260     6 (fixed)
  2271                           ;	Chosen strategy is simple_byte
  2272  0462  0820               	movf	??_initOsc,w
  2273  0463  3A00               	xorlw	0	; case 0
  2274  0464  1903               	skipnz
  2275  0465  2C24               	goto	l246
  2276  0466  3A01               	xorlw	1	; case 1
  2277  0467  1903               	skipnz
  2278  0468  2C2A               	goto	l248
  2279  0469  3A03               	xorlw	3	; case 2
  2280  046A  1903               	skipnz
  2281  046B  2C30               	goto	l249
  2282  046C  3A01               	xorlw	1	; case 3
  2283  046D  1903               	skipnz
  2284  046E  2C36               	goto	l250
  2285  046F  3A07               	xorlw	7	; case 4
  2286  0470  1903               	skipnz
  2287  0471  2C3C               	goto	l251
  2288  0472  3A01               	xorlw	1	; case 5
  2289  0473  1903               	skipnz
  2290  0474  2C42               	goto	l252
  2291  0475  3A03               	xorlw	3	; case 6
  2292  0476  1903               	skipnz
  2293  0477  2C48               	goto	l253
  2294  0478  3A01               	xorlw	1	; case 7
  2295  0479  1903               	skipnz
  2296  047A  2C4E               	goto	l254
  2297  047B  2C54               	goto	l255
  2298  047C                     l247:
  2299                           
  2300                           ;osc.c: 72:     OSCCONbits.SCS = 1;
  2301  047C  140F               	bsf	15,0	;volatile
  2302  047D                     l256:
  2303  047D  0008               	return
  2304  047E                     __end_of_initOsc:
  2305                           
  2306                           	psect	text8
  2307  0274                     __ptext8:	
  2308 ;; *************** function _configADC2 *****************
  2309 ;; Defined at:
  2310 ;;		line 17 in file "adc2.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  fosc            1    wreg     unsigned char 
  2313 ;;  chan            1    0[BANK0 ] unsigned char 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  fosc            1    3[BANK0 ] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         0       1       0       0       0
  2326 ;;      Locals:         0       1       0       0       0
  2327 ;;      Temps:          0       2       0       0       0
  2328 ;;      Totals:         0       4       0       0       0
  2329 ;;Total ram usage:        4 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    3
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_Setup
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _configADC2
  2341  0274                     _configADC2:
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _configADC2: [wreg-fsr0h+status,2+status,0]
  2345                           ;configADC2@fosc stored from wreg
  2346  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0276  00A3               	movwf	configADC2@fosc
  2349  0277                     l1460:
  2350                           
  2351                           ;adc2.c: 19:     switch (fosc) {
  2352  0277  2A8B               	goto	l1474
  2353  0278                     l1462:
  2354                           
  2355                           ;adc2.c: 22:             ADCON0bits.ADCS = 0b00;
  2356  0278  303F               	movlw	-193
  2357  0279  059F               	andwf	31,f	;volatile
  2358                           
  2359                           ;adc2.c: 23:             break;
  2360  027A  2AF0               	goto	l1512
  2361  027B                     l1464:
  2362                           
  2363                           ;adc2.c: 26:             ADCON0bits.ADCS = 0b01;
  2364  027B  081F               	movf	31,w	;volatile
  2365  027C  393F               	andlw	-193
  2366  027D  3840               	iorlw	64
  2367  027E  009F               	movwf	31	;volatile
  2368                           
  2369                           ;adc2.c: 27:             break;
  2370  027F  2AF0               	goto	l1512
  2371  0280                     l1466:
  2372                           
  2373                           ;adc2.c: 30:             ADCON0bits.ADCS = 0b10;
  2374  0280  081F               	movf	31,w	;volatile
  2375  0281  393F               	andlw	-193
  2376  0282  3880               	iorlw	128
  2377  0283  009F               	movwf	31	;volatile
  2378                           
  2379                           ;adc2.c: 31:             break;
  2380  0284  2AF0               	goto	l1512
  2381  0285                     l1468:
  2382                           
  2383                           ;adc2.c: 34:             ADCON0bits.ADCS = 0b11;
  2384  0285  30C0               	movlw	192
  2385  0286  049F               	iorwf	31,f	;volatile
  2386                           
  2387                           ;adc2.c: 35:             break;
  2388  0287  2AF0               	goto	l1512
  2389  0288                     l1470:
  2390                           
  2391                           ;adc2.c: 38:             ADCON0bits.ADCS = 0b00;
  2392  0288  303F               	movlw	-193
  2393  0289  059F               	andwf	31,f	;volatile
  2394                           
  2395                           ;adc2.c: 39:             break;
  2396  028A  2AF0               	goto	l1512
  2397  028B                     l1474:
  2398  028B  0823               	movf	configADC2@fosc,w
  2399  028C  00A1               	movwf	??_configADC2
  2400  028D  01A2               	clrf	??_configADC2+1
  2401                           
  2402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2403                           ; Switch size 1, requested type "simple"
  2404                           ; Number of cases is 1, Range of values is 0 to 0
  2405                           ; switch strategies available:
  2406                           ; Name         Instructions Cycles
  2407                           ; simple_byte            4     3 (average)
  2408                           ; direct_byte           11     8 (fixed)
  2409                           ; jumptable            260     6 (fixed)
  2410                           ;	Chosen strategy is simple_byte
  2411  028E  0822               	movf	??_configADC2+1,w
  2412  028F  3A00               	xorlw	0	; case 0
  2413  0290  1903               	skipnz
  2414  0291  2A93               	goto	l2062
  2415  0292  2A88               	goto	l1470
  2416  0293                     l2062:
  2417                           
  2418                           ; Switch size 1, requested type "simple"
  2419                           ; Number of cases is 4, Range of values is 0 to 3
  2420                           ; switch strategies available:
  2421                           ; Name         Instructions Cycles
  2422                           ; simple_byte           13     7 (average)
  2423                           ; direct_byte           20     8 (fixed)
  2424                           ; jumptable            260     6 (fixed)
  2425                           ;	Chosen strategy is simple_byte
  2426  0293  0821               	movf	??_configADC2,w
  2427  0294  3A00               	xorlw	0	; case 0
  2428  0295  1903               	skipnz
  2429  0296  2A78               	goto	l1462
  2430  0297  3A01               	xorlw	1	; case 1
  2431  0298  1903               	skipnz
  2432  0299  2A7B               	goto	l1464
  2433  029A  3A03               	xorlw	3	; case 2
  2434  029B  1903               	skipnz
  2435  029C  2A80               	goto	l1466
  2436  029D  3A01               	xorlw	1	; case 3
  2437  029E  1903               	skipnz
  2438  029F  2A85               	goto	l1468
  2439  02A0  2A88               	goto	l1470
  2440  02A1                     l1476:
  2441                           
  2442                           ;adc2.c: 43:             ADCON0bits.CHS = 0b0000;
  2443  02A1  30C3               	movlw	-61
  2444  02A2  059F               	andwf	31,f	;volatile
  2445                           
  2446                           ;adc2.c: 44:             break;
  2447  02A3  2B2A               	goto	l1514
  2448  02A4                     l1478:
  2449                           
  2450                           ;adc2.c: 47:             ADCON0bits.CHS = 0b0001;
  2451  02A4  081F               	movf	31,w	;volatile
  2452  02A5  39C3               	andlw	-61
  2453  02A6  3804               	iorlw	4
  2454  02A7  009F               	movwf	31	;volatile
  2455                           
  2456                           ;adc2.c: 48:             break;
  2457  02A8  2B2A               	goto	l1514
  2458  02A9                     l1480:
  2459                           
  2460                           ;adc2.c: 51:             ADCON0bits.CHS = 0b0010;
  2461  02A9  081F               	movf	31,w	;volatile
  2462  02AA  39C3               	andlw	-61
  2463  02AB  3808               	iorlw	8
  2464  02AC  009F               	movwf	31	;volatile
  2465                           
  2466                           ;adc2.c: 52:             break;
  2467  02AD  2B2A               	goto	l1514
  2468  02AE                     l1482:
  2469                           
  2470                           ;adc2.c: 55:             ADCON0bits.CHS = 0b0011;
  2471  02AE  081F               	movf	31,w	;volatile
  2472  02AF  39C3               	andlw	-61
  2473  02B0  380C               	iorlw	12
  2474  02B1  009F               	movwf	31	;volatile
  2475                           
  2476                           ;adc2.c: 56:             break;
  2477  02B2  2B2A               	goto	l1514
  2478  02B3                     l1484:
  2479                           
  2480                           ;adc2.c: 59:             ADCON0bits.CHS = 0b0100;
  2481  02B3  081F               	movf	31,w	;volatile
  2482  02B4  39C3               	andlw	-61
  2483  02B5  3810               	iorlw	16
  2484  02B6  009F               	movwf	31	;volatile
  2485                           
  2486                           ;adc2.c: 60:             break;
  2487  02B7  2B2A               	goto	l1514
  2488  02B8                     l1486:
  2489                           
  2490                           ;adc2.c: 63:             ADCON0bits.CHS = 0b0101;
  2491  02B8  081F               	movf	31,w	;volatile
  2492  02B9  39C3               	andlw	-61
  2493  02BA  3814               	iorlw	20
  2494  02BB  009F               	movwf	31	;volatile
  2495                           
  2496                           ;adc2.c: 64:             break;
  2497  02BC  2B2A               	goto	l1514
  2498  02BD                     l1488:
  2499                           
  2500                           ;adc2.c: 67:             ADCON0bits.CHS = 0b0110;
  2501  02BD  081F               	movf	31,w	;volatile
  2502  02BE  39C3               	andlw	-61
  2503  02BF  3818               	iorlw	24
  2504  02C0  009F               	movwf	31	;volatile
  2505                           
  2506                           ;adc2.c: 68:             break;
  2507  02C1  2B2A               	goto	l1514
  2508  02C2                     l1490:
  2509                           
  2510                           ;adc2.c: 71:             ADCON0bits.CHS = 0b0111;
  2511  02C2  081F               	movf	31,w	;volatile
  2512  02C3  39C3               	andlw	-61
  2513  02C4  381C               	iorlw	28
  2514  02C5  009F               	movwf	31	;volatile
  2515                           
  2516                           ;adc2.c: 72:             break;
  2517  02C6  2B2A               	goto	l1514
  2518  02C7                     l1492:
  2519                           
  2520                           ;adc2.c: 75:             ADCON0bits.CHS = 0b1000;
  2521  02C7  081F               	movf	31,w	;volatile
  2522  02C8  39C3               	andlw	-61
  2523  02C9  3820               	iorlw	32
  2524  02CA  009F               	movwf	31	;volatile
  2525                           
  2526                           ;adc2.c: 76:             break;
  2527  02CB  2B2A               	goto	l1514
  2528  02CC                     l1494:
  2529                           
  2530                           ;adc2.c: 79:             ADCON0bits.CHS = 0b1001;
  2531  02CC  081F               	movf	31,w	;volatile
  2532  02CD  39C3               	andlw	-61
  2533  02CE  3824               	iorlw	36
  2534  02CF  009F               	movwf	31	;volatile
  2535                           
  2536                           ;adc2.c: 80:             break;
  2537  02D0  2B2A               	goto	l1514
  2538  02D1                     l1496:
  2539                           
  2540                           ;adc2.c: 83:             ADCON0bits.CHS = 0b1010;
  2541  02D1  081F               	movf	31,w	;volatile
  2542  02D2  39C3               	andlw	-61
  2543  02D3  3828               	iorlw	40
  2544  02D4  009F               	movwf	31	;volatile
  2545                           
  2546                           ;adc2.c: 84:             break;
  2547  02D5  2B2A               	goto	l1514
  2548  02D6                     l1498:
  2549                           
  2550                           ;adc2.c: 87:             ADCON0bits.CHS = 0b1011;
  2551  02D6  081F               	movf	31,w	;volatile
  2552  02D7  39C3               	andlw	-61
  2553  02D8  382C               	iorlw	44
  2554  02D9  009F               	movwf	31	;volatile
  2555                           
  2556                           ;adc2.c: 88:             break;
  2557  02DA  2B2A               	goto	l1514
  2558  02DB                     l1500:
  2559                           
  2560                           ;adc2.c: 91:             ADCON0bits.CHS = 0b1100;
  2561  02DB  081F               	movf	31,w	;volatile
  2562  02DC  39C3               	andlw	-61
  2563  02DD  3830               	iorlw	48
  2564  02DE  009F               	movwf	31	;volatile
  2565                           
  2566                           ;adc2.c: 92:             break;
  2567  02DF  2B2A               	goto	l1514
  2568  02E0                     l1502:
  2569                           
  2570                           ;adc2.c: 95:             ADCON0bits.CHS = 0b1101;
  2571  02E0  081F               	movf	31,w	;volatile
  2572  02E1  39C3               	andlw	-61
  2573  02E2  3834               	iorlw	52
  2574  02E3  009F               	movwf	31	;volatile
  2575                           
  2576                           ;adc2.c: 96:             break;
  2577  02E4  2B2A               	goto	l1514
  2578  02E5                     l1504:
  2579                           
  2580                           ;adc2.c: 99:             ADCON0bits.CHS = 0b1110;
  2581  02E5  081F               	movf	31,w	;volatile
  2582  02E6  39C3               	andlw	-61
  2583  02E7  3838               	iorlw	56
  2584  02E8  009F               	movwf	31	;volatile
  2585                           
  2586                           ;adc2.c: 100:             break;
  2587  02E9  2B2A               	goto	l1514
  2588  02EA                     l1506:
  2589                           
  2590                           ;adc2.c: 103:             ADCON0bits.CHS = 0b1111;
  2591  02EA  303C               	movlw	60
  2592  02EB  049F               	iorwf	31,f	;volatile
  2593                           
  2594                           ;adc2.c: 104:             break;
  2595  02EC  2B2A               	goto	l1514
  2596  02ED                     l1508:
  2597                           
  2598                           ;adc2.c: 107:             ADCON0bits.CHS = 0b0000;
  2599  02ED  30C3               	movlw	-61
  2600  02EE  059F               	andwf	31,f	;volatile
  2601                           
  2602                           ;adc2.c: 108:             break;
  2603  02EF  2B2A               	goto	l1514
  2604  02F0                     l1512:
  2605  02F0  0820               	movf	configADC2@chan,w
  2606  02F1  00A1               	movwf	??_configADC2
  2607  02F2  01A2               	clrf	??_configADC2+1
  2608                           
  2609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2610                           ; Switch size 1, requested type "simple"
  2611                           ; Number of cases is 1, Range of values is 0 to 0
  2612                           ; switch strategies available:
  2613                           ; Name         Instructions Cycles
  2614                           ; simple_byte            4     3 (average)
  2615                           ; direct_byte           11     8 (fixed)
  2616                           ; jumptable            260     6 (fixed)
  2617                           ;	Chosen strategy is simple_byte
  2618  02F3  0822               	movf	??_configADC2+1,w
  2619  02F4  3A00               	xorlw	0	; case 0
  2620  02F5  1903               	skipnz
  2621  02F6  2AF8               	goto	l2064
  2622  02F7  2AED               	goto	l1508
  2623  02F8                     l2064:
  2624                           
  2625                           ; Switch size 1, requested type "simple"
  2626                           ; Number of cases is 16, Range of values is 0 to 15
  2627                           ; switch strategies available:
  2628                           ; Name         Instructions Cycles
  2629                           ; simple_byte           49    25 (average)
  2630                           ; direct_byte           56     8 (fixed)
  2631                           ; jumptable            260     6 (fixed)
  2632                           ;	Chosen strategy is simple_byte
  2633  02F8  0821               	movf	??_configADC2,w
  2634  02F9  3A00               	xorlw	0	; case 0
  2635  02FA  1903               	skipnz
  2636  02FB  2AA1               	goto	l1476
  2637  02FC  3A01               	xorlw	1	; case 1
  2638  02FD  1903               	skipnz
  2639  02FE  2AA4               	goto	l1478
  2640  02FF  3A03               	xorlw	3	; case 2
  2641  0300  1903               	skipnz
  2642  0301  2AA9               	goto	l1480
  2643  0302  3A01               	xorlw	1	; case 3
  2644  0303  1903               	skipnz
  2645  0304  2AAE               	goto	l1482
  2646  0305  3A07               	xorlw	7	; case 4
  2647  0306  1903               	skipnz
  2648  0307  2AB3               	goto	l1484
  2649  0308  3A01               	xorlw	1	; case 5
  2650  0309  1903               	skipnz
  2651  030A  2AB8               	goto	l1486
  2652  030B  3A03               	xorlw	3	; case 6
  2653  030C  1903               	skipnz
  2654  030D  2ABD               	goto	l1488
  2655  030E  3A01               	xorlw	1	; case 7
  2656  030F  1903               	skipnz
  2657  0310  2AC2               	goto	l1490
  2658  0311  3A0F               	xorlw	15	; case 8
  2659  0312  1903               	skipnz
  2660  0313  2AC7               	goto	l1492
  2661  0314  3A01               	xorlw	1	; case 9
  2662  0315  1903               	skipnz
  2663  0316  2ACC               	goto	l1494
  2664  0317  3A03               	xorlw	3	; case 10
  2665  0318  1903               	skipnz
  2666  0319  2AD1               	goto	l1496
  2667  031A  3A01               	xorlw	1	; case 11
  2668  031B  1903               	skipnz
  2669  031C  2AD6               	goto	l1498
  2670  031D  3A07               	xorlw	7	; case 12
  2671  031E  1903               	skipnz
  2672  031F  2ADB               	goto	l1500
  2673  0320  3A01               	xorlw	1	; case 13
  2674  0321  1903               	skipnz
  2675  0322  2AE0               	goto	l1502
  2676  0323  3A03               	xorlw	3	; case 14
  2677  0324  1903               	skipnz
  2678  0325  2AE5               	goto	l1504
  2679  0326  3A01               	xorlw	1	; case 15
  2680  0327  1903               	skipnz
  2681  0328  2AEA               	goto	l1506
  2682  0329  2AED               	goto	l1508
  2683  032A                     l1514:
  2684                           
  2685                           ;adc2.c: 113:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2686  032A  300D               	movlw	13
  2687  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2688  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2689  032D  00A2               	movwf	??_configADC2+1
  2690  032E  30FB               	movlw	251
  2691  032F  00A1               	movwf	??_configADC2
  2692  0330                     u517:
  2693  0330  0BA1               	decfsz	??_configADC2,f
  2694  0331  2B30               	goto	u517
  2695  0332  0BA2               	decfsz	??_configADC2+1,f
  2696  0333  2B30               	goto	u517
  2697  0334                     l1516:
  2698                           
  2699                           ;adc2.c: 116:     ADCON0bits.GO_nDONE = 1;
  2700  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0336  149F               	bsf	31,1	;volatile
  2703  0337                     l1518:
  2704                           
  2705                           ;adc2.c: 120:     ADCON0bits.ADON = 1;
  2706  0337  141F               	bsf	31,0	;volatile
  2707  0338                     l1520:
  2708                           
  2709                           ;adc2.c: 121:     ADCON1 = 0;
  2710  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2712  033A  019F               	clrf	31	;volatile
  2713  033B                     l225:
  2714  033B  0008               	return
  2715  033C                     __end_of_configADC2:
  2716                           
  2717                           	psect	text9
  2718  061C                     __ptext9:	
  2719 ;; *************** function _Lcd_Init *****************
  2720 ;; Defined at:
  2721 ;;		line 41 in file "LCD.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0
  2738 ;;      Totals:         0       0       0       0       0
  2739 ;;Total ram usage:        0 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    5
  2742 ;; This function calls:
  2743 ;;		_Lcd_Cmd
  2744 ;; This function is called by:
  2745 ;;		_Setup
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _Lcd_Init
  2751  061C                     _Lcd_Init:
  2752  061C                     l1550:	
  2753                           ;incstack = 0
  2754                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2755                           
  2756                           
  2757                           ;LCD.c: 45:     Lcd_Cmd(0x38);
  2758  061C  3038               	movlw	56
  2759  061D  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  2760                           
  2761                           ;LCD.c: 46:     Lcd_Cmd(0x0C);
  2762  0622  300C               	movlw	12
  2763  0623  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  2764                           
  2765                           ;LCD.c: 47:     Lcd_Cmd(0x06);
  2766  0628  3006               	movlw	6
  2767  0629  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  2768                           
  2769                           ;LCD.c: 48:     Lcd_Cmd(0x80);
  2770  062E  3080               	movlw	128
  2771  062F  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  2772  0634                     l175:
  2773  0634  0008               	return
  2774  0635                     __end_of_Lcd_Init:
  2775                           
  2776                           	psect	text10
  2777  058A                     __ptext10:	
  2778 ;; *************** function _Lcd_Write_String *****************
  2779 ;; Defined at:
  2780 ;;		line 60 in file "LCD.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  a               1    wreg     PTR unsigned char 
  2783 ;;		 -> STR_3(5), STR_2(3), STR_1(3), 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  a               1    5[BANK0 ] PTR unsigned char 
  2786 ;;		 -> STR_3(5), STR_2(3), STR_1(3), 
  2787 ;;  i               2    3[BANK0 ] int 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2797 ;;      Params:         0       0       0       0       0
  2798 ;;      Locals:         0       3       0       0       0
  2799 ;;      Temps:          0       0       0       0       0
  2800 ;;      Totals:         0       3       0       0       0
  2801 ;;Total ram usage:        3 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    5
  2804 ;; This function calls:
  2805 ;;		_Lcd_Write_Char
  2806 ;; This function is called by:
  2807 ;;		_main
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           
  2812                           ;psect for function _Lcd_Write_String
  2813  058A                     _Lcd_Write_String:
  2814                           
  2815                           ;incstack = 0
  2816                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2817                           ;Lcd_Write_String@a stored from wreg
  2818  058A  1283               	bcf	3,5	;RP0=0, select bank0
  2819  058B  1303               	bcf	3,6	;RP1=0, select bank0
  2820  058C  00A5               	movwf	Lcd_Write_String@a
  2821  058D                     l1830:
  2822                           
  2823                           ;LCD.c: 61:    int i;;LCD.c: 62:  for(i=0;a[i]!='\0';i++)
  2824  058D  01A3               	clrf	Lcd_Write_String@i
  2825  058E  01A4               	clrf	Lcd_Write_String@i+1
  2826  058F  2DA5               	goto	l1836
  2827  0590                     l1832:
  2828                           
  2829                           ;LCD.c: 63:     Lcd_Write_Char(a[i]);
  2830  0590  0823               	movf	Lcd_Write_String@i,w
  2831  0591  0725               	addwf	Lcd_Write_String@a,w
  2832  0592  0084               	movwf	4
  2833  0593  120A  118A  267A  120A  118A  	fcall	stringdir
  2834  0598  120A  118A  2635  120A  118A  	fcall	_Lcd_Write_Char
  2835  059D                     l1834:
  2836  059D  3001               	movlw	1
  2837  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2838  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2839  05A0  07A3               	addwf	Lcd_Write_String@i,f
  2840  05A1  1803               	skipnc
  2841  05A2  0AA4               	incf	Lcd_Write_String@i+1,f
  2842  05A3  3000               	movlw	0
  2843  05A4  07A4               	addwf	Lcd_Write_String@i+1,f
  2844  05A5                     l1836:
  2845  05A5  0823               	movf	Lcd_Write_String@i,w
  2846  05A6  0725               	addwf	Lcd_Write_String@a,w
  2847  05A7  0084               	movwf	4
  2848  05A8  120A  118A  267A  120A  118A  	fcall	stringdir
  2849  05AD  3A00               	xorlw	0
  2850  05AE  1D03               	skipz
  2851  05AF  2DB1               	goto	u451
  2852  05B0  2DB2               	goto	u450
  2853  05B1                     u451:
  2854  05B1  2D90               	goto	l1832
  2855  05B2                     u450:
  2856  05B2                     l184:
  2857  05B2  0008               	return
  2858  05B3                     __end_of_Lcd_Write_String:
  2859                           
  2860                           	psect	text11
  2861  0635                     __ptext11:	
  2862 ;; *************** function _Lcd_Write_Char *****************
  2863 ;; Defined at:
  2864 ;;		line 51 in file "LCD.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  a               1    wreg     unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  a               1    2[BANK0 ] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, pclath, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2878 ;;      Params:         0       0       0       0       0
  2879 ;;      Locals:         0       1       0       0       0
  2880 ;;      Temps:          0       1       0       0       0
  2881 ;;      Totals:         0       2       0       0       0
  2882 ;;Total ram usage:        2 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    4
  2885 ;; This function calls:
  2886 ;;		_Lcd_Port
  2887 ;; This function is called by:
  2888 ;;		_Lcd_Write_String
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _Lcd_Write_Char
  2894  0635                     _Lcd_Write_Char:
  2895                           
  2896                           ;incstack = 0
  2897                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2898                           ;Lcd_Write_Char@a stored from wreg
  2899  0635  1283               	bcf	3,5	;RP0=0, select bank0
  2900  0636  1303               	bcf	3,6	;RP1=0, select bank0
  2901  0637  00A2               	movwf	Lcd_Write_Char@a
  2902  0638                     l1552:
  2903                           
  2904                           ;LCD.c: 52:     PORTEbits.RE1 = 1;
  2905  0638  1489               	bsf	9,1	;volatile
  2906  0639                     l1554:
  2907                           
  2908                           ;LCD.c: 53:    Lcd_Port(a);
  2909  0639  0822               	movf	Lcd_Write_Char@a,w
  2910  063A  120A  118A  268B  120A  118A  	fcall	_Lcd_Port
  2911  063F                     l1556:
  2912                           
  2913                           ;LCD.c: 54:    PORTEbits.RE0 = 1;
  2914  063F  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0640  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0641  1409               	bsf	9,0	;volatile
  2917  0642                     l1558:
  2918                           
  2919                           ;LCD.c: 55:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2920  0642  300C               	movlw	12
  2921  0643  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0644  1303               	bcf	3,6	;RP1=0, select bank0
  2923  0645  00A1               	movwf	??_Lcd_Write_Char
  2924  0646                     u527:
  2925  0646  0BA1               	decfsz	??_Lcd_Write_Char,f
  2926  0647  2E46               	goto	u527
  2927  0648  0000               	nop
  2928  0649                     l1560:
  2929                           
  2930                           ;LCD.c: 56:    PORTEbits.RE0 = 0;
  2931  0649  1283               	bcf	3,5	;RP0=0, select bank0
  2932  064A  1303               	bcf	3,6	;RP1=0, select bank0
  2933  064B  1009               	bcf	9,0	;volatile
  2934  064C                     l1562:
  2935                           
  2936                           ;LCD.c: 57:    PORTEbits.RE1 = 0;
  2937  064C  1089               	bcf	9,1	;volatile
  2938  064D                     l178:
  2939  064D  0008               	return
  2940  064E                     __end_of_Lcd_Write_Char:
  2941                           
  2942                           	psect	text12
  2943  05DA                     __ptext12:	
  2944 ;; *************** function _Lcd_Set_Cursor *****************
  2945 ;; Defined at:
  2946 ;;		line 30 in file "LCD.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  a               1    wreg     unsigned char 
  2949 ;;  b               1    4[BANK0 ] unsigned char 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  a               1    5[BANK0 ] unsigned char 
  2952 ;;  temp            1    6[BANK0 ] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2962 ;;      Params:         0       1       0       0       0
  2963 ;;      Locals:         0       2       0       0       0
  2964 ;;      Temps:          0       0       0       0       0
  2965 ;;      Totals:         0       3       0       0       0
  2966 ;;Total ram usage:        3 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    5
  2969 ;; This function calls:
  2970 ;;		_Lcd_Cmd
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           
  2977                           ;psect for function _Lcd_Set_Cursor
  2978  05DA                     _Lcd_Set_Cursor:
  2979                           
  2980                           ;incstack = 0
  2981                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2982                           ;Lcd_Set_Cursor@a stored from wreg
  2983  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2984  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2985  05DC  00A5               	movwf	Lcd_Set_Cursor@a
  2986  05DD                     l1818:
  2987                           
  2988                           ;LCD.c: 31:     char temp;;LCD.c: 32:     if (a == 1) {
  2989  05DD  0325               	decf	Lcd_Set_Cursor@a,w
  2990  05DE  1D03               	btfss	3,2
  2991  05DF  2DE1               	goto	u431
  2992  05E0  2DE2               	goto	u430
  2993  05E1                     u431:
  2994  05E1  2DEE               	goto	l1824
  2995  05E2                     u430:
  2996  05E2                     l1820:
  2997                           
  2998                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2999  05E2  0824               	movf	Lcd_Set_Cursor@b,w
  3000  05E3  3E7F               	addlw	127
  3001  05E4  00FF               	movwf	btemp+1
  3002  05E5  087F               	movf	btemp+1,w
  3003  05E6  00A6               	movwf	Lcd_Set_Cursor@temp
  3004  05E7                     l1822:
  3005                           
  3006                           ;LCD.c: 34:         Lcd_Cmd(temp);
  3007  05E7  0826               	movf	Lcd_Set_Cursor@temp,w
  3008  05E8  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  3009                           
  3010                           ;LCD.c: 35:     } else if (a == 2) {
  3011  05ED  2DFF               	goto	l172
  3012  05EE                     l1824:
  3013  05EE  3002               	movlw	2
  3014  05EF  0625               	xorwf	Lcd_Set_Cursor@a,w
  3015  05F0  1D03               	btfss	3,2
  3016  05F1  2DF3               	goto	u441
  3017  05F2  2DF4               	goto	u440
  3018  05F3                     u441:
  3019  05F3  2DFF               	goto	l172
  3020  05F4                     u440:
  3021  05F4                     l1826:
  3022                           
  3023                           ;LCD.c: 36:         temp = 0xC0 + b - 1;
  3024  05F4  0824               	movf	Lcd_Set_Cursor@b,w
  3025  05F5  3EBF               	addlw	191
  3026  05F6  00FF               	movwf	btemp+1
  3027  05F7  087F               	movf	btemp+1,w
  3028  05F8  00A6               	movwf	Lcd_Set_Cursor@temp
  3029  05F9                     l1828:
  3030                           
  3031                           ;LCD.c: 37:         Lcd_Cmd(temp);
  3032  05F9  0826               	movf	Lcd_Set_Cursor@temp,w
  3033  05FA  120A  118A  2600  120A  118A  	fcall	_Lcd_Cmd
  3034  05FF                     l172:
  3035  05FF  0008               	return
  3036  0600                     __end_of_Lcd_Set_Cursor:
  3037                           
  3038                           	psect	text13
  3039  0600                     __ptext13:	
  3040 ;; *************** function _Lcd_Cmd *****************
  3041 ;; Defined at:
  3042 ;;		line 16 in file "LCD.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  a               1    wreg     unsigned char 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  a               1    3[BANK0 ] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3056 ;;      Params:         0       0       0       0       0
  3057 ;;      Locals:         0       1       0       0       0
  3058 ;;      Temps:          0       2       0       0       0
  3059 ;;      Totals:         0       3       0       0       0
  3060 ;;Total ram usage:        3 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    4
  3063 ;; This function calls:
  3064 ;;		_Lcd_Port
  3065 ;; This function is called by:
  3066 ;;		_Setup
  3067 ;;		_Lcd_Set_Cursor
  3068 ;;		_Lcd_Init
  3069 ;;		_Lcd_Clear
  3070 ;;		_Lcd_Shift_Right
  3071 ;;		_Lcd_Shift_Left
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _Lcd_Cmd
  3077  0600                     _Lcd_Cmd:
  3078                           
  3079                           ;incstack = 0
  3080                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3081                           ;Lcd_Cmd@a stored from wreg
  3082  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0602  00A3               	movwf	Lcd_Cmd@a
  3085  0603                     l1438:
  3086                           
  3087                           ;LCD.c: 17:     Lcd_Port(a);
  3088  0603  0823               	movf	Lcd_Cmd@a,w
  3089  0604  120A  118A  268B  120A  118A  	fcall	_Lcd_Port
  3090  0609                     l1440:
  3091                           
  3092                           ;LCD.c: 18:     PORTEbits.RE1 = 0;
  3093  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3094  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3095  060B  1089               	bcf	9,1	;volatile
  3096  060C                     l1442:
  3097                           
  3098                           ;LCD.c: 20:     PORTEbits.RE0 = 1;
  3099  060C  1409               	bsf	9,0	;volatile
  3100  060D                     l1444:
  3101                           
  3102                           ;LCD.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3103  060D  3007               	movlw	7
  3104  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3105  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3106  0610  00A2               	movwf	??_Lcd_Cmd+1
  3107  0611  307C               	movlw	124
  3108  0612  00A1               	movwf	??_Lcd_Cmd
  3109  0613                     u537:
  3110  0613  0BA1               	decfsz	??_Lcd_Cmd,f
  3111  0614  2E13               	goto	u537
  3112  0615  0BA2               	decfsz	??_Lcd_Cmd+1,f
  3113  0616  2E13               	goto	u537
  3114  0617  0000               	nop
  3115  0618                     l1446:
  3116                           
  3117                           ;LCD.c: 22:     PORTEbits.RE0 = 0;
  3118  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3120  061A  1009               	bcf	9,0	;volatile
  3121  061B                     l163:
  3122  061B  0008               	return
  3123  061C                     __end_of_Lcd_Cmd:
  3124                           
  3125                           	psect	text14
  3126  068B                     __ptext14:	
  3127 ;; *************** function _Lcd_Port *****************
  3128 ;; Defined at:
  3129 ;;		line 12 in file "LCD.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  a               1    wreg     unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  a               1    0[BANK0 ] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         0       0       0       0       0
  3144 ;;      Locals:         0       1       0       0       0
  3145 ;;      Temps:          0       0       0       0       0
  3146 ;;      Totals:         0       1       0       0       0
  3147 ;;Total ram usage:        1 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    3
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_Lcd_Cmd
  3154 ;;		_Lcd_Write_Char
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function _Lcd_Port
  3160  068B                     _Lcd_Port:
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _Lcd_Port: [wreg]
  3164                           ;Lcd_Port@a stored from wreg
  3165  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3166  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3167  068D  00A0               	movwf	Lcd_Port@a
  3168  068E                     l1436:
  3169                           
  3170                           ;LCD.c: 13:     PORTD = a;
  3171  068E  0820               	movf	Lcd_Port@a,w
  3172  068F  0088               	movwf	8	;volatile
  3173  0690                     l160:
  3174  0690  0008               	return
  3175  0691                     __end_of_Lcd_Port:
  3176                           
  3177                           	psect	text15
  3178  0525                     __ptext15:	
  3179 ;; *************** function _ISR *****************
  3180 ;; Defined at:
  3181 ;;		line 77 in file "L3.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0
  3197 ;;      Temps:          4       0       0       0       0
  3198 ;;      Totals:         4       0       0       0       0
  3199 ;;Total ram usage:        4 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    2
  3202 ;; This function calls:
  3203 ;;		_mandar
  3204 ;;		_pots
  3205 ;; This function is called by:
  3206 ;;		Interrupt level 1
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           
  3211                           ;psect for function _ISR
  3212  0525                     _ISR:
  3213  0525                     i1l1852:
  3214                           
  3215                           ;L3.c: 79:     if (INTCONbits.T0IF == 1) {
  3216  0525  1D0B               	btfss	11,2	;volatile
  3217  0526  2D28               	goto	u46_21
  3218  0527  2D29               	goto	u46_20
  3219  0528                     u46_21:
  3220  0528  2D30               	goto	i1l1860
  3221  0529                     u46_20:
  3222  0529                     i1l1854:
  3223                           
  3224                           ;L3.c: 80:         TMR0 = 236;
  3225  0529  30EC               	movlw	236
  3226  052A  0081               	movwf	1	;volatile
  3227  052B                     i1l1856:
  3228                           
  3229                           ;L3.c: 81:         CONTADC++;
  3230  052B  3001               	movlw	1
  3231  052C  00FF               	movwf	btemp+1
  3232  052D  087F               	movf	btemp+1,w
  3233  052E  07C2               	addwf	_CONTADC,f
  3234  052F                     i1l1858:
  3235                           
  3236                           ;L3.c: 82:         INTCONbits.T0IF = 0;
  3237  052F  110B               	bcf	11,2	;volatile
  3238  0530                     i1l1860:
  3239                           
  3240                           ;L3.c: 85:     if (PIR1bits.ADIF == 1) {
  3241  0530  1F0C               	btfss	12,6	;volatile
  3242  0531  2D33               	goto	u47_21
  3243  0532  2D34               	goto	u47_20
  3244  0533                     u47_21:
  3245  0533  2D3C               	goto	i1l1866
  3246  0534                     u47_20:
  3247  0534                     i1l1862:
  3248                           
  3249                           ;L3.c: 86:         pots();
  3250  0534  120A  118A  2560  120A  118A  	fcall	_pots
  3251  0539                     i1l1864:
  3252                           
  3253                           ;L3.c: 87:         PIR1bits.ADIF = 0;
  3254  0539  1283               	bcf	3,5	;RP0=0, select bank0
  3255  053A  1303               	bcf	3,6	;RP1=0, select bank0
  3256  053B  130C               	bcf	12,6	;volatile
  3257  053C                     i1l1866:
  3258                           
  3259                           ;L3.c: 90:     if (PIR1bits.RCIF == 1) {
  3260  053C  1E8C               	btfss	12,5	;volatile
  3261  053D  2D3F               	goto	u48_21
  3262  053E  2D40               	goto	u48_20
  3263  053F                     u48_21:
  3264  053F  2D44               	goto	i1l1870
  3265  0540                     u48_20:
  3266  0540                     i1l1868:
  3267                           
  3268                           ;L3.c: 91:         REC = RCREG;
  3269  0540  081A               	movf	26,w	;volatile
  3270  0541  00FF               	movwf	btemp+1
  3271  0542  087F               	movf	btemp+1,w
  3272  0543  00F9               	movwf	_REC
  3273  0544                     i1l1870:
  3274                           
  3275                           ;L3.c: 94:     if (PIR1bits.TXIF == 1) {
  3276  0544  1E0C               	btfss	12,4	;volatile
  3277  0545  2D47               	goto	u49_21
  3278  0546  2D48               	goto	u49_20
  3279  0547                     u49_21:
  3280  0547  2D54               	goto	i1l111
  3281  0548                     u49_20:
  3282  0548                     i1l1872:
  3283                           
  3284                           ;L3.c: 95:         mandar();
  3285  0548  120A  118A  233C  120A  118A  	fcall	_mandar
  3286  054D                     i1l1874:
  3287                           
  3288                           ;L3.c: 96:         SEND++;
  3289  054D  3001               	movlw	1
  3290  054E  00FF               	movwf	btemp+1
  3291  054F  087F               	movf	btemp+1,w
  3292  0550  07F8               	addwf	_SEND,f
  3293  0551                     i1l1876:
  3294                           
  3295                           ;L3.c: 97:         PIE1bits.TXIE = 0;
  3296  0551  1683               	bsf	3,5	;RP0=1, select bank1
  3297  0552  1303               	bcf	3,6	;RP1=0, select bank1
  3298  0553  120C               	bcf	12,4	;volatile
  3299  0554                     i1l111:
  3300  0554  0877               	movf	??_ISR+3,w
  3301  0555  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0556  00FF               	movwf	btemp+1
  3303  0557  0876               	movf	??_ISR+2,w
  3304  0558  008A               	movwf	10
  3305  0559  0875               	movf	??_ISR+1,w
  3306  055A  0084               	movwf	4
  3307  055B  0E74               	swapf	??_ISR^(0+4294967168),w
  3308  055C  0083               	movwf	3
  3309  055D  0EFE               	swapf	btemp,f
  3310  055E  0E7E               	swapf	btemp,w
  3311  055F  0009               	retfie
  3312  0560                     __end_of_ISR:
  3313                           
  3314                           	psect	intentry
  3315  0004                     __pintentry:	
  3316                           ;incstack = 0
  3317                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3318                           
  3319  0004                     interrupt_function:
  3320  007E                     saved_w	set	btemp
  3321  0004  00FE               	movwf	btemp
  3322  0005  0E03               	swapf	3,w
  3323  0006  00F4               	movwf	??_ISR
  3324  0007  0804               	movf	4,w
  3325  0008  00F5               	movwf	??_ISR+1
  3326  0009  080A               	movf	10,w
  3327  000A  00F6               	movwf	??_ISR+2
  3328  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3329  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3330  000D  087F               	movf	btemp+1,w
  3331  000E  00F7               	movwf	??_ISR+3
  3332  000F  120A  118A  2D25   	ljmp	_ISR
  3333                           
  3334                           	psect	text16
  3335  0560                     __ptext16:	
  3336 ;; *************** function _pots *****************
  3337 ;; Defined at:
  3338 ;;		line 186 in file "L3.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         0       0       0       0       0
  3356 ;;Total ram usage:        0 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    1
  3359 ;; This function calls:
  3360 ;;		i1_configADC2
  3361 ;; This function is called by:
  3362 ;;		_ISR
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           
  3367                           ;psect for function _pots
  3368  0560                     _pots:
  3369  0560                     i1l1708:	
  3370                           ;incstack = 0
  3371                           ; Regs used in _pots: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3372                           
  3373                           
  3374                           ;L3.c: 188:     if (TOGGLE == 0) {
  3375  0560  087A               	movf	_TOGGLE,w
  3376  0561  1D03               	btfss	3,2
  3377  0562  2D64               	goto	u42_21
  3378  0563  2D65               	goto	u42_20
  3379  0564                     u42_21:
  3380  0564  2D78               	goto	i1l1716
  3381  0565                     u42_20:
  3382  0565                     i1l1710:
  3383                           
  3384                           ;L3.c: 189:         configADC2(1, 12);
  3385  0565  300C               	movlw	12
  3386  0566  00FF               	movwf	btemp+1
  3387  0567  087F               	movf	btemp+1,w
  3388  0568  00F0               	movwf	i1configADC2@chan
  3389  0569  3001               	movlw	1
  3390  056A  120A  118A  21A5  120A  118A  	fcall	i1_configADC2
  3391  056F                     i1l1712:
  3392                           
  3393                           ;L3.c: 190:         pot1 = ADRESH;
  3394  056F  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0570  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0571  081E               	movf	30,w	;volatile
  3397  0572  00FF               	movwf	btemp+1
  3398  0573  087F               	movf	btemp+1,w
  3399  0574  00C4               	movwf	_pot1
  3400  0575                     i1l1714:
  3401                           
  3402                           ;L3.c: 191:         TOGGLE = 1;
  3403  0575  01FA               	clrf	_TOGGLE
  3404  0576  0AFA               	incf	_TOGGLE,f
  3405                           
  3406                           ;L3.c: 192:     } else {
  3407  0577  2D89               	goto	i1l128
  3408  0578                     i1l1716:
  3409                           
  3410                           ;L3.c: 193:         configADC2(1, 10);
  3411  0578  300A               	movlw	10
  3412  0579  00FF               	movwf	btemp+1
  3413  057A  087F               	movf	btemp+1,w
  3414  057B  00F0               	movwf	i1configADC2@chan
  3415  057C  3001               	movlw	1
  3416  057D  120A  118A  21A5  120A  118A  	fcall	i1_configADC2
  3417  0582                     i1l1718:
  3418                           
  3419                           ;L3.c: 194:         pot2 = ADRESH;
  3420  0582  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0583  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0584  081E               	movf	30,w	;volatile
  3423  0585  00FF               	movwf	btemp+1
  3424  0586  087F               	movf	btemp+1,w
  3425  0587  00C3               	movwf	_pot2
  3426  0588                     i1l1720:
  3427                           
  3428                           ;L3.c: 195:         TOGGLE = 0;
  3429  0588  01FA               	clrf	_TOGGLE
  3430  0589                     i1l128:
  3431  0589  0008               	return
  3432  058A                     __end_of_pots:
  3433                           
  3434                           	psect	text17
  3435  01A5                     __ptext17:	
  3436 ;; *************** function i1_configADC2 *****************
  3437 ;; Defined at:
  3438 ;;		line 17 in file "adc2.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  fosc            1    wreg     unsigned char 
  3441 ;;  chan            1    0[COMMON] unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  fosc            1    3[COMMON] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         1       0       0       0       0
  3454 ;;      Locals:         1       0       0       0       0
  3455 ;;      Temps:          2       0       0       0       0
  3456 ;;      Totals:         4       0       0       0       0
  3457 ;;Total ram usage:        4 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_pots
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function i1_configADC2
  3468  01A5                     i1_configADC2:
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in i1_configADC2: [wreg-fsr0h+status,2+status,0]
  3472                           ;i1configADC2@fosc stored from wreg
  3473  01A5  00F3               	movwf	i1configADC2@fosc
  3474  01A6                     i1l1638:
  3475                           
  3476                           ;adc2.c: 19:     switch (fosc) {
  3477  01A6  29C4               	goto	i1l1652
  3478  01A7                     i1l1640:
  3479                           
  3480                           ;adc2.c: 22:             ADCON0bits.ADCS = 0b00;
  3481  01A7  303F               	movlw	-193
  3482  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  3483  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  3484  01AA  059F               	andwf	31,f	;volatile
  3485                           
  3486                           ;adc2.c: 23:             break;
  3487  01AB  2A29               	goto	i1l1690
  3488  01AC                     i1l1642:
  3489                           
  3490                           ;adc2.c: 26:             ADCON0bits.ADCS = 0b01;
  3491  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  3492  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  3493  01AE  081F               	movf	31,w	;volatile
  3494  01AF  393F               	andlw	-193
  3495  01B0  3840               	iorlw	64
  3496  01B1  009F               	movwf	31	;volatile
  3497                           
  3498                           ;adc2.c: 27:             break;
  3499  01B2  2A29               	goto	i1l1690
  3500  01B3                     i1l1644:
  3501                           
  3502                           ;adc2.c: 30:             ADCON0bits.ADCS = 0b10;
  3503  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  3504  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  3505  01B5  081F               	movf	31,w	;volatile
  3506  01B6  393F               	andlw	-193
  3507  01B7  3880               	iorlw	128
  3508  01B8  009F               	movwf	31	;volatile
  3509                           
  3510                           ;adc2.c: 31:             break;
  3511  01B9  2A29               	goto	i1l1690
  3512  01BA                     i1l1646:
  3513                           
  3514                           ;adc2.c: 34:             ADCON0bits.ADCS = 0b11;
  3515  01BA  30C0               	movlw	192
  3516  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3517  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3518  01BD  049F               	iorwf	31,f	;volatile
  3519                           
  3520                           ;adc2.c: 35:             break;
  3521  01BE  2A29               	goto	i1l1690
  3522  01BF                     i1l1648:
  3523                           
  3524                           ;adc2.c: 38:             ADCON0bits.ADCS = 0b00;
  3525  01BF  303F               	movlw	-193
  3526  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  3527  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  3528  01C2  059F               	andwf	31,f	;volatile
  3529                           
  3530                           ;adc2.c: 39:             break;
  3531  01C3  2A29               	goto	i1l1690
  3532  01C4                     i1l1652:
  3533  01C4  0873               	movf	i1configADC2@fosc,w
  3534  01C5  00F1               	movwf	??i1_configADC2
  3535  01C6  01F2               	clrf	??i1_configADC2+1
  3536                           
  3537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3538                           ; Switch size 1, requested type "simple"
  3539                           ; Number of cases is 1, Range of values is 0 to 0
  3540                           ; switch strategies available:
  3541                           ; Name         Instructions Cycles
  3542                           ; simple_byte            4     3 (average)
  3543                           ; direct_byte           11     8 (fixed)
  3544                           ; jumptable            260     6 (fixed)
  3545                           ;	Chosen strategy is simple_byte
  3546  01C7  0872               	movf	??i1_configADC2+1,w
  3547  01C8  3A00               	xorlw	0	; case 0
  3548  01C9  1903               	skipnz
  3549  01CA  29CC               	goto	i1l2066
  3550  01CB  29BF               	goto	i1l1648
  3551  01CC                     i1l2066:
  3552                           
  3553                           ; Switch size 1, requested type "simple"
  3554                           ; Number of cases is 4, Range of values is 0 to 3
  3555                           ; switch strategies available:
  3556                           ; Name         Instructions Cycles
  3557                           ; simple_byte           13     7 (average)
  3558                           ; direct_byte           20     8 (fixed)
  3559                           ; jumptable            260     6 (fixed)
  3560                           ;	Chosen strategy is simple_byte
  3561  01CC  0871               	movf	??i1_configADC2,w
  3562  01CD  3A00               	xorlw	0	; case 0
  3563  01CE  1903               	skipnz
  3564  01CF  29A7               	goto	i1l1640
  3565  01D0  3A01               	xorlw	1	; case 1
  3566  01D1  1903               	skipnz
  3567  01D2  29AC               	goto	i1l1642
  3568  01D3  3A03               	xorlw	3	; case 2
  3569  01D4  1903               	skipnz
  3570  01D5  29B3               	goto	i1l1644
  3571  01D6  3A01               	xorlw	1	; case 3
  3572  01D7  1903               	skipnz
  3573  01D8  29BA               	goto	i1l1646
  3574  01D9  29BF               	goto	i1l1648
  3575  01DA                     i1l1654:
  3576                           
  3577                           ;adc2.c: 43:             ADCON0bits.CHS = 0b0000;
  3578  01DA  30C3               	movlw	-61
  3579  01DB  059F               	andwf	31,f	;volatile
  3580                           
  3581                           ;adc2.c: 44:             break;
  3582  01DC  2A63               	goto	i1l1692
  3583  01DD                     i1l1656:
  3584                           
  3585                           ;adc2.c: 47:             ADCON0bits.CHS = 0b0001;
  3586  01DD  081F               	movf	31,w	;volatile
  3587  01DE  39C3               	andlw	-61
  3588  01DF  3804               	iorlw	4
  3589  01E0  009F               	movwf	31	;volatile
  3590                           
  3591                           ;adc2.c: 48:             break;
  3592  01E1  2A63               	goto	i1l1692
  3593  01E2                     i1l1658:
  3594                           
  3595                           ;adc2.c: 51:             ADCON0bits.CHS = 0b0010;
  3596  01E2  081F               	movf	31,w	;volatile
  3597  01E3  39C3               	andlw	-61
  3598  01E4  3808               	iorlw	8
  3599  01E5  009F               	movwf	31	;volatile
  3600                           
  3601                           ;adc2.c: 52:             break;
  3602  01E6  2A63               	goto	i1l1692
  3603  01E7                     i1l1660:
  3604                           
  3605                           ;adc2.c: 55:             ADCON0bits.CHS = 0b0011;
  3606  01E7  081F               	movf	31,w	;volatile
  3607  01E8  39C3               	andlw	-61
  3608  01E9  380C               	iorlw	12
  3609  01EA  009F               	movwf	31	;volatile
  3610                           
  3611                           ;adc2.c: 56:             break;
  3612  01EB  2A63               	goto	i1l1692
  3613  01EC                     i1l1662:
  3614                           
  3615                           ;adc2.c: 59:             ADCON0bits.CHS = 0b0100;
  3616  01EC  081F               	movf	31,w	;volatile
  3617  01ED  39C3               	andlw	-61
  3618  01EE  3810               	iorlw	16
  3619  01EF  009F               	movwf	31	;volatile
  3620                           
  3621                           ;adc2.c: 60:             break;
  3622  01F0  2A63               	goto	i1l1692
  3623  01F1                     i1l1664:
  3624                           
  3625                           ;adc2.c: 63:             ADCON0bits.CHS = 0b0101;
  3626  01F1  081F               	movf	31,w	;volatile
  3627  01F2  39C3               	andlw	-61
  3628  01F3  3814               	iorlw	20
  3629  01F4  009F               	movwf	31	;volatile
  3630                           
  3631                           ;adc2.c: 64:             break;
  3632  01F5  2A63               	goto	i1l1692
  3633  01F6                     i1l1666:
  3634                           
  3635                           ;adc2.c: 67:             ADCON0bits.CHS = 0b0110;
  3636  01F6  081F               	movf	31,w	;volatile
  3637  01F7  39C3               	andlw	-61
  3638  01F8  3818               	iorlw	24
  3639  01F9  009F               	movwf	31	;volatile
  3640                           
  3641                           ;adc2.c: 68:             break;
  3642  01FA  2A63               	goto	i1l1692
  3643  01FB                     i1l1668:
  3644                           
  3645                           ;adc2.c: 71:             ADCON0bits.CHS = 0b0111;
  3646  01FB  081F               	movf	31,w	;volatile
  3647  01FC  39C3               	andlw	-61
  3648  01FD  381C               	iorlw	28
  3649  01FE  009F               	movwf	31	;volatile
  3650                           
  3651                           ;adc2.c: 72:             break;
  3652  01FF  2A63               	goto	i1l1692
  3653  0200                     i1l1670:
  3654                           
  3655                           ;adc2.c: 75:             ADCON0bits.CHS = 0b1000;
  3656  0200  081F               	movf	31,w	;volatile
  3657  0201  39C3               	andlw	-61
  3658  0202  3820               	iorlw	32
  3659  0203  009F               	movwf	31	;volatile
  3660                           
  3661                           ;adc2.c: 76:             break;
  3662  0204  2A63               	goto	i1l1692
  3663  0205                     i1l1672:
  3664                           
  3665                           ;adc2.c: 79:             ADCON0bits.CHS = 0b1001;
  3666  0205  081F               	movf	31,w	;volatile
  3667  0206  39C3               	andlw	-61
  3668  0207  3824               	iorlw	36
  3669  0208  009F               	movwf	31	;volatile
  3670                           
  3671                           ;adc2.c: 80:             break;
  3672  0209  2A63               	goto	i1l1692
  3673  020A                     i1l1674:
  3674                           
  3675                           ;adc2.c: 83:             ADCON0bits.CHS = 0b1010;
  3676  020A  081F               	movf	31,w	;volatile
  3677  020B  39C3               	andlw	-61
  3678  020C  3828               	iorlw	40
  3679  020D  009F               	movwf	31	;volatile
  3680                           
  3681                           ;adc2.c: 84:             break;
  3682  020E  2A63               	goto	i1l1692
  3683  020F                     i1l1676:
  3684                           
  3685                           ;adc2.c: 87:             ADCON0bits.CHS = 0b1011;
  3686  020F  081F               	movf	31,w	;volatile
  3687  0210  39C3               	andlw	-61
  3688  0211  382C               	iorlw	44
  3689  0212  009F               	movwf	31	;volatile
  3690                           
  3691                           ;adc2.c: 88:             break;
  3692  0213  2A63               	goto	i1l1692
  3693  0214                     i1l1678:
  3694                           
  3695                           ;adc2.c: 91:             ADCON0bits.CHS = 0b1100;
  3696  0214  081F               	movf	31,w	;volatile
  3697  0215  39C3               	andlw	-61
  3698  0216  3830               	iorlw	48
  3699  0217  009F               	movwf	31	;volatile
  3700                           
  3701                           ;adc2.c: 92:             break;
  3702  0218  2A63               	goto	i1l1692
  3703  0219                     i1l1680:
  3704                           
  3705                           ;adc2.c: 95:             ADCON0bits.CHS = 0b1101;
  3706  0219  081F               	movf	31,w	;volatile
  3707  021A  39C3               	andlw	-61
  3708  021B  3834               	iorlw	52
  3709  021C  009F               	movwf	31	;volatile
  3710                           
  3711                           ;adc2.c: 96:             break;
  3712  021D  2A63               	goto	i1l1692
  3713  021E                     i1l1682:
  3714                           
  3715                           ;adc2.c: 99:             ADCON0bits.CHS = 0b1110;
  3716  021E  081F               	movf	31,w	;volatile
  3717  021F  39C3               	andlw	-61
  3718  0220  3838               	iorlw	56
  3719  0221  009F               	movwf	31	;volatile
  3720                           
  3721                           ;adc2.c: 100:             break;
  3722  0222  2A63               	goto	i1l1692
  3723  0223                     i1l1684:
  3724                           
  3725                           ;adc2.c: 103:             ADCON0bits.CHS = 0b1111;
  3726  0223  303C               	movlw	60
  3727  0224  049F               	iorwf	31,f	;volatile
  3728                           
  3729                           ;adc2.c: 104:             break;
  3730  0225  2A63               	goto	i1l1692
  3731  0226                     i1l1686:
  3732                           
  3733                           ;adc2.c: 107:             ADCON0bits.CHS = 0b0000;
  3734  0226  30C3               	movlw	-61
  3735  0227  059F               	andwf	31,f	;volatile
  3736                           
  3737                           ;adc2.c: 108:             break;
  3738  0228  2A63               	goto	i1l1692
  3739  0229                     i1l1690:
  3740  0229  0870               	movf	i1configADC2@chan,w
  3741  022A  00F1               	movwf	??i1_configADC2
  3742  022B  01F2               	clrf	??i1_configADC2+1
  3743                           
  3744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3745                           ; Switch size 1, requested type "simple"
  3746                           ; Number of cases is 1, Range of values is 0 to 0
  3747                           ; switch strategies available:
  3748                           ; Name         Instructions Cycles
  3749                           ; simple_byte            4     3 (average)
  3750                           ; direct_byte           11     8 (fixed)
  3751                           ; jumptable            260     6 (fixed)
  3752                           ;	Chosen strategy is simple_byte
  3753  022C  0872               	movf	??i1_configADC2+1,w
  3754  022D  3A00               	xorlw	0	; case 0
  3755  022E  1903               	skipnz
  3756  022F  2A31               	goto	i1l2068
  3757  0230  2A26               	goto	i1l1686
  3758  0231                     i1l2068:
  3759                           
  3760                           ; Switch size 1, requested type "simple"
  3761                           ; Number of cases is 16, Range of values is 0 to 15
  3762                           ; switch strategies available:
  3763                           ; Name         Instructions Cycles
  3764                           ; simple_byte           49    25 (average)
  3765                           ; direct_byte           56     8 (fixed)
  3766                           ; jumptable            260     6 (fixed)
  3767                           ;	Chosen strategy is simple_byte
  3768  0231  0871               	movf	??i1_configADC2,w
  3769  0232  3A00               	xorlw	0	; case 0
  3770  0233  1903               	skipnz
  3771  0234  29DA               	goto	i1l1654
  3772  0235  3A01               	xorlw	1	; case 1
  3773  0236  1903               	skipnz
  3774  0237  29DD               	goto	i1l1656
  3775  0238  3A03               	xorlw	3	; case 2
  3776  0239  1903               	skipnz
  3777  023A  29E2               	goto	i1l1658
  3778  023B  3A01               	xorlw	1	; case 3
  3779  023C  1903               	skipnz
  3780  023D  29E7               	goto	i1l1660
  3781  023E  3A07               	xorlw	7	; case 4
  3782  023F  1903               	skipnz
  3783  0240  29EC               	goto	i1l1662
  3784  0241  3A01               	xorlw	1	; case 5
  3785  0242  1903               	skipnz
  3786  0243  29F1               	goto	i1l1664
  3787  0244  3A03               	xorlw	3	; case 6
  3788  0245  1903               	skipnz
  3789  0246  29F6               	goto	i1l1666
  3790  0247  3A01               	xorlw	1	; case 7
  3791  0248  1903               	skipnz
  3792  0249  29FB               	goto	i1l1668
  3793  024A  3A0F               	xorlw	15	; case 8
  3794  024B  1903               	skipnz
  3795  024C  2A00               	goto	i1l1670
  3796  024D  3A01               	xorlw	1	; case 9
  3797  024E  1903               	skipnz
  3798  024F  2A05               	goto	i1l1672
  3799  0250  3A03               	xorlw	3	; case 10
  3800  0251  1903               	skipnz
  3801  0252  2A0A               	goto	i1l1674
  3802  0253  3A01               	xorlw	1	; case 11
  3803  0254  1903               	skipnz
  3804  0255  2A0F               	goto	i1l1676
  3805  0256  3A07               	xorlw	7	; case 12
  3806  0257  1903               	skipnz
  3807  0258  2A14               	goto	i1l1678
  3808  0259  3A01               	xorlw	1	; case 13
  3809  025A  1903               	skipnz
  3810  025B  2A19               	goto	i1l1680
  3811  025C  3A03               	xorlw	3	; case 14
  3812  025D  1903               	skipnz
  3813  025E  2A1E               	goto	i1l1682
  3814  025F  3A01               	xorlw	1	; case 15
  3815  0260  1903               	skipnz
  3816  0261  2A23               	goto	i1l1684
  3817  0262  2A26               	goto	i1l1686
  3818  0263                     i1l1692:
  3819                           
  3820                           ;adc2.c: 113:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3821  0263  300D               	movlw	13
  3822  0264  00F2               	movwf	??i1_configADC2+1
  3823  0265  30FB               	movlw	251
  3824  0266  00F1               	movwf	??i1_configADC2
  3825  0267                     u54_27:
  3826  0267  0BF1               	decfsz	??i1_configADC2,f
  3827  0268  2A67               	goto	u54_27
  3828  0269  0BF2               	decfsz	??i1_configADC2+1,f
  3829  026A  2A67               	goto	u54_27
  3830  026B  2A6C               	nop2
  3831  026C                     i1l1694:
  3832                           
  3833                           ;adc2.c: 116:     ADCON0bits.GO_nDONE = 1;
  3834  026C  1283               	bcf	3,5	;RP0=0, select bank0
  3835  026D  1303               	bcf	3,6	;RP1=0, select bank0
  3836  026E  149F               	bsf	31,1	;volatile
  3837  026F                     i1l1696:
  3838                           
  3839                           ;adc2.c: 120:     ADCON0bits.ADON = 1;
  3840  026F  141F               	bsf	31,0	;volatile
  3841  0270                     i1l1698:
  3842                           
  3843                           ;adc2.c: 121:     ADCON1 = 0;
  3844  0270  1683               	bsf	3,5	;RP0=1, select bank1
  3845  0271  1303               	bcf	3,6	;RP1=0, select bank1
  3846  0272  019F               	clrf	31	;volatile
  3847  0273                     i1l225:
  3848  0273  0008               	return
  3849  0274                     __end_ofi1_configADC2:
  3850                           
  3851                           	psect	text18
  3852  033C                     __ptext18:	
  3853 ;; *************** function _mandar *****************
  3854 ;; Defined at:
  3855 ;;		line 217 in file "L3.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       0       0       0       0
  3870 ;;      Locals:         0       0       0       0       0
  3871 ;;      Temps:          2       0       0       0       0
  3872 ;;      Totals:         2       0       0       0       0
  3873 ;;Total ram usage:        2 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_ISR
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           
  3883                           ;psect for function _mandar
  3884  033C                     _mandar:
  3885  033C                     i1l1722:	
  3886                           ;incstack = 0
  3887                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  3888                           
  3889                           
  3890                           ;L3.c: 218:     switch (SEND) {
  3891  033C  2B7F               	goto	i1l1758
  3892  033D                     i1l1724:
  3893                           
  3894                           ;L3.c: 221:             TXREG = 0x28;
  3895  033D  3028               	movlw	40
  3896  033E  1283               	bcf	3,5	;RP0=0, select bank0
  3897  033F  1303               	bcf	3,6	;RP1=0, select bank0
  3898  0340  0099               	movwf	25	;volatile
  3899                           
  3900                           ;L3.c: 222:             break;
  3901  0341  2BB6               	goto	i1l151
  3902  0342                     i1l1726:
  3903                           
  3904                           ;L3.c: 225:             TXREG = C1;
  3905  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3906  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3907  0344  083B               	movf	_C1,w
  3908  0345  0099               	movwf	25	;volatile
  3909                           
  3910                           ;L3.c: 226:             break;
  3911  0346  2BB6               	goto	i1l151
  3912  0347                     i1l1728:
  3913                           
  3914                           ;L3.c: 229:             TXREG = 0x2E;
  3915  0347  302E               	movlw	46
  3916  0348  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0349  1303               	bcf	3,6	;RP1=0, select bank0
  3918  034A  0099               	movwf	25	;volatile
  3919                           
  3920                           ;L3.c: 230:             break;
  3921  034B  2BB6               	goto	i1l151
  3922  034C                     i1l1730:
  3923                           
  3924                           ;L3.c: 232:             TXREG = D1;
  3925  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3926  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3927  034E  083A               	movf	_D1,w
  3928  034F  0099               	movwf	25	;volatile
  3929                           
  3930                           ;L3.c: 233:             break;
  3931  0350  2BB6               	goto	i1l151
  3932  0351                     i1l1732:
  3933                           
  3934                           ;L3.c: 235:             TXREG = U1;
  3935  0351  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0352  1303               	bcf	3,6	;RP1=0, select bank0
  3937  0353  0839               	movf	_U1,w
  3938  0354  0099               	movwf	25	;volatile
  3939                           
  3940                           ;L3.c: 236:             break;
  3941  0355  2BB6               	goto	i1l151
  3942  0356                     i1l1734:
  3943                           
  3944                           ;L3.c: 238:             TXREG = 0x29;
  3945  0356  3029               	movlw	41
  3946  0357  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0358  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0359  0099               	movwf	25	;volatile
  3949                           
  3950                           ;L3.c: 239:             break;
  3951  035A  2BB6               	goto	i1l151
  3952  035B                     i1l1736:
  3953                           
  3954                           ;L3.c: 242:             TXREG = 0x2C;
  3955  035B  302C               	movlw	44
  3956  035C  1283               	bcf	3,5	;RP0=0, select bank0
  3957  035D  1303               	bcf	3,6	;RP1=0, select bank0
  3958  035E  0099               	movwf	25	;volatile
  3959                           
  3960                           ;L3.c: 243:             break;
  3961  035F  2BB6               	goto	i1l151
  3962  0360                     i1l1738:
  3963                           
  3964                           ;L3.c: 246:             TXREG = 0x20;
  3965  0360  3020               	movlw	32
  3966  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3967  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3968  0363  0099               	movwf	25	;volatile
  3969                           
  3970                           ;L3.c: 247:             break;
  3971  0364  2BB6               	goto	i1l151
  3972  0365                     i1l1742:
  3973                           
  3974                           ;L3.c: 254:             TXREG = C2;
  3975  0365  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0366  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0367  0838               	movf	_C2,w
  3978  0368  0099               	movwf	25	;volatile
  3979                           
  3980                           ;L3.c: 255:             break;
  3981  0369  2BB6               	goto	i1l151
  3982  036A                     i1l1746:
  3983                           
  3984                           ;L3.c: 260:             TXREG = D2;
  3985  036A  1283               	bcf	3,5	;RP0=0, select bank0
  3986  036B  1303               	bcf	3,6	;RP1=0, select bank0
  3987  036C  0837               	movf	_D2,w
  3988  036D  0099               	movwf	25	;volatile
  3989                           
  3990                           ;L3.c: 261:             break;
  3991  036E  2BB6               	goto	i1l151
  3992  036F                     i1l1748:
  3993                           
  3994                           ;L3.c: 263:             TXREG = U2;
  3995  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0371  0836               	movf	_U2,w
  3998  0372  0099               	movwf	25	;volatile
  3999                           
  4000                           ;L3.c: 265:             break;
  4001  0373  2BB6               	goto	i1l151
  4002  0374                     i1l1750:
  4003                           
  4004                           ;L3.c: 268:             TXREG = 0x29;
  4005  0374  3029               	movlw	41
  4006  0375  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0376  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0377  0099               	movwf	25	;volatile
  4009  0378                     i1l1752:
  4010                           
  4011                           ;L3.c: 269:             SEND = 0;
  4012  0378  01F8               	clrf	_SEND
  4013  0379                     i1l1754:
  4014                           
  4015                           ;L3.c: 272:             TXREG = 0x0D;
  4016  0379  300D               	movlw	13
  4017  037A  1283               	bcf	3,5	;RP0=0, select bank0
  4018  037B  1303               	bcf	3,6	;RP1=0, select bank0
  4019  037C  0099               	movwf	25	;volatile
  4020                           
  4021                           ;L3.c: 273:             SEND = 0;
  4022  037D  01F8               	clrf	_SEND
  4023                           
  4024                           ;L3.c: 274:             break;
  4025  037E  2BB6               	goto	i1l151
  4026  037F                     i1l1758:
  4027  037F  0878               	movf	_SEND,w
  4028  0380  00F0               	movwf	??_mandar
  4029  0381  01F1               	clrf	??_mandar+1
  4030                           
  4031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4032                           ; Switch size 1, requested type "simple"
  4033                           ; Number of cases is 1, Range of values is 0 to 0
  4034                           ; switch strategies available:
  4035                           ; Name         Instructions Cycles
  4036                           ; simple_byte            4     3 (average)
  4037                           ; direct_byte           11     8 (fixed)
  4038                           ; jumptable            260     6 (fixed)
  4039                           ;	Chosen strategy is simple_byte
  4040  0382  0871               	movf	??_mandar+1,w
  4041  0383  3A00               	xorlw	0	; case 0
  4042  0384  1903               	skipnz
  4043  0385  2B87               	goto	i1l2070
  4044  0386  2BB6               	goto	i1l151
  4045  0387                     i1l2070:
  4046                           
  4047                           ; Switch size 1, requested type "simple"
  4048                           ; Number of cases is 15, Range of values is 0 to 14
  4049                           ; switch strategies available:
  4050                           ; Name         Instructions Cycles
  4051                           ; simple_byte           46    24 (average)
  4052                           ; direct_byte           53     8 (fixed)
  4053                           ; jumptable            260     6 (fixed)
  4054                           ;	Chosen strategy is simple_byte
  4055  0387  0870               	movf	??_mandar,w
  4056  0388  3A00               	xorlw	0	; case 0
  4057  0389  1903               	skipnz
  4058  038A  2B3D               	goto	i1l1724
  4059  038B  3A01               	xorlw	1	; case 1
  4060  038C  1903               	skipnz
  4061  038D  2B42               	goto	i1l1726
  4062  038E  3A03               	xorlw	3	; case 2
  4063  038F  1903               	skipnz
  4064  0390  2B47               	goto	i1l1728
  4065  0391  3A01               	xorlw	1	; case 3
  4066  0392  1903               	skipnz
  4067  0393  2B4C               	goto	i1l1730
  4068  0394  3A07               	xorlw	7	; case 4
  4069  0395  1903               	skipnz
  4070  0396  2B51               	goto	i1l1732
  4071  0397  3A01               	xorlw	1	; case 5
  4072  0398  1903               	skipnz
  4073  0399  2B56               	goto	i1l1734
  4074  039A  3A03               	xorlw	3	; case 6
  4075  039B  1903               	skipnz
  4076  039C  2B5B               	goto	i1l1736
  4077  039D  3A01               	xorlw	1	; case 7
  4078  039E  1903               	skipnz
  4079  039F  2B60               	goto	i1l1738
  4080  03A0  3A0F               	xorlw	15	; case 8
  4081  03A1  1903               	skipnz
  4082  03A2  2B3D               	goto	i1l1724
  4083  03A3  3A01               	xorlw	1	; case 9
  4084  03A4  1903               	skipnz
  4085  03A5  2B65               	goto	i1l1742
  4086  03A6  3A03               	xorlw	3	; case 10
  4087  03A7  1903               	skipnz
  4088  03A8  2B47               	goto	i1l1728
  4089  03A9  3A01               	xorlw	1	; case 11
  4090  03AA  1903               	skipnz
  4091  03AB  2B6A               	goto	i1l1746
  4092  03AC  3A07               	xorlw	7	; case 12
  4093  03AD  1903               	skipnz
  4094  03AE  2B6F               	goto	i1l1748
  4095  03AF  3A01               	xorlw	1	; case 13
  4096  03B0  1903               	skipnz
  4097  03B1  2B74               	goto	i1l1750
  4098  03B2  3A03               	xorlw	3	; case 14
  4099  03B3  1903               	skipnz
  4100  03B4  2B79               	goto	i1l1754
  4101  03B5  2BB6               	goto	i1l151
  4102  03B6                     i1l151:
  4103  03B6  0008               	return
  4104  03B7                     __end_of_mandar:
  4105  007E                     btemp	set	126	;btemp
  4106  007E                     wtemp0	set	126
  4107                           
  4108                           	psect	config
  4109                           
  4110                           ;Config register CONFIG1 @ 0x2007
  4111                           ;	Oscillator Selection bits
  4112                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4113                           ;	Watchdog Timer Enable bit
  4114                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4115                           ;	Power-up Timer Enable bit
  4116                           ;	PWRTE = OFF, PWRT disabled
  4117                           ;	RE3/MCLR pin function select bit
  4118                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4119                           ;	Code Protection bit
  4120                           ;	CP = OFF, Program memory code protection is disabled
  4121                           ;	Data Code Protection bit
  4122                           ;	CPD = OFF, Data memory code protection is disabled
  4123                           ;	Brown Out Reset Selection bits
  4124                           ;	BOREN = OFF, BOR disabled
  4125                           ;	Internal External Switchover bit
  4126                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4127                           ;	Fail-Safe Clock Monitor Enabled bit
  4128                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4129                           ;	Low Voltage Programming Enable bit
  4130                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4131                           ;	In-Circuit Debugger Mode bit
  4132                           ;	DEBUG = 0x1, unprogrammed default
  4133  2007                     	org	8199
  4134  2007  20D4               	dw	8404
  4135                           
  4136                           ;Config register CONFIG2 @ 0x2008
  4137                           ;	Brown-out Reset Selection bit
  4138                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4139                           ;	Flash Program Memory Self Write Enable bits
  4140                           ;	WRT = OFF, Write protection off
  4141  2008                     	org	8200
  4142  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     22      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _pots->i1_configADC2

Critical Paths under _main in BANK0

    _main->_map
    _map->___awdiv
    ___awdiv->___wmul
    _Setup->_Lcd_Cmd
    _Setup->_configADC2
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4007
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                  8     8      0    2962
                                             14 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     396
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1516
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     330
                            _Lcd_Cmd
                           _Lcd_Init
                         _configADC2
                            _initOsc
                              _usart
 ---------------------------------------------------------------------------------
 (2) _usart                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _configADC2                                           4     3      1     220
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     233
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     482
                                              4 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0      96
                                              4 COMMON     4     4      0
                             _mandar
                               _pots
 ---------------------------------------------------------------------------------
 (6) _pots                                                 0     0      0      96
                       i1_configADC2
 ---------------------------------------------------------------------------------
 (7) i1_configADC2                                         4     3      1      96
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
     _configADC2
     _initOsc
     _usart
   _map
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul

 _ISR (ROOT)
   _mandar
   _pots
     i1_configADC2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 08 01:27:20 2021

                        pc 0002             ___bmul@product 0021                         _C1 003B  
                       _C2 0038                         _D1 003A                         _D2 0037  
                       _U1 0039                         _U2 0036               ___awdiv@sign 002B  
                       fsr 0004        ___wmul@multiplicand 0022                        l123 0524  
                      l131 01A4                        l160 0690                        l240 0679  
                      l225 033B                        l250 0436                        l163 061B  
                      l251 043C                        l172 05FF                        l252 0442  
                      l253 0448                        l254 044E                        l246 0424  
                      l342 05C1                        l175 0634                        l255 0454  
                      l247 047C                        l184 05B2                        l256 047D  
                      l248 042A                        l344 05D9                        l249 0430  
                      l178 064D                        l368 0664                        _CP1 0041  
                      _CP2 003E                        l495 041F                        _DP1 0040  
                      _DP2 003D                        u300 0656                        u301 0655  
                      u310 0663                        u311 0662                        u400 0411  
                      u320 03BE                        u401 0410                        u321 03BD  
                      u410 0416                        u330 03C9                        u411 0415  
                      u331 03C8                        u340 03DA                        u260 05BB  
                      u500 04D0                        u341 03D9                        u261 05BA  
                      u501 04CF                        _REC 0079                        u430 05E2  
                      u431 05E1                        u440 05F4                        u360 03EC  
                      u441 05F3                        u361 03EB                        u450 05B2  
                      u290 05D5                        u451 05B1                        u355 03DE  
                      u291 05D4                        u275 05C2                        u380 03FD  
                      _ISR 0525                        u517 0330                        u381 03FC  
                      u285 05C9                        u527 0646                        u375 03ED  
                      u537 0613                        u385 03F9                        u395 0405  
                      _UP1 003F                        _UP2 003C                        _map 002E  
                      fsr0 0004                       ?_ISR 0070                       l1500 02DB  
                     l2060 0462                       l1502 02E0                       l2062 0293  
                     l1440 0609                       l1520 0338                       l2064 02F8  
                     l1504 02E5                       l1512 02F0                       l1600 03C3  
                     l1442 060C                       l1506 02EA                       l1514 032A  
                     l1610 03D4                       l1602 03C5                       l1436 068E  
                     l1444 060D                       l1516 0334                       l1508 02ED  
                     l1460 0277                       l1452 045A                       l1540 0672  
                     l1620 03EC                       l1612 03DA                       l1604 03C9  
                     l1446 0618                       l1438 0603                       l1550 061C  
                     l1518 0337                       l1470 0288                       l1462 0278  
                     l1542 0673                       l1534 0665                       l1622 03FD  
                     l1614 03DD                       l1630 0411                       l1606 03CE  
                     l1560 0649                       l1552 0638                       l1480 02A9  
                     l1464 027B                       l1448 0423                       l1544 0674  
                     l1536 066D                       l1800 0515                       l1632 0416  
                     l1624 0403                       l1616 03E4                       l1608 03D2  
                     l1562 064C                       l1554 0639                       l1490 02C2  
                     l1482 02AE                       l1466 0280                       l1474 028B  
                     l1546 0677                       l1538 0670                       l1810 051C  
                     l1802 0516                       l1634 041B                       l1626 0404  
                     l1618 03E8                       l1570 05C8                       l1820 05E2  
                     l1556 063F                       l1492 02C7                       l1484 02B3  
                     l1476 02A1                       l1468 0285                       l1548 0678  
                     l1812 051D                       l1804 0517                       l1628 040B  
                     l1580 0652                       l1572 05CF                       l1564 05B3  
                     l1900 04D1                       l1822 05E7                       l1558 0642  
                     l1830 058D                       l1494 02CC                       l1486 02B8  
                     l1478 02A4                       l1814 0520                       l1806 0518  
                     l1590 0663                       l1582 0656                       l1574 05D5  
                     l1566 05B7                       l1902 04D2                       l1824 05EE  
                     l1832 0590                       l1496 02D1                       l1488 02BD  
                     l1816 0521                       l1808 0519                       l1584 065A  
                     l1568 05BB                       l1840 0186                       l1826 05F4  
                     l1818 05DD                       l1834 059D                       l1498 02D6  
                     l1770 04EF                       l1594 03B7                       l1586 065C  
                     l1578 0651                       l1850 019F                       l1842 018B  
                     l1828 05F9                       l1836 05A5                       l1780 0504  
                     l1772 04F4                       l1764 04D9                       l1596 03BA  
                     l1588 065E                       l1844 0190                       l1790 050B  
                     l1782 0507                       l1774 04F9                       l1766 04DD  
                     l1598 03BE                       l1846 0195                       l1838 002E  
                     l1792 050F                       l1784 0508                       l1776 04FF  
                     l1768 04E3                       l1848 019A                       l1880 0483  
                     l1794 0510                       l1786 0509                       l1778 0502  
                     l1890 04B1                       l1882 048D                       l1796 0512  
                     l1788 050A                       l1892 04B7                       l1884 0493  
                     l1798 0514                       l1894 04C3                       l1886 049F  
                     l1878 047E                       ?_map 0070                       l1896 04C8  
                     l1888 04A5                       l1898 04D0                       STR_1 0685  
                     STR_2 0688                       STR_3 0680                       _SEND 0078  
                     _TMR0 0001          ?_Lcd_Write_String 0070                       _main 047E  
                     _pot1 0044                       _pot2 0043                       _pots 0560  
                     btemp 007E                       start 0012         ??_Lcd_Write_String 0023  
          __end_of_Lcd_Cmd 061C          ___bmul@multiplier 0022                      ??_ISR 0074  
    __size_ofi1_configADC2 00CF                      ??_map 002E                      ?_main 0070  
          __end_of___awdiv 0420                      ?_pots 0070                      _ANSEL 0188  
          ___awdiv@divisor 0026                      i1l111 0554                      i1l151 03B6  
                    i1l128 0589                      i1l225 0273            ___awdiv@counter 002A  
                    _RCREG 001A                      u42_20 0565                      u42_21 0564  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u46_20 0529                      u46_21 0528                      u54_27 0267  
                    u47_20 0534                      u47_21 0533                      u48_20 0540  
                    u48_21 053F                      u49_20 0548                      u49_21 0547  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _Setup 04D9            __end_of_initOsc 047E  
                    _usart 0665                      pclath 000A                      status 0003  
                    wtemp0 007E               i1_configADC2 01A5           __end_of_Lcd_Init 0635  
         __end_of_Lcd_Port 0691            __initialization 0015               __end_of_main 04D9  
             __end_of_pots 058A                     ??_main 0036                     ??_pots 0074  
                   ?_Setup 0070                     _ADCON1 009F                     _ADRESH 001E  
              initOsc@IRCF 0022           ___awdiv@dividend 0028                     _ANSELH 0189  
                   ?_usart 0070                     i1l2070 0387                     i1l2066 01CC  
                   i1l2068 0231                     i1l1710 0565                     i1l1640 01A7  
                   i1l1720 0588                     i1l1712 056F                     i1l1730 034C  
                   i1l1722 033C                     i1l1642 01AC                     i1l1714 0575  
                   i1l1732 0351                     i1l1724 033D                     i1l1660 01E7  
                   i1l1644 01B3                     i1l1652 01C4                     i1l1716 0578  
                   i1l1708 0560                     i1l1750 0374                     i1l1742 0365  
                   i1l1734 0356                     i1l1726 0342                     i1l1670 0200  
                   i1l1662 01EC                     i1l1654 01DA                     i1l1646 01BA  
                   i1l1638 01A6                     i1l1718 0582                     i1l1752 0378  
                   i1l1736 035B                     i1l1728 0347                     i1l1680 0219  
                   i1l1672 0205                     i1l1664 01F1                     i1l1656 01DD  
                   i1l1648 01BF                     i1l1754 0379                     i1l1746 036A  
                   i1l1738 0360                     i1l1682 021E                     i1l1674 020A  
                   i1l1666 01F6                     i1l1658 01E2                     i1l1690 0229  
                   i1l1748 036F                     i1l1684 0223                     i1l1676 020F  
                   i1l1668 01FB                     i1l1692 0263                     i1l1860 0530  
                   i1l1852 0525                     i1l1758 037F                     i1l1694 026C  
                   i1l1686 0226                     i1l1678 0214                     i1l1870 0544  
                   i1l1862 0534                     i1l1854 0529                     i1l1696 026F  
                   i1l1872 0548                     i1l1864 0539                     i1l1856 052B  
                   i1l1698 0270                     i1l1874 054D                     i1l1866 053C  
                   i1l1858 052F                     i1l1876 0551                     i1l1868 0540  
                ??_Lcd_Cmd 0021                     _SPBRGH 009A                     _TOGGLE 007A  
  __size_of_Lcd_Write_Char 0019                     ___bmul 064E                     ___wmul 05B3  
                ??___awdiv 002A                     _mandar 033C           ___awdiv@quotient 002C  
                ??_initOsc 0020                     saved_w 007E            Lcd_Set_Cursor@a 0025  
          Lcd_Set_Cursor@b 0024    __end_of__initialization 002A           i1configADC2@chan 0070  
         i1configADC2@fosc 0073        ___bmul@multiplicand 0020             __pcstackCOMMON 0070  
            __end_of_Setup 0525              __end_of_usart 067A             _Lcd_Set_Cursor 05DA  
                  ??_Setup 0024                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_usart 0020                 __pbssBANK0 0036                 __pmaintext 047E  
                  ?___bmul 0020                    ?___wmul 0020                 __pintentry 0004  
                  ?_mandar 0070  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0600  
                  _FLAGADC 007B                    _CONTADC 0042                 _configADC2 0274  
               ??_Lcd_Init 0024                 ??_Lcd_Port 0020                 __stringtab 067A  
           _Lcd_Write_Char 0635                    _Lcd_Cmd 0600            __size_of___bmul 0017  
                  ___awdiv 03B7            __size_of___wmul 0027            __size_of_mandar 007B  
          ?_Lcd_Set_Cursor 0024                    __ptext1 002E                    __ptext2 05B3  
                  __ptext3 064E                    __ptext4 03B7                    __ptext5 04D9  
                  __ptext6 0665                    __ptext7 0420                    __ptext8 0274  
                  __ptext9 061C               __size_of_ISR 003B                    _initOsc 0420  
             __size_of_map 0177     __end_of_Lcd_Write_Char 064E       end_of_initialization 002A  
                _RCSTAbits 0018                  Lcd_Port@a 0020                  _PORTEbits 0009  
              ?_configADC2 0020            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0025  
        Lcd_Write_String@i 0023                  _TXSTAbits 0098             __end_of___bmul 0665  
           __end_of___wmul 05DA           _Lcd_Write_String 058A                _BAUDCTLbits 0187  
           __end_of_mandar 03B7        start_initialization 0015                __end_of_ISR 0560  
              __end_of_map 01A5          __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006  
      __size_of_configADC2 00C8                   ??___bmul 0021                   ??___wmul 0024  
                 ??_mandar 0070            Lcd_Write_Char@a 0022                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
            ?i1_configADC2 0070           ??_Lcd_Set_Cursor 0025                   ?___awdiv 0026  
                __pstrings 067A                   ?_initOsc 0070             __size_of_Setup 004C  
           __size_of_usart 0015          interrupt_function 0004             ___wmul@product 0024  
           ??i1_configADC2 0071                   _PIE1bits 008C                   Lcd_Cmd@a 0023  
                 _PIR1bits 000C                 _ADCON0bits 001F                __stringbase 067F  
        ___wmul@multiplier 0020               ??_configADC2 0021           ??_Lcd_Write_Char 0021  
                 _Lcd_Init 061C                   _Lcd_Port 068B   __end_of_Lcd_Write_String 05B3  
         __size_of_Lcd_Cmd 001C         __end_of_configADC2 033C           __size_of___awdiv 0069  
                 _map$1114 0034         __end_of__stringtab 0680           __size_of_initOsc 005E  
                 __ptext10 058A                   __ptext11 0635                   __ptext12 05DA  
                 __ptext13 0600                   __ptext14 068B                   __ptext15 0525  
                 __ptext16 0560                   __ptext17 01A5                   __ptext18 033C  
            __size_of_main 005B              __size_of_pots 002A       __end_ofi1_configADC2 0274  
               _INTCONbits 000B                   intlevel1 0000                  stringcode 067A  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0026             configADC2@chan 0020  
               _OPTION_REG 0081             configADC2@fosc 0023                   stringdir 067A  
                 stringtab 067A  
