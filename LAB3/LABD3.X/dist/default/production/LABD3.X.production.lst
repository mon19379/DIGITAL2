

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Feb 07 02:56:58 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 09/04/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  008F                     	;# 
   491  0090                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0095                     	;# 
   499  0096                     	;# 
   500  0097                     	;# 
   501  0098                     	;# 
   502  0099                     	;# 
   503  009A                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  009F                     	;# 
   509  0105                     	;# 
   510  0107                     	;# 
   511  0108                     	;# 
   512  0109                     	;# 
   513  010C                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  010F                     	;# 
   518  0185                     	;# 
   519  0187                     	;# 
   520  0188                     	;# 
   521  0189                     	;# 
   522  018C                     	;# 
   523  018D                     	;# 
   524  0018                     _RCSTAbits	set	24
   525  001F                     _ADCON0bits	set	31
   526  0006                     _PORTBbits	set	6
   527  000C                     _PIR1bits	set	12
   528  000B                     _INTCONbits	set	11
   529  0009                     _PORTE	set	9
   530  0008                     _PORTD	set	8
   531  0007                     _PORTC	set	7
   532  0006                     _PORTB	set	6
   533  0005                     _PORTA	set	5
   534  008F                     _OSCCONbits	set	143
   535  0099                     _SPBRG	set	153
   536  009A                     _SPBRGH	set	154
   537  0098                     _TXSTAbits	set	152
   538  009F                     _ADCON1	set	159
   539  008C                     _PIE1bits	set	140
   540  0081                     _OPTION_REG	set	129
   541  0089                     _TRISE	set	137
   542  0088                     _TRISD	set	136
   543  0087                     _TRISC	set	135
   544  0086                     _TRISB	set	134
   545  0085                     _TRISA	set	133
   546  0187                     _BAUDCTLbits	set	391
   547  0189                     _ANSELH	set	393
   548  0188                     _ANSEL	set	392
   549                           
   550                           	psect	strings
   551  014F                     __pstrings:
   552  014F                     stringtab:
   553  014F                     __stringtab:
   554  014F                     stringcode:	
   555                           ;	String table - string pointers are 1 byte each
   556                           
   557  014F                     stringdir:
   558  014F  3001               	movlw	high stringdir
   559  0150  008A               	movwf	10
   560  0151  0804               	movf	4,w
   561  0152  0A84               	incf	4,f
   562  0153  0782               	addwf	2,f
   563  0154                     __stringbase:
   564  0154  3400               	retlw	0
   565  0155                     __end_of__stringtab:
   566  0155                     STR_1:
   567  0155  3456               	retlw	86	;'V'
   568  0156  3431               	retlw	49	;'1'
   569  0157  3400               	retlw	0
   570                           
   571                           	psect	cinit
   572  000F                     start_initialization:	
   573                           ; #config settings
   574                           
   575  000F                     __initialization:
   576                           
   577                           ; Clear objects allocated to COMMON
   578  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   579  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   580  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   581  0012                     end_of_initialization:	
   582                           ;End of C runtime variable initialization code
   583                           
   584  0012                     __end_of__initialization:
   585  0012  0183               	clrf	3
   586  0013  120A  118A  290B   	ljmp	_main	;jump to C main() function
   587                           
   588                           	psect	bssCOMMON
   589  0079                     __pbssCOMMON:
   590  0079                     _FLAGADC:
   591  0079                     	ds	1
   592  007A                     _pot2:
   593  007A                     	ds	1
   594  007B                     _pot1:
   595  007B                     	ds	1
   596                           
   597                           	psect	cstackCOMMON
   598  0070                     __pcstackCOMMON:
   599  0070                     ?_Setup:
   600  0070                     ?_Lcd_Write_String:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_initOsc:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_Lcd_Init:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Cmd:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_isr:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ??_isr:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_main:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Lcd_Port:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_Lcd_Write_Char:	
   625                           ; 1 bytes @ 0x0
   626                           
   627                           
   628                           ; 1 bytes @ 0x0
   629  0070                     	ds	2
   630  0072                     ??_initOsc:
   631  0072                     ??_Lcd_Port:	
   632                           ; 1 bytes @ 0x2
   633                           
   634  0072                     Lcd_Port@a:	
   635                           ; 1 bytes @ 0x2
   636                           
   637                           
   638                           ; 1 bytes @ 0x2
   639  0072                     	ds	1
   640  0073                     ??_Lcd_Cmd:
   641  0073                     ??_Lcd_Write_Char:	
   642                           ; 1 bytes @ 0x3
   643                           
   644                           
   645                           ; 1 bytes @ 0x3
   646  0073                     	ds	1
   647  0074                     Lcd_Write_Char@a:
   648  0074                     initOsc@IRCF:	
   649                           ; 1 bytes @ 0x4
   650                           
   651                           
   652                           ; 1 bytes @ 0x4
   653  0074                     	ds	1
   654  0075                     ??_Lcd_Write_String:
   655  0075                     Lcd_Cmd@a:	
   656                           ; 1 bytes @ 0x5
   657                           
   658  0075                     Lcd_Write_String@i:	
   659                           ; 1 bytes @ 0x5
   660                           
   661                           
   662                           ; 2 bytes @ 0x5
   663  0075                     	ds	1
   664  0076                     ??_Setup:
   665  0076                     ?_Lcd_Set_Cursor:	
   666                           ; 1 bytes @ 0x6
   667                           
   668  0076                     ??_Lcd_Init:	
   669                           ; 1 bytes @ 0x6
   670                           
   671  0076                     Lcd_Set_Cursor@b:	
   672                           ; 1 bytes @ 0x6
   673                           
   674                           
   675                           ; 1 bytes @ 0x6
   676  0076                     	ds	1
   677  0077                     ??_Lcd_Set_Cursor:
   678  0077                     Lcd_Set_Cursor@a:	
   679                           ; 1 bytes @ 0x7
   680                           
   681  0077                     Lcd_Write_String@a:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 1 bytes @ 0x7
   686  0077                     	ds	1
   687  0078                     Lcd_Set_Cursor@temp:
   688                           
   689                           ; 1 bytes @ 0x8
   690  0078                     	ds	1
   691  0079                     ??_main:
   692                           
   693                           	psect	maintext
   694  010B                     __pmaintext:	
   695                           ; 1 bytes @ 0x9
   696 ;;
   697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   698 ;;
   699 ;; *************** function _main *****************
   700 ;; Defined at:
   701 ;;		line 76 in file "L3.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;		None
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : B00/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         0       0       0       0       0
   719 ;;Total ram usage:        0 bytes
   720 ;; Hardware stack levels required when called:    5
   721 ;; This function calls:
   722 ;;		_Lcd_Set_Cursor
   723 ;;		_Lcd_Write_String
   724 ;;		_Setup
   725 ;; This function is called by:
   726 ;;		Startup code after reset
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _main
   732  010B                     _main:
   733  010B                     l999:	
   734                           ;incstack = 0
   735                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   736                           
   737                           
   738                           ;L3.c: 78:     Setup();
   739  010B  120A  118A  2072  120A  118A  	fcall	_Setup
   740  0110                     l1001:
   741                           
   742                           ;L3.c: 86:     Lcd_Set_Cursor (1,1);
   743  0110  01F6               	clrf	Lcd_Set_Cursor@b
   744  0111  0AF6               	incf	Lcd_Set_Cursor@b,f
   745  0112  3001               	movlw	1
   746  0113  120A  118A  20CE  120A  118A  	fcall	_Lcd_Set_Cursor
   747  0118                     l1003:
   748                           
   749                           ;L3.c: 87:     Lcd_Write_String("V1");
   750  0118  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   751  0119  120A  118A  20A9  120A  118A  	fcall	_Lcd_Write_String
   752  011E  2910               	goto	l1001
   753  011F  120A  118A  280C   	ljmp	start
   754  0122                     __end_of_main:
   755                           
   756                           	psect	text1
   757  0072                     __ptext1:	
   758 ;; *************** function _Setup *****************
   759 ;; Defined at:
   760 ;;		line 107 in file "L3.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   774 ;;      Params:         0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0
   777 ;;      Totals:         0       0       0       0       0
   778 ;;Total ram usage:        0 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    4
   781 ;; This function calls:
   782 ;;		_Lcd_Cmd
   783 ;;		_Lcd_Init
   784 ;;		_initOsc
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           
   791                           ;psect for function _Setup
   792  0072                     _Setup:
   793  0072                     l797:	
   794                           ;incstack = 0
   795                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   796                           
   797                           
   798                           ;L3.c: 108:     TRISA = 0;
   799  0072  1683               	bsf	3,5	;RP0=1, select bank1
   800  0073  1303               	bcf	3,6	;RP1=0, select bank1
   801  0074  0185               	clrf	5	;volatile
   802  0075                     l799:
   803                           
   804                           ;L3.c: 109:     TRISB = 0b00000011;
   805  0075  3003               	movlw	3
   806  0076  0086               	movwf	6	;volatile
   807  0077                     l801:
   808                           
   809                           ;L3.c: 110:     initOsc(6);
   810  0077  3006               	movlw	6
   811  0078  120A  118A  2016  120A  118A  	fcall	_initOsc
   812  007D                     l803:
   813                           
   814                           ;L3.c: 113:     Lcd_Init();
   815  007D  120A  118A  20F2  120A  118A  	fcall	_Lcd_Init
   816  0082                     l805:
   817                           
   818                           ;L3.c: 114:     Lcd_Cmd(0x8A);
   819  0082  308A               	movlw	138
   820  0083  120A  118A  2122  120A  118A  	fcall	_Lcd_Cmd
   821  0088                     l807:
   822                           
   823                           ;L3.c: 115:     ANSEL = 0;
   824  0088  1683               	bsf	3,5	;RP0=1, select bank3
   825  0089  1703               	bsf	3,6	;RP1=1, select bank3
   826  008A  0188               	clrf	8	;volatile
   827  008B                     l809:
   828                           
   829                           ;L3.c: 116:     ANSEL = 0;
   830  008B  0188               	clrf	8	;volatile
   831  008C                     l811:
   832                           
   833                           ;L3.c: 117:     ANSELH = 0b00000011;
   834  008C  3003               	movlw	3
   835  008D  0089               	movwf	9	;volatile
   836  008E                     l813:
   837                           
   838                           ;L3.c: 118:     PORTA = 0;
   839  008E  1283               	bcf	3,5	;RP0=0, select bank0
   840  008F  1303               	bcf	3,6	;RP1=0, select bank0
   841  0090  0185               	clrf	5	;volatile
   842  0091                     l815:
   843                           
   844                           ;L3.c: 119:     PORTB = 0;
   845  0091  0186               	clrf	6	;volatile
   846  0092                     l817:
   847                           
   848                           ;L3.c: 120:     PORTC = 0;
   849  0092  0187               	clrf	7	;volatile
   850  0093                     l819:
   851                           
   852                           ;L3.c: 121:     PORTD = 0;
   853  0093  0188               	clrf	8	;volatile
   854  0094                     l821:
   855                           
   856                           ;L3.c: 122:     PORTE = 0;
   857  0094  0189               	clrf	9	;volatile
   858  0095                     l823:
   859                           
   860                           ;L3.c: 125:     TRISB = 0b00000011;
   861  0095  3003               	movlw	3
   862  0096  1683               	bsf	3,5	;RP0=1, select bank1
   863  0097  1303               	bcf	3,6	;RP1=0, select bank1
   864  0098  0086               	movwf	6	;volatile
   865  0099                     l825:
   866                           
   867                           ;L3.c: 126:     TRISC = 0b10000000;
   868  0099  3080               	movlw	128
   869  009A  0087               	movwf	7	;volatile
   870  009B                     l827:
   871                           
   872                           ;L3.c: 127:     TRISD = 0;
   873  009B  0188               	clrf	8	;volatile
   874  009C                     l829:
   875                           
   876                           ;L3.c: 128:     TRISE = 0;
   877  009C  0189               	clrf	9	;volatile
   878  009D                     l831:
   879                           
   880                           ;L3.c: 129:     OPTION_REG = 0b10000111;
   881  009D  3087               	movlw	135
   882  009E  0081               	movwf	1	;volatile
   883  009F                     l833:
   884                           
   885                           ;L3.c: 130:     INTCONbits.GIE = 1;
   886  009F  178B               	bsf	11,7	;volatile
   887  00A0                     l835:
   888                           
   889                           ;L3.c: 131:     INTCONbits.T0IE = 1;
   890  00A0  168B               	bsf	11,5	;volatile
   891  00A1                     l837:
   892                           
   893                           ;L3.c: 132:     INTCONbits.PEIE = 1;
   894  00A1  170B               	bsf	11,6	;volatile
   895  00A2                     l839:
   896                           
   897                           ;L3.c: 133:     PIE1bits.ADIE = 1;
   898  00A2  170C               	bsf	12,6	;volatile
   899  00A3                     l841:
   900                           
   901                           ;L3.c: 134:     INTCONbits.T0IF = 0;
   902  00A3  110B               	bcf	11,2	;volatile
   903  00A4                     l843:
   904                           
   905                           ;L3.c: 135:     PIR1bits.ADIF = 0;
   906  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   907  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   908  00A6  130C               	bcf	12,6	;volatile
   909  00A7                     l845:
   910                           
   911                           ;L3.c: 136:     PIR1bits.TXIF = 0;
   912  00A7  120C               	bcf	12,4	;volatile
   913  00A8                     l66:
   914  00A8  0008               	return
   915  00A9                     __end_of_Setup:
   916                           
   917                           	psect	text2
   918  0016                     __ptext2:	
   919 ;; *************** function _initOsc *****************
   920 ;; Defined at:
   921 ;;		line 7 in file "osc.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  IRCF            1    wreg     unsigned char 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  IRCF            1    4[COMMON] unsigned char 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         0       0       0       0       0
   936 ;;      Locals:         1       0       0       0       0
   937 ;;      Temps:          2       0       0       0       0
   938 ;;      Totals:         3       0       0       0       0
   939 ;;Total ram usage:        3 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    1
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_Setup
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _initOsc
   951  0016                     _initOsc:
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   955                           ;initOsc@IRCF stored from wreg
   956  0016  00F4               	movwf	initOsc@IRCF
   957  0017                     l773:
   958                           
   959                           ;osc.c: 9:     switch (IRCF){
   960  0017  284E               	goto	l777
   961  0018                     l159:	
   962                           ;osc.c: 11:         case 0:
   963                           
   964                           
   965                           ;osc.c: 12:             OSCCONbits.IRCF2 = 0;
   966  0018  1683               	bsf	3,5	;RP0=1, select bank1
   967  0019  1303               	bcf	3,6	;RP1=0, select bank1
   968  001A  130F               	bcf	15,6	;volatile
   969                           
   970                           ;osc.c: 13:             OSCCONbits.IRCF1 = 0;
   971  001B  128F               	bcf	15,5	;volatile
   972                           
   973                           ;osc.c: 14:             OSCCONbits.IRCF0 = 0;
   974  001C  120F               	bcf	15,4	;volatile
   975                           
   976                           ;osc.c: 16:             break;
   977  001D  2870               	goto	l160
   978  001E                     l161:	
   979                           ;osc.c: 18:         case 1:
   980                           
   981                           
   982                           ;osc.c: 19:             OSCCONbits.IRCF2 = 0;
   983  001E  1683               	bsf	3,5	;RP0=1, select bank1
   984  001F  1303               	bcf	3,6	;RP1=0, select bank1
   985  0020  130F               	bcf	15,6	;volatile
   986                           
   987                           ;osc.c: 20:             OSCCONbits.IRCF1 = 0;
   988  0021  128F               	bcf	15,5	;volatile
   989                           
   990                           ;osc.c: 21:             OSCCONbits.IRCF0 = 1;
   991  0022  160F               	bsf	15,4	;volatile
   992                           
   993                           ;osc.c: 22:             break;
   994  0023  2870               	goto	l160
   995  0024                     l162:	
   996                           ;osc.c: 24:         case 2:
   997                           
   998                           
   999                           ;osc.c: 25:             OSCCONbits.IRCF2 = 0;
  1000  0024  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0025  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0026  130F               	bcf	15,6	;volatile
  1003                           
  1004                           ;osc.c: 26:             OSCCONbits.IRCF1 = 1;
  1005  0027  168F               	bsf	15,5	;volatile
  1006                           
  1007                           ;osc.c: 27:             OSCCONbits.IRCF0 = 0;
  1008  0028  120F               	bcf	15,4	;volatile
  1009                           
  1010                           ;osc.c: 28:             break;
  1011  0029  2870               	goto	l160
  1012  002A                     l163:	
  1013                           ;osc.c: 30:         case 3:
  1014                           
  1015                           
  1016                           ;osc.c: 31:             OSCCONbits.IRCF2 = 0;
  1017  002A  1683               	bsf	3,5	;RP0=1, select bank1
  1018  002B  1303               	bcf	3,6	;RP1=0, select bank1
  1019  002C  130F               	bcf	15,6	;volatile
  1020                           
  1021                           ;osc.c: 32:             OSCCONbits.IRCF1 = 1;
  1022  002D  168F               	bsf	15,5	;volatile
  1023                           
  1024                           ;osc.c: 33:             OSCCONbits.IRCF0 = 1;
  1025  002E  160F               	bsf	15,4	;volatile
  1026                           
  1027                           ;osc.c: 34:             break;
  1028  002F  2870               	goto	l160
  1029  0030                     l164:	
  1030                           ;osc.c: 36:         case 4:
  1031                           
  1032                           
  1033                           ;osc.c: 37:             OSCCONbits.IRCF2 = 1;
  1034  0030  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0031  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0032  170F               	bsf	15,6	;volatile
  1037                           
  1038                           ;osc.c: 38:             OSCCONbits.IRCF1 = 0;
  1039  0033  128F               	bcf	15,5	;volatile
  1040                           
  1041                           ;osc.c: 39:             OSCCONbits.IRCF0 = 0;
  1042  0034  120F               	bcf	15,4	;volatile
  1043                           
  1044                           ;osc.c: 40:             break;
  1045  0035  2870               	goto	l160
  1046  0036                     l165:	
  1047                           ;osc.c: 42:         case 5:
  1048                           
  1049                           
  1050                           ;osc.c: 43:             OSCCONbits.IRCF2 = 1;
  1051  0036  1683               	bsf	3,5	;RP0=1, select bank1
  1052  0037  1303               	bcf	3,6	;RP1=0, select bank1
  1053  0038  170F               	bsf	15,6	;volatile
  1054                           
  1055                           ;osc.c: 44:             OSCCONbits.IRCF1 = 0;
  1056  0039  128F               	bcf	15,5	;volatile
  1057                           
  1058                           ;osc.c: 45:             OSCCONbits.IRCF0 = 1;
  1059  003A  160F               	bsf	15,4	;volatile
  1060                           
  1061                           ;osc.c: 46:             break;
  1062  003B  2870               	goto	l160
  1063  003C                     l166:	
  1064                           ;osc.c: 49:         case 6:
  1065                           
  1066                           
  1067                           ;osc.c: 50:             OSCCONbits.IRCF2 = 1;
  1068  003C  1683               	bsf	3,5	;RP0=1, select bank1
  1069  003D  1303               	bcf	3,6	;RP1=0, select bank1
  1070  003E  170F               	bsf	15,6	;volatile
  1071                           
  1072                           ;osc.c: 51:             OSCCONbits.IRCF1 = 1;
  1073  003F  168F               	bsf	15,5	;volatile
  1074                           
  1075                           ;osc.c: 52:             OSCCONbits.IRCF0 = 0;
  1076  0040  120F               	bcf	15,4	;volatile
  1077                           
  1078                           ;osc.c: 53:             break;
  1079  0041  2870               	goto	l160
  1080  0042                     l167:	
  1081                           ;osc.c: 55:         case 7:
  1082                           
  1083                           
  1084                           ;osc.c: 56:             OSCCONbits.IRCF2 = 1;
  1085  0042  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0043  1303               	bcf	3,6	;RP1=0, select bank1
  1087  0044  170F               	bsf	15,6	;volatile
  1088                           
  1089                           ;osc.c: 57:             OSCCONbits.IRCF1 = 1;
  1090  0045  168F               	bsf	15,5	;volatile
  1091                           
  1092                           ;osc.c: 58:             OSCCONbits.IRCF0 = 1;
  1093  0046  160F               	bsf	15,4	;volatile
  1094                           
  1095                           ;osc.c: 59:             break;
  1096  0047  2870               	goto	l160
  1097  0048                     l168:	
  1098                           ;osc.c: 64:         default:
  1099                           
  1100                           
  1101                           ;osc.c: 65:             OSCCONbits.IRCF2 = 1;
  1102  0048  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0049  1303               	bcf	3,6	;RP1=0, select bank1
  1104  004A  170F               	bsf	15,6	;volatile
  1105                           
  1106                           ;osc.c: 66:             OSCCONbits.IRCF1 = 0;
  1107  004B  128F               	bcf	15,5	;volatile
  1108                           
  1109                           ;osc.c: 67:             OSCCONbits.IRCF0 = 0;
  1110  004C  120F               	bcf	15,4	;volatile
  1111                           
  1112                           ;osc.c: 68:             break;
  1113  004D  2870               	goto	l160
  1114  004E                     l777:
  1115  004E  0874               	movf	initOsc@IRCF,w
  1116  004F  00F2               	movwf	??_initOsc
  1117  0050  01F3               	clrf	??_initOsc+1
  1118                           
  1119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1120                           ; Switch size 1, requested type "simple"
  1121                           ; Number of cases is 1, Range of values is 0 to 0
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte            4     3 (average)
  1125                           ; direct_byte           11     8 (fixed)
  1126                           ; jumptable            260     6 (fixed)
  1127                           ;	Chosen strategy is simple_byte
  1128  0051  0873               	movf	??_initOsc+1,w
  1129  0052  3A00               	xorlw	0	; case 0
  1130  0053  1903               	skipnz
  1131  0054  2856               	goto	l1025
  1132  0055  2848               	goto	l168
  1133  0056                     l1025:
  1134                           
  1135                           ; Switch size 1, requested type "simple"
  1136                           ; Number of cases is 8, Range of values is 0 to 7
  1137                           ; switch strategies available:
  1138                           ; Name         Instructions Cycles
  1139                           ; simple_byte           25    13 (average)
  1140                           ; direct_byte           32     8 (fixed)
  1141                           ; jumptable            260     6 (fixed)
  1142                           ;	Chosen strategy is simple_byte
  1143  0056  0872               	movf	??_initOsc,w
  1144  0057  3A00               	xorlw	0	; case 0
  1145  0058  1903               	skipnz
  1146  0059  2818               	goto	l159
  1147  005A  3A01               	xorlw	1	; case 1
  1148  005B  1903               	skipnz
  1149  005C  281E               	goto	l161
  1150  005D  3A03               	xorlw	3	; case 2
  1151  005E  1903               	skipnz
  1152  005F  2824               	goto	l162
  1153  0060  3A01               	xorlw	1	; case 3
  1154  0061  1903               	skipnz
  1155  0062  282A               	goto	l163
  1156  0063  3A07               	xorlw	7	; case 4
  1157  0064  1903               	skipnz
  1158  0065  2830               	goto	l164
  1159  0066  3A01               	xorlw	1	; case 5
  1160  0067  1903               	skipnz
  1161  0068  2836               	goto	l165
  1162  0069  3A03               	xorlw	3	; case 6
  1163  006A  1903               	skipnz
  1164  006B  283C               	goto	l166
  1165  006C  3A01               	xorlw	1	; case 7
  1166  006D  1903               	skipnz
  1167  006E  2842               	goto	l167
  1168  006F  2848               	goto	l168
  1169  0070                     l160:
  1170                           
  1171                           ;osc.c: 72:     OSCCONbits.SCS = 1;
  1172  0070  140F               	bsf	15,0	;volatile
  1173  0071                     l169:
  1174  0071  0008               	return
  1175  0072                     __end_of_initOsc:
  1176                           
  1177                           	psect	text3
  1178  00F2                     __ptext3:	
  1179 ;; *************** function _Lcd_Init *****************
  1180 ;; Defined at:
  1181 ;;		line 41 in file "LCD.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, pclath, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1195 ;;      Params:         0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    3
  1202 ;; This function calls:
  1203 ;;		_Lcd_Cmd
  1204 ;; This function is called by:
  1205 ;;		_Setup
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _Lcd_Init
  1211  00F2                     _Lcd_Init:
  1212  00F2                     l783:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1215                           
  1216                           
  1217                           ;LCD.c: 45:     Lcd_Cmd(0x38);
  1218  00F2  3038               	movlw	56
  1219  00F3  120A  118A  2122  120A  118A  	fcall	_Lcd_Cmd
  1220                           
  1221                           ;LCD.c: 46:     Lcd_Cmd(0x0C);
  1222  00F8  300C               	movlw	12
  1223  00F9  120A  118A  2122  120A  118A  	fcall	_Lcd_Cmd
  1224                           
  1225                           ;LCD.c: 47:     Lcd_Cmd(0x06);
  1226  00FE  3006               	movlw	6
  1227  00FF  120A  118A  2122  120A  118A  	fcall	_Lcd_Cmd
  1228                           
  1229                           ;LCD.c: 48:     Lcd_Cmd(0x80);
  1230  0104  3080               	movlw	128
  1231  0105  120A  118A  2122  120A  118A  	fcall	_Lcd_Cmd
  1232  010A                     l90:
  1233  010A  0008               	return
  1234  010B                     __end_of_Lcd_Init:
  1235                           
  1236                           	psect	text4
  1237  00A9                     __ptext4:	
  1238 ;; *************** function _Lcd_Write_String *****************
  1239 ;; Defined at:
  1240 ;;		line 60 in file "LCD.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  a               1    wreg     PTR unsigned char 
  1243 ;;		 -> STR_1(3), 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  a               1    7[COMMON] PTR unsigned char 
  1246 ;;		 -> STR_1(3), 
  1247 ;;  i               2    5[COMMON] int 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         0       0       0       0       0
  1258 ;;      Locals:         3       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0
  1260 ;;      Totals:         3       0       0       0       0
  1261 ;;Total ram usage:        3 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    3
  1264 ;; This function calls:
  1265 ;;		_Lcd_Write_Char
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _Lcd_Write_String
  1273  00A9                     _Lcd_Write_String:
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1277                           ;Lcd_Write_String@a stored from wreg
  1278  00A9  00F7               	movwf	Lcd_Write_String@a
  1279  00AA                     l991:
  1280                           
  1281                           ;LCD.c: 61:    int i;;LCD.c: 62:  for(i=0;a[i]!='\0';i++)
  1282  00AA  01F5               	clrf	Lcd_Write_String@i
  1283  00AB  01F6               	clrf	Lcd_Write_String@i+1
  1284  00AC  28C0               	goto	l997
  1285  00AD                     l993:
  1286                           
  1287                           ;LCD.c: 63:     Lcd_Write_Char(a[i]);
  1288  00AD  0875               	movf	Lcd_Write_String@i,w
  1289  00AE  0777               	addwf	Lcd_Write_String@a,w
  1290  00AF  0084               	movwf	4
  1291  00B0  120A  118A  214F  120A  118A  	fcall	stringdir
  1292  00B5  120A  118A  2139  120A  118A  	fcall	_Lcd_Write_Char
  1293  00BA                     l995:
  1294  00BA  3001               	movlw	1
  1295  00BB  07F5               	addwf	Lcd_Write_String@i,f
  1296  00BC  1803               	skipnc
  1297  00BD  0AF6               	incf	Lcd_Write_String@i+1,f
  1298  00BE  3000               	movlw	0
  1299  00BF  07F6               	addwf	Lcd_Write_String@i+1,f
  1300  00C0                     l997:
  1301  00C0  0875               	movf	Lcd_Write_String@i,w
  1302  00C1  0777               	addwf	Lcd_Write_String@a,w
  1303  00C2  0084               	movwf	4
  1304  00C3  120A  118A  214F  120A  118A  	fcall	stringdir
  1305  00C8  3A00               	xorlw	0
  1306  00C9  1D03               	skipz
  1307  00CA  28CC               	goto	u61
  1308  00CB  28CD               	goto	u60
  1309  00CC                     u61:
  1310  00CC  28AD               	goto	l993
  1311  00CD                     u60:
  1312  00CD                     l99:
  1313  00CD  0008               	return
  1314  00CE                     __end_of_Lcd_Write_String:
  1315                           
  1316                           	psect	text5
  1317  0139                     __ptext5:	
  1318 ;; *************** function _Lcd_Write_Char *****************
  1319 ;; Defined at:
  1320 ;;		line 51 in file "LCD.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  a               1    wreg     unsigned char 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  a               1    4[COMMON] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         1       0       0       0       0
  1336 ;;      Temps:          1       0       0       0       0
  1337 ;;      Totals:         2       0       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    2
  1341 ;; This function calls:
  1342 ;;		_Lcd_Port
  1343 ;; This function is called by:
  1344 ;;		_Lcd_Write_String
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _Lcd_Write_Char
  1350  0139                     _Lcd_Write_Char:
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1354                           ;Lcd_Write_Char@a stored from wreg
  1355  0139  00F4               	movwf	Lcd_Write_Char@a
  1356  013A                     l785:
  1357                           
  1358                           ;LCD.c: 52:     PORTBbits.RB3 = 1;
  1359  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1360  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1361  013C  1586               	bsf	6,3	;volatile
  1362  013D                     l787:
  1363                           
  1364                           ;LCD.c: 53:    Lcd_Port(a);
  1365  013D  0874               	movf	Lcd_Write_Char@a,w
  1366  013E  120A  118A  215F  120A  118A  	fcall	_Lcd_Port
  1367  0143                     l789:
  1368                           
  1369                           ;LCD.c: 54:    PORTBbits.RB5 = 1;
  1370  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0145  1686               	bsf	6,5	;volatile
  1373  0146                     l791:
  1374                           
  1375                           ;LCD.c: 55:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1376  0146  300D               	movlw	13
  1377  0147  00F3               	movwf	??_Lcd_Write_Char
  1378  0148                     u77:
  1379  0148  0BF3               	decfsz	??_Lcd_Write_Char,f
  1380  0149  2948               	goto	u77
  1381  014A                     l793:
  1382                           
  1383                           ;LCD.c: 56:    PORTBbits.RB5 = 0;
  1384  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1385  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1386  014C  1286               	bcf	6,5	;volatile
  1387  014D                     l795:
  1388                           
  1389                           ;LCD.c: 57:    PORTBbits.RB3 = 0;
  1390  014D  1186               	bcf	6,3	;volatile
  1391  014E                     l93:
  1392  014E  0008               	return
  1393  014F                     __end_of_Lcd_Write_Char:
  1394                           
  1395                           	psect	text6
  1396  00CE                     __ptext6:	
  1397 ;; *************** function _Lcd_Set_Cursor *****************
  1398 ;; Defined at:
  1399 ;;		line 30 in file "LCD.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  a               1    wreg     unsigned char 
  1402 ;;  b               1    6[COMMON] unsigned char 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  a               1    7[COMMON] unsigned char 
  1405 ;;  temp            1    8[COMMON] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         1       0       0       0       0
  1416 ;;      Locals:         2       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0
  1418 ;;      Totals:         3       0       0       0       0
  1419 ;;Total ram usage:        3 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    3
  1422 ;; This function calls:
  1423 ;;		_Lcd_Cmd
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _Lcd_Set_Cursor
  1431  00CE                     _Lcd_Set_Cursor:
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1435                           ;Lcd_Set_Cursor@a stored from wreg
  1436  00CE  00F7               	movwf	Lcd_Set_Cursor@a
  1437  00CF                     l979:
  1438                           
  1439                           ;LCD.c: 31:     char temp;;LCD.c: 32:     if (a == 1) {
  1440  00CF  0377               	decf	Lcd_Set_Cursor@a,w
  1441  00D0  1D03               	btfss	3,2
  1442  00D1  28D3               	goto	u41
  1443  00D2  28D4               	goto	u40
  1444  00D3                     u41:
  1445  00D3  28E0               	goto	l985
  1446  00D4                     u40:
  1447  00D4                     l981:
  1448                           
  1449                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  1450  00D4  0876               	movf	Lcd_Set_Cursor@b,w
  1451  00D5  3E7F               	addlw	127
  1452  00D6  00FF               	movwf	btemp+1
  1453  00D7  087F               	movf	btemp+1,w
  1454  00D8  00F8               	movwf	Lcd_Set_Cursor@temp
  1455  00D9                     l983:
  1456                           
  1457                           ;LCD.c: 34:         Lcd_Cmd(temp);
  1458  00D9  0878               	movf	Lcd_Set_Cursor@temp,w
  1459  00DA  120A  118A  2122  120A  118A  	fcall	_Lcd_Cmd
  1460                           
  1461                           ;LCD.c: 35:     } else if (a == 2) {
  1462  00DF  28F1               	goto	l87
  1463  00E0                     l985:
  1464  00E0  3002               	movlw	2
  1465  00E1  0677               	xorwf	Lcd_Set_Cursor@a,w
  1466  00E2  1D03               	btfss	3,2
  1467  00E3  28E5               	goto	u51
  1468  00E4  28E6               	goto	u50
  1469  00E5                     u51:
  1470  00E5  28F1               	goto	l87
  1471  00E6                     u50:
  1472  00E6                     l987:
  1473                           
  1474                           ;LCD.c: 36:         temp = 0xC0 + b - 1;
  1475  00E6  0876               	movf	Lcd_Set_Cursor@b,w
  1476  00E7  3EBF               	addlw	191
  1477  00E8  00FF               	movwf	btemp+1
  1478  00E9  087F               	movf	btemp+1,w
  1479  00EA  00F8               	movwf	Lcd_Set_Cursor@temp
  1480  00EB                     l989:
  1481                           
  1482                           ;LCD.c: 37:         Lcd_Cmd(temp);
  1483  00EB  0878               	movf	Lcd_Set_Cursor@temp,w
  1484  00EC  120A  118A  2122  120A  118A  	fcall	_Lcd_Cmd
  1485  00F1                     l87:
  1486  00F1  0008               	return
  1487  00F2                     __end_of_Lcd_Set_Cursor:
  1488                           
  1489                           	psect	text7
  1490  0122                     __ptext7:	
  1491 ;; *************** function _Lcd_Cmd *****************
  1492 ;; Defined at:
  1493 ;;		line 16 in file "LCD.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  a               1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  a               1    5[COMMON] unsigned char 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         1       0       0       0       0
  1509 ;;      Temps:          2       0       0       0       0
  1510 ;;      Totals:         3       0       0       0       0
  1511 ;;Total ram usage:        3 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    2
  1514 ;; This function calls:
  1515 ;;		_Lcd_Port
  1516 ;; This function is called by:
  1517 ;;		_Setup
  1518 ;;		_Lcd_Set_Cursor
  1519 ;;		_Lcd_Init
  1520 ;;		_Lcd_Clear
  1521 ;;		_Lcd_Shift_Right
  1522 ;;		_Lcd_Shift_Left
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _Lcd_Cmd
  1528  0122                     _Lcd_Cmd:
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1532                           ;Lcd_Cmd@a stored from wreg
  1533  0122  00F5               	movwf	Lcd_Cmd@a
  1534  0123                     l763:
  1535                           
  1536                           ;LCD.c: 17:     Lcd_Port(a);
  1537  0123  0875               	movf	Lcd_Cmd@a,w
  1538  0124  120A  118A  215F  120A  118A  	fcall	_Lcd_Port
  1539  0129                     l765:
  1540                           
  1541                           ;LCD.c: 18:     PORTBbits.RB3 = 0;
  1542  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1543  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1544  012B  1186               	bcf	6,3	;volatile
  1545  012C                     l767:
  1546                           
  1547                           ;LCD.c: 20:     PORTBbits.RB5 = 1;
  1548  012C  1686               	bsf	6,5	;volatile
  1549  012D                     l769:
  1550                           
  1551                           ;LCD.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1552  012D  3007               	movlw	7
  1553  012E  00F4               	movwf	??_Lcd_Cmd+1
  1554  012F  307D               	movlw	125
  1555  0130  00F3               	movwf	??_Lcd_Cmd
  1556  0131                     u87:
  1557  0131  0BF3               	decfsz	??_Lcd_Cmd,f
  1558  0132  2931               	goto	u87
  1559  0133  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1560  0134  2931               	goto	u87
  1561  0135                     l771:
  1562                           
  1563                           ;LCD.c: 22:     PORTBbits.RB5 = 0;
  1564  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0137  1286               	bcf	6,5	;volatile
  1567  0138                     l78:
  1568  0138  0008               	return
  1569  0139                     __end_of_Lcd_Cmd:
  1570                           
  1571                           	psect	text8
  1572  015F                     __ptext8:	
  1573 ;; *************** function _Lcd_Port *****************
  1574 ;; Defined at:
  1575 ;;		line 12 in file "LCD.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  a               1    wreg     unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  a               1    2[COMMON] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       0       0       0
  1590 ;;      Locals:         1       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0
  1592 ;;      Totals:         1       0       0       0       0
  1593 ;;Total ram usage:        1 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_Lcd_Cmd
  1600 ;;		_Lcd_Write_Char
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function _Lcd_Port
  1606  015F                     _Lcd_Port:
  1607                           
  1608                           ;incstack = 0
  1609                           ; Regs used in _Lcd_Port: [wreg]
  1610                           ;Lcd_Port@a stored from wreg
  1611  015F  00F2               	movwf	Lcd_Port@a
  1612  0160                     l761:
  1613                           
  1614                           ;LCD.c: 13:     PORTA = a;
  1615  0160  0872               	movf	Lcd_Port@a,w
  1616  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1618  0163  0085               	movwf	5	;volatile
  1619  0164                     l75:
  1620  0164  0008               	return
  1621  0165                     __end_of_Lcd_Port:
  1622                           
  1623                           	psect	text9
  1624  0158                     __ptext9:	
  1625 ;; *************** function _isr *****************
  1626 ;; Defined at:
  1627 ;;		line 55 in file "L3.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		None
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1641 ;;      Params:         0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0
  1643 ;;      Temps:          2       0       0       0       0
  1644 ;;      Totals:         2       0       0       0       0
  1645 ;;Total ram usage:        2 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		Interrupt level 1
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _isr
  1656  0158                     _isr:
  1657  0158                     i1l55:
  1658  0158  0871               	movf	??_isr+1,w
  1659  0159  008A               	movwf	10
  1660  015A  0E70               	swapf	??_isr^(0+4294967168),w
  1661  015B  0083               	movwf	3
  1662  015C  0EFE               	swapf	btemp,f
  1663  015D  0E7E               	swapf	btemp,w
  1664  015E  0009               	retfie
  1665  015F                     __end_of_isr:
  1666  007E                     btemp	set	126	;btemp
  1667  007E                     wtemp0	set	126
  1668                           
  1669                           	psect	intentry
  1670  0004                     __pintentry:	
  1671                           ;incstack = 0
  1672                           ; Regs used in _isr: []
  1673                           
  1674  0004                     interrupt_function:
  1675  007E                     saved_w	set	btemp
  1676  0004  00FE               	movwf	btemp
  1677  0005  0E03               	swapf	3,w
  1678  0006  00F0               	movwf	??_isr
  1679  0007  080A               	movf	10,w
  1680  0008  00F1               	movwf	??_isr+1
  1681  0009  120A  118A  2958   	ljmp	_isr
  1682                           
  1683                           	psect	config
  1684                           
  1685                           ;Config register CONFIG1 @ 0x2007
  1686                           ;	Oscillator Selection bits
  1687                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1688                           ;	Watchdog Timer Enable bit
  1689                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1690                           ;	Power-up Timer Enable bit
  1691                           ;	PWRTE = OFF, PWRT disabled
  1692                           ;	RE3/MCLR pin function select bit
  1693                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1694                           ;	Code Protection bit
  1695                           ;	CP = OFF, Program memory code protection is disabled
  1696                           ;	Data Code Protection bit
  1697                           ;	CPD = OFF, Data memory code protection is disabled
  1698                           ;	Brown Out Reset Selection bits
  1699                           ;	BOREN = OFF, BOR disabled
  1700                           ;	Internal External Switchover bit
  1701                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1702                           ;	Fail-Safe Clock Monitor Enabled bit
  1703                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1704                           ;	Low Voltage Programming Enable bit
  1705                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1706                           ;	In-Circuit Debugger Mode bit
  1707                           ;	DEBUG = 0x1, unprogrammed default
  1708  2007                     	org	8199
  1709  2007  20D4               	dw	8404
  1710                           
  1711                           ;Config register CONFIG2 @ 0x2008
  1712                           ;	Brown-out Reset Selection bit
  1713                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1714                           ;	Flash Program Memory Self Write Enable bits
  1715                           ;	WRT = OFF, Write protection off
  1716  2008                     	org	8200
  1717  2008  3FFF               	dw	16383

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Setup->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     468
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      75
                            _Lcd_Cmd
                           _Lcd_Init
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     153
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      30
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     240
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      30
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
     _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Feb 07 02:56:58 2021

                        pc 0002                         l90 010A                         l66 00A8  
                       l75 0164                         l93 014E                         l78 0138  
                       l87 00F1                         l99 00CD                         u40 00D4  
                       u41 00D3                         u50 00E6                         u51 00E5  
                       u60 00CD                         u61 00CC                         u77 0148  
                       u87 0131                         fsr 0004                        l160 0070  
                      l161 001E                        l162 0024                        l163 002A  
                      l164 0030                        l165 0036                        l166 003C  
                      l167 0042                        l159 0018                        l168 0048  
                      l169 0071                        l801 0077                        l811 008C  
                      l803 007D                        l821 0094                        l813 008E  
                      l805 0082                        l831 009D                        l823 0095  
                      l815 0091                        l807 0088                        l761 0160  
                      l841 00A3                        l833 009F                        l825 0099  
                      l817 0092                        l809 008B                        l771 0135  
                      l763 0123                        l843 00A4                        l835 00A0  
                      l827 009B                        l819 0093                        l765 0129  
                      l773 0017                        l845 00A7                        l837 00A1  
                      l829 009C                        l767 012C                        l791 0146  
                      l783 00F2                        l839 00A2                        l769 012D  
                      l793 014A                        l785 013A                        l777 004E  
                      l795 014D                        l787 013D                        l981 00D4  
                      l789 0143                        l797 0072                        l983 00D9  
                      l991 00AA                        l799 0075                        l985 00E0  
                      l993 00AD                        l987 00E6                        l979 00CF  
                      l995 00BA                        l989 00EB                        l997 00C0  
                      l999 010B                        _isr 0158                        fsr0 0004  
                     l1001 0110                       l1003 0118                       l1025 0056  
                     ?_isr 0070                       STR_1 0155                       i1l55 0158  
        ?_Lcd_Write_String 0070                       _main 010B                       _pot1 007B  
                     _pot2 007A                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0139                      ??_isr 0070  
                    ?_main 0070                      _ANSEL 0188                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _Setup 0072  
          __end_of_initOsc 0072                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 010B           __end_of_Lcd_Port 0165  
          __initialization 000F               __end_of_main 0122                     ??_main 0079  
                   ?_Setup 0070                     _ADCON1 009F                initOsc@IRCF 0074  
                   _ANSELH 0189                  ??_Lcd_Cmd 0073                     _SPBRGH 009A  
  __size_of_Lcd_Write_Char 0016                  ??_initOsc 0072                     saved_w 007E  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0076    __end_of__initialization 0012  
           __pcstackCOMMON 0070              __end_of_Setup 00A9             _Lcd_Set_Cursor 00CE  
                  ??_Setup 0076                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pmaintext 010B                 __pintentry 0004  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 00F2                    _FLAGADC 0079                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072                 __stringtab 014F             _Lcd_Write_Char 0139  
                  _Lcd_Cmd 0122            ?_Lcd_Set_Cursor 0076                    __ptext1 0072  
                  __ptext2 0016                    __ptext3 00F2                    __ptext4 00A9  
                  __ptext5 0139                    __ptext6 00CE                    __ptext7 0122  
                  __ptext8 015F                    __ptext9 0158                    _initOsc 0016  
             __size_of_isr 0007     __end_of_Lcd_Write_Char 014F       end_of_initialization 0012  
                _RCSTAbits 0018                  Lcd_Port@a 0072                  _PORTBbits 0006  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _TXSTAbits 0098           _Lcd_Write_String 00A9                _BAUDCTLbits 0187  
      start_initialization 000F                __end_of_isr 015F          __size_of_Lcd_Init 0019  
        __size_of_Lcd_Port 0006            Lcd_Write_Char@a 0074                __pbssCOMMON 0079  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0077  
                __pstrings 014F                   ?_initOsc 0070             __size_of_Setup 0037  
        interrupt_function 0004                   _PIE1bits 008C                   Lcd_Cmd@a 0075  
                 _PIR1bits 000C                 _ADCON0bits 001F                __stringbase 0154  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 00F2                   _Lcd_Port 015F  
 __end_of_Lcd_Write_String 00CE           __size_of_Lcd_Cmd 0017         __end_of__stringtab 0155  
         __size_of_initOsc 005C              __size_of_main 0017                 _INTCONbits 000B  
                 intlevel1 0000                  stringcode 014F                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0078                 _OPTION_REG 0081                   stringdir 014F  
                 stringtab 014F  
