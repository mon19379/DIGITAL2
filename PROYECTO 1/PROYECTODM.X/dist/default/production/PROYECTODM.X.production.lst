

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Feb 17 09:35:33 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 09/04/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  000E                     	;# 
   479  000F                     	;# 
   480  0010                     	;# 
   481  0011                     	;# 
   482  0012                     	;# 
   483  0013                     	;# 
   484  0014                     	;# 
   485  0015                     	;# 
   486  0015                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  001A                     	;# 
   492  001B                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  0081                     	;# 
   499  0085                     	;# 
   500  0086                     	;# 
   501  0087                     	;# 
   502  0088                     	;# 
   503  0089                     	;# 
   504  008C                     	;# 
   505  008D                     	;# 
   506  008E                     	;# 
   507  008F                     	;# 
   508  0090                     	;# 
   509  0091                     	;# 
   510  0092                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0093                     	;# 
   514  0094                     	;# 
   515  0095                     	;# 
   516  0096                     	;# 
   517  0097                     	;# 
   518  0098                     	;# 
   519  0099                     	;# 
   520  009A                     	;# 
   521  009B                     	;# 
   522  009C                     	;# 
   523  009D                     	;# 
   524  009E                     	;# 
   525  009F                     	;# 
   526  0105                     	;# 
   527  0107                     	;# 
   528  0108                     	;# 
   529  0109                     	;# 
   530  010C                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  010F                     	;# 
   535  0185                     	;# 
   536  0187                     	;# 
   537  0188                     	;# 
   538  0189                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  0018                     _RCSTAbits	set	24
   542  0009                     _PORTEbits	set	9
   543  0013                     _SSPBUF	set	19
   544  0014                     _SSPCON	set	20
   545  0019                     _TXREG	set	25
   546  000B                     _INTCONbits	set	11
   547  0009                     _PORTE	set	9
   548  0008                     _PORTD	set	8
   549  0007                     _PORTC	set	7
   550  0006                     _PORTB	set	6
   551  0005                     _PORTA	set	5
   552  0007                     _PORTCbits	set	7
   553  000C                     _PIR1bits	set	12
   554  0099                     _SPBRG	set	153
   555  009A                     _SPBRGH	set	154
   556  0098                     _TXSTAbits	set	152
   557  008F                     _OSCCONbits	set	143
   558  0094                     _SSPSTATbits	set	148
   559  0094                     _SSPSTAT	set	148
   560  0081                     _OPTION_REG	set	129
   561  0086                     _TRISB	set	134
   562  0088                     _TRISD	set	136
   563  0087                     _TRISC	set	135
   564  0089                     _TRISE	set	137
   565  0085                     _TRISA	set	133
   566  008C                     _PIE1bits	set	140
   567  043B                     _TRISC3	set	1083
   568  043D                     _TRISC5	set	1085
   569  0187                     _BAUDCTLbits	set	391
   570  0189                     _ANSELH	set	393
   571  0188                     _ANSEL	set	392
   572                           
   573                           	psect	strings
   574  06C4                     __pstrings:
   575  06C4                     stringtab:
   576  06C4                     __stringtab:
   577  06C4                     stringcode:	
   578                           ;	String table - string pointers are 1 byte each
   579                           
   580  06C4                     stringdir:
   581  06C4  3006               	movlw	high stringdir
   582  06C5  008A               	movwf	10
   583  06C6  0804               	movf	4,w
   584  06C7  0A84               	incf	4,f
   585  06C8  0782               	addwf	2,f
   586  06C9                     __stringbase:
   587  06C9  3400               	retlw	0
   588  06CA                     __end_of__stringtab:
   589  06CA                     STR_3:
   590  06CA  3454               	retlw	84	;'T'
   591  06CB  3445               	retlw	69	;'E'
   592  06CC  344D               	retlw	77	;'M'
   593  06CD  3450               	retlw	80	;'P'
   594  06CE  3400               	retlw	0
   595  06CF                     STR_2:
   596  06CF  3443               	retlw	67	;'C'
   597  06D0  344F               	retlw	79	;'O'
   598  06D1  344E               	retlw	78	;'N'
   599  06D2  3454               	retlw	84	;'T'
   600  06D3  3400               	retlw	0
   601  06D4                     STR_1:
   602  06D4  3441               	retlw	65	;'A'
   603  06D5  3444               	retlw	68	;'D'
   604  06D6  3443               	retlw	67	;'C'
   605  06D7  3400               	retlw	0
   606  06D8                     STR_5:
   607  06D8  342B               	retlw	43	;'+'
   608  06D9  3400               	retlw	0
   609  06DA                     STR_6:
   610  06DA  342D               	retlw	45	;'-'
   611  06DB  3400               	retlw	0
   612  06DC                     STR_4:
   613  06DC  342E               	retlw	46	;'.'
   614  06DD  3400               	retlw	0
   615                           
   616                           	psect	cinit
   617  0015                     start_initialization:	
   618                           ; #config settings
   619                           
   620  0015                     __initialization:
   621                           
   622                           ; Clear objects allocated to COMMON
   623  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   624                           
   625                           ; Clear objects allocated to BANK0
   626  0016  1383               	bcf	3,7	;select IRP bank0
   627  0017  3020               	movlw	low __pbssBANK0
   628  0018  0084               	movwf	4
   629  0019  303D               	movlw	low (__pbssBANK0+29)
   630  001A  120A  118A  2745  120A  118A  	fcall	clear_ram0
   631  001F                     end_of_initialization:	
   632                           ;End of C runtime variable initialization code
   633                           
   634  001F                     __end_of__initialization:
   635  001F  0183               	clrf	3
   636  0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   637                           
   638                           	psect	bssCOMMON
   639  0077                     __pbssCOMMON:
   640  0077                     _SEND:
   641  0077                     	ds	1
   642                           
   643                           	psect	bssBANK0
   644  0020                     __pbssBANK0:
   645  0020                     _TEMPN:
   646  0020                     	ds	1
   647  0021                     _TEMP:
   648  0021                     	ds	1
   649  0022                     _TN2:
   650  0022                     	ds	1
   651  0023                     _TN1:
   652  0023                     	ds	1
   653  0024                     _T3:
   654  0024                     	ds	1
   655  0025                     _T2:
   656  0025                     	ds	1
   657  0026                     _T1:
   658  0026                     	ds	1
   659  0027                     _TEMPNU:
   660  0027                     	ds	1
   661  0028                     _TEMPND:
   662  0028                     	ds	1
   663  0029                     _TEMPU:
   664  0029                     	ds	1
   665  002A                     _TEMPD:
   666  002A                     	ds	1
   667  002B                     _TEMPC:
   668  002B                     	ds	1
   669  002C                     _term1:
   670  002C                     	ds	1
   671  002D                     _CO3:
   672  002D                     	ds	1
   673  002E                     _CO2:
   674  002E                     	ds	1
   675  002F                     _CO1:
   676  002F                     	ds	1
   677  0030                     _CONTU:
   678  0030                     	ds	1
   679  0031                     _CONTD:
   680  0031                     	ds	1
   681  0032                     _CONTC:
   682  0032                     	ds	1
   683  0033                     _INDIC:
   684  0033                     	ds	1
   685  0034                     _U1:
   686  0034                     	ds	1
   687  0035                     _D1:
   688  0035                     	ds	1
   689  0036                     _C1:
   690  0036                     	ds	1
   691  0037                     _UP1:
   692  0037                     	ds	1
   693  0038                     _DP1:
   694  0038                     	ds	1
   695  0039                     _CP1:
   696  0039                     	ds	1
   697  003A                     _cont1:
   698  003A                     	ds	1
   699  003B                     _pot1:
   700  003B                     	ds	1
   701  003C                     _desecho:
   702  003C                     	ds	1
   703                           
   704                           	psect	clrtext
   705  0745                     clear_ram0:	
   706                           ;	Called with FSR containing the base address, and
   707                           ;	W with the last address+1
   708                           
   709  0745  0064               	clrwdt	;clear the watchdog before getting into this loop
   710  0746                     clrloop0:
   711  0746  0180               	clrf	0	;clear RAM location pointed to by FSR
   712  0747  0A84               	incf	4,f	;increment pointer
   713  0748  0604               	xorwf	4,w	;XOR with final address
   714  0749  1903               	btfsc	3,2	;have we reached the end yet?
   715  074A  3400               	retlw	0	;all done for this memory range, return
   716  074B  0604               	xorwf	4,w	;XOR again to restore value
   717  074C  2F46               	goto	clrloop0	;do the next byte
   718                           
   719                           	psect	cstackCOMMON
   720  0070                     __pcstackCOMMON:
   721  0070                     ?_mandar:
   722  0070                     ??_mandar:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_Setup:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_Lcd_Write_String:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_map:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_map2:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_map3:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_spiWrite:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_spiRead:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_Lcd_Write_Char:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_initOscm:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_usartm:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_Lcd_Init:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_Lcd_Cmd:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_temperatura:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_temperatura2:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_ISR:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_main:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_spiReceiveWait:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ?_Lcd_Port:	
   777                           ; 1 bytes @ 0x0
   778                           
   779                           
   780                           ; 1 bytes @ 0x0
   781  0070                     	ds	2
   782  0072                     ??_ISR:
   783                           
   784                           ; 1 bytes @ 0x2
   785  0072                     	ds	4
   786  0076                     ??_spiWrite:
   787  0076                     ??_spiRead:	
   788                           ; 1 bytes @ 0x6
   789                           
   790  0076                     ??_usartm:	
   791                           ; 1 bytes @ 0x6
   792                           
   793  0076                     ??_spiInit:	
   794                           ; 1 bytes @ 0x6
   795                           
   796  0076                     ??_spiReceiveWait:	
   797                           ; 1 bytes @ 0x6
   798                           
   799  0076                     ??_Lcd_Port:	
   800                           ; 1 bytes @ 0x6
   801                           
   802  0076                     ??___wmul:	
   803                           ; 1 bytes @ 0x6
   804                           
   805  0076                     ?___bmul:	
   806                           ; 1 bytes @ 0x6
   807                           
   808  0076                     ??___awdiv:	
   809                           ; 1 bytes @ 0x6
   810                           
   811  0076                     spiInit@sType:	
   812                           ; 1 bytes @ 0x6
   813                           
   814  0076                     spiWrite@dat:	
   815                           ; 1 bytes @ 0x6
   816                           
   817  0076                     Lcd_Port@a:	
   818                           ; 1 bytes @ 0x6
   819                           
   820  0076                     initOscm@IRCF:	
   821                           ; 1 bytes @ 0x6
   822                           
   823  0076                     ___bmul@multiplicand:	
   824                           ; 1 bytes @ 0x6
   825                           
   826                           
   827                           ; 1 bytes @ 0x6
   828  0076                     	ds	1
   829  0077                     ??_Setup:
   830  0077                     ??_Lcd_Set_Cursor:	
   831                           ; 1 bytes @ 0x7
   832                           
   833  0077                     ??_Lcd_Write_String:	
   834                           ; 1 bytes @ 0x7
   835                           
   836  0077                     ??_Lcd_Init:	
   837                           ; 1 bytes @ 0x7
   838                           
   839  0077                     ??_temperatura:	
   840                           ; 1 bytes @ 0x7
   841                           
   842  0077                     ??_temperatura2:	
   843                           ; 1 bytes @ 0x7
   844                           
   845  0077                     ??___bmul:	
   846                           ; 1 bytes @ 0x7
   847                           
   848                           
   849                           	psect	cstackBANK0
   850  003D                     __pcstackBANK0:	
   851                           ; 1 bytes @ 0x7
   852                           
   853  003D                     ??_Lcd_Write_Char:
   854  003D                     ??_initOscm:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  003D                     ??_Lcd_Cmd:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  003D                     ?_spiInit:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  003D                     ?___wmul:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  003D                     spiInit@sDataSample:	
   867                           ; 2 bytes @ 0x0
   868                           
   869  003D                     ___bmul@product:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  003D                     ___wmul@multiplier:	
   873                           ; 1 bytes @ 0x0
   874                           
   875                           
   876                           ; 2 bytes @ 0x0
   877  003D                     	ds	1
   878  003E                     spiInit@sClockIdle:
   879  003E                     Lcd_Write_Char@a:	
   880                           ; 1 bytes @ 0x1
   881                           
   882  003E                     ___bmul@multiplier:	
   883                           ; 1 bytes @ 0x1
   884                           
   885                           
   886                           ; 1 bytes @ 0x1
   887  003E                     	ds	1
   888  003F                     spiInit@sTransmitEdge:
   889  003F                     Lcd_Cmd@a:	
   890                           ; 1 bytes @ 0x2
   891                           
   892  003F                     Lcd_Write_String@i:	
   893                           ; 1 bytes @ 0x2
   894                           
   895  003F                     ___wmul@multiplicand:	
   896                           ; 2 bytes @ 0x2
   897                           
   898                           
   899                           ; 2 bytes @ 0x2
   900  003F                     	ds	1
   901  0040                     ?_Lcd_Set_Cursor:
   902  0040                     Lcd_Set_Cursor@b:	
   903                           ; 1 bytes @ 0x3
   904                           
   905                           
   906                           ; 1 bytes @ 0x3
   907  0040                     	ds	1
   908  0041                     Lcd_Set_Cursor@a:
   909  0041                     Lcd_Write_String@a:	
   910                           ; 1 bytes @ 0x4
   911                           
   912  0041                     ___wmul@product:	
   913                           ; 1 bytes @ 0x4
   914                           
   915                           
   916                           ; 2 bytes @ 0x4
   917  0041                     	ds	1
   918  0042                     Lcd_Set_Cursor@temp:
   919                           
   920                           ; 1 bytes @ 0x5
   921  0042                     	ds	1
   922  0043                     ?___awdiv:
   923  0043                     ___awdiv@divisor:	
   924                           ; 2 bytes @ 0x6
   925                           
   926                           
   927                           ; 2 bytes @ 0x6
   928  0043                     	ds	2
   929  0045                     ___awdiv@dividend:
   930                           
   931                           ; 2 bytes @ 0x8
   932  0045                     	ds	2
   933  0047                     ___awdiv@counter:
   934                           
   935                           ; 1 bytes @ 0xA
   936  0047                     	ds	1
   937  0048                     ___awdiv@sign:
   938                           
   939                           ; 1 bytes @ 0xB
   940  0048                     	ds	1
   941  0049                     ___awdiv@quotient:
   942                           
   943                           ; 2 bytes @ 0xC
   944  0049                     	ds	2
   945  004B                     ??_map:
   946  004B                     ??_map2:	
   947                           ; 1 bytes @ 0xE
   948                           
   949  004B                     ??_map3:	
   950                           ; 1 bytes @ 0xE
   951                           
   952                           
   953                           ; 1 bytes @ 0xE
   954  004B                     	ds	6
   955  0051                     _map$1252:
   956                           
   957                           ; 2 bytes @ 0x14
   958  0051                     	ds	2
   959  0053                     ??_main:
   960                           
   961                           ; 1 bytes @ 0x16
   962  0053                     	ds	1
   963                           
   964                           	psect	maintext
   965  0023                     __pmaintext:	
   966 ;;
   967 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   968 ;;
   969 ;; *************** function _main *****************
   970 ;; Defined at:
   971 ;;		line 105 in file "MASTER.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : B00/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          0       1       0       0       0
   988 ;;      Totals:         0       1       0       0       0
   989 ;;Total ram usage:        1 bytes
   990 ;; Hardware stack levels required when called:    7
   991 ;; This function calls:
   992 ;;		_Lcd_Set_Cursor
   993 ;;		_Lcd_Write_Char
   994 ;;		_Lcd_Write_String
   995 ;;		_Setup
   996 ;;		_map
   997 ;;		_map2
   998 ;;		_map3
   999 ;;		_spiRead
  1000 ;;		_spiWrite
  1001 ;; This function is called by:
  1002 ;;		Startup code after reset
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _main
  1008  0023                     _main:
  1009  0023                     l2082:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1012                           
  1013  0023  120A  118A  257A  120A  118A  	fcall	_Setup
  1014  0028                     l2084:
  1015  0028  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0029  1303               	bcf	3,6	;RP1=0, select bank0
  1017  002A  01C0               	clrf	Lcd_Set_Cursor@b
  1018  002B  0AC0               	incf	Lcd_Set_Cursor@b,f
  1019  002C  3001               	movlw	1
  1020  002D  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1021  0032                     l2086:
  1022  0032  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1023  0033  120A  118A  25F6  120A  118A  	fcall	_Lcd_Write_String
  1024  0038  3007               	movlw	7
  1025  0039  00FF               	movwf	btemp+1
  1026  003A  087F               	movf	btemp+1,w
  1027  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1028  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1029  003D  00C0               	movwf	Lcd_Set_Cursor@b
  1030  003E  3001               	movlw	1
  1031  003F  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1032  0044                     l2088:
  1033  0044  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1034  0045  120A  118A  25F6  120A  118A  	fcall	_Lcd_Write_String
  1035  004A                     l2090:
  1036  004A  300D               	movlw	13
  1037  004B  00FF               	movwf	btemp+1
  1038  004C  087F               	movf	btemp+1,w
  1039  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1040  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1041  004F  00C0               	movwf	Lcd_Set_Cursor@b
  1042  0050  3001               	movlw	1
  1043  0051  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1044  0056  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1045  0057  120A  118A  25F6  120A  118A  	fcall	_Lcd_Write_String
  1046  005C                     l2092:
  1047                           
  1048                           ;MASTER.c: 126:         INDIC++;
  1049  005C  3001               	movlw	1
  1050  005D  00FF               	movwf	btemp+1
  1051  005E  087F               	movf	btemp+1,w
  1052  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0061  07B3               	addwf	_INDIC,f
  1055  0062                     l2094:
  1056                           
  1057                           ;MASTER.c: 127:         map();
  1058  0062  120A  118A  2339  120A  118A  	fcall	_map
  1059  0067                     l2096:
  1060                           
  1061                           ;MASTER.c: 128:         map2();
  1062  0067  120A  118A  23F6  120A  118A  	fcall	_map2
  1063  006C                     l2098:
  1064                           
  1065                           ;MASTER.c: 129:         map3();
  1066  006C  120A  118A  2172  120A  118A  	fcall	_map3
  1067  0071                     l2100:
  1068                           
  1069                           ;MASTER.c: 132:         PIE1bits.TXIE = 1;
  1070  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1071  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1072  0073  160C               	bsf	12,4	;volatile
  1073                           
  1074                           ;MASTER.c: 135:         if (INDIC == 1) {
  1075  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0076  0333               	decf	_INDIC,w
  1078  0077  1D03               	btfss	3,2
  1079  0078  287A               	goto	u761
  1080  0079  287B               	goto	u760
  1081  007A                     u761:
  1082  007A  289F               	goto	l2114
  1083  007B                     u760:
  1084  007B                     l2102:
  1085                           
  1086                           ;MASTER.c: 136:             PORTCbits.RC0 = 0;
  1087  007B  1007               	bcf	7,0	;volatile
  1088  007C                     l2104:
  1089                           
  1090                           ;MASTER.c: 137:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1091  007C  30C7               	movlw	199
  1092  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1093  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1094  007F  00D3               	movwf	??_main
  1095  0080                     u797:
  1096  0080  2881               	nop2
  1097  0081  0BD3               	decfsz	??_main,f
  1098  0082  2880               	goto	u797
  1099  0083  2884               	nop2
  1100  0084                     l2106:
  1101                           
  1102                           ;MASTER.c: 138:             spiWrite(desecho);
  1103  0084  3000               	movlw	0
  1104  0085  120A  118A  2754  120A  118A  	fcall	_spiWrite
  1105  008A                     l2108:
  1106                           
  1107                           ;MASTER.c: 139:             pot1 = spiRead();
  1108  008A  120A  118A  273C  120A  118A  	fcall	_spiRead
  1109  008F  00FF               	movwf	btemp+1
  1110  0090  087F               	movf	btemp+1,w
  1111  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0093  00BB               	movwf	_pot1
  1114  0094                     l2110:
  1115                           
  1116                           ;MASTER.c: 141:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1117  0094  30C7               	movlw	199
  1118  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0097  00D3               	movwf	??_main
  1121  0098                     u807:
  1122  0098  2899               	nop2
  1123  0099  0BD3               	decfsz	??_main,f
  1124  009A  2898               	goto	u807
  1125  009B  289C               	nop2
  1126  009C                     l2112:
  1127                           
  1128                           ;MASTER.c: 142:             PORTCbits.RC0 = 1;
  1129  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1130  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1131  009E  1407               	bsf	7,0	;volatile
  1132  009F                     l2114:
  1133                           
  1134                           ;MASTER.c: 145:         if (INDIC == 2) {
  1135  009F  3002               	movlw	2
  1136  00A0  0633               	xorwf	_INDIC,w
  1137  00A1  1D03               	btfss	3,2
  1138  00A2  28A4               	goto	u771
  1139  00A3  28A5               	goto	u770
  1140  00A4                     u771:
  1141  00A4  28C9               	goto	l2128
  1142  00A5                     u770:
  1143  00A5                     l2116:
  1144                           
  1145                           ;MASTER.c: 146:             PORTCbits.RC1 = 0;
  1146  00A5  1087               	bcf	7,1	;volatile
  1147  00A6                     l2118:
  1148                           
  1149                           ;MASTER.c: 147:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1150  00A6  30C7               	movlw	199
  1151  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1152  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1153  00A9  00D3               	movwf	??_main
  1154  00AA                     u817:
  1155  00AA  28AB               	nop2
  1156  00AB  0BD3               	decfsz	??_main,f
  1157  00AC  28AA               	goto	u817
  1158  00AD  28AE               	nop2
  1159  00AE                     l2120:
  1160                           
  1161                           ;MASTER.c: 148:             spiWrite(desecho);
  1162  00AE  3000               	movlw	0
  1163  00AF  120A  118A  2754  120A  118A  	fcall	_spiWrite
  1164  00B4                     l2122:
  1165                           
  1166                           ;MASTER.c: 149:             cont1 = spiRead();
  1167  00B4  120A  118A  273C  120A  118A  	fcall	_spiRead
  1168  00B9  00FF               	movwf	btemp+1
  1169  00BA  087F               	movf	btemp+1,w
  1170  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1171  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1172  00BD  00BA               	movwf	_cont1
  1173  00BE                     l2124:
  1174                           
  1175                           ;MASTER.c: 151:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1176  00BE  30C7               	movlw	199
  1177  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1178  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1179  00C1  00D3               	movwf	??_main
  1180  00C2                     u827:
  1181  00C2  28C3               	nop2
  1182  00C3  0BD3               	decfsz	??_main,f
  1183  00C4  28C2               	goto	u827
  1184  00C5  28C6               	nop2
  1185  00C6                     l2126:
  1186                           
  1187                           ;MASTER.c: 152:             PORTCbits.RC1 = 1;
  1188  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1189  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1190  00C8  1487               	bsf	7,1	;volatile
  1191  00C9                     l2128:
  1192                           
  1193                           ;MASTER.c: 158:         if (INDIC == 3) {
  1194  00C9  3003               	movlw	3
  1195  00CA  0633               	xorwf	_INDIC,w
  1196  00CB  1D03               	btfss	3,2
  1197  00CC  28CE               	goto	u781
  1198  00CD  28CF               	goto	u780
  1199  00CE                     u781:
  1200  00CE  28F4               	goto	l2144
  1201  00CF                     u780:
  1202  00CF                     l2130:
  1203                           
  1204                           ;MASTER.c: 159:             PORTCbits.RC2 = 0;
  1205  00CF  1107               	bcf	7,2	;volatile
  1206  00D0                     l2132:
  1207                           
  1208                           ;MASTER.c: 160:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1209  00D0  30C7               	movlw	199
  1210  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1211  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1212  00D3  00D3               	movwf	??_main
  1213  00D4                     u837:
  1214  00D4  28D5               	nop2
  1215  00D5  0BD3               	decfsz	??_main,f
  1216  00D6  28D4               	goto	u837
  1217  00D7  28D8               	nop2
  1218  00D8                     l2134:
  1219                           
  1220                           ;MASTER.c: 161:             spiWrite(desecho);
  1221  00D8  3000               	movlw	0
  1222  00D9  120A  118A  2754  120A  118A  	fcall	_spiWrite
  1223  00DE                     l2136:
  1224                           
  1225                           ;MASTER.c: 162:             term1 = spiRead();
  1226  00DE  120A  118A  273C  120A  118A  	fcall	_spiRead
  1227  00E3  00FF               	movwf	btemp+1
  1228  00E4  087F               	movf	btemp+1,w
  1229  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1230  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1231  00E7  00AC               	movwf	_term1
  1232  00E8                     l2138:
  1233                           
  1234                           ;MASTER.c: 164:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1235  00E8  30C7               	movlw	199
  1236  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1237  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1238  00EB  00D3               	movwf	??_main
  1239  00EC                     u847:
  1240  00EC  28ED               	nop2
  1241  00ED  0BD3               	decfsz	??_main,f
  1242  00EE  28EC               	goto	u847
  1243  00EF  28F0               	nop2
  1244  00F0                     l2140:
  1245                           
  1246                           ;MASTER.c: 165:             PORTCbits.RC2 = 1;
  1247  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1248  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1249  00F2  1507               	bsf	7,2	;volatile
  1250  00F3                     l2142:
  1251                           
  1252                           ;MASTER.c: 166:             INDIC = 0;
  1253  00F3  01B3               	clrf	_INDIC
  1254  00F4                     l2144:
  1255                           
  1256                           ;MASTER.c: 171:         Lcd_Set_Cursor(2, 1);
  1257  00F4  01C0               	clrf	Lcd_Set_Cursor@b
  1258  00F5  0AC0               	incf	Lcd_Set_Cursor@b,f
  1259  00F6  3002               	movlw	2
  1260  00F7  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1261  00FC                     l2146:
  1262                           
  1263                           ;MASTER.c: 172:         Lcd_Write_Char(C1);
  1264  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1265  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1266  00FE  0836               	movf	_C1,w
  1267  00FF  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1268  0104                     l2148:
  1269                           
  1270                           ;MASTER.c: 173:         Lcd_Set_Cursor(2, 2);
  1271  0104  3002               	movlw	2
  1272  0105  00FF               	movwf	btemp+1
  1273  0106  087F               	movf	btemp+1,w
  1274  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0109  00C0               	movwf	Lcd_Set_Cursor@b
  1277  010A  3002               	movlw	2
  1278  010B  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1279  0110                     l2150:
  1280                           
  1281                           ;MASTER.c: 174:         Lcd_Write_String(".");
  1282  0110  3013               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1283  0111  120A  118A  25F6  120A  118A  	fcall	_Lcd_Write_String
  1284  0116                     l2152:
  1285                           
  1286                           ;MASTER.c: 175:         Lcd_Write_Char(D1);
  1287  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0118  0835               	movf	_D1,w
  1290  0119  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1291  011E                     l2154:
  1292                           
  1293                           ;MASTER.c: 176:         Lcd_Set_Cursor(2, 4);
  1294  011E  3004               	movlw	4
  1295  011F  00FF               	movwf	btemp+1
  1296  0120  087F               	movf	btemp+1,w
  1297  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0123  00C0               	movwf	Lcd_Set_Cursor@b
  1300  0124  3002               	movlw	2
  1301  0125  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1302  012A                     l2156:
  1303                           
  1304                           ;MASTER.c: 177:         Lcd_Write_Char(U1);
  1305  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1306  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1307  012C  0834               	movf	_U1,w
  1308  012D  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1309  0132                     l2158:
  1310                           
  1311                           ;MASTER.c: 179:         Lcd_Set_Cursor(2, 7);
  1312  0132  3007               	movlw	7
  1313  0133  00FF               	movwf	btemp+1
  1314  0134  087F               	movf	btemp+1,w
  1315  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0137  00C0               	movwf	Lcd_Set_Cursor@b
  1318  0138  3002               	movlw	2
  1319  0139  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1320  013E                     l2160:
  1321                           
  1322                           ;MASTER.c: 180:         Lcd_Write_Char(CO1);
  1323  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1324  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0140  082F               	movf	_CO1,w
  1326  0141  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1327  0146                     l2162:
  1328                           
  1329                           ;MASTER.c: 181:         Lcd_Set_Cursor(2, 8);
  1330  0146  3008               	movlw	8
  1331  0147  00FF               	movwf	btemp+1
  1332  0148  087F               	movf	btemp+1,w
  1333  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1334  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1335  014B  00C0               	movwf	Lcd_Set_Cursor@b
  1336  014C  3002               	movlw	2
  1337  014D  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1338  0152                     l2164:
  1339                           
  1340                           ;MASTER.c: 182:         Lcd_Write_Char(CO2);
  1341  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0154  082E               	movf	_CO2,w
  1344  0155  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1345  015A                     l2166:
  1346                           
  1347                           ;MASTER.c: 183:         Lcd_Set_Cursor(2, 9);
  1348  015A  3009               	movlw	9
  1349  015B  00FF               	movwf	btemp+1
  1350  015C  087F               	movf	btemp+1,w
  1351  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1352  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1353  015F  00C0               	movwf	Lcd_Set_Cursor@b
  1354  0160  3002               	movlw	2
  1355  0161  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1356  0166                     l2168:
  1357                           
  1358                           ;MASTER.c: 184:         Lcd_Write_Char(CO3);
  1359  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0168  082D               	movf	_CO3,w
  1362  0169  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1363  016E  285C               	goto	l2092
  1364  016F  120A  118A  2812   	ljmp	start
  1365  0172                     __end_of_main:
  1366                           
  1367                           	psect	text1
  1368  0754                     __ptext1:	
  1369 ;; *************** function _spiWrite *****************
  1370 ;; Defined at:
  1371 ;;		line 35 in file "SSP.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  dat             1    wreg     unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  dat             1    6[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0
  1388 ;;      Totals:         1       0       0       0       0
  1389 ;;Total ram usage:        1 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    2
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _spiWrite
  1401  0754                     _spiWrite:
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _spiWrite: [wreg]
  1405                           ;spiWrite@dat stored from wreg
  1406  0754  00F6               	movwf	spiWrite@dat
  1407  0755                     l1742:
  1408                           
  1409                           ;SSP.c: 35: void spiWrite(char dat);SSP.c: 36: {;SSP.c: 37:     SSPBUF = dat;
  1410  0755  0876               	movf	spiWrite@dat,w
  1411  0756  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0757  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0758  0093               	movwf	19	;volatile
  1414  0759                     l232:
  1415  0759  0008               	return
  1416  075A                     __end_of_spiWrite:
  1417                           
  1418                           	psect	text2
  1419  073C                     __ptext2:	
  1420 ;; *************** function _spiRead *****************
  1421 ;; Defined at:
  1422 ;;		line 50 in file "SSP.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      unsigned char 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    3
  1443 ;; This function calls:
  1444 ;;		_spiReceiveWait
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _spiRead
  1452  073C                     _spiRead:
  1453  073C                     l1744:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1456                           
  1457                           
  1458                           ;SSP.c: 52:     spiReceiveWait();
  1459  073C  120A  118A  274D  120A  118A  	fcall	_spiReceiveWait
  1460  0741                     l1746:
  1461                           
  1462                           ;SSP.c: 53:     return(SSPBUF);
  1463  0741  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0742  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0743  0813               	movf	19,w	;volatile
  1466  0744                     l240:
  1467  0744  0008               	return
  1468  0745                     __end_of_spiRead:
  1469                           
  1470                           	psect	text3
  1471  074D                     __ptext3:	
  1472 ;; *************** function _spiReceiveWait *****************
  1473 ;; Defined at:
  1474 ;;		line 30 in file "SSP.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		None
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    2
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_spiRead
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _spiReceiveWait
  1504  074D                     _spiReceiveWait:
  1505  074D                     l1512:	
  1506                           ;incstack = 0
  1507                           ; Regs used in _spiReceiveWait: []
  1508                           
  1509  074D                     l226:	
  1510                           ;SSP.c: 32:     while ( !SSPSTATbits.BF );
  1511                           
  1512  074D  1683               	bsf	3,5	;RP0=1, select bank1
  1513  074E  1303               	bcf	3,6	;RP1=0, select bank1
  1514  074F  1C14               	btfss	20,0	;volatile
  1515  0750  2F52               	goto	u381
  1516  0751  2F53               	goto	u380
  1517  0752                     u381:
  1518  0752  2F4D               	goto	l226
  1519  0753                     u380:
  1520  0753                     l229:
  1521  0753  0008               	return
  1522  0754                     __end_of_spiReceiveWait:
  1523                           
  1524                           	psect	text4
  1525  0172                     __ptext4:	
  1526 ;; *************** function _map3 *****************
  1527 ;; Defined at:
  1528 ;;		line 259 in file "MASTER.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0
  1544 ;;      Temps:          0       2       0       0       0
  1545 ;;      Totals:         0       2       0       0       0
  1546 ;;Total ram usage:        2 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    6
  1549 ;; This function calls:
  1550 ;;		___awdiv
  1551 ;;		___bmul
  1552 ;;		___wmul
  1553 ;;		_temperatura
  1554 ;;		_temperatura2
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           
  1561                           ;psect for function _map3
  1562  0172                     _map3:
  1563  0172                     l2060:	
  1564                           ;incstack = 0
  1565                           ; Regs used in _map3: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1566                           
  1567                           
  1568                           ;MASTER.c: 262:     if (term1 >= 68) {
  1569  0172  3044               	movlw	68
  1570  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0175  022C               	subwf	_term1,w
  1573  0176  1C03               	skipc
  1574  0177  2979               	goto	u741
  1575  0178  297A               	goto	u740
  1576  0179                     u741:
  1577  0179  2A10               	goto	l2072
  1578  017A                     u740:
  1579  017A                     l2062:
  1580                           
  1581                           ;MASTER.c: 264:         TEMP = (((term1 - 68)*150) / 187);
  1582  017A  30BB               	movlw	187
  1583  017B  00C3               	movwf	___awdiv@divisor
  1584  017C  3000               	movlw	0
  1585  017D  00C4               	movwf	___awdiv@divisor+1
  1586  017E  082C               	movf	_term1,w
  1587  017F  3EBC               	addlw	188
  1588  0180  00BD               	movwf	___wmul@multiplier
  1589  0181  30FF               	movlw	255
  1590  0182  1803               	skipnc
  1591  0183  3000               	movlw	0
  1592  0184  00BE               	movwf	___wmul@multiplier+1
  1593  0185  3096               	movlw	150
  1594  0186  00BF               	movwf	___wmul@multiplicand
  1595  0187  3000               	movlw	0
  1596  0188  00C0               	movwf	___wmul@multiplicand+1
  1597  0189  120A  118A  261F  120A  118A  	fcall	___wmul
  1598  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1599  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0190  083E               	movf	?___wmul+1,w
  1601  0191  00C6               	movwf	___awdiv@dividend+1
  1602  0192  083D               	movf	?___wmul,w
  1603  0193  00C5               	movwf	___awdiv@dividend
  1604  0194  120A  118A  2464  120A  118A  	fcall	___awdiv
  1605  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1606  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1607  019B  0843               	movf	?___awdiv,w
  1608  019C  00FF               	movwf	btemp+1
  1609  019D  087F               	movf	btemp+1,w
  1610  019E  00A1               	movwf	_TEMP
  1611                           
  1612                           ;MASTER.c: 266:         TEMPC = (TEMP / 100);
  1613  019F  3064               	movlw	100
  1614  01A0  00C3               	movwf	___awdiv@divisor
  1615  01A1  3000               	movlw	0
  1616  01A2  00C4               	movwf	___awdiv@divisor+1
  1617  01A3  0821               	movf	_TEMP,w
  1618  01A4  00CB               	movwf	??_map3
  1619  01A5  01CC               	clrf	??_map3+1
  1620  01A6  084B               	movf	??_map3,w
  1621  01A7  00C5               	movwf	___awdiv@dividend
  1622  01A8  084C               	movf	??_map3+1,w
  1623  01A9  00C6               	movwf	___awdiv@dividend+1
  1624  01AA  120A  118A  2464  120A  118A  	fcall	___awdiv
  1625  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1626  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1627  01B1  0843               	movf	?___awdiv,w
  1628  01B2  00FF               	movwf	btemp+1
  1629  01B3  087F               	movf	btemp+1,w
  1630  01B4  00AB               	movwf	_TEMPC
  1631                           
  1632                           ;MASTER.c: 267:         TEMPD = (TEMP - (TEMPC * 100)) / 10;
  1633  01B5  300A               	movlw	10
  1634  01B6  00C3               	movwf	___awdiv@divisor
  1635  01B7  3000               	movlw	0
  1636  01B8  00C4               	movwf	___awdiv@divisor+1
  1637  01B9  082B               	movf	_TEMPC,w
  1638  01BA  00CB               	movwf	??_map3
  1639  01BB  01CC               	clrf	??_map3+1
  1640  01BC  084B               	movf	??_map3,w
  1641  01BD  00BD               	movwf	___wmul@multiplier
  1642  01BE  084C               	movf	??_map3+1,w
  1643  01BF  00BE               	movwf	___wmul@multiplier+1
  1644  01C0  309C               	movlw	156
  1645  01C1  00BF               	movwf	___wmul@multiplicand
  1646  01C2  30FF               	movlw	255
  1647  01C3  00C0               	movwf	___wmul@multiplicand+1
  1648  01C4  120A  118A  261F  120A  118A  	fcall	___wmul
  1649  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1650  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1651  01CB  0821               	movf	_TEMP,w
  1652  01CC  073D               	addwf	?___wmul,w
  1653  01CD  00C5               	movwf	___awdiv@dividend
  1654  01CE  083E               	movf	?___wmul+1,w
  1655  01CF  1803               	skipnc
  1656  01D0  0A3E               	incf	?___wmul+1,w
  1657  01D1  00C6               	movwf	___awdiv@dividend+1
  1658  01D2  120A  118A  2464  120A  118A  	fcall	___awdiv
  1659  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1660  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1661  01D9  0843               	movf	?___awdiv,w
  1662  01DA  00FF               	movwf	btemp+1
  1663  01DB  087F               	movf	btemp+1,w
  1664  01DC  00AA               	movwf	_TEMPD
  1665                           
  1666                           ;MASTER.c: 268:         TEMPU = (TEMP - (TEMPC * 100)-(TEMPD * 10));
  1667  01DD  309C               	movlw	156
  1668  01DE  00FF               	movwf	btemp+1
  1669  01DF  087F               	movf	btemp+1,w
  1670  01E0  00F6               	movwf	___bmul@multiplicand
  1671  01E1  082B               	movf	_TEMPC,w
  1672  01E2  120A  118A  2710  120A  118A  	fcall	___bmul
  1673  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1674  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1675  01E9  00CB               	movwf	??_map3
  1676  01EA  30F6               	movlw	246
  1677  01EB  00FF               	movwf	btemp+1
  1678  01EC  087F               	movf	btemp+1,w
  1679  01ED  00F6               	movwf	___bmul@multiplicand
  1680  01EE  082A               	movf	_TEMPD,w
  1681  01EF  120A  118A  2710  120A  118A  	fcall	___bmul
  1682  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1683  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1684  01F6  074B               	addwf	??_map3,w
  1685  01F7  0721               	addwf	_TEMP,w
  1686  01F8  00FF               	movwf	btemp+1
  1687  01F9  087F               	movf	btemp+1,w
  1688  01FA  00A9               	movwf	_TEMPU
  1689  01FB                     l2064:
  1690                           
  1691                           ;MASTER.c: 270:         T1 = (TEMPC + 0x30);
  1692  01FB  082B               	movf	_TEMPC,w
  1693  01FC  3E30               	addlw	48
  1694  01FD  00FF               	movwf	btemp+1
  1695  01FE  087F               	movf	btemp+1,w
  1696  01FF  00A6               	movwf	_T1
  1697  0200                     l2066:
  1698                           
  1699                           ;MASTER.c: 271:         T2 = (TEMPD + 0x30);
  1700  0200  082A               	movf	_TEMPD,w
  1701  0201  3E30               	addlw	48
  1702  0202  00FF               	movwf	btemp+1
  1703  0203  087F               	movf	btemp+1,w
  1704  0204  00A5               	movwf	_T2
  1705  0205                     l2068:
  1706                           
  1707                           ;MASTER.c: 272:         T3 = (TEMPU + 0x30);
  1708  0205  0829               	movf	_TEMPU,w
  1709  0206  3E30               	addlw	48
  1710  0207  00FF               	movwf	btemp+1
  1711  0208  087F               	movf	btemp+1,w
  1712  0209  00A4               	movwf	_T3
  1713  020A                     l2070:
  1714                           
  1715                           ;MASTER.c: 273:         temperatura();
  1716  020A  120A  118A  252B  120A  118A  	fcall	_temperatura
  1717                           
  1718                           ;MASTER.c: 275:     } else if (term1 < 68) {
  1719  020F  2A71               	goto	l164
  1720  0210                     l2072:
  1721  0210  3044               	movlw	68
  1722  0211  022C               	subwf	_term1,w
  1723  0212  1803               	skipnc
  1724  0213  2A15               	goto	u751
  1725  0214  2A16               	goto	u750
  1726  0215                     u751:
  1727  0215  2A71               	goto	l164
  1728  0216                     u750:
  1729  0216                     l2074:
  1730                           
  1731                           ;MASTER.c: 277:         TEMPN = (((term1 * (-55)) / 68) + 55);
  1732  0216  3044               	movlw	68
  1733  0217  00C3               	movwf	___awdiv@divisor
  1734  0218  3000               	movlw	0
  1735  0219  00C4               	movwf	___awdiv@divisor+1
  1736  021A  082C               	movf	_term1,w
  1737  021B  00CB               	movwf	??_map3
  1738  021C  01CC               	clrf	??_map3+1
  1739  021D  084B               	movf	??_map3,w
  1740  021E  00BD               	movwf	___wmul@multiplier
  1741  021F  084C               	movf	??_map3+1,w
  1742  0220  00BE               	movwf	___wmul@multiplier+1
  1743  0221  30C9               	movlw	201
  1744  0222  00BF               	movwf	___wmul@multiplicand
  1745  0223  30FF               	movlw	255
  1746  0224  00C0               	movwf	___wmul@multiplicand+1
  1747  0225  120A  118A  261F  120A  118A  	fcall	___wmul
  1748  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1749  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1750  022C  083E               	movf	?___wmul+1,w
  1751  022D  00C6               	movwf	___awdiv@dividend+1
  1752  022E  083D               	movf	?___wmul,w
  1753  022F  00C5               	movwf	___awdiv@dividend
  1754  0230  120A  118A  2464  120A  118A  	fcall	___awdiv
  1755  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1757  0237  0843               	movf	?___awdiv,w
  1758  0238  3E37               	addlw	55
  1759  0239  00FF               	movwf	btemp+1
  1760  023A  087F               	movf	btemp+1,w
  1761  023B  00A0               	movwf	_TEMPN
  1762                           
  1763                           ;MASTER.c: 279:         TEMPND = (TEMPN / 10);
  1764  023C  300A               	movlw	10
  1765  023D  00C3               	movwf	___awdiv@divisor
  1766  023E  3000               	movlw	0
  1767  023F  00C4               	movwf	___awdiv@divisor+1
  1768  0240  0820               	movf	_TEMPN,w
  1769  0241  00CB               	movwf	??_map3
  1770  0242  01CC               	clrf	??_map3+1
  1771  0243  084B               	movf	??_map3,w
  1772  0244  00C5               	movwf	___awdiv@dividend
  1773  0245  084C               	movf	??_map3+1,w
  1774  0246  00C6               	movwf	___awdiv@dividend+1
  1775  0247  120A  118A  2464  120A  118A  	fcall	___awdiv
  1776  024C  1283               	bcf	3,5	;RP0=0, select bank0
  1777  024D  1303               	bcf	3,6	;RP1=0, select bank0
  1778  024E  0843               	movf	?___awdiv,w
  1779  024F  00FF               	movwf	btemp+1
  1780  0250  087F               	movf	btemp+1,w
  1781  0251  00A8               	movwf	_TEMPND
  1782                           
  1783                           ;MASTER.c: 280:         TEMPNU = (TEMPN - (TEMPND * 10));
  1784  0252  30F6               	movlw	246
  1785  0253  00FF               	movwf	btemp+1
  1786  0254  087F               	movf	btemp+1,w
  1787  0255  00F6               	movwf	___bmul@multiplicand
  1788  0256  0828               	movf	_TEMPND,w
  1789  0257  120A  118A  2710  120A  118A  	fcall	___bmul
  1790  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1791  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1792  025E  0720               	addwf	_TEMPN,w
  1793  025F  00FF               	movwf	btemp+1
  1794  0260  087F               	movf	btemp+1,w
  1795  0261  00A7               	movwf	_TEMPNU
  1796  0262                     l2076:
  1797                           
  1798                           ;MASTER.c: 282:         TN1 = (TEMPND + 0x30);
  1799  0262  0828               	movf	_TEMPND,w
  1800  0263  3E30               	addlw	48
  1801  0264  00FF               	movwf	btemp+1
  1802  0265  087F               	movf	btemp+1,w
  1803  0266  00A3               	movwf	_TN1
  1804  0267                     l2078:
  1805                           
  1806                           ;MASTER.c: 283:         TN2 = (TEMPNU + 0x30);
  1807  0267  0827               	movf	_TEMPNU,w
  1808  0268  3E30               	addlw	48
  1809  0269  00FF               	movwf	btemp+1
  1810  026A  087F               	movf	btemp+1,w
  1811  026B  00A2               	movwf	_TN2
  1812  026C                     l2080:
  1813                           
  1814                           ;MASTER.c: 285:         temperatura2();
  1815  026C  120A  118A  25BB  120A  118A  	fcall	_temperatura2
  1816  0271                     l164:
  1817  0271  0008               	return
  1818  0272                     __end_of_map3:
  1819                           
  1820                           	psect	text5
  1821  05BB                     __ptext5:	
  1822 ;; *************** function _temperatura2 *****************
  1823 ;; Defined at:
  1824 ;;		line 405 in file "MASTER.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      void 
  1831 ;; Registers used:
  1832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       0       0       0       0
  1839 ;;      Locals:         0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0
  1841 ;;      Totals:         0       0       0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    5
  1845 ;; This function calls:
  1846 ;;		_Lcd_Set_Cursor
  1847 ;;		_Lcd_Write_Char
  1848 ;;		_Lcd_Write_String
  1849 ;; This function is called by:
  1850 ;;		_map3
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _temperatura2
  1856  05BB                     _temperatura2:
  1857  05BB                     l1976:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _temperatura2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1860                           
  1861                           
  1862                           ;MASTER.c: 406:     Lcd_Set_Cursor(2, 12);
  1863  05BB  300C               	movlw	12
  1864  05BC  00FF               	movwf	btemp+1
  1865  05BD  087F               	movf	btemp+1,w
  1866  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1867  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1868  05C0  00C0               	movwf	Lcd_Set_Cursor@b
  1869  05C1  3002               	movlw	2
  1870  05C2  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1871  05C7                     l1978:
  1872                           
  1873                           ;MASTER.c: 407:     Lcd_Write_String("-");
  1874  05C7  3011               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1875  05C8  120A  118A  25F6  120A  118A  	fcall	_Lcd_Write_String
  1876  05CD                     l1980:
  1877                           
  1878                           ;MASTER.c: 408:     Lcd_Set_Cursor(2, 14);
  1879  05CD  300E               	movlw	14
  1880  05CE  00FF               	movwf	btemp+1
  1881  05CF  087F               	movf	btemp+1,w
  1882  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1883  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1884  05D2  00C0               	movwf	Lcd_Set_Cursor@b
  1885  05D3  3002               	movlw	2
  1886  05D4  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1887  05D9                     l1982:
  1888                           
  1889                           ;MASTER.c: 409:     Lcd_Write_Char(TN1);
  1890  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1891  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1892  05DB  0823               	movf	_TN1,w
  1893  05DC  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1894  05E1                     l1984:
  1895                           
  1896                           ;MASTER.c: 410:     Lcd_Set_Cursor(2, 15);
  1897  05E1  300F               	movlw	15
  1898  05E2  00FF               	movwf	btemp+1
  1899  05E3  087F               	movf	btemp+1,w
  1900  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1901  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1902  05E6  00C0               	movwf	Lcd_Set_Cursor@b
  1903  05E7  3002               	movlw	2
  1904  05E8  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1905  05ED                     l1986:
  1906                           
  1907                           ;MASTER.c: 411:     Lcd_Write_Char(TN2);
  1908  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1909  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1910  05EF  0822               	movf	_TN2,w
  1911  05F0  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1912  05F5                     l206:
  1913  05F5  0008               	return
  1914  05F6                     __end_of_temperatura2:
  1915                           
  1916                           	psect	text6
  1917  052B                     __ptext6:	
  1918 ;; *************** function _temperatura *****************
  1919 ;; Defined at:
  1920 ;;		line 393 in file "MASTER.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0
  1937 ;;      Totals:         0       0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    5
  1941 ;; This function calls:
  1942 ;;		_Lcd_Set_Cursor
  1943 ;;		_Lcd_Write_Char
  1944 ;;		_Lcd_Write_String
  1945 ;; This function is called by:
  1946 ;;		_map3
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _temperatura
  1952  052B                     _temperatura:
  1953  052B                     l1960:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _temperatura: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1956                           
  1957                           
  1958                           ;MASTER.c: 394:     Lcd_Set_Cursor(2, 12);
  1959  052B  300C               	movlw	12
  1960  052C  00FF               	movwf	btemp+1
  1961  052D  087F               	movf	btemp+1,w
  1962  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1963  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0530  00C0               	movwf	Lcd_Set_Cursor@b
  1965  0531  3002               	movlw	2
  1966  0532  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1967  0537                     l1962:
  1968                           
  1969                           ;MASTER.c: 395:     Lcd_Write_String("+");
  1970  0537  300F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1971  0538  120A  118A  25F6  120A  118A  	fcall	_Lcd_Write_String
  1972  053D                     l1964:
  1973                           
  1974                           ;MASTER.c: 396:     Lcd_Set_Cursor(2, 13);
  1975  053D  300D               	movlw	13
  1976  053E  00FF               	movwf	btemp+1
  1977  053F  087F               	movf	btemp+1,w
  1978  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0542  00C0               	movwf	Lcd_Set_Cursor@b
  1981  0543  3002               	movlw	2
  1982  0544  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  1983  0549                     l1966:
  1984                           
  1985                           ;MASTER.c: 397:     Lcd_Write_Char(T1);
  1986  0549  1283               	bcf	3,5	;RP0=0, select bank0
  1987  054A  1303               	bcf	3,6	;RP1=0, select bank0
  1988  054B  0826               	movf	_T1,w
  1989  054C  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  1990  0551                     l1968:
  1991                           
  1992                           ;MASTER.c: 398:     Lcd_Set_Cursor(2, 14);
  1993  0551  300E               	movlw	14
  1994  0552  00FF               	movwf	btemp+1
  1995  0553  087F               	movf	btemp+1,w
  1996  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0556  00C0               	movwf	Lcd_Set_Cursor@b
  1999  0557  3002               	movlw	2
  2000  0558  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  2001  055D                     l1970:
  2002                           
  2003                           ;MASTER.c: 399:     Lcd_Write_Char(T2);
  2004  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2005  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2006  055F  0825               	movf	_T2,w
  2007  0560  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  2008  0565                     l1972:
  2009                           
  2010                           ;MASTER.c: 400:     Lcd_Set_Cursor(2, 15);
  2011  0565  300F               	movlw	15
  2012  0566  00FF               	movwf	btemp+1
  2013  0567  087F               	movf	btemp+1,w
  2014  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2016  056A  00C0               	movwf	Lcd_Set_Cursor@b
  2017  056B  3002               	movlw	2
  2018  056C  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
  2019  0571                     l1974:
  2020                           
  2021                           ;MASTER.c: 401:     Lcd_Write_Char(T3);
  2022  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0573  0824               	movf	_T3,w
  2025  0574  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  2026  0579                     l203:
  2027  0579  0008               	return
  2028  057A                     __end_of_temperatura:
  2029                           
  2030                           	psect	text7
  2031  05F6                     __ptext7:	
  2032 ;; *************** function _Lcd_Write_String *****************
  2033 ;; Defined at:
  2034 ;;		line 60 in file "LCDM.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  a               1    wreg     PTR unsigned char 
  2037 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(5), 
  2038 ;;		 -> STR_2(5), STR_1(4), 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  a               1    4[BANK0 ] PTR unsigned char 
  2041 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(5), 
  2042 ;;		 -> STR_2(5), STR_1(4), 
  2043 ;;  i               2    2[BANK0 ] int 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       0       0       0       0
  2054 ;;      Locals:         0       3       0       0       0
  2055 ;;      Temps:          0       0       0       0       0
  2056 ;;      Totals:         0       3       0       0       0
  2057 ;;Total ram usage:        3 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    4
  2060 ;; This function calls:
  2061 ;;		_Lcd_Write_Char
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;;		_temperatura
  2065 ;;		_temperatura2
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           
  2070                           ;psect for function _Lcd_Write_String
  2071  05F6                     _Lcd_Write_String:
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2075                           ;Lcd_Write_String@a stored from wreg
  2076  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  2077  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  2078  05F8  00C1               	movwf	Lcd_Write_String@a
  2079  05F9                     l1940:
  2080                           
  2081                           ;LCDM.c: 61:    int i;;LCDM.c: 62:  for(i=0;a[i]!='\0';i++)
  2082  05F9  01BF               	clrf	Lcd_Write_String@i
  2083  05FA  01C0               	clrf	Lcd_Write_String@i+1
  2084  05FB  2E11               	goto	l1946
  2085  05FC                     l1942:
  2086                           
  2087                           ;LCDM.c: 63:     Lcd_Write_Char(a[i]);
  2088  05FC  083F               	movf	Lcd_Write_String@i,w
  2089  05FD  0741               	addwf	Lcd_Write_String@a,w
  2090  05FE  0084               	movwf	4
  2091  05FF  120A  118A  26C4  120A  118A  	fcall	stringdir
  2092  0604  120A  118A  26DE  120A  118A  	fcall	_Lcd_Write_Char
  2093  0609                     l1944:
  2094  0609  3001               	movlw	1
  2095  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2096  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2097  060C  07BF               	addwf	Lcd_Write_String@i,f
  2098  060D  1803               	skipnc
  2099  060E  0AC0               	incf	Lcd_Write_String@i+1,f
  2100  060F  3000               	movlw	0
  2101  0610  07C0               	addwf	Lcd_Write_String@i+1,f
  2102  0611                     l1946:
  2103  0611  083F               	movf	Lcd_Write_String@i,w
  2104  0612  0741               	addwf	Lcd_Write_String@a,w
  2105  0613  0084               	movwf	4
  2106  0614  120A  118A  26C4  120A  118A  	fcall	stringdir
  2107  0619  3A00               	xorlw	0
  2108  061A  1D03               	skipz
  2109  061B  2E1D               	goto	u691
  2110  061C  2E1E               	goto	u690
  2111  061D                     u691:
  2112  061D  2DFC               	goto	l1942
  2113  061E                     u690:
  2114  061E                     l273:
  2115  061E  0008               	return
  2116  061F                     __end_of_Lcd_Write_String:
  2117                           
  2118                           	psect	text8
  2119  06DE                     __ptext8:	
  2120 ;; *************** function _Lcd_Write_Char *****************
  2121 ;; Defined at:
  2122 ;;		line 51 in file "LCDM.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  a               1    wreg     unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  a               1    1[BANK0 ] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         0       1       0       0       0
  2138 ;;      Temps:          0       1       0       0       0
  2139 ;;      Totals:         0       2       0       0       0
  2140 ;;Total ram usage:        2 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    3
  2143 ;; This function calls:
  2144 ;;		_Lcd_Port
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;;		_temperatura
  2148 ;;		_temperatura2
  2149 ;;		_Lcd_Write_String
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _Lcd_Write_Char
  2155  06DE                     _Lcd_Write_Char:
  2156                           
  2157                           ;incstack = 0
  2158                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2159                           ;Lcd_Write_Char@a stored from wreg
  2160  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  2161  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  2162  06E0  00BE               	movwf	Lcd_Write_Char@a
  2163  06E1                     l1906:
  2164                           
  2165                           ;LCDM.c: 52:     PORTEbits.RE1 = 1;
  2166  06E1  1489               	bsf	9,1	;volatile
  2167  06E2                     l1908:
  2168                           
  2169                           ;LCDM.c: 53:    Lcd_Port(a);
  2170  06E2  083E               	movf	Lcd_Write_Char@a,w
  2171  06E3  120A  118A  275A  120A  118A  	fcall	_Lcd_Port
  2172  06E8                     l1910:
  2173                           
  2174                           ;LCDM.c: 54:    PORTEbits.RE0 = 1;
  2175  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2176  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2177  06EA  1409               	bsf	9,0	;volatile
  2178  06EB                     l1912:
  2179                           
  2180                           ;LCDM.c: 55:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2181  06EB  300C               	movlw	12
  2182  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2183  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2184  06EE  00BD               	movwf	??_Lcd_Write_Char
  2185  06EF                     u857:
  2186  06EF  0BBD               	decfsz	??_Lcd_Write_Char,f
  2187  06F0  2EEF               	goto	u857
  2188  06F1  0000               	nop
  2189  06F2                     l1914:
  2190                           
  2191                           ;LCDM.c: 56:    PORTEbits.RE0 = 0;
  2192  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2193  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2194  06F4  1009               	bcf	9,0	;volatile
  2195  06F5                     l1916:
  2196                           
  2197                           ;LCDM.c: 57:    PORTEbits.RE1 = 0;
  2198  06F5  1089               	bcf	9,1	;volatile
  2199  06F6                     l267:
  2200  06F6  0008               	return
  2201  06F7                     __end_of_Lcd_Write_Char:
  2202                           
  2203                           	psect	text9
  2204  0646                     __ptext9:	
  2205 ;; *************** function _Lcd_Set_Cursor *****************
  2206 ;; Defined at:
  2207 ;;		line 30 in file "LCDM.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  a               1    wreg     unsigned char 
  2210 ;;  b               1    3[BANK0 ] unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  a               1    4[BANK0 ] unsigned char 
  2213 ;;  temp            1    5[BANK0 ] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         0       1       0       0       0
  2224 ;;      Locals:         0       2       0       0       0
  2225 ;;      Temps:          0       0       0       0       0
  2226 ;;      Totals:         0       3       0       0       0
  2227 ;;Total ram usage:        3 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    4
  2230 ;; This function calls:
  2231 ;;		_Lcd_Cmd
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;;		_temperatura
  2235 ;;		_temperatura2
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _Lcd_Set_Cursor
  2241  0646                     _Lcd_Set_Cursor:
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2245                           ;Lcd_Set_Cursor@a stored from wreg
  2246  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0648  00C1               	movwf	Lcd_Set_Cursor@a
  2249  0649                     l1928:
  2250                           
  2251                           ;LCDM.c: 31:     char temp;;LCDM.c: 32:     if (a == 1) {
  2252  0649  0341               	decf	Lcd_Set_Cursor@a,w
  2253  064A  1D03               	btfss	3,2
  2254  064B  2E4D               	goto	u671
  2255  064C  2E4E               	goto	u670
  2256  064D                     u671:
  2257  064D  2E5A               	goto	l1934
  2258  064E                     u670:
  2259  064E                     l1930:
  2260                           
  2261                           ;LCDM.c: 33:         temp = 0x80 + b - 1;
  2262  064E  0840               	movf	Lcd_Set_Cursor@b,w
  2263  064F  3E7F               	addlw	127
  2264  0650  00FF               	movwf	btemp+1
  2265  0651  087F               	movf	btemp+1,w
  2266  0652  00C2               	movwf	Lcd_Set_Cursor@temp
  2267  0653                     l1932:
  2268                           
  2269                           ;LCDM.c: 34:         Lcd_Cmd(temp);
  2270  0653  0842               	movf	Lcd_Set_Cursor@temp,w
  2271  0654  120A  118A  26A8  120A  118A  	fcall	_Lcd_Cmd
  2272                           
  2273                           ;LCDM.c: 35:     } else if (a == 2) {
  2274  0659  2E6B               	goto	l261
  2275  065A                     l1934:
  2276  065A  3002               	movlw	2
  2277  065B  0641               	xorwf	Lcd_Set_Cursor@a,w
  2278  065C  1D03               	btfss	3,2
  2279  065D  2E5F               	goto	u681
  2280  065E  2E60               	goto	u680
  2281  065F                     u681:
  2282  065F  2E6B               	goto	l261
  2283  0660                     u680:
  2284  0660                     l1936:
  2285                           
  2286                           ;LCDM.c: 36:         temp = 0xC0 + b - 1;
  2287  0660  0840               	movf	Lcd_Set_Cursor@b,w
  2288  0661  3EBF               	addlw	191
  2289  0662  00FF               	movwf	btemp+1
  2290  0663  087F               	movf	btemp+1,w
  2291  0664  00C2               	movwf	Lcd_Set_Cursor@temp
  2292  0665                     l1938:
  2293                           
  2294                           ;LCDM.c: 37:         Lcd_Cmd(temp);
  2295  0665  0842               	movf	Lcd_Set_Cursor@temp,w
  2296  0666  120A  118A  26A8  120A  118A  	fcall	_Lcd_Cmd
  2297  066B                     l261:
  2298  066B  0008               	return
  2299  066C                     __end_of_Lcd_Set_Cursor:
  2300                           
  2301                           	psect	text10
  2302  03F6                     __ptext10:	
  2303 ;; *************** function _map2 *****************
  2304 ;; Defined at:
  2305 ;;		line 248 in file "MASTER.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2319 ;;      Params:         0       0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0
  2321 ;;      Temps:          0       2       0       0       0
  2322 ;;      Totals:         0       2       0       0       0
  2323 ;;Total ram usage:        2 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    3
  2326 ;; This function calls:
  2327 ;;		___awdiv
  2328 ;;		___bmul
  2329 ;;		___wmul
  2330 ;; This function is called by:
  2331 ;;		_main
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           
  2336                           ;psect for function _map2
  2337  03F6                     _map2:
  2338  03F6                     l2052:	
  2339                           ;incstack = 0
  2340                           ; Regs used in _map2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2341                           
  2342                           
  2343                           ;MASTER.c: 249:     CONTC = (cont1 / 100);
  2344  03F6  3064               	movlw	100
  2345  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2346  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2347  03F9  00C3               	movwf	___awdiv@divisor
  2348  03FA  3000               	movlw	0
  2349  03FB  00C4               	movwf	___awdiv@divisor+1
  2350  03FC  083A               	movf	_cont1,w
  2351  03FD  00CB               	movwf	??_map2
  2352  03FE  01CC               	clrf	??_map2+1
  2353  03FF  084B               	movf	??_map2,w
  2354  0400  00C5               	movwf	___awdiv@dividend
  2355  0401  084C               	movf	??_map2+1,w
  2356  0402  00C6               	movwf	___awdiv@dividend+1
  2357  0403  120A  118A  2464  120A  118A  	fcall	___awdiv
  2358  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2360  040A  0843               	movf	?___awdiv,w
  2361  040B  00FF               	movwf	btemp+1
  2362  040C  087F               	movf	btemp+1,w
  2363  040D  00B2               	movwf	_CONTC
  2364                           
  2365                           ;MASTER.c: 250:     CONTD = (cont1 - (CONTC * 100)) / 10;
  2366  040E  300A               	movlw	10
  2367  040F  00C3               	movwf	___awdiv@divisor
  2368  0410  3000               	movlw	0
  2369  0411  00C4               	movwf	___awdiv@divisor+1
  2370  0412  0832               	movf	_CONTC,w
  2371  0413  00CB               	movwf	??_map2
  2372  0414  01CC               	clrf	??_map2+1
  2373  0415  084B               	movf	??_map2,w
  2374  0416  00BD               	movwf	___wmul@multiplier
  2375  0417  084C               	movf	??_map2+1,w
  2376  0418  00BE               	movwf	___wmul@multiplier+1
  2377  0419  309C               	movlw	156
  2378  041A  00BF               	movwf	___wmul@multiplicand
  2379  041B  30FF               	movlw	255
  2380  041C  00C0               	movwf	___wmul@multiplicand+1
  2381  041D  120A  118A  261F  120A  118A  	fcall	___wmul
  2382  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0424  083A               	movf	_cont1,w
  2385  0425  073D               	addwf	?___wmul,w
  2386  0426  00C5               	movwf	___awdiv@dividend
  2387  0427  083E               	movf	?___wmul+1,w
  2388  0428  1803               	skipnc
  2389  0429  0A3E               	incf	?___wmul+1,w
  2390  042A  00C6               	movwf	___awdiv@dividend+1
  2391  042B  120A  118A  2464  120A  118A  	fcall	___awdiv
  2392  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0432  0843               	movf	?___awdiv,w
  2395  0433  00FF               	movwf	btemp+1
  2396  0434  087F               	movf	btemp+1,w
  2397  0435  00B1               	movwf	_CONTD
  2398                           
  2399                           ;MASTER.c: 251:     CONTU = (cont1 - (CONTC * 100)-(CONTD * 10));
  2400  0436  309C               	movlw	156
  2401  0437  00FF               	movwf	btemp+1
  2402  0438  087F               	movf	btemp+1,w
  2403  0439  00F6               	movwf	___bmul@multiplicand
  2404  043A  0832               	movf	_CONTC,w
  2405  043B  120A  118A  2710  120A  118A  	fcall	___bmul
  2406  0440  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0441  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0442  00CB               	movwf	??_map2
  2409  0443  30F6               	movlw	246
  2410  0444  00FF               	movwf	btemp+1
  2411  0445  087F               	movf	btemp+1,w
  2412  0446  00F6               	movwf	___bmul@multiplicand
  2413  0447  0831               	movf	_CONTD,w
  2414  0448  120A  118A  2710  120A  118A  	fcall	___bmul
  2415  044D  1283               	bcf	3,5	;RP0=0, select bank0
  2416  044E  1303               	bcf	3,6	;RP1=0, select bank0
  2417  044F  074B               	addwf	??_map2,w
  2418  0450  073A               	addwf	_cont1,w
  2419  0451  00FF               	movwf	btemp+1
  2420  0452  087F               	movf	btemp+1,w
  2421  0453  00B0               	movwf	_CONTU
  2422  0454                     l2054:
  2423                           
  2424                           ;MASTER.c: 253:     CO1 = (CONTC + 0x30);
  2425  0454  0832               	movf	_CONTC,w
  2426  0455  3E30               	addlw	48
  2427  0456  00FF               	movwf	btemp+1
  2428  0457  087F               	movf	btemp+1,w
  2429  0458  00AF               	movwf	_CO1
  2430  0459                     l2056:
  2431                           
  2432                           ;MASTER.c: 254:     CO2 = (CONTD + 0x30);
  2433  0459  0831               	movf	_CONTD,w
  2434  045A  3E30               	addlw	48
  2435  045B  00FF               	movwf	btemp+1
  2436  045C  087F               	movf	btemp+1,w
  2437  045D  00AE               	movwf	_CO2
  2438  045E                     l2058:
  2439                           
  2440                           ;MASTER.c: 255:     CO3 = (CONTU + 0x30);
  2441  045E  0830               	movf	_CONTU,w
  2442  045F  3E30               	addlw	48
  2443  0460  00FF               	movwf	btemp+1
  2444  0461  087F               	movf	btemp+1,w
  2445  0462  00AD               	movwf	_CO3
  2446  0463                     l158:
  2447  0463  0008               	return
  2448  0464                     __end_of_map2:
  2449                           
  2450                           	psect	text11
  2451  0339                     __ptext11:	
  2452 ;; *************** function _map *****************
  2453 ;; Defined at:
  2454 ;;		line 235 in file "MASTER.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       0       0       0       0
  2469 ;;      Locals:         0       2       0       0       0
  2470 ;;      Temps:          0       6       0       0       0
  2471 ;;      Totals:         0       8       0       0       0
  2472 ;;Total ram usage:        8 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    3
  2475 ;; This function calls:
  2476 ;;		___awdiv
  2477 ;;		___bmul
  2478 ;;		___wmul
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _map
  2486  0339                     _map:
  2487  0339                     l2044:	
  2488                           ;incstack = 0
  2489                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2490                           
  2491                           
  2492                           ;MASTER.c: 237:     CP1 = ((pot1) / 51);
  2493  0339  3033               	movlw	51
  2494  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2495  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2496  033C  00C3               	movwf	___awdiv@divisor
  2497  033D  3000               	movlw	0
  2498  033E  00C4               	movwf	___awdiv@divisor+1
  2499  033F  083B               	movf	_pot1,w
  2500  0340  00CB               	movwf	??_map
  2501  0341  01CC               	clrf	??_map+1
  2502  0342  084B               	movf	??_map,w
  2503  0343  00C5               	movwf	___awdiv@dividend
  2504  0344  084C               	movf	??_map+1,w
  2505  0345  00C6               	movwf	___awdiv@dividend+1
  2506  0346  120A  118A  2464  120A  118A  	fcall	___awdiv
  2507  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2508  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2509  034D  0843               	movf	?___awdiv,w
  2510  034E  00FF               	movwf	btemp+1
  2511  034F  087F               	movf	btemp+1,w
  2512  0350  00B9               	movwf	_CP1
  2513                           
  2514                           ;MASTER.c: 238:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  2515  0351  3033               	movlw	51
  2516  0352  00C3               	movwf	___awdiv@divisor
  2517  0353  3000               	movlw	0
  2518  0354  00C4               	movwf	___awdiv@divisor+1
  2519  0355  083B               	movf	_pot1,w
  2520  0356  00CB               	movwf	??_map
  2521  0357  01CC               	clrf	??_map+1
  2522  0358  084B               	movf	??_map,w
  2523  0359  00BD               	movwf	___wmul@multiplier
  2524  035A  084C               	movf	??_map+1,w
  2525  035B  00BE               	movwf	___wmul@multiplier+1
  2526  035C  3064               	movlw	100
  2527  035D  00BF               	movwf	___wmul@multiplicand
  2528  035E  3000               	movlw	0
  2529  035F  00C0               	movwf	___wmul@multiplicand+1
  2530  0360  120A  118A  261F  120A  118A  	fcall	___wmul
  2531  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0367  083E               	movf	?___wmul+1,w
  2534  0368  00C6               	movwf	___awdiv@dividend+1
  2535  0369  083D               	movf	?___wmul,w
  2536  036A  00C5               	movwf	___awdiv@dividend
  2537  036B  120A  118A  2464  120A  118A  	fcall	___awdiv
  2538  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0372  0843               	movf	?___awdiv,w
  2541  0373  00CD               	movwf	??_map+2
  2542  0374  0844               	movf	?___awdiv+1,w
  2543  0375  00CE               	movwf	??_map+3
  2544  0376  0839               	movf	_CP1,w
  2545  0377  00CF               	movwf	??_map+4
  2546  0378  01D0               	clrf	??_map+5
  2547  0379  084F               	movf	??_map+4,w
  2548  037A  00BD               	movwf	___wmul@multiplier
  2549  037B  0850               	movf	??_map+5,w
  2550  037C  00BE               	movwf	___wmul@multiplier+1
  2551  037D  309C               	movlw	156
  2552  037E  00BF               	movwf	___wmul@multiplicand
  2553  037F  30FF               	movlw	255
  2554  0380  00C0               	movwf	___wmul@multiplicand+1
  2555  0381  120A  118A  261F  120A  118A  	fcall	___wmul
  2556  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0388  083D               	movf	?___wmul,w
  2559  0389  074D               	addwf	??_map+2,w
  2560  038A  00D1               	movwf	_map$1252
  2561  038B  083E               	movf	?___wmul+1,w
  2562  038C  1803               	skipnc
  2563  038D  0A3E               	incf	?___wmul+1,w
  2564  038E  074E               	addwf	??_map+3,w
  2565  038F  00D2               	movwf	_map$1252+1
  2566                           
  2567                           ;MASTER.c: 238:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  2568  0390  300A               	movlw	10
  2569  0391  00C3               	movwf	___awdiv@divisor
  2570  0392  3000               	movlw	0
  2571  0393  00C4               	movwf	___awdiv@divisor+1
  2572  0394  0852               	movf	_map$1252+1,w
  2573  0395  00C6               	movwf	___awdiv@dividend+1
  2574  0396  0851               	movf	_map$1252,w
  2575  0397  00C5               	movwf	___awdiv@dividend
  2576  0398  120A  118A  2464  120A  118A  	fcall	___awdiv
  2577  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2578  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2579  039F  0843               	movf	?___awdiv,w
  2580  03A0  00FF               	movwf	btemp+1
  2581  03A1  087F               	movf	btemp+1,w
  2582  03A2  00B8               	movwf	_DP1
  2583                           
  2584                           ;MASTER.c: 239:     UP1 = (((pot1 * 100) / 51)-(CP1 * 100)-(DP1 * 10));
  2585  03A3  3033               	movlw	51
  2586  03A4  00C3               	movwf	___awdiv@divisor
  2587  03A5  3000               	movlw	0
  2588  03A6  00C4               	movwf	___awdiv@divisor+1
  2589  03A7  083B               	movf	_pot1,w
  2590  03A8  00CB               	movwf	??_map
  2591  03A9  01CC               	clrf	??_map+1
  2592  03AA  084B               	movf	??_map,w
  2593  03AB  00BD               	movwf	___wmul@multiplier
  2594  03AC  084C               	movf	??_map+1,w
  2595  03AD  00BE               	movwf	___wmul@multiplier+1
  2596  03AE  3064               	movlw	100
  2597  03AF  00BF               	movwf	___wmul@multiplicand
  2598  03B0  3000               	movlw	0
  2599  03B1  00C0               	movwf	___wmul@multiplicand+1
  2600  03B2  120A  118A  261F  120A  118A  	fcall	___wmul
  2601  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2602  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2603  03B9  083E               	movf	?___wmul+1,w
  2604  03BA  00C6               	movwf	___awdiv@dividend+1
  2605  03BB  083D               	movf	?___wmul,w
  2606  03BC  00C5               	movwf	___awdiv@dividend
  2607  03BD  120A  118A  2464  120A  118A  	fcall	___awdiv
  2608  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2609  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2610  03C4  0843               	movf	?___awdiv,w
  2611  03C5  00CD               	movwf	??_map+2
  2612  03C6  0844               	movf	?___awdiv+1,w
  2613  03C7  00CE               	movwf	??_map+3
  2614  03C8  309C               	movlw	156
  2615  03C9  00FF               	movwf	btemp+1
  2616  03CA  087F               	movf	btemp+1,w
  2617  03CB  00F6               	movwf	___bmul@multiplicand
  2618  03CC  0839               	movf	_CP1,w
  2619  03CD  120A  118A  2710  120A  118A  	fcall	___bmul
  2620  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2621  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2622  03D4  00CF               	movwf	??_map+4
  2623  03D5  30F6               	movlw	246
  2624  03D6  00FF               	movwf	btemp+1
  2625  03D7  087F               	movf	btemp+1,w
  2626  03D8  00F6               	movwf	___bmul@multiplicand
  2627  03D9  0838               	movf	_DP1,w
  2628  03DA  120A  118A  2710  120A  118A  	fcall	___bmul
  2629  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2630  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2631  03E1  074F               	addwf	??_map+4,w
  2632  03E2  074D               	addwf	??_map+2,w
  2633  03E3  00FF               	movwf	btemp+1
  2634  03E4  087F               	movf	btemp+1,w
  2635  03E5  00B7               	movwf	_UP1
  2636  03E6                     l2046:
  2637                           
  2638                           ;MASTER.c: 241:     C1 = (CP1 + 0x30);
  2639  03E6  0839               	movf	_CP1,w
  2640  03E7  3E30               	addlw	48
  2641  03E8  00FF               	movwf	btemp+1
  2642  03E9  087F               	movf	btemp+1,w
  2643  03EA  00B6               	movwf	_C1
  2644  03EB                     l2048:
  2645                           
  2646                           ;MASTER.c: 242:     D1 = (DP1 + 0x30);
  2647  03EB  0838               	movf	_DP1,w
  2648  03EC  3E30               	addlw	48
  2649  03ED  00FF               	movwf	btemp+1
  2650  03EE  087F               	movf	btemp+1,w
  2651  03EF  00B5               	movwf	_D1
  2652  03F0                     l2050:
  2653                           
  2654                           ;MASTER.c: 243:     U1 = (UP1 + 0x30);
  2655  03F0  0837               	movf	_UP1,w
  2656  03F1  3E30               	addlw	48
  2657  03F2  00FF               	movwf	btemp+1
  2658  03F3  087F               	movf	btemp+1,w
  2659  03F4  00B4               	movwf	_U1
  2660  03F5                     l155:
  2661  03F5  0008               	return
  2662  03F6                     __end_of_map:
  2663                           
  2664                           	psect	text12
  2665  061F                     __ptext12:	
  2666 ;; *************** function ___wmul *****************
  2667 ;; Defined at:
  2668 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2671 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  product         2    4[BANK0 ] unsigned int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  2    0[BANK0 ] unsigned int 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       4       0       0       0
  2684 ;;      Locals:         0       2       0       0       0
  2685 ;;      Temps:          0       0       0       0       0
  2686 ;;      Totals:         0       6       0       0       0
  2687 ;;Total ram usage:        6 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    2
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_map
  2694 ;;		_map2
  2695 ;;		_map3
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           
  2700                           ;psect for function ___wmul
  2701  061F                     ___wmul:
  2702  061F                     l1988:	
  2703                           ;incstack = 0
  2704                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2705                           
  2706  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2707  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2708  0621  01C1               	clrf	___wmul@product
  2709  0622  01C2               	clrf	___wmul@product+1
  2710  0623                     l1990:
  2711  0623  1C3D               	btfss	___wmul@multiplier,0
  2712  0624  2E26               	goto	u701
  2713  0625  2E27               	goto	u700
  2714  0626                     u701:
  2715  0626  2E2D               	goto	l396
  2716  0627                     u700:
  2717  0627                     l1992:
  2718  0627  083F               	movf	___wmul@multiplicand,w
  2719  0628  07C1               	addwf	___wmul@product,f
  2720  0629  1803               	skipnc
  2721  062A  0AC2               	incf	___wmul@product+1,f
  2722  062B  0840               	movf	___wmul@multiplicand+1,w
  2723  062C  07C2               	addwf	___wmul@product+1,f
  2724  062D                     l396:
  2725  062D  3001               	movlw	1
  2726  062E                     u715:
  2727  062E  1003               	clrc
  2728  062F  0DBF               	rlf	___wmul@multiplicand,f
  2729  0630  0DC0               	rlf	___wmul@multiplicand+1,f
  2730  0631  3EFF               	addlw	-1
  2731  0632  1D03               	skipz
  2732  0633  2E2E               	goto	u715
  2733  0634                     l1994:
  2734  0634  3001               	movlw	1
  2735  0635                     u725:
  2736  0635  1003               	clrc
  2737  0636  0CBE               	rrf	___wmul@multiplier+1,f
  2738  0637  0CBD               	rrf	___wmul@multiplier,f
  2739  0638  3EFF               	addlw	-1
  2740  0639  1D03               	skipz
  2741  063A  2E35               	goto	u725
  2742  063B                     l1996:
  2743  063B  083D               	movf	___wmul@multiplier,w
  2744  063C  043E               	iorwf	___wmul@multiplier+1,w
  2745  063D  1D03               	btfss	3,2
  2746  063E  2E40               	goto	u731
  2747  063F  2E41               	goto	u730
  2748  0640                     u731:
  2749  0640  2E23               	goto	l1990
  2750  0641                     u730:
  2751  0641                     l1998:
  2752  0641  0842               	movf	___wmul@product+1,w
  2753  0642  00BE               	movwf	?___wmul+1
  2754  0643  0841               	movf	___wmul@product,w
  2755  0644  00BD               	movwf	?___wmul
  2756  0645                     l398:
  2757  0645  0008               	return
  2758  0646                     __end_of___wmul:
  2759                           
  2760                           	psect	text13
  2761  0710                     __ptext13:	
  2762 ;; *************** function ___bmul *****************
  2763 ;; Defined at:
  2764 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  multiplier      1    wreg     unsigned char 
  2767 ;;  multiplicand    1    6[COMMON] unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2770 ;;  product         1    0[BANK0 ] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      unsigned char 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0, btemp+1
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2780 ;;      Params:         1       0       0       0       0
  2781 ;;      Locals:         0       2       0       0       0
  2782 ;;      Temps:          0       0       0       0       0
  2783 ;;      Totals:         1       2       0       0       0
  2784 ;;Total ram usage:        3 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    2
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_map
  2791 ;;		_map2
  2792 ;;		_map3
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function ___bmul
  2798  0710                     ___bmul:
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2802                           ;___bmul@multiplier stored from wreg
  2803  0710  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0711  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0712  00BE               	movwf	___bmul@multiplier
  2806  0713                     l1528:
  2807  0713  01BD               	clrf	___bmul@product
  2808  0714                     l1530:
  2809  0714  1C3E               	btfss	___bmul@multiplier,0
  2810  0715  2F17               	goto	u431
  2811  0716  2F18               	goto	u430
  2812  0717                     u431:
  2813  0717  2F1C               	goto	l1534
  2814  0718                     u430:
  2815  0718                     l1532:
  2816  0718  0876               	movf	___bmul@multiplicand,w
  2817  0719  00FF               	movwf	btemp+1
  2818  071A  087F               	movf	btemp+1,w
  2819  071B  07BD               	addwf	___bmul@product,f
  2820  071C                     l1534:
  2821  071C  1003               	clrc
  2822  071D  0DF6               	rlf	___bmul@multiplicand,f
  2823  071E                     l1536:
  2824  071E  1003               	clrc
  2825  071F  0CBE               	rrf	___bmul@multiplier,f
  2826  0720                     l1538:
  2827  0720  083E               	movf	___bmul@multiplier,w
  2828  0721  1D03               	btfss	3,2
  2829  0722  2F24               	goto	u441
  2830  0723  2F25               	goto	u440
  2831  0724                     u441:
  2832  0724  2F14               	goto	l1530
  2833  0725                     u440:
  2834  0725                     l1540:
  2835  0725  083D               	movf	___bmul@product,w
  2836  0726                     l422:
  2837  0726  0008               	return
  2838  0727                     __end_of___bmul:
  2839                           
  2840                           	psect	text14
  2841  0464                     __ptext14:	
  2842 ;; *************** function ___awdiv *****************
  2843 ;; Defined at:
  2844 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  divisor         2    6[BANK0 ] int 
  2847 ;;  dividend        2    8[BANK0 ] int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  quotient        2   12[BANK0 ] int 
  2850 ;;  sign            1   11[BANK0 ] unsigned char 
  2851 ;;  counter         1   10[BANK0 ] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2    6[BANK0 ] int 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0, btemp+1
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2861 ;;      Params:         0       4       0       0       0
  2862 ;;      Locals:         0       4       0       0       0
  2863 ;;      Temps:          0       0       0       0       0
  2864 ;;      Totals:         0       8       0       0       0
  2865 ;;Total ram usage:        8 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    2
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_map
  2872 ;;		_map2
  2873 ;;		_map3
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function ___awdiv
  2879  0464                     ___awdiv:
  2880  0464                     l1544:	
  2881                           ;incstack = 0
  2882                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2883                           
  2884  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0466  01C8               	clrf	___awdiv@sign
  2887  0467                     l1546:
  2888  0467  1FC4               	btfss	___awdiv@divisor+1,7
  2889  0468  2C6A               	goto	u451
  2890  0469  2C6B               	goto	u450
  2891  046A                     u451:
  2892  046A  2C72               	goto	l1552
  2893  046B                     u450:
  2894  046B                     l1548:
  2895  046B  09C3               	comf	___awdiv@divisor,f
  2896  046C  09C4               	comf	___awdiv@divisor+1,f
  2897  046D  0AC3               	incf	___awdiv@divisor,f
  2898  046E  1903               	skipnz
  2899  046F  0AC4               	incf	___awdiv@divisor+1,f
  2900  0470                     l1550:
  2901  0470  01C8               	clrf	___awdiv@sign
  2902  0471  0AC8               	incf	___awdiv@sign,f
  2903  0472                     l1552:
  2904  0472  1FC6               	btfss	___awdiv@dividend+1,7
  2905  0473  2C75               	goto	u461
  2906  0474  2C76               	goto	u460
  2907  0475                     u461:
  2908  0475  2C7F               	goto	l1558
  2909  0476                     u460:
  2910  0476                     l1554:
  2911  0476  09C5               	comf	___awdiv@dividend,f
  2912  0477  09C6               	comf	___awdiv@dividend+1,f
  2913  0478  0AC5               	incf	___awdiv@dividend,f
  2914  0479  1903               	skipnz
  2915  047A  0AC6               	incf	___awdiv@dividend+1,f
  2916  047B                     l1556:
  2917  047B  3001               	movlw	1
  2918  047C  00FF               	movwf	btemp+1
  2919  047D  087F               	movf	btemp+1,w
  2920  047E  06C8               	xorwf	___awdiv@sign,f
  2921  047F                     l1558:
  2922  047F  01C9               	clrf	___awdiv@quotient
  2923  0480  01CA               	clrf	___awdiv@quotient+1
  2924  0481                     l1560:
  2925  0481  0843               	movf	___awdiv@divisor,w
  2926  0482  0444               	iorwf	___awdiv@divisor+1,w
  2927  0483  1903               	btfsc	3,2
  2928  0484  2C86               	goto	u471
  2929  0485  2C87               	goto	u470
  2930  0486                     u471:
  2931  0486  2CBE               	goto	l1580
  2932  0487                     u470:
  2933  0487                     l1562:
  2934  0487  01C7               	clrf	___awdiv@counter
  2935  0488  0AC7               	incf	___awdiv@counter,f
  2936  0489  2C95               	goto	l1568
  2937  048A                     l1564:
  2938  048A  3001               	movlw	1
  2939  048B                     u485:
  2940  048B  1003               	clrc
  2941  048C  0DC3               	rlf	___awdiv@divisor,f
  2942  048D  0DC4               	rlf	___awdiv@divisor+1,f
  2943  048E  3EFF               	addlw	-1
  2944  048F  1D03               	skipz
  2945  0490  2C8B               	goto	u485
  2946  0491                     l1566:
  2947  0491  3001               	movlw	1
  2948  0492  00FF               	movwf	btemp+1
  2949  0493  087F               	movf	btemp+1,w
  2950  0494  07C7               	addwf	___awdiv@counter,f
  2951  0495                     l1568:
  2952  0495  1FC4               	btfss	___awdiv@divisor+1,7
  2953  0496  2C98               	goto	u491
  2954  0497  2C99               	goto	u490
  2955  0498                     u491:
  2956  0498  2C8A               	goto	l1564
  2957  0499                     u490:
  2958  0499                     l1570:
  2959  0499  3001               	movlw	1
  2960  049A                     u505:
  2961  049A  1003               	clrc
  2962  049B  0DC9               	rlf	___awdiv@quotient,f
  2963  049C  0DCA               	rlf	___awdiv@quotient+1,f
  2964  049D  3EFF               	addlw	-1
  2965  049E  1D03               	skipz
  2966  049F  2C9A               	goto	u505
  2967  04A0  0844               	movf	___awdiv@divisor+1,w
  2968  04A1  0246               	subwf	___awdiv@dividend+1,w
  2969  04A2  1D03               	skipz
  2970  04A3  2CA6               	goto	u515
  2971  04A4  0843               	movf	___awdiv@divisor,w
  2972  04A5  0245               	subwf	___awdiv@dividend,w
  2973  04A6                     u515:
  2974  04A6  1C03               	skipc
  2975  04A7  2CA9               	goto	u511
  2976  04A8  2CAA               	goto	u510
  2977  04A9                     u511:
  2978  04A9  2CB1               	goto	l1576
  2979  04AA                     u510:
  2980  04AA                     l1572:
  2981  04AA  0843               	movf	___awdiv@divisor,w
  2982  04AB  02C5               	subwf	___awdiv@dividend,f
  2983  04AC  0844               	movf	___awdiv@divisor+1,w
  2984  04AD  1C03               	skipc
  2985  04AE  03C6               	decf	___awdiv@dividend+1,f
  2986  04AF  02C6               	subwf	___awdiv@dividend+1,f
  2987  04B0                     l1574:
  2988  04B0  1449               	bsf	___awdiv@quotient,0
  2989  04B1                     l1576:
  2990  04B1  3001               	movlw	1
  2991  04B2                     u525:
  2992  04B2  1003               	clrc
  2993  04B3  0CC4               	rrf	___awdiv@divisor+1,f
  2994  04B4  0CC3               	rrf	___awdiv@divisor,f
  2995  04B5  3EFF               	addlw	-1
  2996  04B6  1D03               	skipz
  2997  04B7  2CB2               	goto	u525
  2998  04B8                     l1578:
  2999  04B8  3001               	movlw	1
  3000  04B9  02C7               	subwf	___awdiv@counter,f
  3001  04BA  1D03               	btfss	3,2
  3002  04BB  2CBD               	goto	u531
  3003  04BC  2CBE               	goto	u530
  3004  04BD                     u531:
  3005  04BD  2C99               	goto	l1570
  3006  04BE                     u530:
  3007  04BE                     l1580:
  3008  04BE  0848               	movf	___awdiv@sign,w
  3009  04BF  1903               	btfsc	3,2
  3010  04C0  2CC2               	goto	u541
  3011  04C1  2CC3               	goto	u540
  3012  04C2                     u541:
  3013  04C2  2CC8               	goto	l1584
  3014  04C3                     u540:
  3015  04C3                     l1582:
  3016  04C3  09C9               	comf	___awdiv@quotient,f
  3017  04C4  09CA               	comf	___awdiv@quotient+1,f
  3018  04C5  0AC9               	incf	___awdiv@quotient,f
  3019  04C6  1903               	skipnz
  3020  04C7  0ACA               	incf	___awdiv@quotient+1,f
  3021  04C8                     l1584:
  3022  04C8  084A               	movf	___awdiv@quotient+1,w
  3023  04C9  00C4               	movwf	?___awdiv+1
  3024  04CA  0849               	movf	___awdiv@quotient,w
  3025  04CB  00C3               	movwf	?___awdiv
  3026  04CC                     l549:
  3027  04CC  0008               	return
  3028  04CD                     __end_of___awdiv:
  3029                           
  3030                           	psect	text15
  3031  057A                     __ptext15:	
  3032 ;; *************** function _Setup *****************
  3033 ;; Defined at:
  3034 ;;		line 197 in file "MASTER.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3048 ;;      Params:         0       0       0       0       0
  3049 ;;      Locals:         0       0       0       0       0
  3050 ;;      Temps:          0       0       0       0       0
  3051 ;;      Totals:         0       0       0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    5
  3055 ;; This function calls:
  3056 ;;		_Lcd_Cmd
  3057 ;;		_Lcd_Init
  3058 ;;		_initOscm
  3059 ;;		_spiInit
  3060 ;;		_usartm
  3061 ;; This function is called by:
  3062 ;;		_main
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _Setup
  3068  057A                     _Setup:
  3069  057A                     l2002:	
  3070                           ;incstack = 0
  3071                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3072                           
  3073                           
  3074                           ;MASTER.c: 198:     TRISA = 0;
  3075  057A  1683               	bsf	3,5	;RP0=1, select bank1
  3076  057B  1303               	bcf	3,6	;RP1=0, select bank1
  3077  057C  0185               	clrf	5	;volatile
  3078                           
  3079                           ;MASTER.c: 199:     TRISE = 0;
  3080  057D  0189               	clrf	9	;volatile
  3081  057E                     l2004:
  3082                           
  3083                           ;MASTER.c: 200:     initOscm(6);
  3084  057E  3006               	movlw	6
  3085  057F  120A  118A  24CD  120A  118A  	fcall	_initOscm
  3086  0584                     l2006:
  3087                           
  3088                           ;MASTER.c: 201:     usartm();
  3089  0584  120A  118A  2727  120A  118A  	fcall	_usartm
  3090  0589                     l2008:
  3091                           
  3092                           ;MASTER.c: 202:     Lcd_Init();
  3093  0589  120A  118A  26F7  120A  118A  	fcall	_Lcd_Init
  3094  058E                     l2010:
  3095                           
  3096                           ;MASTER.c: 203:     Lcd_Cmd(0x8A);
  3097  058E  308A               	movlw	138
  3098  058F  120A  118A  26A8  120A  118A  	fcall	_Lcd_Cmd
  3099  0594                     l2012:
  3100                           
  3101                           ;MASTER.c: 204:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  3102  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0595  1303               	bcf	3,6	;RP1=0, select bank0
  3104  0596  01BD               	clrf	spiInit@sDataSample
  3105  0597  01BE               	clrf	spiInit@sClockIdle
  3106  0598  01BF               	clrf	spiInit@sTransmitEdge
  3107  0599  3020               	movlw	32
  3108  059A  120A  118A  266C  120A  118A  	fcall	_spiInit
  3109  059F                     l2014:
  3110                           
  3111                           ;MASTER.c: 205:     ANSEL = 0;
  3112  059F  1683               	bsf	3,5	;RP0=1, select bank3
  3113  05A0  1703               	bsf	3,6	;RP1=1, select bank3
  3114  05A1  0188               	clrf	8	;volatile
  3115  05A2                     l2016:
  3116                           
  3117                           ;MASTER.c: 206:     ANSELH = 0;
  3118  05A2  0189               	clrf	9	;volatile
  3119  05A3                     l2018:
  3120                           
  3121                           ;MASTER.c: 207:     PORTA = 0;
  3122  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3123  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3124  05A5  0185               	clrf	5	;volatile
  3125  05A6                     l2020:
  3126                           
  3127                           ;MASTER.c: 208:     PORTB = 0;
  3128  05A6  0186               	clrf	6	;volatile
  3129  05A7                     l2022:
  3130                           
  3131                           ;MASTER.c: 209:     PORTC = 0;
  3132  05A7  0187               	clrf	7	;volatile
  3133  05A8                     l2024:
  3134                           
  3135                           ;MASTER.c: 210:     PORTD = 0;
  3136  05A8  0188               	clrf	8	;volatile
  3137  05A9                     l2026:
  3138                           
  3139                           ;MASTER.c: 211:     PORTE = 0;
  3140  05A9  0189               	clrf	9	;volatile
  3141  05AA                     l2028:
  3142                           
  3143                           ;MASTER.c: 213:     TRISC = 0b00010000;
  3144  05AA  3010               	movlw	16
  3145  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  3146  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  3147  05AD  0087               	movwf	7	;volatile
  3148  05AE                     l2030:
  3149                           
  3150                           ;MASTER.c: 214:     TRISD = 0;
  3151  05AE  0188               	clrf	8	;volatile
  3152  05AF                     l2032:
  3153                           
  3154                           ;MASTER.c: 215:     TRISB = 0;
  3155  05AF  0186               	clrf	6	;volatile
  3156  05B0                     l2034:
  3157                           
  3158                           ;MASTER.c: 216:     OPTION_REG = 0b10000111;
  3159  05B0  3087               	movlw	135
  3160  05B1  0081               	movwf	1	;volatile
  3161  05B2                     l2036:
  3162                           
  3163                           ;MASTER.c: 217:     INTCONbits.GIE = 1;
  3164  05B2  178B               	bsf	11,7	;volatile
  3165  05B3                     l2038:
  3166                           
  3167                           ;MASTER.c: 219:     INTCONbits.PEIE = 1;
  3168  05B3  170B               	bsf	11,6	;volatile
  3169  05B4                     l2040:
  3170                           
  3171                           ;MASTER.c: 223:     PIR1bits.TXIF = 0;
  3172  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3173  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  3174  05B6  120C               	bcf	12,4	;volatile
  3175  05B7                     l2042:
  3176                           
  3177                           ;MASTER.c: 224:     PIE1bits.TXIE = 1;
  3178  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  3179  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  3180  05B9  160C               	bsf	12,4	;volatile
  3181  05BA                     l152:
  3182  05BA  0008               	return
  3183  05BB                     __end_of_Setup:
  3184                           
  3185                           	psect	text16
  3186  0727                     __ptext16:	
  3187 ;; *************** function _usartm *****************
  3188 ;; Defined at:
  3189 ;;		line 5 in file "usartm.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;		None
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;		None
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3203 ;;      Params:         0       0       0       0       0
  3204 ;;      Locals:         0       0       0       0       0
  3205 ;;      Temps:          0       0       0       0       0
  3206 ;;      Totals:         0       0       0       0       0
  3207 ;;Total ram usage:        0 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    2
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_Setup
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _usartm
  3219  0727                     _usartm:
  3220  0727                     l1456:	
  3221                           ;incstack = 0
  3222                           ; Regs used in _usartm: [wreg+status,2]
  3223                           
  3224                           
  3225                           ;usartm.c: 8:     TXSTAbits.TX9 = 0;
  3226  0727  1683               	bsf	3,5	;RP0=1, select bank1
  3227  0728  1303               	bcf	3,6	;RP1=0, select bank1
  3228  0729  1318               	bcf	24,6	;volatile
  3229                           
  3230                           ;usartm.c: 9:     TXSTAbits.SYNC = 0;
  3231  072A  1218               	bcf	24,4	;volatile
  3232                           
  3233                           ;usartm.c: 10:     TXSTAbits.BRGH = 1;
  3234  072B  1518               	bsf	24,2	;volatile
  3235                           
  3236                           ;usartm.c: 11:     BAUDCTLbits.BRG16 = 0;
  3237  072C  1683               	bsf	3,5	;RP0=1, select bank3
  3238  072D  1703               	bsf	3,6	;RP1=1, select bank3
  3239  072E  1187               	bcf	7,3	;volatile
  3240  072F                     l1458:
  3241                           
  3242                           ;usartm.c: 12:     SPBRGH = 0;
  3243  072F  1683               	bsf	3,5	;RP0=1, select bank1
  3244  0730  1303               	bcf	3,6	;RP1=0, select bank1
  3245  0731  019A               	clrf	26	;volatile
  3246  0732                     l1460:
  3247                           
  3248                           ;usartm.c: 13:     SPBRG = 25;
  3249  0732  3019               	movlw	25
  3250  0733  0099               	movwf	25	;volatile
  3251  0734                     l1462:
  3252                           
  3253                           ;usartm.c: 14:     PIE1bits.TXIE = 1;
  3254  0734  160C               	bsf	12,4	;volatile
  3255  0735                     l1464:
  3256                           
  3257                           ;usartm.c: 15:     TXSTAbits.TXEN = 1;
  3258  0735  1698               	bsf	24,5	;volatile
  3259  0736                     l1466:
  3260                           
  3261                           ;usartm.c: 18:     RCSTAbits.SPEN = 1;
  3262  0736  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0737  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0738  1798               	bsf	24,7	;volatile
  3265  0739                     l1468:
  3266                           
  3267                           ;usartm.c: 19:     RCSTAbits. RX9 = 0;
  3268  0739  1318               	bcf	24,6	;volatile
  3269  073A                     l1470:
  3270                           
  3271                           ;usartm.c: 20:     RCSTAbits.CREN = 1;
  3272  073A  1618               	bsf	24,4	;volatile
  3273  073B                     l310:
  3274  073B  0008               	return
  3275  073C                     __end_of_usartm:
  3276                           
  3277                           	psect	text17
  3278  066C                     __ptext17:	
  3279 ;; *************** function _spiInit *****************
  3280 ;; Defined at:
  3281 ;;		line 13 in file "SSP.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  sType           1    wreg     enum E1264
  3284 ;;  sDataSample     1    0[BANK0 ] enum E1272
  3285 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  3286 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  sType           1    6[COMMON] enum E1264
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         0       3       0       0       0
  3299 ;;      Locals:         1       0       0       0       0
  3300 ;;      Temps:          0       0       0       0       0
  3301 ;;      Totals:         1       3       0       0       0
  3302 ;;Total ram usage:        4 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    2
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_Setup
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _spiInit
  3314  066C                     _spiInit:
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  3318                           ;spiInit@sType stored from wreg
  3319  066C  00F6               	movwf	spiInit@sType
  3320  066D                     l1474:
  3321                           
  3322                           ;SSP.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SSP.c: 14: {;SSP.c: 15:     TRISC5 = 0;
  3323  066D  1683               	bsf	3,5	;RP0=1, select bank1
  3324  066E  1303               	bcf	3,6	;RP1=0, select bank1
  3325  066F  1287               	bcf	7,5	;volatile
  3326                           
  3327                           ;SSP.c: 16:     if(sType & 0b00000100)
  3328  0670  1D76               	btfss	spiInit@sType,2
  3329  0671  2E73               	goto	u371
  3330  0672  2E74               	goto	u370
  3331  0673                     u371:
  3332  0673  2E7C               	goto	l1480
  3333  0674                     u370:
  3334  0674                     l1476:
  3335                           
  3336                           ;SSP.c: 17:     {;SSP.c: 18:         SSPSTAT = sTransmitEdge;
  3337  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0676  083F               	movf	spiInit@sTransmitEdge,w
  3340  0677  1683               	bsf	3,5	;RP0=1, select bank1
  3341  0678  1303               	bcf	3,6	;RP1=0, select bank1
  3342  0679  0094               	movwf	20	;volatile
  3343  067A                     l1478:
  3344                           
  3345                           ;SSP.c: 19:         TRISC3 = 1;
  3346  067A  1587               	bsf	7,3	;volatile
  3347                           
  3348                           ;SSP.c: 20:     }
  3349  067B  2E84               	goto	l222
  3350  067C                     l1480:
  3351                           
  3352                           ;SSP.c: 22:     {;SSP.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  3353  067C  1283               	bcf	3,5	;RP0=0, select bank0
  3354  067D  1303               	bcf	3,6	;RP1=0, select bank0
  3355  067E  083D               	movf	spiInit@sDataSample,w
  3356  067F  043F               	iorwf	spiInit@sTransmitEdge,w
  3357  0680  1683               	bsf	3,5	;RP0=1, select bank1
  3358  0681  1303               	bcf	3,6	;RP1=0, select bank1
  3359  0682  0094               	movwf	20	;volatile
  3360  0683                     l1482:
  3361                           
  3362                           ;SSP.c: 24:         TRISC3 = 0;
  3363  0683  1187               	bcf	7,3	;volatile
  3364  0684                     l222:	
  3365                           ;SSP.c: 25:     }
  3366                           
  3367                           
  3368                           ;SSP.c: 27:     SSPCON = sType | sClockIdle;
  3369  0684  0876               	movf	spiInit@sType,w
  3370  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0687  043E               	iorwf	spiInit@sClockIdle,w
  3373  0688  0094               	movwf	20	;volatile
  3374  0689                     l223:
  3375  0689  0008               	return
  3376  068A                     __end_of_spiInit:
  3377                           
  3378                           	psect	text18
  3379  04CD                     __ptext18:	
  3380 ;; *************** function _initOscm *****************
  3381 ;; Defined at:
  3382 ;;		line 7 in file "oscm.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  IRCF            1    wreg     unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  IRCF            1    6[COMMON] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         1       0       0       0       0
  3398 ;;      Temps:          0       2       0       0       0
  3399 ;;      Totals:         1       2       0       0       0
  3400 ;;Total ram usage:        3 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:    2
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_Setup
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function _initOscm
  3412  04CD                     _initOscm:
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _initOscm: [wreg-fsr0h+status,2+status,0]
  3416                           ;initOscm@IRCF stored from wreg
  3417  04CD  00F6               	movwf	initOscm@IRCF
  3418  04CE                     l1948:
  3419                           
  3420                           ;oscm.c: 9:     switch (IRCF){
  3421  04CE  2D05               	goto	l1952
  3422  04CF                     l285:	
  3423                           ;oscm.c: 11:         case 0:
  3424                           
  3425                           
  3426                           ;oscm.c: 12:             OSCCONbits.IRCF2 = 0;
  3427  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3428  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3429  04D1  130F               	bcf	15,6	;volatile
  3430                           
  3431                           ;oscm.c: 13:             OSCCONbits.IRCF1 = 0;
  3432  04D2  128F               	bcf	15,5	;volatile
  3433                           
  3434                           ;oscm.c: 14:             OSCCONbits.IRCF0 = 0;
  3435  04D3  120F               	bcf	15,4	;volatile
  3436                           
  3437                           ;oscm.c: 16:             break;
  3438  04D4  2D29               	goto	l286
  3439  04D5                     l287:	
  3440                           ;oscm.c: 18:         case 1:
  3441                           
  3442                           
  3443                           ;oscm.c: 19:             OSCCONbits.IRCF2 = 0;
  3444  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  3445  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  3446  04D7  130F               	bcf	15,6	;volatile
  3447                           
  3448                           ;oscm.c: 20:             OSCCONbits.IRCF1 = 0;
  3449  04D8  128F               	bcf	15,5	;volatile
  3450                           
  3451                           ;oscm.c: 21:             OSCCONbits.IRCF0 = 1;
  3452  04D9  160F               	bsf	15,4	;volatile
  3453                           
  3454                           ;oscm.c: 22:             break;
  3455  04DA  2D29               	goto	l286
  3456  04DB                     l288:	
  3457                           ;oscm.c: 24:         case 2:
  3458                           
  3459                           
  3460                           ;oscm.c: 25:             OSCCONbits.IRCF2 = 0;
  3461  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  3462  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  3463  04DD  130F               	bcf	15,6	;volatile
  3464                           
  3465                           ;oscm.c: 26:             OSCCONbits.IRCF1 = 1;
  3466  04DE  168F               	bsf	15,5	;volatile
  3467                           
  3468                           ;oscm.c: 27:             OSCCONbits.IRCF0 = 0;
  3469  04DF  120F               	bcf	15,4	;volatile
  3470                           
  3471                           ;oscm.c: 28:             break;
  3472  04E0  2D29               	goto	l286
  3473  04E1                     l289:	
  3474                           ;oscm.c: 30:         case 3:
  3475                           
  3476                           
  3477                           ;oscm.c: 31:             OSCCONbits.IRCF2 = 0;
  3478  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3479  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3480  04E3  130F               	bcf	15,6	;volatile
  3481                           
  3482                           ;oscm.c: 32:             OSCCONbits.IRCF1 = 1;
  3483  04E4  168F               	bsf	15,5	;volatile
  3484                           
  3485                           ;oscm.c: 33:             OSCCONbits.IRCF0 = 1;
  3486  04E5  160F               	bsf	15,4	;volatile
  3487                           
  3488                           ;oscm.c: 34:             break;
  3489  04E6  2D29               	goto	l286
  3490  04E7                     l290:	
  3491                           ;oscm.c: 36:         case 4:
  3492                           
  3493                           
  3494                           ;oscm.c: 37:             OSCCONbits.IRCF2 = 1;
  3495  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  3496  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  3497  04E9  170F               	bsf	15,6	;volatile
  3498                           
  3499                           ;oscm.c: 38:             OSCCONbits.IRCF1 = 0;
  3500  04EA  128F               	bcf	15,5	;volatile
  3501                           
  3502                           ;oscm.c: 39:             OSCCONbits.IRCF0 = 0;
  3503  04EB  120F               	bcf	15,4	;volatile
  3504                           
  3505                           ;oscm.c: 40:             break;
  3506  04EC  2D29               	goto	l286
  3507  04ED                     l291:	
  3508                           ;oscm.c: 42:         case 5:
  3509                           
  3510                           
  3511                           ;oscm.c: 43:             OSCCONbits.IRCF2 = 1;
  3512  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  3513  04EE  1303               	bcf	3,6	;RP1=0, select bank1
  3514  04EF  170F               	bsf	15,6	;volatile
  3515                           
  3516                           ;oscm.c: 44:             OSCCONbits.IRCF1 = 0;
  3517  04F0  128F               	bcf	15,5	;volatile
  3518                           
  3519                           ;oscm.c: 45:             OSCCONbits.IRCF0 = 1;
  3520  04F1  160F               	bsf	15,4	;volatile
  3521                           
  3522                           ;oscm.c: 46:             break;
  3523  04F2  2D29               	goto	l286
  3524  04F3                     l292:	
  3525                           ;oscm.c: 49:         case 6:
  3526                           
  3527                           
  3528                           ;oscm.c: 50:             OSCCONbits.IRCF2 = 1;
  3529  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  3530  04F4  1303               	bcf	3,6	;RP1=0, select bank1
  3531  04F5  170F               	bsf	15,6	;volatile
  3532                           
  3533                           ;oscm.c: 51:             OSCCONbits.IRCF1 = 1;
  3534  04F6  168F               	bsf	15,5	;volatile
  3535                           
  3536                           ;oscm.c: 52:             OSCCONbits.IRCF0 = 0;
  3537  04F7  120F               	bcf	15,4	;volatile
  3538                           
  3539                           ;oscm.c: 53:             break;
  3540  04F8  2D29               	goto	l286
  3541  04F9                     l293:	
  3542                           ;oscm.c: 55:         case 7:
  3543                           
  3544                           
  3545                           ;oscm.c: 56:             OSCCONbits.IRCF2 = 1;
  3546  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  3547  04FA  1303               	bcf	3,6	;RP1=0, select bank1
  3548  04FB  170F               	bsf	15,6	;volatile
  3549                           
  3550                           ;oscm.c: 57:             OSCCONbits.IRCF1 = 1;
  3551  04FC  168F               	bsf	15,5	;volatile
  3552                           
  3553                           ;oscm.c: 58:             OSCCONbits.IRCF0 = 1;
  3554  04FD  160F               	bsf	15,4	;volatile
  3555                           
  3556                           ;oscm.c: 59:             break;
  3557  04FE  2D29               	goto	l286
  3558  04FF                     l294:	
  3559                           ;oscm.c: 64:         default:
  3560                           
  3561                           
  3562                           ;oscm.c: 65:             OSCCONbits.IRCF2 = 1;
  3563  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  3564  0500  1303               	bcf	3,6	;RP1=0, select bank1
  3565  0501  170F               	bsf	15,6	;volatile
  3566                           
  3567                           ;oscm.c: 66:             OSCCONbits.IRCF1 = 1;
  3568  0502  168F               	bsf	15,5	;volatile
  3569                           
  3570                           ;oscm.c: 67:             OSCCONbits.IRCF0 = 0;
  3571  0503  120F               	bcf	15,4	;volatile
  3572                           
  3573                           ;oscm.c: 68:             break;
  3574  0504  2D29               	goto	l286
  3575  0505                     l1952:
  3576  0505  0876               	movf	initOscm@IRCF,w
  3577  0506  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0507  1303               	bcf	3,6	;RP1=0, select bank0
  3579  0508  00BD               	movwf	??_initOscm
  3580  0509  01BE               	clrf	??_initOscm+1
  3581                           
  3582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3583                           ; Switch size 1, requested type "simple"
  3584                           ; Number of cases is 1, Range of values is 0 to 0
  3585                           ; switch strategies available:
  3586                           ; Name         Instructions Cycles
  3587                           ; simple_byte            4     3 (average)
  3588                           ; direct_byte           11     8 (fixed)
  3589                           ; jumptable            260     6 (fixed)
  3590                           ;	Chosen strategy is simple_byte
  3591  050A  083E               	movf	??_initOscm+1,w
  3592  050B  3A00               	xorlw	0	; case 0
  3593  050C  1903               	skipnz
  3594  050D  2D0F               	goto	l2216
  3595  050E  2CFF               	goto	l294
  3596  050F                     l2216:
  3597                           
  3598                           ; Switch size 1, requested type "simple"
  3599                           ; Number of cases is 8, Range of values is 0 to 7
  3600                           ; switch strategies available:
  3601                           ; Name         Instructions Cycles
  3602                           ; simple_byte           25    13 (average)
  3603                           ; direct_byte           32     8 (fixed)
  3604                           ; jumptable            260     6 (fixed)
  3605                           ;	Chosen strategy is simple_byte
  3606  050F  083D               	movf	??_initOscm,w
  3607  0510  3A00               	xorlw	0	; case 0
  3608  0511  1903               	skipnz
  3609  0512  2CCF               	goto	l285
  3610  0513  3A01               	xorlw	1	; case 1
  3611  0514  1903               	skipnz
  3612  0515  2CD5               	goto	l287
  3613  0516  3A03               	xorlw	3	; case 2
  3614  0517  1903               	skipnz
  3615  0518  2CDB               	goto	l288
  3616  0519  3A01               	xorlw	1	; case 3
  3617  051A  1903               	skipnz
  3618  051B  2CE1               	goto	l289
  3619  051C  3A07               	xorlw	7	; case 4
  3620  051D  1903               	skipnz
  3621  051E  2CE7               	goto	l290
  3622  051F  3A01               	xorlw	1	; case 5
  3623  0520  1903               	skipnz
  3624  0521  2CED               	goto	l291
  3625  0522  3A03               	xorlw	3	; case 6
  3626  0523  1903               	skipnz
  3627  0524  2CF3               	goto	l292
  3628  0525  3A01               	xorlw	1	; case 7
  3629  0526  1903               	skipnz
  3630  0527  2CF9               	goto	l293
  3631  0528  2CFF               	goto	l294
  3632  0529                     l286:
  3633                           
  3634                           ;oscm.c: 72:     OSCCONbits.SCS = 1;
  3635  0529  140F               	bsf	15,0	;volatile
  3636  052A                     l295:
  3637  052A  0008               	return
  3638  052B                     __end_of_initOscm:
  3639                           
  3640                           	psect	text19
  3641  06F7                     __ptext19:	
  3642 ;; *************** function _Lcd_Init *****************
  3643 ;; Defined at:
  3644 ;;		line 41 in file "LCDM.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0, pclath, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3658 ;;      Params:         0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    4
  3665 ;; This function calls:
  3666 ;;		_Lcd_Cmd
  3667 ;; This function is called by:
  3668 ;;		_Setup
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function _Lcd_Init
  3674  06F7                     _Lcd_Init:
  3675  06F7                     l1958:	
  3676                           ;incstack = 0
  3677                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3678                           
  3679                           
  3680                           ;LCDM.c: 45:     Lcd_Cmd(0x38);
  3681  06F7  3038               	movlw	56
  3682  06F8  120A  118A  26A8  120A  118A  	fcall	_Lcd_Cmd
  3683                           
  3684                           ;LCDM.c: 46:     Lcd_Cmd(0x0C);
  3685  06FD  300C               	movlw	12
  3686  06FE  120A  118A  26A8  120A  118A  	fcall	_Lcd_Cmd
  3687                           
  3688                           ;LCDM.c: 47:     Lcd_Cmd(0x06);
  3689  0703  3006               	movlw	6
  3690  0704  120A  118A  26A8  120A  118A  	fcall	_Lcd_Cmd
  3691                           
  3692                           ;LCDM.c: 48:     Lcd_Cmd(0x80);
  3693  0709  3080               	movlw	128
  3694  070A  120A  118A  26A8  120A  118A  	fcall	_Lcd_Cmd
  3695  070F                     l264:
  3696  070F  0008               	return
  3697  0710                     __end_of_Lcd_Init:
  3698                           
  3699                           	psect	text20
  3700  06A8                     __ptext20:	
  3701 ;; *************** function _Lcd_Cmd *****************
  3702 ;; Defined at:
  3703 ;;		line 16 in file "LCDM.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  a               1    wreg     unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  a               1    2[BANK0 ] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, pclath, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3717 ;;      Params:         0       0       0       0       0
  3718 ;;      Locals:         0       1       0       0       0
  3719 ;;      Temps:          0       2       0       0       0
  3720 ;;      Totals:         0       3       0       0       0
  3721 ;;Total ram usage:        3 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    3
  3724 ;; This function calls:
  3725 ;;		_Lcd_Port
  3726 ;; This function is called by:
  3727 ;;		_Setup
  3728 ;;		_Lcd_Set_Cursor
  3729 ;;		_Lcd_Init
  3730 ;;		_Lcd_Clear
  3731 ;;		_Lcd_Shift_Right
  3732 ;;		_Lcd_Shift_Left
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function _Lcd_Cmd
  3738  06A8                     _Lcd_Cmd:
  3739                           
  3740                           ;incstack = 0
  3741                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3742                           ;Lcd_Cmd@a stored from wreg
  3743  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  3744  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  3745  06AA  00BF               	movwf	Lcd_Cmd@a
  3746  06AB                     l1918:
  3747                           
  3748                           ;LCDM.c: 17:     Lcd_Port(a);
  3749  06AB  083F               	movf	Lcd_Cmd@a,w
  3750  06AC  120A  118A  275A  120A  118A  	fcall	_Lcd_Port
  3751  06B1                     l1920:
  3752                           
  3753                           ;LCDM.c: 18:     PORTEbits.RE1 = 0;
  3754  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  3755  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  3756  06B3  1089               	bcf	9,1	;volatile
  3757  06B4                     l1922:
  3758                           
  3759                           ;LCDM.c: 20:     PORTEbits.RE0 = 1;
  3760  06B4  1409               	bsf	9,0	;volatile
  3761  06B5                     l1924:
  3762                           
  3763                           ;LCDM.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3764  06B5  3007               	movlw	7
  3765  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3766  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3767  06B8  00BE               	movwf	??_Lcd_Cmd+1
  3768  06B9  307C               	movlw	124
  3769  06BA  00BD               	movwf	??_Lcd_Cmd
  3770  06BB                     u867:
  3771  06BB  0BBD               	decfsz	??_Lcd_Cmd,f
  3772  06BC  2EBB               	goto	u867
  3773  06BD  0BBE               	decfsz	??_Lcd_Cmd+1,f
  3774  06BE  2EBB               	goto	u867
  3775  06BF  0000               	nop
  3776  06C0                     l1926:
  3777                           
  3778                           ;LCDM.c: 22:     PORTEbits.RE0 = 0;
  3779  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  3780  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  3781  06C2  1009               	bcf	9,0	;volatile
  3782  06C3                     l252:
  3783  06C3  0008               	return
  3784  06C4                     __end_of_Lcd_Cmd:
  3785                           
  3786                           	psect	text21
  3787  075A                     __ptext21:	
  3788 ;; *************** function _Lcd_Port *****************
  3789 ;; Defined at:
  3790 ;;		line 12 in file "LCDM.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  a               1    wreg     unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  a               1    6[COMMON] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         0       0       0       0       0
  3805 ;;      Locals:         1       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0
  3807 ;;      Totals:         1       0       0       0       0
  3808 ;;Total ram usage:        1 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    2
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_Lcd_Cmd
  3815 ;;		_Lcd_Write_Char
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function _Lcd_Port
  3821  075A                     _Lcd_Port:
  3822                           
  3823                           ;incstack = 0
  3824                           ; Regs used in _Lcd_Port: [wreg]
  3825                           ;Lcd_Port@a stored from wreg
  3826  075A  00F6               	movwf	Lcd_Port@a
  3827  075B                     l1904:
  3828                           
  3829                           ;LCDM.c: 13:     PORTA = a;
  3830  075B  0876               	movf	Lcd_Port@a,w
  3831  075C  1283               	bcf	3,5	;RP0=0, select bank0
  3832  075D  1303               	bcf	3,6	;RP1=0, select bank0
  3833  075E  0085               	movwf	5	;volatile
  3834  075F                     l249:
  3835  075F  0008               	return
  3836  0760                     __end_of_Lcd_Port:
  3837                           
  3838                           	psect	text22
  3839  068A                     __ptext22:	
  3840 ;; *************** function _ISR *****************
  3841 ;; Defined at:
  3842 ;;		line 89 in file "MASTER.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3856 ;;      Params:         0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0
  3858 ;;      Temps:          4       0       0       0       0
  3859 ;;      Totals:         4       0       0       0       0
  3860 ;;Total ram usage:        4 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    1
  3863 ;; This function calls:
  3864 ;;		_mandar
  3865 ;; This function is called by:
  3866 ;;		Interrupt level 1
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           
  3871                           ;psect for function _ISR
  3872  068A                     _ISR:
  3873  068A                     i1l1750:
  3874  068A  1E0C               	btfss	12,4	;volatile
  3875  068B  2E8D               	goto	u63_21
  3876  068C  2E8E               	goto	u63_20
  3877  068D                     u63_21:
  3878  068D  2E9D               	goto	i1l138
  3879  068E                     u63_20:
  3880  068E                     i1l1752:
  3881  068E  120A  118A  2272  120A  118A  	fcall	_mandar
  3882  0693                     i1l1754:
  3883  0693  3001               	movlw	1
  3884  0694  00FF               	movwf	btemp+1
  3885  0695  087F               	movf	btemp+1,w
  3886  0696  07F7               	addwf	_SEND,f
  3887  0697                     i1l1756:
  3888  0697  1683               	bsf	3,5	;RP0=1, select bank1
  3889  0698  1303               	bcf	3,6	;RP1=0, select bank1
  3890  0699  120C               	bcf	12,4	;volatile
  3891  069A                     i1l1758:
  3892  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3893  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3894  069C  120C               	bcf	12,4	;volatile
  3895  069D                     i1l138:
  3896  069D  0875               	movf	??_ISR+3,w
  3897  069E  00FF               	movwf	btemp+1
  3898  069F  0874               	movf	??_ISR+2,w
  3899  06A0  008A               	movwf	10
  3900  06A1  0873               	movf	??_ISR+1,w
  3901  06A2  0084               	movwf	4
  3902  06A3  0E72               	swapf	??_ISR^(0+4294967168),w
  3903  06A4  0083               	movwf	3
  3904  06A5  0EFE               	swapf	btemp,f
  3905  06A6  0E7E               	swapf	btemp,w
  3906  06A7  0009               	retfie
  3907  06A8                     __end_of_ISR:
  3908                           
  3909                           	psect	intentry
  3910  0004                     __pintentry:	
  3911                           ;incstack = 0
  3912                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3913                           
  3914  0004                     interrupt_function:
  3915  007E                     saved_w	set	btemp
  3916  0004  00FE               	movwf	btemp
  3917  0005  0E03               	swapf	3,w
  3918  0006  00F2               	movwf	??_ISR
  3919  0007  0804               	movf	4,w
  3920  0008  00F3               	movwf	??_ISR+1
  3921  0009  080A               	movf	10,w
  3922  000A  00F4               	movwf	??_ISR+2
  3923  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3924  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3925  000D  087F               	movf	btemp+1,w
  3926  000E  00F5               	movwf	??_ISR+3
  3927  000F  120A  118A  2E8A   	ljmp	_ISR
  3928                           
  3929                           	psect	text23
  3930  0272                     __ptext23:	
  3931 ;; *************** function _mandar *****************
  3932 ;; Defined at:
  3933 ;;		line 295 in file "MASTER.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0
  3949 ;;      Temps:          2       0       0       0       0
  3950 ;;      Totals:         2       0       0       0       0
  3951 ;;Total ram usage:        2 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_ISR
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           
  3961                           ;psect for function _mandar
  3962  0272                     _mandar:
  3963  0272                     i1l1588:	
  3964                           ;incstack = 0
  3965                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  3966                           
  3967                           
  3968                           ;MASTER.c: 296:     switch (SEND) {
  3969  0272  2AEC               	goto	i1l1656
  3970  0273                     i1l1590:
  3971                           
  3972                           ;MASTER.c: 299:             TXREG = 0x20;
  3973  0273  3020               	movlw	32
  3974  0274  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0275  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0276  0099               	movwf	25	;volatile
  3977                           
  3978                           ;MASTER.c: 300:             break;
  3979  0277  2B38               	goto	i1l200
  3980  0278                     i1l1592:
  3981                           
  3982                           ;MASTER.c: 302:             TXREG = 0x28;
  3983  0278  3028               	movlw	40
  3984  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3985  027A  1303               	bcf	3,6	;RP1=0, select bank0
  3986  027B  0099               	movwf	25	;volatile
  3987                           
  3988                           ;MASTER.c: 303:             break;
  3989  027C  2B38               	goto	i1l200
  3990  027D                     i1l1594:
  3991                           
  3992                           ;MASTER.c: 306:             TXREG = C1;
  3993  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3994  027E  1303               	bcf	3,6	;RP1=0, select bank0
  3995  027F  0836               	movf	_C1,w
  3996  0280  0099               	movwf	25	;volatile
  3997                           
  3998                           ;MASTER.c: 307:             break;
  3999  0281  2B38               	goto	i1l200
  4000  0282                     i1l1596:
  4001                           
  4002                           ;MASTER.c: 310:             TXREG = 0x2E;
  4003  0282  302E               	movlw	46
  4004  0283  1283               	bcf	3,5	;RP0=0, select bank0
  4005  0284  1303               	bcf	3,6	;RP1=0, select bank0
  4006  0285  0099               	movwf	25	;volatile
  4007                           
  4008                           ;MASTER.c: 311:             break;
  4009  0286  2B38               	goto	i1l200
  4010  0287                     i1l1598:
  4011                           
  4012                           ;MASTER.c: 313:             TXREG = D1;
  4013  0287  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0288  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0289  0835               	movf	_D1,w
  4016  028A  0099               	movwf	25	;volatile
  4017                           
  4018                           ;MASTER.c: 314:             break;
  4019  028B  2B38               	goto	i1l200
  4020  028C                     i1l1600:
  4021                           
  4022                           ;MASTER.c: 316:             TXREG = U1;
  4023  028C  1283               	bcf	3,5	;RP0=0, select bank0
  4024  028D  1303               	bcf	3,6	;RP1=0, select bank0
  4025  028E  0834               	movf	_U1,w
  4026  028F  0099               	movwf	25	;volatile
  4027                           
  4028                           ;MASTER.c: 317:             break;
  4029  0290  2B38               	goto	i1l200
  4030  0291                     i1l1602:
  4031                           
  4032                           ;MASTER.c: 319:             TXREG = 0x29;
  4033  0291  3029               	movlw	41
  4034  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0294  0099               	movwf	25	;volatile
  4037                           
  4038                           ;MASTER.c: 320:             break;
  4039  0295  2B38               	goto	i1l200
  4040  0296                     i1l1604:
  4041                           
  4042                           ;MASTER.c: 323:             TXREG = 0x2C;
  4043  0296  302C               	movlw	44
  4044  0297  1283               	bcf	3,5	;RP0=0, select bank0
  4045  0298  1303               	bcf	3,6	;RP1=0, select bank0
  4046  0299  0099               	movwf	25	;volatile
  4047                           
  4048                           ;MASTER.c: 324:             break;
  4049  029A  2B38               	goto	i1l200
  4050  029B                     i1l1610:
  4051                           
  4052                           ;MASTER.c: 335:             TXREG = CO1;
  4053  029B  1283               	bcf	3,5	;RP0=0, select bank0
  4054  029C  1303               	bcf	3,6	;RP1=0, select bank0
  4055  029D  082F               	movf	_CO1,w
  4056  029E  0099               	movwf	25	;volatile
  4057                           
  4058                           ;MASTER.c: 336:             break;
  4059  029F  2B38               	goto	i1l200
  4060  02A0                     i1l1612:
  4061                           
  4062                           ;MASTER.c: 339:             TXREG = CO2;
  4063  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  4064  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  4065  02A2  082E               	movf	_CO2,w
  4066  02A3  0099               	movwf	25	;volatile
  4067                           
  4068                           ;MASTER.c: 340:             break;
  4069  02A4  2B38               	goto	i1l200
  4070  02A5                     i1l1614:
  4071                           
  4072                           ;MASTER.c: 342:             TXREG = CO3;
  4073  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  4074  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  4075  02A7  082D               	movf	_CO3,w
  4076  02A8  0099               	movwf	25	;volatile
  4077                           
  4078                           ;MASTER.c: 343:             break;
  4079  02A9  2B38               	goto	i1l200
  4080  02AA                     i1l1624:
  4081                           
  4082                           ;MASTER.c: 359:             if (term1 >= 68) {
  4083  02AA  3044               	movlw	68
  4084  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  4085  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  4086  02AD  022C               	subwf	_term1,w
  4087  02AE  1C03               	skipc
  4088  02AF  2AB1               	goto	u55_21
  4089  02B0  2AB2               	goto	u55_20
  4090  02B1                     u55_21:
  4091  02B1  2AB5               	goto	i1l1628
  4092  02B2                     u55_20:
  4093  02B2                     i1l1626:
  4094                           
  4095                           ;MASTER.c: 360:                 TXREG = T1;
  4096  02B2  0826               	movf	_T1,w
  4097  02B3  0099               	movwf	25	;volatile
  4098                           
  4099                           ;MASTER.c: 361:             } else if (term1 < 68) {
  4100  02B4  2B38               	goto	i1l200
  4101  02B5                     i1l1628:
  4102  02B5  3044               	movlw	68
  4103  02B6  022C               	subwf	_term1,w
  4104  02B7  1803               	skipnc
  4105  02B8  2ABA               	goto	u56_21
  4106  02B9  2ABB               	goto	u56_20
  4107  02BA                     u56_21:
  4108  02BA  2B38               	goto	i1l200
  4109  02BB                     u56_20:
  4110  02BB                     i1l1630:
  4111                           
  4112                           ;MASTER.c: 362:                 TXREG = 45;
  4113  02BB  302D               	movlw	45
  4114  02BC  0099               	movwf	25	;volatile
  4115  02BD  2B38               	goto	i1l200
  4116  02BE                     i1l1632:
  4117                           
  4118                           ;MASTER.c: 366:             if (term1 >= 68) {
  4119  02BE  3044               	movlw	68
  4120  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  4121  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  4122  02C1  022C               	subwf	_term1,w
  4123  02C2  1C03               	skipc
  4124  02C3  2AC5               	goto	u57_21
  4125  02C4  2AC6               	goto	u57_20
  4126  02C5                     u57_21:
  4127  02C5  2AC9               	goto	i1l1636
  4128  02C6                     u57_20:
  4129  02C6                     i1l1634:
  4130                           
  4131                           ;MASTER.c: 367:                 TXREG = T2;
  4132  02C6  0825               	movf	_T2,w
  4133  02C7  0099               	movwf	25	;volatile
  4134                           
  4135                           ;MASTER.c: 368:             } else if (term1 < 68) {
  4136  02C8  2B38               	goto	i1l200
  4137  02C9                     i1l1636:
  4138  02C9  3044               	movlw	68
  4139  02CA  022C               	subwf	_term1,w
  4140  02CB  1803               	skipnc
  4141  02CC  2ACE               	goto	u58_21
  4142  02CD  2ACF               	goto	u58_20
  4143  02CE                     u58_21:
  4144  02CE  2B38               	goto	i1l200
  4145  02CF                     u58_20:
  4146  02CF                     i1l1638:
  4147                           
  4148                           ;MASTER.c: 369:                 TXREG = TN1;
  4149  02CF  0823               	movf	_TN1,w
  4150  02D0  0099               	movwf	25	;volatile
  4151  02D1  2B38               	goto	i1l200
  4152  02D2                     i1l1640:
  4153                           
  4154                           ;MASTER.c: 374:             if (term1 >= 68) {
  4155  02D2  3044               	movlw	68
  4156  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  4157  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  4158  02D5  022C               	subwf	_term1,w
  4159  02D6  1C03               	skipc
  4160  02D7  2AD9               	goto	u59_21
  4161  02D8  2ADA               	goto	u59_20
  4162  02D9                     u59_21:
  4163  02D9  2ADD               	goto	i1l1644
  4164  02DA                     u59_20:
  4165  02DA                     i1l1642:
  4166                           
  4167                           ;MASTER.c: 375:                 TXREG = T3;
  4168  02DA  0824               	movf	_T3,w
  4169  02DB  0099               	movwf	25	;volatile
  4170                           
  4171                           ;MASTER.c: 376:             } else if (term1 < 68) {
  4172  02DC  2B38               	goto	i1l200
  4173  02DD                     i1l1644:
  4174  02DD  3044               	movlw	68
  4175  02DE  022C               	subwf	_term1,w
  4176  02DF  1803               	skipnc
  4177  02E0  2AE2               	goto	u60_21
  4178  02E1  2AE3               	goto	u60_20
  4179  02E2                     u60_21:
  4180  02E2  2B38               	goto	i1l200
  4181  02E3                     u60_20:
  4182  02E3                     i1l1646:
  4183                           
  4184                           ;MASTER.c: 377:                 TXREG = TN2;
  4185  02E3  0822               	movf	_TN2,w
  4186  02E4  0099               	movwf	25	;volatile
  4187  02E5  2B38               	goto	i1l200
  4188  02E6                     i1l1650:
  4189                           
  4190                           ;MASTER.c: 386:             TXREG = 0x0D;
  4191  02E6  300D               	movlw	13
  4192  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  4193  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  4194  02E9  0099               	movwf	25	;volatile
  4195  02EA                     i1l1652:
  4196                           
  4197                           ;MASTER.c: 387:             SEND = 0;
  4198  02EA  01F7               	clrf	_SEND
  4199                           
  4200                           ;MASTER.c: 388:             break;
  4201  02EB  2B38               	goto	i1l200
  4202  02EC                     i1l1656:
  4203  02EC  0877               	movf	_SEND,w
  4204  02ED  00F0               	movwf	??_mandar
  4205  02EE  01F1               	clrf	??_mandar+1
  4206                           
  4207                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4208                           ; Switch size 1, requested type "simple"
  4209                           ; Number of cases is 1, Range of values is 0 to 0
  4210                           ; switch strategies available:
  4211                           ; Name         Instructions Cycles
  4212                           ; simple_byte            4     3 (average)
  4213                           ; direct_byte           11     8 (fixed)
  4214                           ; jumptable            260     6 (fixed)
  4215                           ;	Chosen strategy is simple_byte
  4216  02EF  0871               	movf	??_mandar+1,w
  4217  02F0  3A00               	xorlw	0	; case 0
  4218  02F1  1903               	skipnz
  4219  02F2  2AF4               	goto	i1l2218
  4220  02F3  2B38               	goto	i1l200
  4221  02F4                     i1l2218:
  4222                           
  4223                           ; Switch size 1, requested type "simple"
  4224                           ; Number of cases is 22, Range of values is 0 to 21
  4225                           ; switch strategies available:
  4226                           ; Name         Instructions Cycles
  4227                           ; simple_byte           67    34 (average)
  4228                           ; direct_byte           74     8 (fixed)
  4229                           ; jumptable            260     6 (fixed)
  4230                           ;	Chosen strategy is simple_byte
  4231  02F4  0870               	movf	??_mandar,w
  4232  02F5  3A00               	xorlw	0	; case 0
  4233  02F6  1903               	skipnz
  4234  02F7  2A73               	goto	i1l1590
  4235  02F8  3A01               	xorlw	1	; case 1
  4236  02F9  1903               	skipnz
  4237  02FA  2A78               	goto	i1l1592
  4238  02FB  3A03               	xorlw	3	; case 2
  4239  02FC  1903               	skipnz
  4240  02FD  2A7D               	goto	i1l1594
  4241  02FE  3A01               	xorlw	1	; case 3
  4242  02FF  1903               	skipnz
  4243  0300  2A82               	goto	i1l1596
  4244  0301  3A07               	xorlw	7	; case 4
  4245  0302  1903               	skipnz
  4246  0303  2A87               	goto	i1l1598
  4247  0304  3A01               	xorlw	1	; case 5
  4248  0305  1903               	skipnz
  4249  0306  2A8C               	goto	i1l1600
  4250  0307  3A03               	xorlw	3	; case 6
  4251  0308  1903               	skipnz
  4252  0309  2A91               	goto	i1l1602
  4253  030A  3A01               	xorlw	1	; case 7
  4254  030B  1903               	skipnz
  4255  030C  2A96               	goto	i1l1604
  4256  030D  3A0F               	xorlw	15	; case 8
  4257  030E  1903               	skipnz
  4258  030F  2A73               	goto	i1l1590
  4259  0310  3A01               	xorlw	1	; case 9
  4260  0311  1903               	skipnz
  4261  0312  2A78               	goto	i1l1592
  4262  0313  3A03               	xorlw	3	; case 10
  4263  0314  1903               	skipnz
  4264  0315  2A9B               	goto	i1l1610
  4265  0316  3A01               	xorlw	1	; case 11
  4266  0317  1903               	skipnz
  4267  0318  2AA0               	goto	i1l1612
  4268  0319  3A07               	xorlw	7	; case 12
  4269  031A  1903               	skipnz
  4270  031B  2AA5               	goto	i1l1614
  4271  031C  3A01               	xorlw	1	; case 13
  4272  031D  1903               	skipnz
  4273  031E  2A91               	goto	i1l1602
  4274  031F  3A03               	xorlw	3	; case 14
  4275  0320  1903               	skipnz
  4276  0321  2A96               	goto	i1l1604
  4277  0322  3A01               	xorlw	1	; case 15
  4278  0323  1903               	skipnz
  4279  0324  2A73               	goto	i1l1590
  4280  0325  3A1F               	xorlw	31	; case 16
  4281  0326  1903               	skipnz
  4282  0327  2A78               	goto	i1l1592
  4283  0328  3A01               	xorlw	1	; case 17
  4284  0329  1903               	skipnz
  4285  032A  2AAA               	goto	i1l1624
  4286  032B  3A03               	xorlw	3	; case 18
  4287  032C  1903               	skipnz
  4288  032D  2ABE               	goto	i1l1632
  4289  032E  3A01               	xorlw	1	; case 19
  4290  032F  1903               	skipnz
  4291  0330  2AD2               	goto	i1l1640
  4292  0331  3A07               	xorlw	7	; case 20
  4293  0332  1903               	skipnz
  4294  0333  2A91               	goto	i1l1602
  4295  0334  3A01               	xorlw	1	; case 21
  4296  0335  1903               	skipnz
  4297  0336  2AE6               	goto	i1l1650
  4298  0337  2B38               	goto	i1l200
  4299  0338                     i1l200:
  4300  0338  0008               	return
  4301  0339                     __end_of_mandar:
  4302  007E                     btemp	set	126	;btemp
  4303  007E                     wtemp0	set	126
  4304                           
  4305                           	psect	config
  4306                           
  4307                           ;Config register CONFIG1 @ 0x2007
  4308                           ;	Oscillator Selection bits
  4309                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4310                           ;	Watchdog Timer Enable bit
  4311                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4312                           ;	Power-up Timer Enable bit
  4313                           ;	PWRTE = OFF, PWRT disabled
  4314                           ;	RE3/MCLR pin function select bit
  4315                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4316                           ;	Code Protection bit
  4317                           ;	CP = OFF, Program memory code protection is disabled
  4318                           ;	Data Code Protection bit
  4319                           ;	CPD = OFF, Data memory code protection is disabled
  4320                           ;	Brown Out Reset Selection bits
  4321                           ;	BOREN = OFF, BOR disabled
  4322                           ;	Internal External Switchover bit
  4323                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4324                           ;	Fail-Safe Clock Monitor Enabled bit
  4325                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4326                           ;	Low Voltage Programming Enable bit
  4327                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4328                           ;	In-Circuit Debugger Mode bit
  4329                           ;	DEBUG = 0x1, unprogrammed default
  4330  2007                     	org	8199
  4331  2007  20D4               	dw	8404
  4332                           
  4333                           ;Config register CONFIG2 @ 0x2008
  4334                           ;	Brown-out Reset Selection bit
  4335                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4336                           ;	Flash Program Memory Self Write Enable bits
  4337                           ;	WRT = OFF, Write protection off
  4338  2008                     	org	8200
  4339  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80     23      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_spiWrite
    _map3->___bmul
    _Lcd_Write_Char->_Lcd_Port
    _map2->___bmul
    _map->___bmul
    _Setup->_initOscm
    _Setup->_spiInit
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    _ISR->_mandar

Critical Paths under _main in BANK0

    _main->_map
    _map3->___awdiv
    _temperatura2->_Lcd_Set_Cursor
    _temperatura->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _map2->___awdiv
    _map->___awdiv
    ___awdiv->___wmul
    _Setup->_Lcd_Cmd
    _Setup->_spiInit
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   19039
                                             22 BANK0      1     1      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _Setup
                                _map
                               _map2
                               _map3
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _map3                                                 2     2      0    8320
                                             14 BANK0      2     2      0
                            ___awdiv
                             ___bmul
                             ___wmul
                        _temperatura
                       _temperatura2
 ---------------------------------------------------------------------------------
 (2) _temperatura2                                         0     0      0    2164
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _temperatura                                          0     0      0    2164
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     3     3      0     408
                                              2 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       2     2      0      62
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       3     2      1    1694
                                              3 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _map2                                                 2     2      0    3992
                                             14 BANK0      2     2      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _map                                                  8     8      0    4026
                                             14 BANK0      8     8      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     624
                                              6 COMMON     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1972
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     515
                            _Lcd_Cmd
                           _Lcd_Init
                           _initOscm
                            _spiInit
                             _usartm
 ---------------------------------------------------------------------------------
 (2) _usartm                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              6 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _initOscm                                             3     3      0      31
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0      62
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      31
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0       0
                                              2 COMMON     4     4      0
                             _mandar
 ---------------------------------------------------------------------------------
 (7) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
     _initOscm
     _spiInit
     _usartm
   _map
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _map2
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _map3
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _temperatura
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _temperatura2
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
   _spiRead
     _spiReceiveWait
   _spiWrite

 _ISR (ROOT)
   _mandar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      34       5       65.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3C      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Feb 17 09:35:33 2021

                        pc 0002             ___bmul@product 003D                _SSPSTATbits 0094  
                       _C1 0036                         _D1 0035                         _T1 0026  
                       _T2 0025                         _U1 0034                         _T3 0024  
             ___awdiv@sign 0048                         fsr 0004        ___wmul@multiplicand 003F  
                      l203 0579                        l222 0684                        l310 073B  
                      l206 05F5                        l223 0689                        l152 05BA  
                      l240 0744                        l232 0759                        l226 074D  
                      l155 03F5                        l252 06C3                        l164 0271  
                      l261 066B                        l229 0753                        l422 0726  
                      l158 0463                        l264 070F                        l249 075F  
                      l273 061E                        l290 04E7                        l291 04ED  
                      l267 06F6                        l292 04F3                        l293 04F9  
                      l285 04CF                        l294 04FF                        l286 0529  
                      l295 052A                        l287 04D5                        l288 04DB  
                      l289 04E1                        _CO1 002F                        l396 062D  
                      _CO2 002E                        l549 04CC                        _CP1 0039  
                      _CO3 002D                        l398 0645                        _DP1 0038  
                      u510 04AA                        u430 0718                        u511 04A9  
                      u431 0717                        u440 0725                        u505 049A  
                      u441 0724                        u370 0674                        u530 04BE  
                      u450 046B                        u371 0673                        u531 04BD  
                      u515 04A6                        u451 046A                        u540 04C3  
                      u460 0476                        u700 0627                        u380 0753  
                      _ISR 068A                        u541 04C2                        u525 04B2  
                      u461 0475                        u701 0626                        u381 0752  
                      _TN1 0023                        u470 0487                        _TN2 0022  
                      u471 0486                        u490 0499                        u730 0641  
                      u491 0498                        u731 0640                        u715 062E  
                      u740 017A                        u485 048B                        u725 0635  
                      u741 0179                        _UP1 0037                        u670 064E  
                      u750 0216                        u671 064D                        u751 0215  
                      u807 0098                        u680 0660                        u760 007B  
                      u681 065F                        u817 00AA                        u761 007A  
                      u690 061E                        u770 00A5                        u691 061D  
                      u827 00C2                        u771 00A4                        u780 00CF  
                      u837 00D4                        u781 00CE                        u847 00EC  
                      u857 06EF                        u867 06BB                        u797 0080  
                      _map 0339                        fsr0 0004                        indf 0000  
                     ?_ISR 0070                       l2010 058E                       l2002 057A  
                     l2020 05A6                       l2012 0594                       l2004 057E  
                     l2100 0071                       l2030 05AE                       l2022 05A7  
                     l2014 059F                       l2006 0584                       l2110 0094  
                     l2102 007B                       l2040 05B4                       l2032 05AF  
                     l2024 05A8                       l2016 05A2                       l2008 0589  
                     l2120 00AE                       l2112 009C                       l2104 007C  
                     l2042 05B7                       l2034 05B0                       l2026 05A9  
                     l2018 05A3                       l2050 03F0                       l2130 00CF  
                     l2122 00B4                       l2106 0084                       l2114 009F  
                     l2036 05B2                       l2028 05AA                       l2044 0339  
                     l2052 03F6                       l2060 0172                       l2140 00F0  
                     l2132 00D0                       l2124 00BE                       l2116 00A5  
                     l2108 008A                       l2038 05B3                       l2046 03E6  
                     l2054 0454                       l2070 020A                       l2062 017A  
                     l2150 0110                       l2142 00F3                       l2134 00D8  
                     l2126 00C6                       l2118 00A6                       l2216 050F  
                     l2048 03EB                       l2056 0459                       l2080 026C  
                     l2064 01FB                       l2072 0210                       l1512 074D  
                     l2160 013E                       l2152 0116                       l2136 00DE  
                     l2144 00F4                       l2128 00C9                       l1530 0714  
                     l2058 045E                       l2074 0216                       l2066 0200  
                     l2162 0146                       l2154 011E                       l2146 00FC  
                     l2138 00E8                       l2090 004A                       l2082 0023  
                     l1460 0732                       l1540 0725                       l1532 0718  
                     l2076 0262                       l2068 0205                       l2164 0152  
                     l2156 012A                       l2148 0104                       l2092 005C  
                     l2084 0028                       l1470 073A                       l1462 0734  
                     l1550 0470                       l1534 071C                       l2078 0267  
                     l2166 015A                       l2158 0132                       l2094 0062  
                     l2086 0032                       l1480 067C                       l1464 0735  
                     l1456 0727                       l1560 0481                       l1552 0472  
                     l1544 0464                       l1536 071E                       l1528 0713  
                     l2168 0166                       l2096 0067                       l2088 0044  
                     l1482 0683                       l1474 066D                       l1466 0736  
                     l1458 072F                       l1570 0499                       l1562 0487  
                     l1554 0476                       l1546 0467                       l1538 0720  
                     l2098 006C                       l1476 0674                       l1468 0739  
                     l1572 04AA                       l1564 048A                       l1580 04BE  
                     l1556 047B                       l1548 046B                       l1478 067A  
                     l1582 04C3                       l1574 04B0                       l1566 0491  
                     l1558 047F                       l1910 06E8                       l1742 0755  
                     l1904 075B                       l1920 06B1                       l1584 04C8  
                     l1576 04B1                       l1568 0495                       l1912 06EB  
                     l1744 073C                       l1922 06B4                       l1578 04B8  
                     l1930 064E                       l1914 06F2                       l1906 06E1  
                     l1746 0741                       l1924 06B5                       l1932 0653  
                     l1916 06F5                       l1908 06E2                       l1940 05F9  
                     l1926 06C0                       l1918 06AB                       l1934 065A  
                     l1942 05FC                       l1952 0505                       l1936 0660  
                     l1928 0649                       l1944 0609                       l1960 052B  
                     l1938 0665                       l1946 0611                       l1970 055D  
                     l1962 0537                       l1948 04CE                       l1972 0565  
                     l1964 053D                       l1980 05CD                       l1958 06F7  
                     l1990 0623                       l1974 0571                       l1966 0549  
                     l1982 05D9                       ?_map 0070                       l1992 0627  
                     l1968 0551                       l1984 05E1                       l1976 05BB  
                     l1994 0634                       l1986 05ED                       l1978 05C7  
                     l1996 063B                       l1988 061F                       l1998 0641  
                     STR_1 06D4                       STR_2 06CF                       STR_3 06CA  
                     STR_4 06DC                       STR_5 06D8                       STR_6 06DA  
                     _SEND 0077                       _TEMP 0021          ?_Lcd_Write_String 0070  
                     _map2 03F6                       _map3 0172                       _main 0023  
                     _pot1 003B                       btemp 007E                       start 0012  
       ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 06C4          ___bmul@multiplier 003E  
                    ??_ISR 0072                      ??_map 004B                      ?_map2 0070  
                    ?_map3 0070                      ?_main 0070            __end_of___awdiv 04CD  
                    _ANSEL 0188            ___awdiv@divisor 0043                      _CONTC 0032  
                    _CONTD 0031                      _CONTU 0030                      _INDIC 0033  
                    i1l200 0338                      i1l138 069D            ___awdiv@counter 0047  
                    _TEMPC 002B                      _TEMPD 002A                      _TEMPN 0020  
                    _TEMPU 0029                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u60_20 02E3                      u60_21 02E2  
                    u55_20 02B2                      u63_20 068E                      u55_21 02B1  
                    u63_21 068D                      u56_20 02BB                      u56_21 02BA  
                    u57_20 02C6                      u57_21 02C5    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      u58_20 02CF  
                    u58_21 02CE                      u59_20 02DA                      u59_21 02D9  
                    _TXREG 0019                      _Setup 057A                      _cont1 003A  
                    _term1 002C                      pclath 000A            __end_of_spiInit 068A  
          __end_of_spiRead 0745                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0710           __end_of_Lcd_Port 0760            __initialization 0015  
             __end_of_map2 0464               __end_of_map3 0272               __end_of_main 0172  
                   ??_map2 004B                     ??_map3 004B                     ??_main 0053  
                   ?_Setup 0070           ___awdiv@dividend 0045                     _ANSELH 0189  
                   i1l1600 028C                     i1l2218 02F4                     i1l1610 029B  
                   i1l1602 0291                     i1l1612 02A0                     i1l1604 0296  
                   i1l1630 02BB                     i1l1614 02A5                     i1l1640 02D2  
                   i1l1632 02BE                     i1l1624 02AA                     i1l1650 02E6  
                   i1l1642 02DA                     i1l1634 02C6                     i1l1626 02B2  
                   i1l1652 02EA                     i1l1644 02DD                     i1l1636 02C9  
                   i1l1628 02B5                     i1l1646 02E3                     i1l1638 02CF  
                   i1l1590 0273                     i1l1750 068A                     i1l1592 0278  
                   i1l1656 02EC                     i1l1752 068E                     i1l1594 027D  
                   i1l1754 0693                     i1l1596 0282                     i1l1588 0272  
                   i1l1756 0697                     i1l1598 0287                     i1l1758 069A  
                ??_Lcd_Cmd 003D                     _TEMPND 0028                     _TEMPNU 0027  
                   _SPBRGH 009A    __size_of_Lcd_Write_Char 0019                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                   ___bmul 0710                     ___wmul 061F                  ??___awdiv 0076  
                   _mandar 0272           __end_of_initOscm 052B           ___awdiv@quotient 0049  
                   _usartm 0727               ?_temperatura 0070                     saved_w 007E  
         __end_of_spiWrite 075A                  ??_spiInit 0076                  ??_spiRead 0076  
          Lcd_Set_Cursor@a 0041            Lcd_Set_Cursor@b 0040    __end_of__initialization 001F  
      ___bmul@multiplicand 0076             __pcstackCOMMON 0070              __end_of_Setup 05BB  
           _Lcd_Set_Cursor 0646                    ??_Setup 0077                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0020                 __pmaintext 0023  
                  ?___bmul 0076                    ?___wmul 003D                 __pintentry 0004  
  __size_of_spiReceiveWait 0007                    ?_mandar 0070  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 066C                    ?_usartm 0070                 ??_Lcd_Init 0077  
             initOscm@IRCF 0076                 ??_Lcd_Port 0076                    _SSPSTAT 0094  
               __stringtab 06C4             _Lcd_Write_Char 06DE                    _Lcd_Cmd 06A8  
                ?_initOscm 0070                  ?_spiWrite 0070            __size_of___bmul 0017  
                  ___awdiv 0464            __size_of___wmul 0027            __size_of_mandar 00C7  
          ?_Lcd_Set_Cursor 0040                    _desecho 003C                    __ptext1 0754  
                  __ptext2 073C                    __ptext3 074D                    __ptext4 0172  
                  __ptext5 05BB                    __ptext6 052B                    __ptext7 05F6  
                  __ptext8 06DE                    __ptext9 0646            __size_of_usartm 0015  
             __size_of_ISR 001E               __size_of_map 00BD       __size_of_temperatura 004F  
                  _spiInit 066C                    _spiRead 073C                    clrloop0 0746  
   __end_of_Lcd_Write_Char 06F7              ?_temperatura2 0070       end_of_initialization 001F  
               ??_initOscm 003D                  _RCSTAbits 0018                 ??_spiWrite 0076  
                Lcd_Port@a 0076                  _PORTCbits 0007                  _PORTEbits 0009  
           ??_temperatura2 0077                spiWrite@dat 0076            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0041          Lcd_Write_String@i 003F                  _TXSTAbits 0098  
           _spiReceiveWait 074D             __end_of___bmul 0727             __end_of___wmul 0646  
         _Lcd_Write_String 05F6                _BAUDCTLbits 0187             __end_of_mandar 0339  
           __end_of_usartm 073C        start_initialization 0015                __end_of_ISR 06A8  
              __end_of_map 03F6          __size_of_Lcd_Init 0019          __size_of_Lcd_Port 0006  
   __end_of_spiReceiveWait 0754                   ??___bmul 0077                   ??___wmul 0076  
                 ??_mandar 0070            Lcd_Write_Char@a 003E                   ??_usartm 0076  
              __pbssCOMMON 0077                  ___latbits 0002              __pcstackBANK0 003D  
                 ?_Lcd_Cmd 0070          __size_of_initOscm 005E            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0077                   ?___awdiv 0043       __end_of_temperatura2 05F6  
        __size_of_spiWrite 0006                  __pstrings 06C4                   ?_spiInit 003D  
                 ?_spiRead 0070             __size_of_Setup 0041       spiInit@sTransmitEdge 003F  
        interrupt_function 0004             ___wmul@product 0041                  clear_ram0 0745  
                 _PIE1bits 008C         spiInit@sDataSample 003D                   Lcd_Cmd@a 003F  
                 _PIR1bits 000C                __stringbase 06C9              ??_temperatura 0077  
        ___wmul@multiplier 003D           ??_Lcd_Write_Char 003D                   _Lcd_Init 06F7  
                 _Lcd_Port 075A   __end_of_Lcd_Write_String 061F           __size_of_Lcd_Cmd 001C  
         __size_of___awdiv 0069                   _map$1252 0051         __end_of__stringtab 06CA  
                 __ptext10 03F6                   __ptext11 0339                   __ptext20 06A8  
                 __ptext12 061F                   __ptext21 075A                   __ptext13 0710  
                 __ptext22 068A                   __ptext14 0464                   __ptext23 0272  
                 __ptext15 057A                   __ptext16 0727                   __ptext17 066C  
                 __ptext18 04CD                   __ptext19 06F7        __end_of_temperatura 057A  
         __size_of_spiInit 001E           __size_of_spiRead 0009                   _initOscm 04CD  
            __size_of_map2 006E              __size_of_map3 0100              __size_of_main 014F  
    __size_of_temperatura2 003B                   _spiWrite 0754               spiInit@sType 0076  
        spiInit@sClockIdle 003E                 _INTCONbits 000B               _temperatura2 05BB  
                 intlevel1 0000           ??_spiReceiveWait 0076                  stringcode 06C4  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0042                 _OPTION_REG 0081  
              _temperatura 052B                   stringdir 06C4                   stringtab 06C4  
