

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 15 01:44:50 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 09/04/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0009                     _PORTEbits	set	9
   458  0013                     _SSPBUF	set	19
   459  0014                     _SSPCON	set	20
   460  0009                     _PORTE	set	9
   461  0008                     _PORTD	set	8
   462  0007                     _PORTC	set	7
   463  0006                     _PORTB	set	6
   464  0005                     _PORTA	set	5
   465  0007                     _PORTCbits	set	7
   466  008F                     _OSCCONbits	set	143
   467  0094                     _SSPSTATbits	set	148
   468  0094                     _SSPSTAT	set	148
   469  0081                     _OPTION_REG	set	129
   470  0086                     _TRISB	set	134
   471  0088                     _TRISD	set	136
   472  0087                     _TRISC	set	135
   473  0089                     _TRISE	set	137
   474  0085                     _TRISA	set	133
   475  043B                     _TRISC3	set	1083
   476  043D                     _TRISC5	set	1085
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	strings
   481  0400                     __pstrings:
   482  0400                     stringtab:
   483  0400                     __stringtab:
   484  0400                     stringcode:	
   485                           ;	String table - string pointers are 1 byte each
   486                           
   487  0400                     stringdir:
   488  0400  3004               	movlw	high stringdir
   489  0401  008A               	movwf	10
   490  0402  0804               	movf	4,w
   491  0403  0A84               	incf	4,f
   492  0404  0782               	addwf	2,f
   493  0405                     __stringbase:
   494  0405  3400               	retlw	0
   495  0406                     __end_of__stringtab:
   496  0406                     STR_3:
   497  0406  3454               	retlw	84	;'T'
   498  0407  3445               	retlw	69	;'E'
   499  0408  344D               	retlw	77	;'M'
   500  0409  3450               	retlw	80	;'P'
   501  040A  3400               	retlw	0
   502  040B                     STR_2:
   503  040B  3443               	retlw	67	;'C'
   504  040C  344F               	retlw	79	;'O'
   505  040D  344E               	retlw	78	;'N'
   506  040E  3454               	retlw	84	;'T'
   507  040F  3400               	retlw	0
   508  0410                     STR_1:
   509  0410  3441               	retlw	65	;'A'
   510  0411  3444               	retlw	68	;'D'
   511  0412  3443               	retlw	67	;'C'
   512  0413  3400               	retlw	0
   513  0414                     STR_4:
   514  0414  342E               	retlw	46	;'.'
   515  0415  3400               	retlw	0
   516                           
   517                           	psect	cinit
   518  000F                     start_initialization:	
   519                           ; #config settings
   520                           
   521  000F                     __initialization:
   522                           
   523                           ; Clear objects allocated to COMMON
   524  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   525  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   526                           
   527                           ; Clear objects allocated to BANK0
   528  0011  1283               	bcf	3,5	;RP0=0, select bank0
   529  0012  1303               	bcf	3,6	;RP1=0, select bank0
   530  0013  01AF               	clrf	__pbssBANK0& (0+127)
   531  0014  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   532  0015  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   533  0016  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   534  0017  01B3               	clrf	(__pbssBANK0+4)& (0+127)
   535  0018  01B4               	clrf	(__pbssBANK0+5)& (0+127)
   536  0019  01B5               	clrf	(__pbssBANK0+6)& (0+127)
   537  001A  01B6               	clrf	(__pbssBANK0+7)& (0+127)
   538  001B  01B7               	clrf	(__pbssBANK0+8)& (0+127)
   539  001C  01B8               	clrf	(__pbssBANK0+9)& (0+127)
   540  001D  01B9               	clrf	(__pbssBANK0+10)& (0+127)
   541  001E  01BA               	clrf	(__pbssBANK0+11)& (0+127)
   542  001F  01BB               	clrf	(__pbssBANK0+12)& (0+127)
   543  0020  01BC               	clrf	(__pbssBANK0+13)& (0+127)
   544  0021                     end_of_initialization:	
   545                           ;End of C runtime variable initialization code
   546                           
   547  0021                     __end_of__initialization:
   548  0021  0183               	clrf	3
   549  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   550                           
   551                           	psect	bssCOMMON
   552  007A                     __pbssCOMMON:
   553  007A                     _CONTC:
   554  007A                     	ds	1
   555  007B                     _cont1:
   556  007B                     	ds	1
   557                           
   558                           	psect	bssBANK0
   559  002F                     __pbssBANK0:
   560  002F                     _CO3:
   561  002F                     	ds	1
   562  0030                     _CO2:
   563  0030                     	ds	1
   564  0031                     _CO1:
   565  0031                     	ds	1
   566  0032                     _CONTU:
   567  0032                     	ds	1
   568  0033                     _CONTD:
   569  0033                     	ds	1
   570  0034                     _INDIC:
   571  0034                     	ds	1
   572  0035                     _U1:
   573  0035                     	ds	1
   574  0036                     _D1:
   575  0036                     	ds	1
   576  0037                     _C1:
   577  0037                     	ds	1
   578  0038                     _UP1:
   579  0038                     	ds	1
   580  0039                     _DP1:
   581  0039                     	ds	1
   582  003A                     _CP1:
   583  003A                     	ds	1
   584  003B                     _pot1:
   585  003B                     	ds	1
   586  003C                     _desecho:
   587  003C                     	ds	1
   588                           
   589                           	psect	cstackCOMMON
   590  0070                     __pcstackCOMMON:
   591  0070                     ?_Setup:
   592  0070                     ?_Lcd_Write_String:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_map:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_map2:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_spiWrite:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_spiRead:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Lcd_Write_Char:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_initOscm:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_Lcd_Init:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_Lcd_Cmd:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_ISR:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ??_ISR:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_main:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_spiReceiveWait:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_Lcd_Port:	
   632                           ; 1 bytes @ 0x0
   633                           
   634                           
   635                           ; 1 bytes @ 0x0
   636  0070                     	ds	2
   637  0072                     ??_spiWrite:
   638  0072                     ??_spiRead:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0072                     ??_initOscm:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     ?_spiInit:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0072                     ??_spiReceiveWait:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ??_Lcd_Port:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ?___bmul:	
   654                           ; 1 bytes @ 0x2
   655                           
   656  0072                     ?___wmul:	
   657                           ; 1 bytes @ 0x2
   658                           
   659  0072                     spiInit@sDataSample:	
   660                           ; 2 bytes @ 0x2
   661                           
   662  0072                     spiWrite@dat:	
   663                           ; 1 bytes @ 0x2
   664                           
   665  0072                     Lcd_Port@a:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     ___bmul@multiplicand:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ___wmul@multiplier:	
   672                           ; 1 bytes @ 0x2
   673                           
   674                           
   675                           ; 2 bytes @ 0x2
   676  0072                     	ds	1
   677  0073                     ??_Lcd_Write_Char:
   678  0073                     ??_Lcd_Cmd:	
   679                           ; 1 bytes @ 0x3
   680                           
   681  0073                     ??___bmul:	
   682                           ; 1 bytes @ 0x3
   683                           
   684  0073                     spiInit@sClockIdle:	
   685                           ; 1 bytes @ 0x3
   686                           
   687  0073                     ___bmul@product:	
   688                           ; 1 bytes @ 0x3
   689                           
   690                           
   691                           ; 1 bytes @ 0x3
   692  0073                     	ds	1
   693  0074                     spiInit@sTransmitEdge:
   694  0074                     Lcd_Write_Char@a:	
   695                           ; 1 bytes @ 0x4
   696                           
   697  0074                     initOscm@IRCF:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0074                     ___bmul@multiplier:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ___wmul@multiplicand:	
   704                           ; 1 bytes @ 0x4
   705                           
   706                           
   707                           ; 2 bytes @ 0x4
   708  0074                     	ds	1
   709  0075                     ??_Lcd_Write_String:
   710  0075                     ??_spiInit:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     spiInit@sType:	
   714                           ; 1 bytes @ 0x5
   715                           
   716  0075                     Lcd_Cmd@a:	
   717                           ; 1 bytes @ 0x5
   718                           
   719  0075                     Lcd_Write_String@i:	
   720                           ; 1 bytes @ 0x5
   721                           
   722                           
   723                           ; 2 bytes @ 0x5
   724  0075                     	ds	1
   725  0076                     ??_Setup:
   726  0076                     ?_Lcd_Set_Cursor:	
   727                           ; 1 bytes @ 0x6
   728                           
   729  0076                     ??_Lcd_Init:	
   730                           ; 1 bytes @ 0x6
   731                           
   732  0076                     ??___wmul:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     Lcd_Set_Cursor@b:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0076                     ___wmul@product:	
   739                           ; 1 bytes @ 0x6
   740                           
   741                           
   742                           ; 2 bytes @ 0x6
   743  0076                     	ds	1
   744  0077                     ??_Lcd_Set_Cursor:
   745  0077                     Lcd_Set_Cursor@a:	
   746                           ; 1 bytes @ 0x7
   747                           
   748  0077                     Lcd_Write_String@a:	
   749                           ; 1 bytes @ 0x7
   750                           
   751                           
   752                           ; 1 bytes @ 0x7
   753  0077                     	ds	1
   754  0078                     ??_map2:
   755  0078                     ??___awdiv:	
   756                           ; 1 bytes @ 0x8
   757                           
   758  0078                     Lcd_Set_Cursor@temp:	
   759                           ; 1 bytes @ 0x8
   760                           
   761  0078                     _map$1001:	
   762                           ; 1 bytes @ 0x8
   763                           
   764                           
   765                           ; 2 bytes @ 0x8
   766  0078                     	ds	2
   767                           
   768                           	psect	cstackBANK0
   769  0020                     __pcstackBANK0:
   770  0020                     ?___awdiv:
   771  0020                     ___awdiv@divisor:	
   772                           ; 2 bytes @ 0x0
   773                           
   774                           
   775                           ; 2 bytes @ 0x0
   776  0020                     	ds	2
   777  0022                     ___awdiv@dividend:
   778                           
   779                           ; 2 bytes @ 0x2
   780  0022                     	ds	2
   781  0024                     ___awdiv@counter:
   782                           
   783                           ; 1 bytes @ 0x4
   784  0024                     	ds	1
   785  0025                     ___awdiv@sign:
   786                           
   787                           ; 1 bytes @ 0x5
   788  0025                     	ds	1
   789  0026                     ___awdiv@quotient:
   790                           
   791                           ; 2 bytes @ 0x6
   792  0026                     	ds	2
   793  0028                     ??_map:
   794                           
   795                           ; 1 bytes @ 0x8
   796  0028                     	ds	6
   797  002E                     ??_main:
   798                           
   799                           ; 1 bytes @ 0xE
   800  002E                     	ds	1
   801                           
   802                           	psect	maintext
   803  0025                     __pmaintext:	
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 79 in file "MASTER.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : B00/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0
   825 ;;      Temps:          0       1       0       0       0
   826 ;;      Totals:         0       1       0       0       0
   827 ;;Total ram usage:        1 bytes
   828 ;; Hardware stack levels required when called:    5
   829 ;; This function calls:
   830 ;;		_Lcd_Set_Cursor
   831 ;;		_Lcd_Write_Char
   832 ;;		_Lcd_Write_String
   833 ;;		_Setup
   834 ;;		_map
   835 ;;		_map2
   836 ;;		_spiRead
   837 ;;		_spiWrite
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _main
   845  0025                     _main:
   846  0025                     l1479:	
   847                           ;incstack = 0
   848                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   849                           
   850  0025  120A  118A  2320  120A  118A  	fcall	_Setup
   851  002A                     l1481:
   852  002A  01F6               	clrf	Lcd_Set_Cursor@b
   853  002B  0AF6               	incf	Lcd_Set_Cursor@b,f
   854  002C  3001               	movlw	1
   855  002D  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
   856  0032                     l1483:
   857  0032  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   858  0033  120A  118A  2377  120A  118A  	fcall	_Lcd_Write_String
   859  0038  3007               	movlw	7
   860  0039  00FF               	movwf	btemp+1
   861  003A  087F               	movf	btemp+1,w
   862  003B  00F6               	movwf	Lcd_Set_Cursor@b
   863  003C  3001               	movlw	1
   864  003D  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
   865  0042                     l1485:
   866  0042  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   867  0043  120A  118A  2377  120A  118A  	fcall	_Lcd_Write_String
   868  0048                     l1487:
   869  0048  300D               	movlw	13
   870  0049  00FF               	movwf	btemp+1
   871  004A  087F               	movf	btemp+1,w
   872  004B  00F6               	movwf	Lcd_Set_Cursor@b
   873  004C  3001               	movlw	1
   874  004D  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
   875  0052  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   876  0053  120A  118A  2377  120A  118A  	fcall	_Lcd_Write_String
   877  0058                     l1489:
   878                           
   879                           ;MASTER.c: 99:         INDIC++;
   880  0058  3001               	movlw	1
   881  0059  00FF               	movwf	btemp+1
   882  005A  087F               	movf	btemp+1,w
   883  005B  1283               	bcf	3,5	;RP0=0, select bank0
   884  005C  1303               	bcf	3,6	;RP1=0, select bank0
   885  005D  07B4               	addwf	_INDIC,f
   886  005E                     l1491:
   887                           
   888                           ;MASTER.c: 100:         map();
   889  005E  120A  118A  2130  120A  118A  	fcall	_map
   890  0063                     l1493:
   891                           
   892                           ;MASTER.c: 101:         map2();
   893  0063  120A  118A  21ED  120A  118A  	fcall	_map2
   894  0068                     l1495:
   895                           
   896                           ;MASTER.c: 103:         if (INDIC == 1) {
   897  0068  1283               	bcf	3,5	;RP0=0, select bank0
   898  0069  1303               	bcf	3,6	;RP1=0, select bank0
   899  006A  0334               	decf	_INDIC,w
   900  006B  1D03               	btfss	3,2
   901  006C  286E               	goto	u631
   902  006D  286F               	goto	u630
   903  006E                     u631:
   904  006E  2893               	goto	l1509
   905  006F                     u630:
   906  006F                     l1497:
   907                           
   908                           ;MASTER.c: 104:             PORTCbits.RC0 = 0;
   909  006F  1007               	bcf	7,0	;volatile
   910  0070                     l1499:
   911                           
   912                           ;MASTER.c: 105:             _delay((unsigned long)((1)*(4000000/4000.0)));
   913  0070  30C7               	movlw	199
   914  0071  1283               	bcf	3,5	;RP0=0, select bank0
   915  0072  1303               	bcf	3,6	;RP1=0, select bank0
   916  0073  00AE               	movwf	??_main
   917  0074                     u657:
   918  0074  2875               	nop2
   919  0075  0BAE               	decfsz	??_main,f
   920  0076  2874               	goto	u657
   921  0077  2878               	nop2
   922  0078                     l1501:
   923                           
   924                           ;MASTER.c: 106:             spiWrite(desecho);
   925  0078  3000               	movlw	0
   926  0079  120A  118A  246E  120A  118A  	fcall	_spiWrite
   927  007E                     l1503:
   928                           
   929                           ;MASTER.c: 107:             pot1 = spiRead();
   930  007E  120A  118A  2457  120A  118A  	fcall	_spiRead
   931  0083  00FF               	movwf	btemp+1
   932  0084  087F               	movf	btemp+1,w
   933  0085  1283               	bcf	3,5	;RP0=0, select bank0
   934  0086  1303               	bcf	3,6	;RP1=0, select bank0
   935  0087  00BB               	movwf	_pot1
   936  0088                     l1505:
   937                           
   938                           ;MASTER.c: 109:             _delay((unsigned long)((1)*(4000000/4000.0)));
   939  0088  30C7               	movlw	199
   940  0089  1283               	bcf	3,5	;RP0=0, select bank0
   941  008A  1303               	bcf	3,6	;RP1=0, select bank0
   942  008B  00AE               	movwf	??_main
   943  008C                     u667:
   944  008C  288D               	nop2
   945  008D  0BAE               	decfsz	??_main,f
   946  008E  288C               	goto	u667
   947  008F  2890               	nop2
   948  0090                     l1507:
   949                           
   950                           ;MASTER.c: 110:             PORTCbits.RC0 = 1;
   951  0090  1283               	bcf	3,5	;RP0=0, select bank0
   952  0091  1303               	bcf	3,6	;RP1=0, select bank0
   953  0092  1407               	bsf	7,0	;volatile
   954  0093                     l1509:
   955                           
   956                           ;MASTER.c: 113:         if (INDIC == 2) {
   957  0093  3002               	movlw	2
   958  0094  0634               	xorwf	_INDIC,w
   959  0095  1D03               	btfss	3,2
   960  0096  2898               	goto	u641
   961  0097  2899               	goto	u640
   962  0098                     u641:
   963  0098  28BC               	goto	l1525
   964  0099                     u640:
   965  0099                     l1511:
   966                           
   967                           ;MASTER.c: 114:             PORTCbits.RC1 = 0;
   968  0099  1087               	bcf	7,1	;volatile
   969  009A                     l1513:
   970                           
   971                           ;MASTER.c: 115:             _delay((unsigned long)((1)*(4000000/4000.0)));
   972  009A  30C7               	movlw	199
   973  009B  1283               	bcf	3,5	;RP0=0, select bank0
   974  009C  1303               	bcf	3,6	;RP1=0, select bank0
   975  009D  00AE               	movwf	??_main
   976  009E                     u677:
   977  009E  289F               	nop2
   978  009F  0BAE               	decfsz	??_main,f
   979  00A0  289E               	goto	u677
   980  00A1  28A2               	nop2
   981  00A2                     l1515:
   982                           
   983                           ;MASTER.c: 116:             spiWrite(desecho);
   984  00A2  3000               	movlw	0
   985  00A3  120A  118A  246E  120A  118A  	fcall	_spiWrite
   986  00A8                     l1517:
   987                           
   988                           ;MASTER.c: 117:             cont1 = spiRead();
   989  00A8  120A  118A  2457  120A  118A  	fcall	_spiRead
   990  00AD  00FF               	movwf	btemp+1
   991  00AE  087F               	movf	btemp+1,w
   992  00AF  00FB               	movwf	_cont1
   993  00B0                     l1519:
   994                           
   995                           ;MASTER.c: 119:             _delay((unsigned long)((1)*(4000000/4000.0)));
   996  00B0  30C7               	movlw	199
   997  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   998  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   999  00B3  00AE               	movwf	??_main
  1000  00B4                     u687:
  1001  00B4  28B5               	nop2
  1002  00B5  0BAE               	decfsz	??_main,f
  1003  00B6  28B4               	goto	u687
  1004  00B7  28B8               	nop2
  1005  00B8                     l1521:
  1006                           
  1007                           ;MASTER.c: 120:             PORTCbits.RC1 = 1;
  1008  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1009  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1010  00BA  1487               	bsf	7,1	;volatile
  1011  00BB                     l1523:
  1012                           
  1013                           ;MASTER.c: 121:             INDIC = 0;
  1014  00BB  01B4               	clrf	_INDIC
  1015  00BC                     l1525:
  1016                           
  1017                           ;MASTER.c: 137:         Lcd_Set_Cursor(2, 1);
  1018  00BC  01F6               	clrf	Lcd_Set_Cursor@b
  1019  00BD  0AF6               	incf	Lcd_Set_Cursor@b,f
  1020  00BE  3002               	movlw	2
  1021  00BF  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
  1022  00C4                     l1527:
  1023                           
  1024                           ;MASTER.c: 138:         Lcd_Write_Char(C1);
  1025  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1026  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1027  00C6  0837               	movf	_C1,w
  1028  00C7  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  1029  00CC                     l1529:
  1030                           
  1031                           ;MASTER.c: 139:         Lcd_Set_Cursor(2, 2);
  1032  00CC  3002               	movlw	2
  1033  00CD  00FF               	movwf	btemp+1
  1034  00CE  087F               	movf	btemp+1,w
  1035  00CF  00F6               	movwf	Lcd_Set_Cursor@b
  1036  00D0  3002               	movlw	2
  1037  00D1  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
  1038  00D6                     l1531:
  1039                           
  1040                           ;MASTER.c: 140:         Lcd_Write_String(".");
  1041  00D6  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1042  00D7  120A  118A  2377  120A  118A  	fcall	_Lcd_Write_String
  1043  00DC                     l1533:
  1044                           
  1045                           ;MASTER.c: 141:         Lcd_Write_Char(D1);
  1046  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00DE  0836               	movf	_D1,w
  1049  00DF  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  1050  00E4                     l1535:
  1051                           
  1052                           ;MASTER.c: 142:         Lcd_Set_Cursor(2, 4);
  1053  00E4  3004               	movlw	4
  1054  00E5  00FF               	movwf	btemp+1
  1055  00E6  087F               	movf	btemp+1,w
  1056  00E7  00F6               	movwf	Lcd_Set_Cursor@b
  1057  00E8  3002               	movlw	2
  1058  00E9  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
  1059  00EE                     l1537:
  1060                           
  1061                           ;MASTER.c: 143:         Lcd_Write_Char(U1);
  1062  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1063  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1064  00F0  0835               	movf	_U1,w
  1065  00F1  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  1066  00F6                     l1539:
  1067                           
  1068                           ;MASTER.c: 145:         Lcd_Set_Cursor(2, 7);
  1069  00F6  3007               	movlw	7
  1070  00F7  00FF               	movwf	btemp+1
  1071  00F8  087F               	movf	btemp+1,w
  1072  00F9  00F6               	movwf	Lcd_Set_Cursor@b
  1073  00FA  3002               	movlw	2
  1074  00FB  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
  1075  0100                     l1541:
  1076                           
  1077                           ;MASTER.c: 146:         Lcd_Write_Char(CO1);
  1078  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0102  0831               	movf	_CO1,w
  1081  0103  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  1082  0108                     l1543:
  1083                           
  1084                           ;MASTER.c: 147:         Lcd_Set_Cursor(2, 8);
  1085  0108  3008               	movlw	8
  1086  0109  00FF               	movwf	btemp+1
  1087  010A  087F               	movf	btemp+1,w
  1088  010B  00F6               	movwf	Lcd_Set_Cursor@b
  1089  010C  3002               	movlw	2
  1090  010D  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
  1091  0112                     l1545:
  1092                           
  1093                           ;MASTER.c: 148:         Lcd_Write_Char(CO2);
  1094  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0114  0830               	movf	_CO2,w
  1097  0115  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  1098  011A                     l1547:
  1099                           
  1100                           ;MASTER.c: 149:         Lcd_Set_Cursor(2, 9);
  1101  011A  3009               	movlw	9
  1102  011B  00FF               	movwf	btemp+1
  1103  011C  087F               	movf	btemp+1,w
  1104  011D  00F6               	movwf	Lcd_Set_Cursor@b
  1105  011E  3002               	movlw	2
  1106  011F  120A  118A  239C  120A  118A  	fcall	_Lcd_Set_Cursor
  1107  0124                     l1549:
  1108                           
  1109                           ;MASTER.c: 150:         Lcd_Write_Char(CO3);
  1110  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0126  082F               	movf	_CO3,w
  1113  0127  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  1114  012C  2858               	goto	l1489
  1115  012D  120A  118A  280C   	ljmp	start
  1116  0130                     __end_of_main:
  1117                           
  1118                           	psect	text1
  1119  046E                     __ptext1:	
  1120 ;; *************** function _spiWrite *****************
  1121 ;; Defined at:
  1122 ;;		line 35 in file "SSP.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  dat             1    wreg     unsigned char 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  dat             1    2[COMMON] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         1       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0
  1139 ;;      Totals:         1       0       0       0       0
  1140 ;;Total ram usage:        1 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _spiWrite
  1152  046E                     _spiWrite:
  1153                           
  1154                           ;incstack = 0
  1155                           ; Regs used in _spiWrite: [wreg]
  1156                           ;spiWrite@dat stored from wreg
  1157  046E  00F2               	movwf	spiWrite@dat
  1158  046F                     l1283:
  1159                           
  1160                           ;SSP.c: 35: void spiWrite(char dat);SSP.c: 36: {;SSP.c: 37:     SSPBUF = dat;
  1161  046F  0872               	movf	spiWrite@dat,w
  1162  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0472  0093               	movwf	19	;volatile
  1165  0473                     l136:
  1166  0473  0008               	return
  1167  0474                     __end_of_spiWrite:
  1168                           
  1169                           	psect	text2
  1170  0457                     __ptext2:	
  1171 ;; *************** function _spiRead *****************
  1172 ;; Defined at:
  1173 ;;		line 50 in file "SSP.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      unsigned char 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    2
  1194 ;; This function calls:
  1195 ;;		_spiReceiveWait
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _spiRead
  1203  0457                     _spiRead:
  1204  0457                     l1285:	
  1205                           ;incstack = 0
  1206                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1207                           
  1208                           
  1209                           ;SSP.c: 52:     spiReceiveWait();
  1210  0457  120A  118A  2460  120A  118A  	fcall	_spiReceiveWait
  1211  045C                     l1287:
  1212                           
  1213                           ;SSP.c: 53:     return(SSPBUF);
  1214  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1215  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1216  045E  0813               	movf	19,w	;volatile
  1217  045F                     l144:
  1218  045F  0008               	return
  1219  0460                     __end_of_spiRead:
  1220                           
  1221                           	psect	text3
  1222  0460                     __ptext3:	
  1223 ;; *************** function _spiReceiveWait *****************
  1224 ;; Defined at:
  1225 ;;		line 30 in file "SSP.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		None
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    1
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_spiRead
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function _spiReceiveWait
  1255  0460                     _spiReceiveWait:
  1256  0460                     l1139:	
  1257                           ;incstack = 0
  1258                           ; Regs used in _spiReceiveWait: []
  1259                           
  1260  0460                     l130:	
  1261                           ;SSP.c: 32:     while ( !SSPSTATbits.BF );
  1262                           
  1263  0460  1683               	bsf	3,5	;RP0=1, select bank1
  1264  0461  1303               	bcf	3,6	;RP1=0, select bank1
  1265  0462  1C14               	btfss	20,0	;volatile
  1266  0463  2C65               	goto	u251
  1267  0464  2C66               	goto	u250
  1268  0465                     u251:
  1269  0465  2C60               	goto	l130
  1270  0466                     u250:
  1271  0466                     l133:
  1272  0466  0008               	return
  1273  0467                     __end_of_spiReceiveWait:
  1274                           
  1275                           	psect	text4
  1276  01ED                     __ptext4:	
  1277 ;; *************** function _map2 *****************
  1278 ;; Defined at:
  1279 ;;		line 215 in file "MASTER.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0
  1295 ;;      Temps:          2       0       0       0       0
  1296 ;;      Totals:         2       0       0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    2
  1300 ;; This function calls:
  1301 ;;		___awdiv
  1302 ;;		___bmul
  1303 ;;		___wmul
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _map2
  1311  01ED                     _map2:
  1312  01ED                     l1471:	
  1313                           ;incstack = 0
  1314                           ; Regs used in _map2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1315                           
  1316                           
  1317                           ;MASTER.c: 216:     CONTC = (cont1 / 100);
  1318  01ED  3064               	movlw	100
  1319  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1320  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1321  01F0  00A0               	movwf	___awdiv@divisor
  1322  01F1  3000               	movlw	0
  1323  01F2  00A1               	movwf	___awdiv@divisor+1
  1324  01F3  087B               	movf	_cont1,w
  1325  01F4  00F8               	movwf	??_map2
  1326  01F5  01F9               	clrf	??_map2+1
  1327  01F6  0878               	movf	??_map2,w
  1328  01F7  00A2               	movwf	___awdiv@dividend
  1329  01F8  0879               	movf	??_map2+1,w
  1330  01F9  00A3               	movwf	___awdiv@dividend+1
  1331  01FA  120A  118A  225B  120A  118A  	fcall	___awdiv
  1332  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0201  0820               	movf	?___awdiv,w
  1335  0202  00FF               	movwf	btemp+1
  1336  0203  087F               	movf	btemp+1,w
  1337  0204  00FA               	movwf	_CONTC
  1338                           
  1339                           ;MASTER.c: 217:     CONTD = (cont1 - (CONTC * 100)) / 10;
  1340  0205  300A               	movlw	10
  1341  0206  00A0               	movwf	___awdiv@divisor
  1342  0207  3000               	movlw	0
  1343  0208  00A1               	movwf	___awdiv@divisor+1
  1344  0209  087A               	movf	_CONTC,w
  1345  020A  00F8               	movwf	??_map2
  1346  020B  01F9               	clrf	??_map2+1
  1347  020C  0878               	movf	??_map2,w
  1348  020D  00F2               	movwf	___wmul@multiplier
  1349  020E  0879               	movf	??_map2+1,w
  1350  020F  00F3               	movwf	___wmul@multiplier+1
  1351  0210  309C               	movlw	156
  1352  0211  00F4               	movwf	___wmul@multiplicand
  1353  0212  30FF               	movlw	255
  1354  0213  00F5               	movwf	___wmul@multiplicand+1
  1355  0214  120A  118A  2352  120A  118A  	fcall	___wmul
  1356  0219  087B               	movf	_cont1,w
  1357  021A  0772               	addwf	?___wmul,w
  1358  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1359  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1360  021D  00A2               	movwf	___awdiv@dividend
  1361  021E  0873               	movf	?___wmul+1,w
  1362  021F  1803               	skipnc
  1363  0220  0A73               	incf	?___wmul+1,w
  1364  0221  00A3               	movwf	___awdiv@dividend+1
  1365  0222  120A  118A  225B  120A  118A  	fcall	___awdiv
  1366  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0229  0820               	movf	?___awdiv,w
  1369  022A  00FF               	movwf	btemp+1
  1370  022B  087F               	movf	btemp+1,w
  1371  022C  00B3               	movwf	_CONTD
  1372                           
  1373                           ;MASTER.c: 218:     CONTU = (cont1 - (CONTC * 100)-(CONTD * 10));
  1374  022D  309C               	movlw	156
  1375  022E  00FF               	movwf	btemp+1
  1376  022F  087F               	movf	btemp+1,w
  1377  0230  00F2               	movwf	___bmul@multiplicand
  1378  0231  087A               	movf	_CONTC,w
  1379  0232  120A  118A  2442  120A  118A  	fcall	___bmul
  1380  0237  00F8               	movwf	??_map2
  1381  0238  30F6               	movlw	246
  1382  0239  00FF               	movwf	btemp+1
  1383  023A  087F               	movf	btemp+1,w
  1384  023B  00F2               	movwf	___bmul@multiplicand
  1385  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1386  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1387  023E  0833               	movf	_CONTD,w
  1388  023F  120A  118A  2442  120A  118A  	fcall	___bmul
  1389  0244  0778               	addwf	??_map2,w
  1390  0245  077B               	addwf	_cont1,w
  1391  0246  00FF               	movwf	btemp+1
  1392  0247  087F               	movf	btemp+1,w
  1393  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1394  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1395  024A  00B2               	movwf	_CONTU
  1396  024B                     l1473:
  1397                           
  1398                           ;MASTER.c: 220:     CO1 = (CONTC + 0x30);
  1399  024B  087A               	movf	_CONTC,w
  1400  024C  3E30               	addlw	48
  1401  024D  00FF               	movwf	btemp+1
  1402  024E  087F               	movf	btemp+1,w
  1403  024F  00B1               	movwf	_CO1
  1404  0250                     l1475:
  1405                           
  1406                           ;MASTER.c: 221:     CO2 = (CONTD + 0x30);
  1407  0250  0833               	movf	_CONTD,w
  1408  0251  3E30               	addlw	48
  1409  0252  00FF               	movwf	btemp+1
  1410  0253  087F               	movf	btemp+1,w
  1411  0254  00B0               	movwf	_CO2
  1412  0255                     l1477:
  1413                           
  1414                           ;MASTER.c: 222:     CO3 = (CONTU + 0x30);
  1415  0255  0832               	movf	_CONTU,w
  1416  0256  3E30               	addlw	48
  1417  0257  00FF               	movwf	btemp+1
  1418  0258  087F               	movf	btemp+1,w
  1419  0259  00AF               	movwf	_CO3
  1420  025A                     l110:
  1421  025A  0008               	return
  1422  025B                     __end_of_map2:
  1423                           
  1424                           	psect	text5
  1425  0130                     __ptext5:	
  1426 ;; *************** function _map *****************
  1427 ;; Defined at:
  1428 ;;		line 202 in file "MASTER.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         2       0       0       0       0
  1444 ;;      Temps:          0       6       0       0       0
  1445 ;;      Totals:         2       6       0       0       0
  1446 ;;Total ram usage:        8 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    2
  1449 ;; This function calls:
  1450 ;;		___awdiv
  1451 ;;		___bmul
  1452 ;;		___wmul
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _map
  1460  0130                     _map:
  1461  0130                     l1463:	
  1462                           ;incstack = 0
  1463                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1464                           
  1465                           
  1466                           ;MASTER.c: 204:     CP1 = ((pot1) / 51);
  1467  0130  3033               	movlw	51
  1468  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0133  00A0               	movwf	___awdiv@divisor
  1471  0134  3000               	movlw	0
  1472  0135  00A1               	movwf	___awdiv@divisor+1
  1473  0136  083B               	movf	_pot1,w
  1474  0137  00A8               	movwf	??_map
  1475  0138  01A9               	clrf	??_map+1
  1476  0139  0828               	movf	??_map,w
  1477  013A  00A2               	movwf	___awdiv@dividend
  1478  013B  0829               	movf	??_map+1,w
  1479  013C  00A3               	movwf	___awdiv@dividend+1
  1480  013D  120A  118A  225B  120A  118A  	fcall	___awdiv
  1481  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0144  0820               	movf	?___awdiv,w
  1484  0145  00FF               	movwf	btemp+1
  1485  0146  087F               	movf	btemp+1,w
  1486  0147  00BA               	movwf	_CP1
  1487                           
  1488                           ;MASTER.c: 205:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  1489  0148  3033               	movlw	51
  1490  0149  00A0               	movwf	___awdiv@divisor
  1491  014A  3000               	movlw	0
  1492  014B  00A1               	movwf	___awdiv@divisor+1
  1493  014C  083B               	movf	_pot1,w
  1494  014D  00A8               	movwf	??_map
  1495  014E  01A9               	clrf	??_map+1
  1496  014F  0828               	movf	??_map,w
  1497  0150  00F2               	movwf	___wmul@multiplier
  1498  0151  0829               	movf	??_map+1,w
  1499  0152  00F3               	movwf	___wmul@multiplier+1
  1500  0153  3064               	movlw	100
  1501  0154  00F4               	movwf	___wmul@multiplicand
  1502  0155  3000               	movlw	0
  1503  0156  00F5               	movwf	___wmul@multiplicand+1
  1504  0157  120A  118A  2352  120A  118A  	fcall	___wmul
  1505  015C  0873               	movf	?___wmul+1,w
  1506  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1507  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1508  015F  00A3               	movwf	___awdiv@dividend+1
  1509  0160  0872               	movf	?___wmul,w
  1510  0161  00A2               	movwf	___awdiv@dividend
  1511  0162  120A  118A  225B  120A  118A  	fcall	___awdiv
  1512  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0169  0820               	movf	?___awdiv,w
  1515  016A  00AA               	movwf	??_map+2
  1516  016B  0821               	movf	?___awdiv+1,w
  1517  016C  00AB               	movwf	??_map+3
  1518  016D  083A               	movf	_CP1,w
  1519  016E  00AC               	movwf	??_map+4
  1520  016F  01AD               	clrf	??_map+5
  1521  0170  082C               	movf	??_map+4,w
  1522  0171  00F2               	movwf	___wmul@multiplier
  1523  0172  082D               	movf	??_map+5,w
  1524  0173  00F3               	movwf	___wmul@multiplier+1
  1525  0174  309C               	movlw	156
  1526  0175  00F4               	movwf	___wmul@multiplicand
  1527  0176  30FF               	movlw	255
  1528  0177  00F5               	movwf	___wmul@multiplicand+1
  1529  0178  120A  118A  2352  120A  118A  	fcall	___wmul
  1530  017D  0872               	movf	?___wmul,w
  1531  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1532  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0180  072A               	addwf	??_map+2,w
  1534  0181  00F8               	movwf	_map$1001
  1535  0182  0873               	movf	?___wmul+1,w
  1536  0183  1803               	skipnc
  1537  0184  0A73               	incf	?___wmul+1,w
  1538  0185  072B               	addwf	??_map+3,w
  1539  0186  00F9               	movwf	_map$1001+1
  1540                           
  1541                           ;MASTER.c: 205:     DP1 = (((pot1 * 100) / 51)-(CP1 * 100)) / 10;
  1542  0187  300A               	movlw	10
  1543  0188  00A0               	movwf	___awdiv@divisor
  1544  0189  3000               	movlw	0
  1545  018A  00A1               	movwf	___awdiv@divisor+1
  1546  018B  0879               	movf	_map$1001+1,w
  1547  018C  00A3               	movwf	___awdiv@dividend+1
  1548  018D  0878               	movf	_map$1001,w
  1549  018E  00A2               	movwf	___awdiv@dividend
  1550  018F  120A  118A  225B  120A  118A  	fcall	___awdiv
  1551  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0196  0820               	movf	?___awdiv,w
  1554  0197  00FF               	movwf	btemp+1
  1555  0198  087F               	movf	btemp+1,w
  1556  0199  00B9               	movwf	_DP1
  1557                           
  1558                           ;MASTER.c: 206:     UP1 = (((pot1 * 100) / 51)-(CP1 * 100)-(DP1 * 10));
  1559  019A  3033               	movlw	51
  1560  019B  00A0               	movwf	___awdiv@divisor
  1561  019C  3000               	movlw	0
  1562  019D  00A1               	movwf	___awdiv@divisor+1
  1563  019E  083B               	movf	_pot1,w
  1564  019F  00A8               	movwf	??_map
  1565  01A0  01A9               	clrf	??_map+1
  1566  01A1  0828               	movf	??_map,w
  1567  01A2  00F2               	movwf	___wmul@multiplier
  1568  01A3  0829               	movf	??_map+1,w
  1569  01A4  00F3               	movwf	___wmul@multiplier+1
  1570  01A5  3064               	movlw	100
  1571  01A6  00F4               	movwf	___wmul@multiplicand
  1572  01A7  3000               	movlw	0
  1573  01A8  00F5               	movwf	___wmul@multiplicand+1
  1574  01A9  120A  118A  2352  120A  118A  	fcall	___wmul
  1575  01AE  0873               	movf	?___wmul+1,w
  1576  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1577  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1578  01B1  00A3               	movwf	___awdiv@dividend+1
  1579  01B2  0872               	movf	?___wmul,w
  1580  01B3  00A2               	movwf	___awdiv@dividend
  1581  01B4  120A  118A  225B  120A  118A  	fcall	___awdiv
  1582  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1583  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1584  01BB  0820               	movf	?___awdiv,w
  1585  01BC  00AA               	movwf	??_map+2
  1586  01BD  0821               	movf	?___awdiv+1,w
  1587  01BE  00AB               	movwf	??_map+3
  1588  01BF  309C               	movlw	156
  1589  01C0  00FF               	movwf	btemp+1
  1590  01C1  087F               	movf	btemp+1,w
  1591  01C2  00F2               	movwf	___bmul@multiplicand
  1592  01C3  083A               	movf	_CP1,w
  1593  01C4  120A  118A  2442  120A  118A  	fcall	___bmul
  1594  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1595  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1596  01CB  00AC               	movwf	??_map+4
  1597  01CC  30F6               	movlw	246
  1598  01CD  00FF               	movwf	btemp+1
  1599  01CE  087F               	movf	btemp+1,w
  1600  01CF  00F2               	movwf	___bmul@multiplicand
  1601  01D0  0839               	movf	_DP1,w
  1602  01D1  120A  118A  2442  120A  118A  	fcall	___bmul
  1603  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1604  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1605  01D8  072C               	addwf	??_map+4,w
  1606  01D9  072A               	addwf	??_map+2,w
  1607  01DA  00FF               	movwf	btemp+1
  1608  01DB  087F               	movf	btemp+1,w
  1609  01DC  00B8               	movwf	_UP1
  1610  01DD                     l1465:
  1611                           
  1612                           ;MASTER.c: 208:     C1 = (CP1 + 0x30);
  1613  01DD  083A               	movf	_CP1,w
  1614  01DE  3E30               	addlw	48
  1615  01DF  00FF               	movwf	btemp+1
  1616  01E0  087F               	movf	btemp+1,w
  1617  01E1  00B7               	movwf	_C1
  1618  01E2                     l1467:
  1619                           
  1620                           ;MASTER.c: 209:     D1 = (DP1 + 0x30);
  1621  01E2  0839               	movf	_DP1,w
  1622  01E3  3E30               	addlw	48
  1623  01E4  00FF               	movwf	btemp+1
  1624  01E5  087F               	movf	btemp+1,w
  1625  01E6  00B6               	movwf	_D1
  1626  01E7                     l1469:
  1627                           
  1628                           ;MASTER.c: 210:     U1 = (UP1 + 0x30);
  1629  01E7  0838               	movf	_UP1,w
  1630  01E8  3E30               	addlw	48
  1631  01E9  00FF               	movwf	btemp+1
  1632  01EA  087F               	movf	btemp+1,w
  1633  01EB  00B5               	movwf	_U1
  1634  01EC                     l107:
  1635  01EC  0008               	return
  1636  01ED                     __end_of_map:
  1637                           
  1638                           	psect	text6
  1639  0352                     __ptext6:	
  1640 ;; *************** function ___wmul *****************
  1641 ;; Defined at:
  1642 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  multiplier      2    2[COMMON] unsigned int 
  1645 ;;  multiplicand    2    4[COMMON] unsigned int 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;  product         2    6[COMMON] unsigned int 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2    2[COMMON] unsigned int 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         4       0       0       0       0
  1658 ;;      Locals:         2       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0
  1660 ;;      Totals:         6       0       0       0       0
  1661 ;;Total ram usage:        6 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_map
  1668 ;;		_map2
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function ___wmul
  1674  0352                     ___wmul:
  1675  0352                     l1389:	
  1676                           ;incstack = 0
  1677                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1678                           
  1679  0352  01F6               	clrf	___wmul@product
  1680  0353  01F7               	clrf	___wmul@product+1
  1681  0354                     l1391:
  1682  0354  1C72               	btfss	___wmul@multiplier,0
  1683  0355  2B57               	goto	u471
  1684  0356  2B58               	goto	u470
  1685  0357                     u471:
  1686  0357  2B5E               	goto	l285
  1687  0358                     u470:
  1688  0358                     l1393:
  1689  0358  0874               	movf	___wmul@multiplicand,w
  1690  0359  07F6               	addwf	___wmul@product,f
  1691  035A  1803               	skipnc
  1692  035B  0AF7               	incf	___wmul@product+1,f
  1693  035C  0875               	movf	___wmul@multiplicand+1,w
  1694  035D  07F7               	addwf	___wmul@product+1,f
  1695  035E                     l285:
  1696  035E  3001               	movlw	1
  1697  035F                     u485:
  1698  035F  1003               	clrc
  1699  0360  0DF4               	rlf	___wmul@multiplicand,f
  1700  0361  0DF5               	rlf	___wmul@multiplicand+1,f
  1701  0362  3EFF               	addlw	-1
  1702  0363  1D03               	skipz
  1703  0364  2B5F               	goto	u485
  1704  0365                     l1395:
  1705  0365  3001               	movlw	1
  1706  0366                     u495:
  1707  0366  1003               	clrc
  1708  0367  0CF3               	rrf	___wmul@multiplier+1,f
  1709  0368  0CF2               	rrf	___wmul@multiplier,f
  1710  0369  3EFF               	addlw	-1
  1711  036A  1D03               	skipz
  1712  036B  2B66               	goto	u495
  1713  036C                     l1397:
  1714  036C  0872               	movf	___wmul@multiplier,w
  1715  036D  0473               	iorwf	___wmul@multiplier+1,w
  1716  036E  1D03               	btfss	3,2
  1717  036F  2B71               	goto	u501
  1718  0370  2B72               	goto	u500
  1719  0371                     u501:
  1720  0371  2B54               	goto	l1391
  1721  0372                     u500:
  1722  0372                     l1399:
  1723  0372  0877               	movf	___wmul@product+1,w
  1724  0373  00F3               	movwf	?___wmul+1
  1725  0374  0876               	movf	___wmul@product,w
  1726  0375  00F2               	movwf	?___wmul
  1727  0376                     l287:
  1728  0376  0008               	return
  1729  0377                     __end_of___wmul:
  1730                           
  1731                           	psect	text7
  1732  0442                     __ptext7:	
  1733 ;; *************** function ___bmul *****************
  1734 ;; Defined at:
  1735 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  multiplier      1    wreg     unsigned char 
  1738 ;;  multiplicand    1    2[COMMON] unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  multiplier      1    4[COMMON] unsigned char 
  1741 ;;  product         1    3[COMMON] unsigned char 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      unsigned char 
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, btemp+1
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         1       0       0       0       0
  1752 ;;      Locals:         2       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0
  1754 ;;      Totals:         3       0       0       0       0
  1755 ;;Total ram usage:        3 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_map
  1762 ;;		_map2
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function ___bmul
  1768  0442                     ___bmul:
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1772                           ;___bmul@multiplier stored from wreg
  1773  0442  00F4               	movwf	___bmul@multiplier
  1774  0443                     l1403:
  1775  0443  01F3               	clrf	___bmul@product
  1776  0444                     l1405:
  1777  0444  1C74               	btfss	___bmul@multiplier,0
  1778  0445  2C47               	goto	u511
  1779  0446  2C48               	goto	u510
  1780  0447                     u511:
  1781  0447  2C4C               	goto	l1409
  1782  0448                     u510:
  1783  0448                     l1407:
  1784  0448  0872               	movf	___bmul@multiplicand,w
  1785  0449  00FF               	movwf	btemp+1
  1786  044A  087F               	movf	btemp+1,w
  1787  044B  07F3               	addwf	___bmul@product,f
  1788  044C                     l1409:
  1789  044C  1003               	clrc
  1790  044D  0DF2               	rlf	___bmul@multiplicand,f
  1791  044E                     l1411:
  1792  044E  1003               	clrc
  1793  044F  0CF4               	rrf	___bmul@multiplier,f
  1794  0450                     l1413:
  1795  0450  0874               	movf	___bmul@multiplier,w
  1796  0451  1D03               	btfss	3,2
  1797  0452  2C54               	goto	u521
  1798  0453  2C55               	goto	u520
  1799  0454                     u521:
  1800  0454  2C44               	goto	l1405
  1801  0455                     u520:
  1802  0455                     l1415:
  1803  0455  0873               	movf	___bmul@product,w
  1804  0456                     l311:
  1805  0456  0008               	return
  1806  0457                     __end_of___bmul:
  1807                           
  1808                           	psect	text8
  1809  025B                     __ptext8:	
  1810 ;; *************** function ___awdiv *****************
  1811 ;; Defined at:
  1812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  divisor         2    0[BANK0 ] int 
  1815 ;;  dividend        2    2[BANK0 ] int 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  quotient        2    6[BANK0 ] int 
  1818 ;;  sign            1    5[BANK0 ] unsigned char 
  1819 ;;  counter         1    4[BANK0 ] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  2    0[BANK0 ] int 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0, btemp+1
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       4       0       0       0
  1830 ;;      Locals:         0       4       0       0       0
  1831 ;;      Temps:          0       0       0       0       0
  1832 ;;      Totals:         0       8       0       0       0
  1833 ;;Total ram usage:        8 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_map
  1840 ;;		_map2
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function ___awdiv
  1846  025B                     ___awdiv:
  1847  025B                     l1419:	
  1848                           ;incstack = 0
  1849                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1850                           
  1851  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1852  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1853  025D  01A5               	clrf	___awdiv@sign
  1854  025E                     l1421:
  1855  025E  1FA1               	btfss	___awdiv@divisor+1,7
  1856  025F  2A61               	goto	u531
  1857  0260  2A62               	goto	u530
  1858  0261                     u531:
  1859  0261  2A69               	goto	l1427
  1860  0262                     u530:
  1861  0262                     l1423:
  1862  0262  09A0               	comf	___awdiv@divisor,f
  1863  0263  09A1               	comf	___awdiv@divisor+1,f
  1864  0264  0AA0               	incf	___awdiv@divisor,f
  1865  0265  1903               	skipnz
  1866  0266  0AA1               	incf	___awdiv@divisor+1,f
  1867  0267                     l1425:
  1868  0267  01A5               	clrf	___awdiv@sign
  1869  0268  0AA5               	incf	___awdiv@sign,f
  1870  0269                     l1427:
  1871  0269  1FA3               	btfss	___awdiv@dividend+1,7
  1872  026A  2A6C               	goto	u541
  1873  026B  2A6D               	goto	u540
  1874  026C                     u541:
  1875  026C  2A76               	goto	l1433
  1876  026D                     u540:
  1877  026D                     l1429:
  1878  026D  09A2               	comf	___awdiv@dividend,f
  1879  026E  09A3               	comf	___awdiv@dividend+1,f
  1880  026F  0AA2               	incf	___awdiv@dividend,f
  1881  0270  1903               	skipnz
  1882  0271  0AA3               	incf	___awdiv@dividend+1,f
  1883  0272                     l1431:
  1884  0272  3001               	movlw	1
  1885  0273  00FF               	movwf	btemp+1
  1886  0274  087F               	movf	btemp+1,w
  1887  0275  06A5               	xorwf	___awdiv@sign,f
  1888  0276                     l1433:
  1889  0276  01A6               	clrf	___awdiv@quotient
  1890  0277  01A7               	clrf	___awdiv@quotient+1
  1891  0278                     l1435:
  1892  0278  0820               	movf	___awdiv@divisor,w
  1893  0279  0421               	iorwf	___awdiv@divisor+1,w
  1894  027A  1903               	btfsc	3,2
  1895  027B  2A7D               	goto	u551
  1896  027C  2A7E               	goto	u550
  1897  027D                     u551:
  1898  027D  2AB5               	goto	l1455
  1899  027E                     u550:
  1900  027E                     l1437:
  1901  027E  01A4               	clrf	___awdiv@counter
  1902  027F  0AA4               	incf	___awdiv@counter,f
  1903  0280  2A8C               	goto	l1443
  1904  0281                     l1439:
  1905  0281  3001               	movlw	1
  1906  0282                     u565:
  1907  0282  1003               	clrc
  1908  0283  0DA0               	rlf	___awdiv@divisor,f
  1909  0284  0DA1               	rlf	___awdiv@divisor+1,f
  1910  0285  3EFF               	addlw	-1
  1911  0286  1D03               	skipz
  1912  0287  2A82               	goto	u565
  1913  0288                     l1441:
  1914  0288  3001               	movlw	1
  1915  0289  00FF               	movwf	btemp+1
  1916  028A  087F               	movf	btemp+1,w
  1917  028B  07A4               	addwf	___awdiv@counter,f
  1918  028C                     l1443:
  1919  028C  1FA1               	btfss	___awdiv@divisor+1,7
  1920  028D  2A8F               	goto	u571
  1921  028E  2A90               	goto	u570
  1922  028F                     u571:
  1923  028F  2A81               	goto	l1439
  1924  0290                     u570:
  1925  0290                     l1445:
  1926  0290  3001               	movlw	1
  1927  0291                     u585:
  1928  0291  1003               	clrc
  1929  0292  0DA6               	rlf	___awdiv@quotient,f
  1930  0293  0DA7               	rlf	___awdiv@quotient+1,f
  1931  0294  3EFF               	addlw	-1
  1932  0295  1D03               	skipz
  1933  0296  2A91               	goto	u585
  1934  0297  0821               	movf	___awdiv@divisor+1,w
  1935  0298  0223               	subwf	___awdiv@dividend+1,w
  1936  0299  1D03               	skipz
  1937  029A  2A9D               	goto	u595
  1938  029B  0820               	movf	___awdiv@divisor,w
  1939  029C  0222               	subwf	___awdiv@dividend,w
  1940  029D                     u595:
  1941  029D  1C03               	skipc
  1942  029E  2AA0               	goto	u591
  1943  029F  2AA1               	goto	u590
  1944  02A0                     u591:
  1945  02A0  2AA8               	goto	l1451
  1946  02A1                     u590:
  1947  02A1                     l1447:
  1948  02A1  0820               	movf	___awdiv@divisor,w
  1949  02A2  02A2               	subwf	___awdiv@dividend,f
  1950  02A3  0821               	movf	___awdiv@divisor+1,w
  1951  02A4  1C03               	skipc
  1952  02A5  03A3               	decf	___awdiv@dividend+1,f
  1953  02A6  02A3               	subwf	___awdiv@dividend+1,f
  1954  02A7                     l1449:
  1955  02A7  1426               	bsf	___awdiv@quotient,0
  1956  02A8                     l1451:
  1957  02A8  3001               	movlw	1
  1958  02A9                     u605:
  1959  02A9  1003               	clrc
  1960  02AA  0CA1               	rrf	___awdiv@divisor+1,f
  1961  02AB  0CA0               	rrf	___awdiv@divisor,f
  1962  02AC  3EFF               	addlw	-1
  1963  02AD  1D03               	skipz
  1964  02AE  2AA9               	goto	u605
  1965  02AF                     l1453:
  1966  02AF  3001               	movlw	1
  1967  02B0  02A4               	subwf	___awdiv@counter,f
  1968  02B1  1D03               	btfss	3,2
  1969  02B2  2AB4               	goto	u611
  1970  02B3  2AB5               	goto	u610
  1971  02B4                     u611:
  1972  02B4  2A90               	goto	l1445
  1973  02B5                     u610:
  1974  02B5                     l1455:
  1975  02B5  0825               	movf	___awdiv@sign,w
  1976  02B6  1903               	btfsc	3,2
  1977  02B7  2AB9               	goto	u621
  1978  02B8  2ABA               	goto	u620
  1979  02B9                     u621:
  1980  02B9  2ABF               	goto	l1459
  1981  02BA                     u620:
  1982  02BA                     l1457:
  1983  02BA  09A6               	comf	___awdiv@quotient,f
  1984  02BB  09A7               	comf	___awdiv@quotient+1,f
  1985  02BC  0AA6               	incf	___awdiv@quotient,f
  1986  02BD  1903               	skipnz
  1987  02BE  0AA7               	incf	___awdiv@quotient+1,f
  1988  02BF                     l1459:
  1989  02BF  0827               	movf	___awdiv@quotient+1,w
  1990  02C0  00A1               	movwf	?___awdiv+1
  1991  02C1  0826               	movf	___awdiv@quotient,w
  1992  02C2  00A0               	movwf	?___awdiv
  1993  02C3                     l438:
  1994  02C3  0008               	return
  1995  02C4                     __end_of___awdiv:
  1996                           
  1997                           	psect	text9
  1998  0320                     __ptext9:	
  1999 ;; *************** function _Setup *****************
  2000 ;; Defined at:
  2001 ;;		line 165 in file "MASTER.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       0       0       0
  2016 ;;      Locals:         0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0
  2018 ;;      Totals:         0       0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    4
  2022 ;; This function calls:
  2023 ;;		_Lcd_Cmd
  2024 ;;		_Lcd_Init
  2025 ;;		_initOscm
  2026 ;;		_spiInit
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function _Setup
  2034  0320                     _Setup:
  2035  0320                     l1215:	
  2036                           ;incstack = 0
  2037                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2038                           
  2039                           
  2040                           ;MASTER.c: 166:     TRISA = 0;
  2041  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2042  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0322  0185               	clrf	5	;volatile
  2044                           
  2045                           ;MASTER.c: 167:     TRISE = 0;
  2046  0323  0189               	clrf	9	;volatile
  2047  0324                     l1217:
  2048                           
  2049                           ;MASTER.c: 168:     initOscm(6);
  2050  0324  3006               	movlw	6
  2051  0325  120A  118A  22C4  120A  118A  	fcall	_initOscm
  2052  032A                     l1219:
  2053                           
  2054                           ;MASTER.c: 169:     Lcd_Init();
  2055  032A  120A  118A  23C0  120A  118A  	fcall	_Lcd_Init
  2056  032F                     l1221:
  2057                           
  2058                           ;MASTER.c: 170:     Lcd_Cmd(0x8A);
  2059  032F  308A               	movlw	138
  2060  0330  120A  118A  23D9  120A  118A  	fcall	_Lcd_Cmd
  2061  0335                     l1223:
  2062                           
  2063                           ;MASTER.c: 171:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_
      +                          LOW, SPI_IDLE_2_ACTIVE);
  2064  0335  01F2               	clrf	spiInit@sDataSample
  2065  0336  01F3               	clrf	spiInit@sClockIdle
  2066  0337  01F4               	clrf	spiInit@sTransmitEdge
  2067  0338  3020               	movlw	32
  2068  0339  120A  118A  2416  120A  118A  	fcall	_spiInit
  2069  033E                     l1225:
  2070                           
  2071                           ;MASTER.c: 172:     ANSEL = 0;
  2072  033E  1683               	bsf	3,5	;RP0=1, select bank3
  2073  033F  1703               	bsf	3,6	;RP1=1, select bank3
  2074  0340  0188               	clrf	8	;volatile
  2075  0341                     l1227:
  2076                           
  2077                           ;MASTER.c: 173:     ANSELH = 0;
  2078  0341  0189               	clrf	9	;volatile
  2079  0342                     l1229:
  2080                           
  2081                           ;MASTER.c: 174:     PORTA = 0;
  2082  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0343  1303               	bcf	3,6	;RP1=0, select bank0
  2084  0344  0185               	clrf	5	;volatile
  2085  0345                     l1231:
  2086                           
  2087                           ;MASTER.c: 175:     PORTB = 0;
  2088  0345  0186               	clrf	6	;volatile
  2089  0346                     l1233:
  2090                           
  2091                           ;MASTER.c: 176:     PORTC = 0;
  2092  0346  0187               	clrf	7	;volatile
  2093  0347                     l1235:
  2094                           
  2095                           ;MASTER.c: 177:     PORTD = 0;
  2096  0347  0188               	clrf	8	;volatile
  2097  0348                     l1237:
  2098                           
  2099                           ;MASTER.c: 178:     PORTE = 0;
  2100  0348  0189               	clrf	9	;volatile
  2101  0349                     l1239:
  2102                           
  2103                           ;MASTER.c: 180:     TRISC = 0b00010000;
  2104  0349  3010               	movlw	16
  2105  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2106  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2107  034C  0087               	movwf	7	;volatile
  2108  034D                     l1241:
  2109                           
  2110                           ;MASTER.c: 181:     TRISD = 0;
  2111  034D  0188               	clrf	8	;volatile
  2112  034E                     l1243:
  2113                           
  2114                           ;MASTER.c: 182:     TRISB = 0;
  2115  034E  0186               	clrf	6	;volatile
  2116  034F                     l1245:
  2117                           
  2118                           ;MASTER.c: 183:     OPTION_REG = 0b10000111;
  2119  034F  3087               	movlw	135
  2120  0350  0081               	movwf	1	;volatile
  2121  0351                     l104:
  2122  0351  0008               	return
  2123  0352                     __end_of_Setup:
  2124                           
  2125                           	psect	text10
  2126  0416                     __ptext10:	
  2127 ;; *************** function _spiInit *****************
  2128 ;; Defined at:
  2129 ;;		line 13 in file "SSP.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  sType           1    wreg     enum E1264
  2132 ;;  sDataSample     1    2[COMMON] enum E1272
  2133 ;;  sClockIdle      1    3[COMMON] enum E1276
  2134 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  sType           1    5[COMMON] enum E1264
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         3       0       0       0       0
  2147 ;;      Locals:         1       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0
  2149 ;;      Totals:         4       0       0       0       0
  2150 ;;Total ram usage:        4 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_Setup
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           
  2161                           ;psect for function _spiInit
  2162  0416                     _spiInit:
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2166                           ;spiInit@sType stored from wreg
  2167  0416  00F5               	movwf	spiInit@sType
  2168  0417                     l1129:
  2169                           
  2170                           ;SSP.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SSP.c: 14: {;SSP.c: 15:     TRISC5 = 0;
  2171  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2172  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2173  0419  1287               	bcf	7,5	;volatile
  2174                           
  2175                           ;SSP.c: 16:     if(sType & 0b00000100)
  2176  041A  1D75               	btfss	spiInit@sType,2
  2177  041B  2C1D               	goto	u241
  2178  041C  2C1E               	goto	u240
  2179  041D                     u241:
  2180  041D  2C22               	goto	l1135
  2181  041E                     u240:
  2182  041E                     l1131:
  2183                           
  2184                           ;SSP.c: 17:     {;SSP.c: 18:         SSPSTAT = sTransmitEdge;
  2185  041E  0874               	movf	spiInit@sTransmitEdge,w
  2186  041F  0094               	movwf	20	;volatile
  2187  0420                     l1133:
  2188                           
  2189                           ;SSP.c: 19:         TRISC3 = 1;
  2190  0420  1587               	bsf	7,3	;volatile
  2191                           
  2192                           ;SSP.c: 20:     }
  2193  0421  2C26               	goto	l126
  2194  0422                     l1135:
  2195                           
  2196                           ;SSP.c: 22:     {;SSP.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  2197  0422  0872               	movf	spiInit@sDataSample,w
  2198  0423  0474               	iorwf	spiInit@sTransmitEdge,w
  2199  0424  0094               	movwf	20	;volatile
  2200  0425                     l1137:
  2201                           
  2202                           ;SSP.c: 24:         TRISC3 = 0;
  2203  0425  1187               	bcf	7,3	;volatile
  2204  0426                     l126:	
  2205                           ;SSP.c: 25:     }
  2206                           
  2207                           
  2208                           ;SSP.c: 27:     SSPCON = sType | sClockIdle;
  2209  0426  0875               	movf	spiInit@sType,w
  2210  0427  0473               	iorwf	spiInit@sClockIdle,w
  2211  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2213  042A  0094               	movwf	20	;volatile
  2214  042B                     l127:
  2215  042B  0008               	return
  2216  042C                     __end_of_spiInit:
  2217                           
  2218                           	psect	text11
  2219  02C4                     __ptext11:	
  2220 ;; *************** function _initOscm *****************
  2221 ;; Defined at:
  2222 ;;		line 7 in file "oscm.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  IRCF            1    wreg     unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  IRCF            1    4[COMMON] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         1       0       0       0       0
  2238 ;;      Temps:          2       0       0       0       0
  2239 ;;      Totals:         3       0       0       0       0
  2240 ;;Total ram usage:        3 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_Setup
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _initOscm
  2252  02C4                     _initOscm:
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _initOscm: [wreg-fsr0h+status,2+status,0]
  2256                           ;initOscm@IRCF stored from wreg
  2257  02C4  00F4               	movwf	initOscm@IRCF
  2258  02C5                     l1117:
  2259                           
  2260                           ;oscm.c: 9:     switch (IRCF){
  2261  02C5  2AFC               	goto	l1121
  2262  02C6                     l189:	
  2263                           ;oscm.c: 11:         case 0:
  2264                           
  2265                           
  2266                           ;oscm.c: 12:             OSCCONbits.IRCF2 = 0;
  2267  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2268  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2269  02C8  130F               	bcf	15,6	;volatile
  2270                           
  2271                           ;oscm.c: 13:             OSCCONbits.IRCF1 = 0;
  2272  02C9  128F               	bcf	15,5	;volatile
  2273                           
  2274                           ;oscm.c: 14:             OSCCONbits.IRCF0 = 0;
  2275  02CA  120F               	bcf	15,4	;volatile
  2276                           
  2277                           ;oscm.c: 16:             break;
  2278  02CB  2B1E               	goto	l190
  2279  02CC                     l191:	
  2280                           ;oscm.c: 18:         case 1:
  2281                           
  2282                           
  2283                           ;oscm.c: 19:             OSCCONbits.IRCF2 = 0;
  2284  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2285  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2286  02CE  130F               	bcf	15,6	;volatile
  2287                           
  2288                           ;oscm.c: 20:             OSCCONbits.IRCF1 = 0;
  2289  02CF  128F               	bcf	15,5	;volatile
  2290                           
  2291                           ;oscm.c: 21:             OSCCONbits.IRCF0 = 1;
  2292  02D0  160F               	bsf	15,4	;volatile
  2293                           
  2294                           ;oscm.c: 22:             break;
  2295  02D1  2B1E               	goto	l190
  2296  02D2                     l192:	
  2297                           ;oscm.c: 24:         case 2:
  2298                           
  2299                           
  2300                           ;oscm.c: 25:             OSCCONbits.IRCF2 = 0;
  2301  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2302  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2303  02D4  130F               	bcf	15,6	;volatile
  2304                           
  2305                           ;oscm.c: 26:             OSCCONbits.IRCF1 = 1;
  2306  02D5  168F               	bsf	15,5	;volatile
  2307                           
  2308                           ;oscm.c: 27:             OSCCONbits.IRCF0 = 0;
  2309  02D6  120F               	bcf	15,4	;volatile
  2310                           
  2311                           ;oscm.c: 28:             break;
  2312  02D7  2B1E               	goto	l190
  2313  02D8                     l193:	
  2314                           ;oscm.c: 30:         case 3:
  2315                           
  2316                           
  2317                           ;oscm.c: 31:             OSCCONbits.IRCF2 = 0;
  2318  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2319  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2320  02DA  130F               	bcf	15,6	;volatile
  2321                           
  2322                           ;oscm.c: 32:             OSCCONbits.IRCF1 = 1;
  2323  02DB  168F               	bsf	15,5	;volatile
  2324                           
  2325                           ;oscm.c: 33:             OSCCONbits.IRCF0 = 1;
  2326  02DC  160F               	bsf	15,4	;volatile
  2327                           
  2328                           ;oscm.c: 34:             break;
  2329  02DD  2B1E               	goto	l190
  2330  02DE                     l194:	
  2331                           ;oscm.c: 36:         case 4:
  2332                           
  2333                           
  2334                           ;oscm.c: 37:             OSCCONbits.IRCF2 = 1;
  2335  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2336  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2337  02E0  170F               	bsf	15,6	;volatile
  2338                           
  2339                           ;oscm.c: 38:             OSCCONbits.IRCF1 = 0;
  2340  02E1  128F               	bcf	15,5	;volatile
  2341                           
  2342                           ;oscm.c: 39:             OSCCONbits.IRCF0 = 0;
  2343  02E2  120F               	bcf	15,4	;volatile
  2344                           
  2345                           ;oscm.c: 40:             break;
  2346  02E3  2B1E               	goto	l190
  2347  02E4                     l195:	
  2348                           ;oscm.c: 42:         case 5:
  2349                           
  2350                           
  2351                           ;oscm.c: 43:             OSCCONbits.IRCF2 = 1;
  2352  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  2353  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  2354  02E6  170F               	bsf	15,6	;volatile
  2355                           
  2356                           ;oscm.c: 44:             OSCCONbits.IRCF1 = 0;
  2357  02E7  128F               	bcf	15,5	;volatile
  2358                           
  2359                           ;oscm.c: 45:             OSCCONbits.IRCF0 = 1;
  2360  02E8  160F               	bsf	15,4	;volatile
  2361                           
  2362                           ;oscm.c: 46:             break;
  2363  02E9  2B1E               	goto	l190
  2364  02EA                     l196:	
  2365                           ;oscm.c: 49:         case 6:
  2366                           
  2367                           
  2368                           ;oscm.c: 50:             OSCCONbits.IRCF2 = 1;
  2369  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2370  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2371  02EC  170F               	bsf	15,6	;volatile
  2372                           
  2373                           ;oscm.c: 51:             OSCCONbits.IRCF1 = 1;
  2374  02ED  168F               	bsf	15,5	;volatile
  2375                           
  2376                           ;oscm.c: 52:             OSCCONbits.IRCF0 = 0;
  2377  02EE  120F               	bcf	15,4	;volatile
  2378                           
  2379                           ;oscm.c: 53:             break;
  2380  02EF  2B1E               	goto	l190
  2381  02F0                     l197:	
  2382                           ;oscm.c: 55:         case 7:
  2383                           
  2384                           
  2385                           ;oscm.c: 56:             OSCCONbits.IRCF2 = 1;
  2386  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2387  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2388  02F2  170F               	bsf	15,6	;volatile
  2389                           
  2390                           ;oscm.c: 57:             OSCCONbits.IRCF1 = 1;
  2391  02F3  168F               	bsf	15,5	;volatile
  2392                           
  2393                           ;oscm.c: 58:             OSCCONbits.IRCF0 = 1;
  2394  02F4  160F               	bsf	15,4	;volatile
  2395                           
  2396                           ;oscm.c: 59:             break;
  2397  02F5  2B1E               	goto	l190
  2398  02F6                     l198:	
  2399                           ;oscm.c: 64:         default:
  2400                           
  2401                           
  2402                           ;oscm.c: 65:             OSCCONbits.IRCF2 = 1;
  2403  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  2404  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  2405  02F8  170F               	bsf	15,6	;volatile
  2406                           
  2407                           ;oscm.c: 66:             OSCCONbits.IRCF1 = 1;
  2408  02F9  168F               	bsf	15,5	;volatile
  2409                           
  2410                           ;oscm.c: 67:             OSCCONbits.IRCF0 = 0;
  2411  02FA  120F               	bcf	15,4	;volatile
  2412                           
  2413                           ;oscm.c: 68:             break;
  2414  02FB  2B1E               	goto	l190
  2415  02FC                     l1121:
  2416  02FC  0874               	movf	initOscm@IRCF,w
  2417  02FD  00F2               	movwf	??_initOscm
  2418  02FE  01F3               	clrf	??_initOscm+1
  2419                           
  2420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2421                           ; Switch size 1, requested type "simple"
  2422                           ; Number of cases is 1, Range of values is 0 to 0
  2423                           ; switch strategies available:
  2424                           ; Name         Instructions Cycles
  2425                           ; simple_byte            4     3 (average)
  2426                           ; direct_byte           11     8 (fixed)
  2427                           ; jumptable            260     6 (fixed)
  2428                           ;	Chosen strategy is simple_byte
  2429  02FF  0873               	movf	??_initOscm+1,w
  2430  0300  3A00               	xorlw	0	; case 0
  2431  0301  1903               	skipnz
  2432  0302  2B04               	goto	l1571
  2433  0303  2AF6               	goto	l198
  2434  0304                     l1571:
  2435                           
  2436                           ; Switch size 1, requested type "simple"
  2437                           ; Number of cases is 8, Range of values is 0 to 7
  2438                           ; switch strategies available:
  2439                           ; Name         Instructions Cycles
  2440                           ; simple_byte           25    13 (average)
  2441                           ; direct_byte           32     8 (fixed)
  2442                           ; jumptable            260     6 (fixed)
  2443                           ;	Chosen strategy is simple_byte
  2444  0304  0872               	movf	??_initOscm,w
  2445  0305  3A00               	xorlw	0	; case 0
  2446  0306  1903               	skipnz
  2447  0307  2AC6               	goto	l189
  2448  0308  3A01               	xorlw	1	; case 1
  2449  0309  1903               	skipnz
  2450  030A  2ACC               	goto	l191
  2451  030B  3A03               	xorlw	3	; case 2
  2452  030C  1903               	skipnz
  2453  030D  2AD2               	goto	l192
  2454  030E  3A01               	xorlw	1	; case 3
  2455  030F  1903               	skipnz
  2456  0310  2AD8               	goto	l193
  2457  0311  3A07               	xorlw	7	; case 4
  2458  0312  1903               	skipnz
  2459  0313  2ADE               	goto	l194
  2460  0314  3A01               	xorlw	1	; case 5
  2461  0315  1903               	skipnz
  2462  0316  2AE4               	goto	l195
  2463  0317  3A03               	xorlw	3	; case 6
  2464  0318  1903               	skipnz
  2465  0319  2AEA               	goto	l196
  2466  031A  3A01               	xorlw	1	; case 7
  2467  031B  1903               	skipnz
  2468  031C  2AF0               	goto	l197
  2469  031D  2AF6               	goto	l198
  2470  031E                     l190:
  2471                           
  2472                           ;oscm.c: 72:     OSCCONbits.SCS = 1;
  2473  031E  140F               	bsf	15,0	;volatile
  2474  031F                     l199:
  2475  031F  0008               	return
  2476  0320                     __end_of_initOscm:
  2477                           
  2478                           	psect	text12
  2479  03C0                     __ptext12:	
  2480 ;; *************** function _Lcd_Init *****************
  2481 ;; Defined at:
  2482 ;;		line 41 in file "LCDM.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0
  2499 ;;      Totals:         0       0       0       0       0
  2500 ;;Total ram usage:        0 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    3
  2503 ;; This function calls:
  2504 ;;		_Lcd_Cmd
  2505 ;; This function is called by:
  2506 ;;		_Setup
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _Lcd_Init
  2512  03C0                     _Lcd_Init:
  2513  03C0                     l1127:	
  2514                           ;incstack = 0
  2515                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2516                           
  2517                           
  2518                           ;LCDM.c: 45:     Lcd_Cmd(0x38);
  2519  03C0  3038               	movlw	56
  2520  03C1  120A  118A  23D9  120A  118A  	fcall	_Lcd_Cmd
  2521                           
  2522                           ;LCDM.c: 46:     Lcd_Cmd(0x0C);
  2523  03C6  300C               	movlw	12
  2524  03C7  120A  118A  23D9  120A  118A  	fcall	_Lcd_Cmd
  2525                           
  2526                           ;LCDM.c: 47:     Lcd_Cmd(0x06);
  2527  03CC  3006               	movlw	6
  2528  03CD  120A  118A  23D9  120A  118A  	fcall	_Lcd_Cmd
  2529                           
  2530                           ;LCDM.c: 48:     Lcd_Cmd(0x80);
  2531  03D2  3080               	movlw	128
  2532  03D3  120A  118A  23D9  120A  118A  	fcall	_Lcd_Cmd
  2533  03D8                     l168:
  2534  03D8  0008               	return
  2535  03D9                     __end_of_Lcd_Init:
  2536                           
  2537                           	psect	text13
  2538  0377                     __ptext13:	
  2539 ;; *************** function _Lcd_Write_String *****************
  2540 ;; Defined at:
  2541 ;;		line 60 in file "LCDM.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  a               1    wreg     PTR unsigned char 
  2544 ;;		 -> STR_4(2), STR_3(5), STR_2(5), STR_1(4), 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  a               1    7[COMMON] PTR unsigned char 
  2547 ;;		 -> STR_4(2), STR_3(5), STR_2(5), STR_1(4), 
  2548 ;;  i               2    5[COMMON] int 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         0       0       0       0       0
  2559 ;;      Locals:         3       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0
  2561 ;;      Totals:         3       0       0       0       0
  2562 ;;Total ram usage:        3 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    3
  2565 ;; This function calls:
  2566 ;;		_Lcd_Write_Char
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function _Lcd_Write_String
  2574  0377                     _Lcd_Write_String:
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2578                           ;Lcd_Write_String@a stored from wreg
  2579  0377  00F7               	movwf	Lcd_Write_String@a
  2580  0378                     l1259:
  2581                           
  2582                           ;LCDM.c: 61:    int i;;LCDM.c: 62:  for(i=0;a[i]!='\0';i++)
  2583  0378  01F5               	clrf	Lcd_Write_String@i
  2584  0379  01F6               	clrf	Lcd_Write_String@i+1
  2585  037A  2B8E               	goto	l1265
  2586  037B                     l1261:
  2587                           
  2588                           ;LCDM.c: 63:     Lcd_Write_Char(a[i]);
  2589  037B  0875               	movf	Lcd_Write_String@i,w
  2590  037C  0777               	addwf	Lcd_Write_String@a,w
  2591  037D  0084               	movwf	4
  2592  037E  120A  118A  2400  120A  118A  	fcall	stringdir
  2593  0383  120A  118A  242C  120A  118A  	fcall	_Lcd_Write_Char
  2594  0388                     l1263:
  2595  0388  3001               	movlw	1
  2596  0389  07F5               	addwf	Lcd_Write_String@i,f
  2597  038A  1803               	skipnc
  2598  038B  0AF6               	incf	Lcd_Write_String@i+1,f
  2599  038C  3000               	movlw	0
  2600  038D  07F6               	addwf	Lcd_Write_String@i+1,f
  2601  038E                     l1265:
  2602  038E  0875               	movf	Lcd_Write_String@i,w
  2603  038F  0777               	addwf	Lcd_Write_String@a,w
  2604  0390  0084               	movwf	4
  2605  0391  120A  118A  2400  120A  118A  	fcall	stringdir
  2606  0396  3A00               	xorlw	0
  2607  0397  1D03               	skipz
  2608  0398  2B9A               	goto	u441
  2609  0399  2B9B               	goto	u440
  2610  039A                     u441:
  2611  039A  2B7B               	goto	l1261
  2612  039B                     u440:
  2613  039B                     l177:
  2614  039B  0008               	return
  2615  039C                     __end_of_Lcd_Write_String:
  2616                           
  2617                           	psect	text14
  2618  042C                     __ptext14:	
  2619 ;; *************** function _Lcd_Write_Char *****************
  2620 ;; Defined at:
  2621 ;;		line 51 in file "LCDM.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  a               1    wreg     unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  a               1    4[COMMON] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2635 ;;      Params:         0       0       0       0       0
  2636 ;;      Locals:         1       0       0       0       0
  2637 ;;      Temps:          1       0       0       0       0
  2638 ;;      Totals:         2       0       0       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    2
  2642 ;; This function calls:
  2643 ;;		_Lcd_Port
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;;		_Lcd_Write_String
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _Lcd_Write_Char
  2652  042C                     _Lcd_Write_Char:
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2656                           ;Lcd_Write_Char@a stored from wreg
  2657  042C  00F4               	movwf	Lcd_Write_Char@a
  2658  042D                     l1105:
  2659                           
  2660                           ;LCDM.c: 52:     PORTEbits.RE1 = 1;
  2661  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2662  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2663  042F  1489               	bsf	9,1	;volatile
  2664  0430                     l1107:
  2665                           
  2666                           ;LCDM.c: 53:    Lcd_Port(a);
  2667  0430  0874               	movf	Lcd_Write_Char@a,w
  2668  0431  120A  118A  2474  120A  118A  	fcall	_Lcd_Port
  2669  0436                     l1109:
  2670                           
  2671                           ;LCDM.c: 54:    PORTEbits.RE0 = 1;
  2672  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0438  1409               	bsf	9,0	;volatile
  2675  0439                     l1111:
  2676                           
  2677                           ;LCDM.c: 55:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2678  0439  300D               	movlw	13
  2679  043A  00F3               	movwf	??_Lcd_Write_Char
  2680  043B                     u697:
  2681  043B  0BF3               	decfsz	??_Lcd_Write_Char,f
  2682  043C  2C3B               	goto	u697
  2683  043D                     l1113:
  2684                           
  2685                           ;LCDM.c: 56:    PORTEbits.RE0 = 0;
  2686  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2687  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2688  043F  1009               	bcf	9,0	;volatile
  2689  0440                     l1115:
  2690                           
  2691                           ;LCDM.c: 57:    PORTEbits.RE1 = 0;
  2692  0440  1089               	bcf	9,1	;volatile
  2693  0441                     l171:
  2694  0441  0008               	return
  2695  0442                     __end_of_Lcd_Write_Char:
  2696                           
  2697                           	psect	text15
  2698  039C                     __ptext15:	
  2699 ;; *************** function _Lcd_Set_Cursor *****************
  2700 ;; Defined at:
  2701 ;;		line 30 in file "LCDM.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  a               1    wreg     unsigned char 
  2704 ;;  b               1    6[COMMON] unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  a               1    7[COMMON] unsigned char 
  2707 ;;  temp            1    8[COMMON] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         1       0       0       0       0
  2718 ;;      Locals:         2       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0
  2720 ;;      Totals:         3       0       0       0       0
  2721 ;;Total ram usage:        3 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    3
  2724 ;; This function calls:
  2725 ;;		_Lcd_Cmd
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           
  2732                           ;psect for function _Lcd_Set_Cursor
  2733  039C                     _Lcd_Set_Cursor:
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2737                           ;Lcd_Set_Cursor@a stored from wreg
  2738  039C  00F7               	movwf	Lcd_Set_Cursor@a
  2739  039D                     l1247:
  2740                           
  2741                           ;LCDM.c: 31:     char temp;;LCDM.c: 32:     if (a == 1) {
  2742  039D  0377               	decf	Lcd_Set_Cursor@a,w
  2743  039E  1D03               	btfss	3,2
  2744  039F  2BA1               	goto	u421
  2745  03A0  2BA2               	goto	u420
  2746  03A1                     u421:
  2747  03A1  2BAE               	goto	l1253
  2748  03A2                     u420:
  2749  03A2                     l1249:
  2750                           
  2751                           ;LCDM.c: 33:         temp = 0x80 + b - 1;
  2752  03A2  0876               	movf	Lcd_Set_Cursor@b,w
  2753  03A3  3E7F               	addlw	127
  2754  03A4  00FF               	movwf	btemp+1
  2755  03A5  087F               	movf	btemp+1,w
  2756  03A6  00F8               	movwf	Lcd_Set_Cursor@temp
  2757  03A7                     l1251:
  2758                           
  2759                           ;LCDM.c: 34:         Lcd_Cmd(temp);
  2760  03A7  0878               	movf	Lcd_Set_Cursor@temp,w
  2761  03A8  120A  118A  23D9  120A  118A  	fcall	_Lcd_Cmd
  2762                           
  2763                           ;LCDM.c: 35:     } else if (a == 2) {
  2764  03AD  2BBF               	goto	l165
  2765  03AE                     l1253:
  2766  03AE  3002               	movlw	2
  2767  03AF  0677               	xorwf	Lcd_Set_Cursor@a,w
  2768  03B0  1D03               	btfss	3,2
  2769  03B1  2BB3               	goto	u431
  2770  03B2  2BB4               	goto	u430
  2771  03B3                     u431:
  2772  03B3  2BBF               	goto	l165
  2773  03B4                     u430:
  2774  03B4                     l1255:
  2775                           
  2776                           ;LCDM.c: 36:         temp = 0xC0 + b - 1;
  2777  03B4  0876               	movf	Lcd_Set_Cursor@b,w
  2778  03B5  3EBF               	addlw	191
  2779  03B6  00FF               	movwf	btemp+1
  2780  03B7  087F               	movf	btemp+1,w
  2781  03B8  00F8               	movwf	Lcd_Set_Cursor@temp
  2782  03B9                     l1257:
  2783                           
  2784                           ;LCDM.c: 37:         Lcd_Cmd(temp);
  2785  03B9  0878               	movf	Lcd_Set_Cursor@temp,w
  2786  03BA  120A  118A  23D9  120A  118A  	fcall	_Lcd_Cmd
  2787  03BF                     l165:
  2788  03BF  0008               	return
  2789  03C0                     __end_of_Lcd_Set_Cursor:
  2790                           
  2791                           	psect	text16
  2792  03D9                     __ptext16:	
  2793 ;; *************** function _Lcd_Cmd *****************
  2794 ;; Defined at:
  2795 ;;		line 16 in file "LCDM.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  a               1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  a               1    5[COMMON] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, pclath, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2809 ;;      Params:         0       0       0       0       0
  2810 ;;      Locals:         1       0       0       0       0
  2811 ;;      Temps:          2       0       0       0       0
  2812 ;;      Totals:         3       0       0       0       0
  2813 ;;Total ram usage:        3 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; Hardware stack levels required when called:    2
  2816 ;; This function calls:
  2817 ;;		_Lcd_Port
  2818 ;; This function is called by:
  2819 ;;		_Setup
  2820 ;;		_Lcd_Set_Cursor
  2821 ;;		_Lcd_Init
  2822 ;;		_Lcd_Clear
  2823 ;;		_Lcd_Shift_Right
  2824 ;;		_Lcd_Shift_Left
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           
  2829                           ;psect for function _Lcd_Cmd
  2830  03D9                     _Lcd_Cmd:
  2831                           
  2832                           ;incstack = 0
  2833                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2834                           ;Lcd_Cmd@a stored from wreg
  2835  03D9  00F5               	movwf	Lcd_Cmd@a
  2836  03DA                     l1095:
  2837                           
  2838                           ;LCDM.c: 17:     Lcd_Port(a);
  2839  03DA  0875               	movf	Lcd_Cmd@a,w
  2840  03DB  120A  118A  2474  120A  118A  	fcall	_Lcd_Port
  2841  03E0                     l1097:
  2842                           
  2843                           ;LCDM.c: 18:     PORTEbits.RE1 = 0;
  2844  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2845  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2846  03E2  1089               	bcf	9,1	;volatile
  2847  03E3                     l1099:
  2848                           
  2849                           ;LCDM.c: 20:     PORTEbits.RE0 = 1;
  2850  03E3  1409               	bsf	9,0	;volatile
  2851  03E4                     l1101:
  2852                           
  2853                           ;LCDM.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2854  03E4  3007               	movlw	7
  2855  03E5  00F4               	movwf	??_Lcd_Cmd+1
  2856  03E6  307D               	movlw	125
  2857  03E7  00F3               	movwf	??_Lcd_Cmd
  2858  03E8                     u707:
  2859  03E8  0BF3               	decfsz	??_Lcd_Cmd,f
  2860  03E9  2BE8               	goto	u707
  2861  03EA  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2862  03EB  2BE8               	goto	u707
  2863  03EC                     l1103:
  2864                           
  2865                           ;LCDM.c: 22:     PORTEbits.RE0 = 0;
  2866  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2867  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2868  03EE  1009               	bcf	9,0	;volatile
  2869  03EF                     l156:
  2870  03EF  0008               	return
  2871  03F0                     __end_of_Lcd_Cmd:
  2872                           
  2873                           	psect	text17
  2874  0474                     __ptext17:	
  2875 ;; *************** function _Lcd_Port *****************
  2876 ;; Defined at:
  2877 ;;		line 12 in file "LCDM.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  a               1    wreg     unsigned char 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  a               1    2[COMMON] unsigned char 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         0       0       0       0       0
  2892 ;;      Locals:         1       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0
  2894 ;;      Totals:         1       0       0       0       0
  2895 ;;Total ram usage:        1 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_Lcd_Cmd
  2902 ;;		_Lcd_Write_Char
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           
  2907                           ;psect for function _Lcd_Port
  2908  0474                     _Lcd_Port:
  2909                           
  2910                           ;incstack = 0
  2911                           ; Regs used in _Lcd_Port: [wreg]
  2912                           ;Lcd_Port@a stored from wreg
  2913  0474  00F2               	movwf	Lcd_Port@a
  2914  0475                     l1093:
  2915                           
  2916                           ;LCDM.c: 13:     PORTA = a;
  2917  0475  0872               	movf	Lcd_Port@a,w
  2918  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0478  0085               	movwf	5	;volatile
  2921  0479                     l153:
  2922  0479  0008               	return
  2923  047A                     __end_of_Lcd_Port:
  2924                           
  2925                           	psect	text18
  2926  0467                     __ptext18:	
  2927 ;; *************** function _ISR *****************
  2928 ;; Defined at:
  2929 ;;		line 70 in file "MASTER.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		None
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0
  2945 ;;      Temps:          2       0       0       0       0
  2946 ;;      Totals:         2       0       0       0       0
  2947 ;;Total ram usage:        2 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		Interrupt level 1
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           
  2957                           ;psect for function _ISR
  2958  0467                     _ISR:
  2959  0467                     i1l91:
  2960  0467  0871               	movf	??_ISR+1,w
  2961  0468  008A               	movwf	10
  2962  0469  0E70               	swapf	??_ISR^(0+4294967168),w
  2963  046A  0083               	movwf	3
  2964  046B  0EFE               	swapf	btemp,f
  2965  046C  0E7E               	swapf	btemp,w
  2966  046D  0009               	retfie
  2967  046E                     __end_of_ISR:
  2968  007E                     btemp	set	126	;btemp
  2969  007E                     wtemp0	set	126
  2970                           
  2971                           	psect	intentry
  2972  0004                     __pintentry:	
  2973                           ;incstack = 0
  2974                           ; Regs used in _ISR: []
  2975                           
  2976  0004                     interrupt_function:
  2977  007E                     saved_w	set	btemp
  2978  0004  00FE               	movwf	btemp
  2979  0005  0E03               	swapf	3,w
  2980  0006  00F0               	movwf	??_ISR
  2981  0007  080A               	movf	10,w
  2982  0008  00F1               	movwf	??_ISR+1
  2983  0009  120A  118A  2C67   	ljmp	_ISR
  2984                           
  2985                           	psect	config
  2986                           
  2987                           ;Config register CONFIG1 @ 0x2007
  2988                           ;	Oscillator Selection bits
  2989                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2990                           ;	Watchdog Timer Enable bit
  2991                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2992                           ;	Power-up Timer Enable bit
  2993                           ;	PWRTE = OFF, PWRT disabled
  2994                           ;	RE3/MCLR pin function select bit
  2995                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2996                           ;	Code Protection bit
  2997                           ;	CP = OFF, Program memory code protection is disabled
  2998                           ;	Data Code Protection bit
  2999                           ;	CPD = OFF, Data memory code protection is disabled
  3000                           ;	Brown Out Reset Selection bits
  3001                           ;	BOREN = OFF, BOR disabled
  3002                           ;	Internal External Switchover bit
  3003                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3004                           ;	Fail-Safe Clock Monitor Enabled bit
  3005                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3006                           ;	Low Voltage Programming Enable bit
  3007                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3008                           ;	In-Circuit Debugger Mode bit
  3009                           ;	DEBUG = 0x1, unprogrammed default
  3010  2007                     	org	8199
  3011  2007  20D4               	dw	8404
  3012                           
  3013                           ;Config register CONFIG2 @ 0x2008
  3014                           ;	Brown-out Reset Selection bit
  3015                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3016                           ;	Flash Program Memory Self Write Enable bits
  3017                           ;	WRT = OFF, Write protection off
  3018  2008                     	org	8200
  3019  2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     15      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[2]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_map
    _main->_map2
    _map2->___wmul
    _map->___wmul
    ___awdiv->___wmul
    _Setup->_Lcd_Cmd
    _Setup->_spiInit
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _map2->___awdiv
    _map->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7452
                                             14 BANK0      1     1      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _Setup
                                _map
                               _map2
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _map2                                                 2     2      0    2877
                                              8 COMMON     2     2      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _map                                                  8     8      0    2911
                                              8 COMMON     2     2      0
                                              8 BANK0      6     6      0
                            ___awdiv
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     856
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     496
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1525
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     470
                            _Lcd_Cmd
                           _Lcd_Init
                           _initOscm
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOscm                                             3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     266
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     862
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
     _initOscm
     _spiInit
   _map
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _map2
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
   _spiRead
     _spiReceiveWait
   _spiWrite

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      29       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      1D       5       36.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      29      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 15 01:44:50 2021

                        pc 0002             ___bmul@product 0073                _SSPSTATbits 0094  
                       _C1 0037                         _D1 0036                         _U1 0035  
             ___awdiv@sign 0025                         fsr 0004        ___wmul@multiplicand 0074  
                      l110 025A                        l104 0351                        l130 0460  
                      l107 01EC                        l133 0466                        l126 0426  
                      l127 042B                        l311 0456                        l144 045F  
                      l136 0473                        l153 0479                        l171 0441  
                      l156 03EF                        l165 03BF                        l190 031E  
                      l191 02CC                        l168 03D8                        l192 02D2  
                      l177 039B                        l193 02D8                        l194 02DE  
                      l195 02E4                        l196 02EA                        l197 02F0  
                      l189 02C6                        l285 035E                        l198 02F6  
                      l438 02C3                        l199 031F                        l287 0376  
                      _CO1 0031                        _CO2 0030                        _CP1 003A  
                      _CO3 002F                        _DP1 0039                        u240 041E  
                      u241 041D                        u250 0466                        u251 0465  
                      u420 03A2                        u500 0372                        u421 03A1  
                      u501 0371                        u430 03B4                        u510 0448  
                      u431 03B3                        u511 0447                        u440 039B  
                      u520 0455                        u441 039A                        u521 0454  
                      u610 02B5                        u530 0262                        u611 02B4  
                      u531 0261                        u620 02BA                        u540 026D  
                      _ISR 0467                        u621 02B9                        u605 02A9  
                      u541 026C                        u550 027E                        u470 0358  
                      u630 006F                        u551 027D                        u471 0357  
                      u631 006E                        u640 0099                        u641 0098  
                      u570 0290                        u707 03E8                        u571 028F  
                      u565 0282                        u485 035F                        _UP1 0038  
                      u590 02A1                        u591 02A0                        u495 0366  
                      u585 0291                        u657 0074                        u595 029D  
                      u667 008C                        u677 009E                        u687 00B4  
                      u697 043B                        _map 0130                        fsr0 0004  
                     ?_ISR 0070                       l1101 03E4                       l1103 03EC  
                     l1111 0439                       l1113 043D                       l1105 042D  
                     l1121 02FC                       l1115 0440                       l1107 0430  
                     l1131 041E                       l1109 0436                       l1117 02C5  
                     l1133 0420                       l1221 032F                       l1127 03C0  
                     l1135 0422                       l1231 0345                       l1223 0335  
                     l1215 0320                       l1137 0425                       l1129 0417  
                     l1241 034D                       l1233 0346                       l1225 033E  
                     l1217 0324                       l1251 03A7                       l1243 034E  
                     l1235 0347                       l1227 0341                       l1219 032A  
                     l1411 044E                       l1403 0443                       l1139 0460  
                     l1093 0475                       l1253 03AE                       l1261 037B  
                     l1245 034F                       l1237 0348                       l1229 0342  
                     l1421 025E                       l1413 0450                       l1405 0444  
                     l1501 0078                       l1095 03DA                       l1255 03B4  
                     l1247 039D                       l1263 0388                       l1239 0349  
                     l1431 0272                       l1423 0262                       l1415 0455  
                     l1407 0448                       l1511 0099                       l1503 007E  
                     l1097 03E0                       l1257 03B9                       l1249 03A2  
                     l1265 038E                       l1441 0288                       l1433 0276  
                     l1425 0267                       l1409 044C                       l1521 00B8  
                     l1513 009A                       l1505 0088                       l1099 03E3  
                     l1259 0378                       l1451 02A8                       l1443 028C  
                     l1435 0278                       l1427 0269                       l1419 025B  
                     l1283 046F                       l1531 00D6                       l1523 00BB  
                     l1515 00A2                       l1507 0090                       l1453 02AF  
                     l1445 0290                       l1437 027E                       l1429 026D  
                     l1285 0457                       l1541 0100                       l1533 00DC  
                     l1517 00A8                       l1525 00BC                       l1509 0093  
                     l1447 02A1                       l1439 0281                       l1455 02B5  
                     l1391 0354                       l1463 0130                       l1471 01ED  
                     l1287 045C                       l1543 0108                       l1535 00E4  
                     l1527 00C4                       l1519 00B0                       l1457 02BA  
                     l1449 02A7                       l1393 0358                       l1465 01DD  
                     l1473 024B                       l1545 0112                       l1537 00EE  
                     l1529 00CC                       l1481 002A                       l1571 0304  
                     l1459 02BF                       l1395 0365                       l1467 01E2  
                     l1475 0250                       l1547 011A                       l1539 00F6  
                     l1491 005E                       l1483 0032                       l1397 036C  
                     l1389 0352                       l1469 01E7                       l1477 0255  
                     l1549 0124                       l1493 0063                       l1485 0042  
                     l1399 0372                       l1495 0068                       l1487 0048  
                     l1479 0025                       l1497 006F                       l1489 0058  
                     l1499 0070                       ?_map 0070                       STR_1 0410  
                     STR_2 040B                       STR_3 0406                       STR_4 0414  
                     i1l91 0467          ?_Lcd_Write_String 0070                       _map2 01ED  
                     _main 0025                       _pot1 003B                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 03F0  
        ___bmul@multiplier 0074                      ??_ISR 0070                      ??_map 0028  
                    ?_map2 0070                      ?_main 0070            __end_of___awdiv 02C4  
                    _ANSEL 0188            ___awdiv@divisor 0020                      _CONTC 007A  
                    _CONTD 0033                      _CONTU 0032                      _INDIC 0034  
          ___awdiv@counter 0024                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _Setup 0320                      _cont1 007B                      pclath 000A  
          __end_of_spiInit 042C            __end_of_spiRead 0460                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 03D9           __end_of_Lcd_Port 047A  
          __initialization 000F               __end_of_map2 025B               __end_of_main 0130  
                   ??_map2 0078                     ??_main 002E                     ?_Setup 0070  
         ___awdiv@dividend 0022                     _ANSELH 0189                  ??_Lcd_Cmd 0073  
  __size_of_Lcd_Write_Char 0016                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPCON 0014                     _SSPBUF 0013                     ___bmul 0442  
                   ___wmul 0352                  ??___awdiv 0078           __end_of_initOscm 0320  
         ___awdiv@quotient 0026                     saved_w 007E           __end_of_spiWrite 0474  
                ??_spiInit 0075                  ??_spiRead 0072            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0076    __end_of__initialization 0021        ___bmul@multiplicand 0072  
           __pcstackCOMMON 0070              __end_of_Setup 0352             _Lcd_Set_Cursor 039C  
                  ??_Setup 0076                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 002F                 __pmaintext 0025                    ?___bmul 0072  
                  ?___wmul 0072                 __pintentry 0004    __size_of_spiReceiveWait 0007  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 03C0                 ??_Lcd_Init 0076  
             initOscm@IRCF 0074                 ??_Lcd_Port 0072                    _SSPSTAT 0094  
               __stringtab 0400             _Lcd_Write_Char 042C                    _Lcd_Cmd 03D9  
                ?_initOscm 0070                  ?_spiWrite 0070            __size_of___bmul 0015  
                  ___awdiv 025B            __size_of___wmul 0025            ?_Lcd_Set_Cursor 0076  
                  _desecho 003C                    __ptext1 046E                    __ptext2 0457  
                  __ptext3 0460                    __ptext4 01ED                    __ptext5 0130  
                  __ptext6 0352                    __ptext7 0442                    __ptext8 025B  
                  __ptext9 0320               __size_of_ISR 0007               __size_of_map 00BD  
                  _spiInit 0416                    _spiRead 0457     __end_of_Lcd_Write_Char 0442  
     end_of_initialization 0021                 ??_initOscm 0072                 ??_spiWrite 0072  
                Lcd_Port@a 0072                  _PORTCbits 0007                  _PORTEbits 0009  
              spiWrite@dat 0072            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075             _spiReceiveWait 0460             __end_of___bmul 0457  
           __end_of___wmul 0377           _Lcd_Write_String 0377        start_initialization 000F  
              __end_of_ISR 046E                __end_of_map 01ED          __size_of_Lcd_Init 0019  
        __size_of_Lcd_Port 0006     __end_of_spiReceiveWait 0467                   ??___bmul 0073  
                 ??___wmul 0076            Lcd_Write_Char@a 0074                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
        __size_of_initOscm 005C            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0020          __size_of_spiWrite 0006                  __pstrings 0400  
                 ?_spiInit 0072                   ?_spiRead 0070             __size_of_Setup 0032  
     spiInit@sTransmitEdge 0074          interrupt_function 0004             ___wmul@product 0076  
       spiInit@sDataSample 0072                   Lcd_Cmd@a 0075                __stringbase 0405  
        ___wmul@multiplier 0072           ??_Lcd_Write_Char 0073                   _Lcd_Init 03C0  
                 _Lcd_Port 0474   __end_of_Lcd_Write_String 039C           __size_of_Lcd_Cmd 0017  
         __size_of___awdiv 0069                   _map$1001 0078         __end_of__stringtab 0406  
                 __ptext10 0416                   __ptext11 02C4                   __ptext12 03C0  
                 __ptext13 0377                   __ptext14 042C                   __ptext15 039C  
                 __ptext16 03D9                   __ptext17 0474                   __ptext18 0467  
         __size_of_spiInit 0016           __size_of_spiRead 0009                   _initOscm 02C4  
            __size_of_map2 006E              __size_of_main 010B                   _spiWrite 046E  
             spiInit@sType 0075          spiInit@sClockIdle 0073                   intlevel1 0000  
         ??_spiReceiveWait 0072                  stringcode 0400                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0078                 _OPTION_REG 0081                   stringdir 0400  
                 stringtab 0400  
