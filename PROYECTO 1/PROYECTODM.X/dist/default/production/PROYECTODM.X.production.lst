

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Feb 12 00:08:36 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 09/04/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0009                     _PORTEbits	set	9
   446  0014                     _SSPCONbits	set	20
   447  000C                     _PIR1bits	set	12
   448  000B                     _INTCONbits	set	11
   449  0009                     _PORTE	set	9
   450  0008                     _PORTD	set	8
   451  0007                     _PORTC	set	7
   452  0006                     _PORTB	set	6
   453  0005                     _PORTA	set	5
   454  008F                     _OSCCONbits	set	143
   455  0094                     _SSPSTATbits	set	148
   456  008C                     _PIE1bits	set	140
   457  0081                     _OPTION_REG	set	129
   458  0086                     _TRISB	set	134
   459  0088                     _TRISD	set	136
   460  0087                     _TRISC	set	135
   461  0089                     _TRISE	set	137
   462  0085                     _TRISA	set	133
   463  04A6                     _CKE	set	1190
   464  04A7                     _SMP	set	1191
   465  0189                     _ANSELH	set	393
   466  0188                     _ANSEL	set	392
   467                           
   468                           	psect	strings
   469  016F                     __pstrings:
   470  016F                     stringtab:
   471  016F                     __stringtab:
   472  016F                     stringcode:	
   473                           ;	String table - string pointers are 1 byte each
   474                           
   475  016F                     stringdir:
   476  016F  3001               	movlw	high stringdir
   477  0170  008A               	movwf	10
   478  0171  0804               	movf	4,w
   479  0172  0A84               	incf	4,f
   480  0173  0782               	addwf	2,f
   481  0174                     __stringbase:
   482  0174  3400               	retlw	0
   483  0175                     __end_of__stringtab:
   484  0175                     STR_3:
   485  0175  3454               	retlw	84	;'T'
   486  0176  3445               	retlw	69	;'E'
   487  0177  344D               	retlw	77	;'M'
   488  0178  3450               	retlw	80	;'P'
   489  0179  3400               	retlw	0
   490  017A                     STR_2:
   491  017A  3443               	retlw	67	;'C'
   492  017B  344F               	retlw	79	;'O'
   493  017C  344E               	retlw	78	;'N'
   494  017D  3454               	retlw	84	;'T'
   495  017E  3400               	retlw	0
   496  017F                     STR_1:
   497  017F  3441               	retlw	65	;'A'
   498  0180  3444               	retlw	68	;'D'
   499  0181  3443               	retlw	67	;'C'
   500  0182  3400               	retlw	0
   501                           
   502                           	psect	cinit
   503  000F                     start_initialization:	
   504                           ; #config settings
   505                           
   506  000F                     __initialization:
   507  000F                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  000F                     __end_of__initialization:
   511  000F  0183               	clrf	3
   512  0010  120A  118A  28A9   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	cstackCOMMON
   515  0070                     __pcstackCOMMON:
   516  0070                     ?_Setup:
   517  0070                     ?_Lcd_Write_String:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_initOscm:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_Lcd_Init:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_Lcd_Cmd:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_ISR:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ??_ISR:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_main:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_Lcd_Port:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_Lcd_Write_Char:	
   542                           ; 1 bytes @ 0x0
   543                           
   544                           
   545                           ; 1 bytes @ 0x0
   546  0070                     	ds	2
   547  0072                     ??_initOscm:
   548  0072                     ??_Lcd_Port:	
   549                           ; 1 bytes @ 0x2
   550                           
   551  0072                     Lcd_Port@a:	
   552                           ; 1 bytes @ 0x2
   553                           
   554                           
   555                           ; 1 bytes @ 0x2
   556  0072                     	ds	1
   557  0073                     ??_Lcd_Cmd:
   558  0073                     ??_Lcd_Write_Char:	
   559                           ; 1 bytes @ 0x3
   560                           
   561                           
   562                           ; 1 bytes @ 0x3
   563  0073                     	ds	1
   564  0074                     Lcd_Write_Char@a:
   565  0074                     initOscm@IRCF:	
   566                           ; 1 bytes @ 0x4
   567                           
   568                           
   569                           ; 1 bytes @ 0x4
   570  0074                     	ds	1
   571  0075                     ??_Lcd_Write_String:
   572  0075                     Lcd_Cmd@a:	
   573                           ; 1 bytes @ 0x5
   574                           
   575  0075                     Lcd_Write_String@i:	
   576                           ; 1 bytes @ 0x5
   577                           
   578                           
   579                           ; 2 bytes @ 0x5
   580  0075                     	ds	1
   581  0076                     ??_Setup:
   582  0076                     ?_Lcd_Set_Cursor:	
   583                           ; 1 bytes @ 0x6
   584                           
   585  0076                     ??_Lcd_Init:	
   586                           ; 1 bytes @ 0x6
   587                           
   588  0076                     Lcd_Set_Cursor@b:	
   589                           ; 1 bytes @ 0x6
   590                           
   591                           
   592                           ; 1 bytes @ 0x6
   593  0076                     	ds	1
   594  0077                     ??_Lcd_Set_Cursor:
   595  0077                     Lcd_Set_Cursor@a:	
   596                           ; 1 bytes @ 0x7
   597                           
   598  0077                     Lcd_Write_String@a:	
   599                           ; 1 bytes @ 0x7
   600                           
   601                           
   602                           ; 1 bytes @ 0x7
   603  0077                     	ds	1
   604  0078                     Lcd_Set_Cursor@temp:
   605                           
   606                           ; 1 bytes @ 0x8
   607  0078                     	ds	1
   608  0079                     ??_main:
   609                           
   610                           	psect	maintext
   611  00A9                     __pmaintext:	
   612                           ; 1 bytes @ 0x9
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 62 in file "MASTER.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : B00/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   632 ;;      Params:         0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels required when called:    5
   638 ;; This function calls:
   639 ;;		_Lcd_Set_Cursor
   640 ;;		_Lcd_Write_String
   641 ;;		_Setup
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _main
   649  00A9                     _main:
   650  00A9                     l977:	
   651                           ;incstack = 0
   652                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   653                           
   654                           
   655                           ;MASTER.c: 64:     Setup();
   656  00A9  120A  118A  206F  120A  118A  	fcall	_Setup
   657  00AE                     l979:
   658                           
   659                           ;MASTER.c: 65:     Lcd_Set_Cursor(1, 1);
   660  00AE  01F6               	clrf	Lcd_Set_Cursor@b
   661  00AF  0AF6               	incf	Lcd_Set_Cursor@b,f
   662  00B0  3001               	movlw	1
   663  00B1  120A  118A  2105  120A  118A  	fcall	_Lcd_Set_Cursor
   664  00B6                     l981:
   665                           
   666                           ;MASTER.c: 66:     Lcd_Write_String("ADC");
   667  00B6  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   668  00B7  120A  118A  20E0  120A  118A  	fcall	_Lcd_Write_String
   669                           
   670                           ;MASTER.c: 67:     Lcd_Set_Cursor(1, 7);
   671  00BC  3007               	movlw	7
   672  00BD  00FF               	movwf	btemp+1
   673  00BE  087F               	movf	btemp+1,w
   674  00BF  00F6               	movwf	Lcd_Set_Cursor@b
   675  00C0  3001               	movlw	1
   676  00C1  120A  118A  2105  120A  118A  	fcall	_Lcd_Set_Cursor
   677  00C6                     l983:
   678                           
   679                           ;MASTER.c: 68:     Lcd_Write_String("CONT");
   680  00C6  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   681  00C7  120A  118A  20E0  120A  118A  	fcall	_Lcd_Write_String
   682  00CC                     l985:
   683                           
   684                           ;MASTER.c: 69:     Lcd_Set_Cursor(1, 13);
   685  00CC  300D               	movlw	13
   686  00CD  00FF               	movwf	btemp+1
   687  00CE  087F               	movf	btemp+1,w
   688  00CF  00F6               	movwf	Lcd_Set_Cursor@b
   689  00D0  3001               	movlw	1
   690  00D1  120A  118A  2105  120A  118A  	fcall	_Lcd_Set_Cursor
   691                           
   692                           ;MASTER.c: 70:     Lcd_Write_String("TEMP");
   693  00D6  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   694  00D7  120A  118A  20E0  120A  118A  	fcall	_Lcd_Write_String
   695  00DC                     l54:	
   696                           ;MASTER.c: 81:     while (1) {
   697                           
   698  00DC                     l55:	
   699                           ;MASTER.c: 93:     }
   700                           
   701  00DC  28DC               	goto	l54
   702  00DD  120A  118A  280C   	ljmp	start
   703  00E0                     __end_of_main:
   704                           
   705                           	psect	text1
   706  006F                     __ptext1:	
   707 ;; *************** function _Setup *****************
   708 ;; Defined at:
   709 ;;		line 99 in file "MASTER.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         0       0       0       0       0
   725 ;;      Temps:          0       0       0       0       0
   726 ;;      Totals:         0       0       0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    4
   730 ;; This function calls:
   731 ;;		_Lcd_Cmd
   732 ;;		_Lcd_Init
   733 ;;		_initOscm
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _Setup
   741  006F                     _Setup:
   742  006F                     l801:	
   743                           ;incstack = 0
   744                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   745                           
   746                           
   747                           ;MASTER.c: 100:     TRISA = 0;
   748  006F  1683               	bsf	3,5	;RP0=1, select bank1
   749  0070  1303               	bcf	3,6	;RP1=0, select bank1
   750  0071  0185               	clrf	5	;volatile
   751                           
   752                           ;MASTER.c: 101:     TRISE = 0;
   753  0072  0189               	clrf	9	;volatile
   754  0073                     l803:
   755                           
   756                           ;MASTER.c: 102:     initOscm(6);
   757  0073  3006               	movlw	6
   758  0074  120A  118A  2013  120A  118A  	fcall	_initOscm
   759  0079                     l805:
   760                           
   761                           ;MASTER.c: 103:     Lcd_Init();
   762  0079  120A  118A  2129  120A  118A  	fcall	_Lcd_Init
   763  007E                     l807:
   764                           
   765                           ;MASTER.c: 104:     Lcd_Cmd(0x8A);
   766  007E  308A               	movlw	138
   767  007F  120A  118A  2142  120A  118A  	fcall	_Lcd_Cmd
   768  0084                     l809:
   769                           
   770                           ;MASTER.c: 105:     ANSEL = 0;
   771  0084  1683               	bsf	3,5	;RP0=1, select bank3
   772  0085  1703               	bsf	3,6	;RP1=1, select bank3
   773  0086  0188               	clrf	8	;volatile
   774  0087                     l811:
   775                           
   776                           ;MASTER.c: 106:     ANSELH = 0b00000011;
   777  0087  3003               	movlw	3
   778  0088  0089               	movwf	9	;volatile
   779  0089                     l813:
   780                           
   781                           ;MASTER.c: 107:     PORTA = 0;
   782  0089  1283               	bcf	3,5	;RP0=0, select bank0
   783  008A  1303               	bcf	3,6	;RP1=0, select bank0
   784  008B  0185               	clrf	5	;volatile
   785  008C                     l815:
   786                           
   787                           ;MASTER.c: 108:     PORTB = 0;
   788  008C  0186               	clrf	6	;volatile
   789  008D                     l817:
   790                           
   791                           ;MASTER.c: 109:     PORTC = 0;
   792  008D  0187               	clrf	7	;volatile
   793  008E                     l819:
   794                           
   795                           ;MASTER.c: 110:     PORTD = 0;
   796  008E  0188               	clrf	8	;volatile
   797  008F                     l821:
   798                           
   799                           ;MASTER.c: 111:     PORTE = 0;
   800  008F  0189               	clrf	9	;volatile
   801  0090                     l823:
   802                           
   803                           ;MASTER.c: 113:     TRISC = 0;
   804  0090  1683               	bsf	3,5	;RP0=1, select bank1
   805  0091  1303               	bcf	3,6	;RP1=0, select bank1
   806  0092  0187               	clrf	7	;volatile
   807  0093                     l825:
   808                           
   809                           ;MASTER.c: 114:     TRISD = 0;
   810  0093  0188               	clrf	8	;volatile
   811  0094                     l827:
   812                           
   813                           ;MASTER.c: 115:     TRISB = 0b00000011;
   814  0094  3003               	movlw	3
   815  0095  0086               	movwf	6	;volatile
   816  0096                     l829:
   817                           
   818                           ;MASTER.c: 116:     OPTION_REG = 0b10000111;
   819  0096  3087               	movlw	135
   820  0097  0081               	movwf	1	;volatile
   821  0098                     l831:
   822                           
   823                           ;MASTER.c: 117:     INTCONbits.GIE = 1;
   824  0098  178B               	bsf	11,7	;volatile
   825  0099                     l833:
   826                           
   827                           ;MASTER.c: 118:     INTCONbits.T0IE = 1;
   828  0099  168B               	bsf	11,5	;volatile
   829  009A                     l835:
   830                           
   831                           ;MASTER.c: 119:     INTCONbits.PEIE = 1;
   832  009A  170B               	bsf	11,6	;volatile
   833  009B                     l837:
   834                           
   835                           ;MASTER.c: 120:     PIE1bits.ADIE = 1;
   836  009B  170C               	bsf	12,6	;volatile
   837  009C                     l839:
   838                           
   839                           ;MASTER.c: 121:     INTCONbits.T0IF = 0;
   840  009C  110B               	bcf	11,2	;volatile
   841  009D                     l841:
   842                           
   843                           ;MASTER.c: 122:     PIR1bits.ADIF = 0;
   844  009D  1283               	bcf	3,5	;RP0=0, select bank0
   845  009E  1303               	bcf	3,6	;RP1=0, select bank0
   846  009F  130C               	bcf	12,6	;volatile
   847  00A0                     l843:
   848                           
   849                           ;MASTER.c: 123:     PIR1bits.TXIF = 0;
   850  00A0  120C               	bcf	12,4	;volatile
   851  00A1                     l845:
   852                           
   853                           ;MASTER.c: 124:     PIE1bits.TXIE = 1;
   854  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   855  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   856  00A3  160C               	bsf	12,4	;volatile
   857  00A4                     l847:
   858                           
   859                           ;MASTER.c: 125:     PIE1bits.RCIE = 1;
   860  00A4  168C               	bsf	12,5	;volatile
   861  00A5                     l849:
   862                           
   863                           ;MASTER.c: 126:     PIR1bits.RCIF = 0;
   864  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   865  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   866  00A7  128C               	bcf	12,5	;volatile
   867  00A8                     l60:
   868  00A8  0008               	return
   869  00A9                     __end_of_Setup:
   870                           
   871                           	psect	text2
   872  0013                     __ptext2:	
   873 ;; *************** function _initOscm *****************
   874 ;; Defined at:
   875 ;;		line 7 in file "oscm.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  IRCF            1    wreg     unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  IRCF            1    4[COMMON] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         1       0       0       0       0
   891 ;;      Temps:          2       0       0       0       0
   892 ;;      Totals:         3       0       0       0       0
   893 ;;Total ram usage:        3 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_Setup
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _initOscm
   905  0013                     _initOscm:
   906                           
   907                           ;incstack = 0
   908                           ; Regs used in _initOscm: [wreg-fsr0h+status,2+status,0]
   909                           ;initOscm@IRCF stored from wreg
   910  0013  00F4               	movwf	initOscm@IRCF
   911  0014                     l777:
   912                           
   913                           ;oscm.c: 9:     switch (IRCF){
   914  0014  284B               	goto	l781
   915  0015                     l163:	
   916                           ;oscm.c: 11:         case 0:
   917                           
   918                           
   919                           ;oscm.c: 12:             OSCCONbits.IRCF2 = 0;
   920  0015  1683               	bsf	3,5	;RP0=1, select bank1
   921  0016  1303               	bcf	3,6	;RP1=0, select bank1
   922  0017  130F               	bcf	15,6	;volatile
   923                           
   924                           ;oscm.c: 13:             OSCCONbits.IRCF1 = 0;
   925  0018  128F               	bcf	15,5	;volatile
   926                           
   927                           ;oscm.c: 14:             OSCCONbits.IRCF0 = 0;
   928  0019  120F               	bcf	15,4	;volatile
   929                           
   930                           ;oscm.c: 16:             break;
   931  001A  286D               	goto	l164
   932  001B                     l165:	
   933                           ;oscm.c: 18:         case 1:
   934                           
   935                           
   936                           ;oscm.c: 19:             OSCCONbits.IRCF2 = 0;
   937  001B  1683               	bsf	3,5	;RP0=1, select bank1
   938  001C  1303               	bcf	3,6	;RP1=0, select bank1
   939  001D  130F               	bcf	15,6	;volatile
   940                           
   941                           ;oscm.c: 20:             OSCCONbits.IRCF1 = 0;
   942  001E  128F               	bcf	15,5	;volatile
   943                           
   944                           ;oscm.c: 21:             OSCCONbits.IRCF0 = 1;
   945  001F  160F               	bsf	15,4	;volatile
   946                           
   947                           ;oscm.c: 22:             break;
   948  0020  286D               	goto	l164
   949  0021                     l166:	
   950                           ;oscm.c: 24:         case 2:
   951                           
   952                           
   953                           ;oscm.c: 25:             OSCCONbits.IRCF2 = 0;
   954  0021  1683               	bsf	3,5	;RP0=1, select bank1
   955  0022  1303               	bcf	3,6	;RP1=0, select bank1
   956  0023  130F               	bcf	15,6	;volatile
   957                           
   958                           ;oscm.c: 26:             OSCCONbits.IRCF1 = 1;
   959  0024  168F               	bsf	15,5	;volatile
   960                           
   961                           ;oscm.c: 27:             OSCCONbits.IRCF0 = 0;
   962  0025  120F               	bcf	15,4	;volatile
   963                           
   964                           ;oscm.c: 28:             break;
   965  0026  286D               	goto	l164
   966  0027                     l167:	
   967                           ;oscm.c: 30:         case 3:
   968                           
   969                           
   970                           ;oscm.c: 31:             OSCCONbits.IRCF2 = 0;
   971  0027  1683               	bsf	3,5	;RP0=1, select bank1
   972  0028  1303               	bcf	3,6	;RP1=0, select bank1
   973  0029  130F               	bcf	15,6	;volatile
   974                           
   975                           ;oscm.c: 32:             OSCCONbits.IRCF1 = 1;
   976  002A  168F               	bsf	15,5	;volatile
   977                           
   978                           ;oscm.c: 33:             OSCCONbits.IRCF0 = 1;
   979  002B  160F               	bsf	15,4	;volatile
   980                           
   981                           ;oscm.c: 34:             break;
   982  002C  286D               	goto	l164
   983  002D                     l168:	
   984                           ;oscm.c: 36:         case 4:
   985                           
   986                           
   987                           ;oscm.c: 37:             OSCCONbits.IRCF2 = 1;
   988  002D  1683               	bsf	3,5	;RP0=1, select bank1
   989  002E  1303               	bcf	3,6	;RP1=0, select bank1
   990  002F  170F               	bsf	15,6	;volatile
   991                           
   992                           ;oscm.c: 38:             OSCCONbits.IRCF1 = 0;
   993  0030  128F               	bcf	15,5	;volatile
   994                           
   995                           ;oscm.c: 39:             OSCCONbits.IRCF0 = 0;
   996  0031  120F               	bcf	15,4	;volatile
   997                           
   998                           ;oscm.c: 40:             break;
   999  0032  286D               	goto	l164
  1000  0033                     l169:	
  1001                           ;oscm.c: 42:         case 5:
  1002                           
  1003                           
  1004                           ;oscm.c: 43:             OSCCONbits.IRCF2 = 1;
  1005  0033  1683               	bsf	3,5	;RP0=1, select bank1
  1006  0034  1303               	bcf	3,6	;RP1=0, select bank1
  1007  0035  170F               	bsf	15,6	;volatile
  1008                           
  1009                           ;oscm.c: 44:             OSCCONbits.IRCF1 = 0;
  1010  0036  128F               	bcf	15,5	;volatile
  1011                           
  1012                           ;oscm.c: 45:             OSCCONbits.IRCF0 = 1;
  1013  0037  160F               	bsf	15,4	;volatile
  1014                           
  1015                           ;oscm.c: 46:             break;
  1016  0038  286D               	goto	l164
  1017  0039                     l170:	
  1018                           ;oscm.c: 49:         case 6:
  1019                           
  1020                           
  1021                           ;oscm.c: 50:             OSCCONbits.IRCF2 = 1;
  1022  0039  1683               	bsf	3,5	;RP0=1, select bank1
  1023  003A  1303               	bcf	3,6	;RP1=0, select bank1
  1024  003B  170F               	bsf	15,6	;volatile
  1025                           
  1026                           ;oscm.c: 51:             OSCCONbits.IRCF1 = 1;
  1027  003C  168F               	bsf	15,5	;volatile
  1028                           
  1029                           ;oscm.c: 52:             OSCCONbits.IRCF0 = 0;
  1030  003D  120F               	bcf	15,4	;volatile
  1031                           
  1032                           ;oscm.c: 53:             break;
  1033  003E  286D               	goto	l164
  1034  003F                     l171:	
  1035                           ;oscm.c: 55:         case 7:
  1036                           
  1037                           
  1038                           ;oscm.c: 56:             OSCCONbits.IRCF2 = 1;
  1039  003F  1683               	bsf	3,5	;RP0=1, select bank1
  1040  0040  1303               	bcf	3,6	;RP1=0, select bank1
  1041  0041  170F               	bsf	15,6	;volatile
  1042                           
  1043                           ;oscm.c: 57:             OSCCONbits.IRCF1 = 1;
  1044  0042  168F               	bsf	15,5	;volatile
  1045                           
  1046                           ;oscm.c: 58:             OSCCONbits.IRCF0 = 1;
  1047  0043  160F               	bsf	15,4	;volatile
  1048                           
  1049                           ;oscm.c: 59:             break;
  1050  0044  286D               	goto	l164
  1051  0045                     l172:	
  1052                           ;oscm.c: 64:         default:
  1053                           
  1054                           
  1055                           ;oscm.c: 65:             OSCCONbits.IRCF2 = 1;
  1056  0045  1683               	bsf	3,5	;RP0=1, select bank1
  1057  0046  1303               	bcf	3,6	;RP1=0, select bank1
  1058  0047  170F               	bsf	15,6	;volatile
  1059                           
  1060                           ;oscm.c: 66:             OSCCONbits.IRCF1 = 1;
  1061  0048  168F               	bsf	15,5	;volatile
  1062                           
  1063                           ;oscm.c: 67:             OSCCONbits.IRCF0 = 0;
  1064  0049  120F               	bcf	15,4	;volatile
  1065                           
  1066                           ;oscm.c: 68:             break;
  1067  004A  286D               	goto	l164
  1068  004B                     l781:
  1069  004B  0874               	movf	initOscm@IRCF,w
  1070  004C  00F2               	movwf	??_initOscm
  1071  004D  01F3               	clrf	??_initOscm+1
  1072                           
  1073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1074                           ; Switch size 1, requested type "simple"
  1075                           ; Number of cases is 1, Range of values is 0 to 0
  1076                           ; switch strategies available:
  1077                           ; Name         Instructions Cycles
  1078                           ; simple_byte            4     3 (average)
  1079                           ; direct_byte           11     8 (fixed)
  1080                           ; jumptable            260     6 (fixed)
  1081                           ;	Chosen strategy is simple_byte
  1082  004E  0873               	movf	??_initOscm+1,w
  1083  004F  3A00               	xorlw	0	; case 0
  1084  0050  1903               	skipnz
  1085  0051  2853               	goto	l1007
  1086  0052  2845               	goto	l172
  1087  0053                     l1007:
  1088                           
  1089                           ; Switch size 1, requested type "simple"
  1090                           ; Number of cases is 8, Range of values is 0 to 7
  1091                           ; switch strategies available:
  1092                           ; Name         Instructions Cycles
  1093                           ; simple_byte           25    13 (average)
  1094                           ; direct_byte           32     8 (fixed)
  1095                           ; jumptable            260     6 (fixed)
  1096                           ;	Chosen strategy is simple_byte
  1097  0053  0872               	movf	??_initOscm,w
  1098  0054  3A00               	xorlw	0	; case 0
  1099  0055  1903               	skipnz
  1100  0056  2815               	goto	l163
  1101  0057  3A01               	xorlw	1	; case 1
  1102  0058  1903               	skipnz
  1103  0059  281B               	goto	l165
  1104  005A  3A03               	xorlw	3	; case 2
  1105  005B  1903               	skipnz
  1106  005C  2821               	goto	l166
  1107  005D  3A01               	xorlw	1	; case 3
  1108  005E  1903               	skipnz
  1109  005F  2827               	goto	l167
  1110  0060  3A07               	xorlw	7	; case 4
  1111  0061  1903               	skipnz
  1112  0062  282D               	goto	l168
  1113  0063  3A01               	xorlw	1	; case 5
  1114  0064  1903               	skipnz
  1115  0065  2833               	goto	l169
  1116  0066  3A03               	xorlw	3	; case 6
  1117  0067  1903               	skipnz
  1118  0068  2839               	goto	l170
  1119  0069  3A01               	xorlw	1	; case 7
  1120  006A  1903               	skipnz
  1121  006B  283F               	goto	l171
  1122  006C  2845               	goto	l172
  1123  006D                     l164:
  1124                           
  1125                           ;oscm.c: 72:     OSCCONbits.SCS = 1;
  1126  006D  140F               	bsf	15,0	;volatile
  1127  006E                     l173:
  1128  006E  0008               	return
  1129  006F                     __end_of_initOscm:
  1130                           
  1131                           	psect	text3
  1132  0129                     __ptext3:	
  1133 ;; *************** function _Lcd_Init *****************
  1134 ;; Defined at:
  1135 ;;		line 41 in file "LCDM.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; Hardware stack levels required when called:    3
  1156 ;; This function calls:
  1157 ;;		_Lcd_Cmd
  1158 ;; This function is called by:
  1159 ;;		_Setup
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _Lcd_Init
  1165  0129                     _Lcd_Init:
  1166  0129                     l787:	
  1167                           ;incstack = 0
  1168                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1169                           
  1170                           
  1171                           ;LCDM.c: 45:     Lcd_Cmd(0x38);
  1172  0129  3038               	movlw	56
  1173  012A  120A  118A  2142  120A  118A  	fcall	_Lcd_Cmd
  1174                           
  1175                           ;LCDM.c: 46:     Lcd_Cmd(0x0C);
  1176  012F  300C               	movlw	12
  1177  0130  120A  118A  2142  120A  118A  	fcall	_Lcd_Cmd
  1178                           
  1179                           ;LCDM.c: 47:     Lcd_Cmd(0x06);
  1180  0135  3006               	movlw	6
  1181  0136  120A  118A  2142  120A  118A  	fcall	_Lcd_Cmd
  1182                           
  1183                           ;LCDM.c: 48:     Lcd_Cmd(0x80);
  1184  013B  3080               	movlw	128
  1185  013C  120A  118A  2142  120A  118A  	fcall	_Lcd_Cmd
  1186  0141                     l142:
  1187  0141  0008               	return
  1188  0142                     __end_of_Lcd_Init:
  1189                           
  1190                           	psect	text4
  1191  00E0                     __ptext4:	
  1192 ;; *************** function _Lcd_Write_String *****************
  1193 ;; Defined at:
  1194 ;;		line 60 in file "LCDM.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  a               1    wreg     PTR unsigned char 
  1197 ;;		 -> STR_3(5), STR_2(5), STR_1(4), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  a               1    7[COMMON] PTR unsigned char 
  1200 ;;		 -> STR_3(5), STR_2(5), STR_1(4), 
  1201 ;;  i               2    5[COMMON] int 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         3       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0
  1214 ;;      Totals:         3       0       0       0       0
  1215 ;;Total ram usage:        3 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    3
  1218 ;; This function calls:
  1219 ;;		_Lcd_Write_Char
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _Lcd_Write_String
  1227  00E0                     _Lcd_Write_String:
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1231                           ;Lcd_Write_String@a stored from wreg
  1232  00E0  00F7               	movwf	Lcd_Write_String@a
  1233  00E1                     l969:
  1234                           
  1235                           ;LCDM.c: 61:    int i;;LCDM.c: 62:  for(i=0;a[i]!='\0';i++)
  1236  00E1  01F5               	clrf	Lcd_Write_String@i
  1237  00E2  01F6               	clrf	Lcd_Write_String@i+1
  1238  00E3  28F7               	goto	l975
  1239  00E4                     l971:
  1240                           
  1241                           ;LCDM.c: 63:     Lcd_Write_Char(a[i]);
  1242  00E4  0875               	movf	Lcd_Write_String@i,w
  1243  00E5  0777               	addwf	Lcd_Write_String@a,w
  1244  00E6  0084               	movwf	4
  1245  00E7  120A  118A  216F  120A  118A  	fcall	stringdir
  1246  00EC  120A  118A  2159  120A  118A  	fcall	_Lcd_Write_Char
  1247  00F1                     l973:
  1248  00F1  3001               	movlw	1
  1249  00F2  07F5               	addwf	Lcd_Write_String@i,f
  1250  00F3  1803               	skipnc
  1251  00F4  0AF6               	incf	Lcd_Write_String@i+1,f
  1252  00F5  3000               	movlw	0
  1253  00F6  07F6               	addwf	Lcd_Write_String@i+1,f
  1254  00F7                     l975:
  1255  00F7  0875               	movf	Lcd_Write_String@i,w
  1256  00F8  0777               	addwf	Lcd_Write_String@a,w
  1257  00F9  0084               	movwf	4
  1258  00FA  120A  118A  216F  120A  118A  	fcall	stringdir
  1259  00FF  3A00               	xorlw	0
  1260  0100  1D03               	skipz
  1261  0101  2903               	goto	u61
  1262  0102  2904               	goto	u60
  1263  0103                     u61:
  1264  0103  28E4               	goto	l971
  1265  0104                     u60:
  1266  0104                     l151:
  1267  0104  0008               	return
  1268  0105                     __end_of_Lcd_Write_String:
  1269                           
  1270                           	psect	text5
  1271  0159                     __ptext5:	
  1272 ;; *************** function _Lcd_Write_Char *****************
  1273 ;; Defined at:
  1274 ;;		line 51 in file "LCDM.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  a               1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  a               1    4[COMMON] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       0       0
  1289 ;;      Locals:         1       0       0       0       0
  1290 ;;      Temps:          1       0       0       0       0
  1291 ;;      Totals:         2       0       0       0       0
  1292 ;;Total ram usage:        2 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    2
  1295 ;; This function calls:
  1296 ;;		_Lcd_Port
  1297 ;; This function is called by:
  1298 ;;		_Lcd_Write_String
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _Lcd_Write_Char
  1304  0159                     _Lcd_Write_Char:
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1308                           ;Lcd_Write_Char@a stored from wreg
  1309  0159  00F4               	movwf	Lcd_Write_Char@a
  1310  015A                     l789:
  1311                           
  1312                           ;LCDM.c: 52:     PORTEbits.RE1 = 1;
  1313  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1314  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1315  015C  1489               	bsf	9,1	;volatile
  1316  015D                     l791:
  1317                           
  1318                           ;LCDM.c: 53:    Lcd_Port(a);
  1319  015D  0874               	movf	Lcd_Write_Char@a,w
  1320  015E  120A  118A  218A  120A  118A  	fcall	_Lcd_Port
  1321  0163                     l793:
  1322                           
  1323                           ;LCDM.c: 54:    PORTEbits.RE0 = 1;
  1324  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0165  1409               	bsf	9,0	;volatile
  1327  0166                     l795:
  1328                           
  1329                           ;LCDM.c: 55:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1330  0166  300D               	movlw	13
  1331  0167  00F3               	movwf	??_Lcd_Write_Char
  1332  0168                     u77:
  1333  0168  0BF3               	decfsz	??_Lcd_Write_Char,f
  1334  0169  2968               	goto	u77
  1335  016A                     l797:
  1336                           
  1337                           ;LCDM.c: 56:    PORTEbits.RE0 = 0;
  1338  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1339  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1340  016C  1009               	bcf	9,0	;volatile
  1341  016D                     l799:
  1342                           
  1343                           ;LCDM.c: 57:    PORTEbits.RE1 = 0;
  1344  016D  1089               	bcf	9,1	;volatile
  1345  016E                     l145:
  1346  016E  0008               	return
  1347  016F                     __end_of_Lcd_Write_Char:
  1348                           
  1349                           	psect	text6
  1350  0105                     __ptext6:	
  1351 ;; *************** function _Lcd_Set_Cursor *****************
  1352 ;; Defined at:
  1353 ;;		line 30 in file "LCDM.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  a               1    wreg     unsigned char 
  1356 ;;  b               1    6[COMMON] unsigned char 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  a               1    7[COMMON] unsigned char 
  1359 ;;  temp            1    8[COMMON] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         1       0       0       0       0
  1370 ;;      Locals:         2       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0
  1372 ;;      Totals:         3       0       0       0       0
  1373 ;;Total ram usage:        3 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    3
  1376 ;; This function calls:
  1377 ;;		_Lcd_Cmd
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           
  1384                           ;psect for function _Lcd_Set_Cursor
  1385  0105                     _Lcd_Set_Cursor:
  1386                           
  1387                           ;incstack = 0
  1388                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1389                           ;Lcd_Set_Cursor@a stored from wreg
  1390  0105  00F7               	movwf	Lcd_Set_Cursor@a
  1391  0106                     l957:
  1392                           
  1393                           ;LCDM.c: 31:     char temp;;LCDM.c: 32:     if (a == 1) {
  1394  0106  0377               	decf	Lcd_Set_Cursor@a,w
  1395  0107  1D03               	btfss	3,2
  1396  0108  290A               	goto	u41
  1397  0109  290B               	goto	u40
  1398  010A                     u41:
  1399  010A  2917               	goto	l963
  1400  010B                     u40:
  1401  010B                     l959:
  1402                           
  1403                           ;LCDM.c: 33:         temp = 0x80 + b - 1;
  1404  010B  0876               	movf	Lcd_Set_Cursor@b,w
  1405  010C  3E7F               	addlw	127
  1406  010D  00FF               	movwf	btemp+1
  1407  010E  087F               	movf	btemp+1,w
  1408  010F  00F8               	movwf	Lcd_Set_Cursor@temp
  1409  0110                     l961:
  1410                           
  1411                           ;LCDM.c: 34:         Lcd_Cmd(temp);
  1412  0110  0878               	movf	Lcd_Set_Cursor@temp,w
  1413  0111  120A  118A  2142  120A  118A  	fcall	_Lcd_Cmd
  1414                           
  1415                           ;LCDM.c: 35:     } else if (a == 2) {
  1416  0116  2928               	goto	l139
  1417  0117                     l963:
  1418  0117  3002               	movlw	2
  1419  0118  0677               	xorwf	Lcd_Set_Cursor@a,w
  1420  0119  1D03               	btfss	3,2
  1421  011A  291C               	goto	u51
  1422  011B  291D               	goto	u50
  1423  011C                     u51:
  1424  011C  2928               	goto	l139
  1425  011D                     u50:
  1426  011D                     l965:
  1427                           
  1428                           ;LCDM.c: 36:         temp = 0xC0 + b - 1;
  1429  011D  0876               	movf	Lcd_Set_Cursor@b,w
  1430  011E  3EBF               	addlw	191
  1431  011F  00FF               	movwf	btemp+1
  1432  0120  087F               	movf	btemp+1,w
  1433  0121  00F8               	movwf	Lcd_Set_Cursor@temp
  1434  0122                     l967:
  1435                           
  1436                           ;LCDM.c: 37:         Lcd_Cmd(temp);
  1437  0122  0878               	movf	Lcd_Set_Cursor@temp,w
  1438  0123  120A  118A  2142  120A  118A  	fcall	_Lcd_Cmd
  1439  0128                     l139:
  1440  0128  0008               	return
  1441  0129                     __end_of_Lcd_Set_Cursor:
  1442                           
  1443                           	psect	text7
  1444  0142                     __ptext7:	
  1445 ;; *************** function _Lcd_Cmd *****************
  1446 ;; Defined at:
  1447 ;;		line 16 in file "LCDM.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  a               1    wreg     unsigned char 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  a               1    5[COMMON] unsigned char 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, pclath, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         1       0       0       0       0
  1463 ;;      Temps:          2       0       0       0       0
  1464 ;;      Totals:         3       0       0       0       0
  1465 ;;Total ram usage:        3 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    2
  1468 ;; This function calls:
  1469 ;;		_Lcd_Port
  1470 ;; This function is called by:
  1471 ;;		_Setup
  1472 ;;		_Lcd_Set_Cursor
  1473 ;;		_Lcd_Init
  1474 ;;		_Lcd_Clear
  1475 ;;		_Lcd_Shift_Right
  1476 ;;		_Lcd_Shift_Left
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _Lcd_Cmd
  1482  0142                     _Lcd_Cmd:
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1486                           ;Lcd_Cmd@a stored from wreg
  1487  0142  00F5               	movwf	Lcd_Cmd@a
  1488  0143                     l767:
  1489                           
  1490                           ;LCDM.c: 17:     Lcd_Port(a);
  1491  0143  0875               	movf	Lcd_Cmd@a,w
  1492  0144  120A  118A  218A  120A  118A  	fcall	_Lcd_Port
  1493  0149                     l769:
  1494                           
  1495                           ;LCDM.c: 18:     PORTEbits.RE1 = 0;
  1496  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1497  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1498  014B  1089               	bcf	9,1	;volatile
  1499  014C                     l771:
  1500                           
  1501                           ;LCDM.c: 20:     PORTEbits.RE0 = 1;
  1502  014C  1409               	bsf	9,0	;volatile
  1503  014D                     l773:
  1504                           
  1505                           ;LCDM.c: 21:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1506  014D  3007               	movlw	7
  1507  014E  00F4               	movwf	??_Lcd_Cmd+1
  1508  014F  307D               	movlw	125
  1509  0150  00F3               	movwf	??_Lcd_Cmd
  1510  0151                     u87:
  1511  0151  0BF3               	decfsz	??_Lcd_Cmd,f
  1512  0152  2951               	goto	u87
  1513  0153  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1514  0154  2951               	goto	u87
  1515  0155                     l775:
  1516                           
  1517                           ;LCDM.c: 22:     PORTEbits.RE0 = 0;
  1518  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0157  1009               	bcf	9,0	;volatile
  1521  0158                     l130:
  1522  0158  0008               	return
  1523  0159                     __end_of_Lcd_Cmd:
  1524                           
  1525                           	psect	text8
  1526  018A                     __ptext8:	
  1527 ;; *************** function _Lcd_Port *****************
  1528 ;; Defined at:
  1529 ;;		line 12 in file "LCDM.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  a               1    wreg     unsigned char 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  a               1    2[COMMON] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1543 ;;      Params:         0       0       0       0       0
  1544 ;;      Locals:         1       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0
  1546 ;;      Totals:         1       0       0       0       0
  1547 ;;Total ram usage:        1 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    1
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_Lcd_Cmd
  1554 ;;		_Lcd_Write_Char
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _Lcd_Port
  1560  018A                     _Lcd_Port:
  1561                           
  1562                           ;incstack = 0
  1563                           ; Regs used in _Lcd_Port: [wreg]
  1564                           ;Lcd_Port@a stored from wreg
  1565  018A  00F2               	movwf	Lcd_Port@a
  1566  018B                     l765:
  1567                           
  1568                           ;LCDM.c: 13:     PORTA = a;
  1569  018B  0872               	movf	Lcd_Port@a,w
  1570  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1571  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1572  018E  0085               	movwf	5	;volatile
  1573  018F                     l127:
  1574  018F  0008               	return
  1575  0190                     __end_of_Lcd_Port:
  1576                           
  1577                           	psect	text9
  1578  0183                     __ptext9:	
  1579 ;; *************** function _ISR *****************
  1580 ;; Defined at:
  1581 ;;		line 54 in file "MASTER.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		None
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0
  1597 ;;      Temps:          2       0       0       0       0
  1598 ;;      Totals:         2       0       0       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		Interrupt level 1
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _ISR
  1610  0183                     _ISR:
  1611  0183                     i1l49:
  1612  0183  0871               	movf	??_ISR+1,w
  1613  0184  008A               	movwf	10
  1614  0185  0E70               	swapf	??_ISR^(0+4294967168),w
  1615  0186  0083               	movwf	3
  1616  0187  0EFE               	swapf	btemp,f
  1617  0188  0E7E               	swapf	btemp,w
  1618  0189  0009               	retfie
  1619  018A                     __end_of_ISR:
  1620  007E                     btemp	set	126	;btemp
  1621  007E                     wtemp0	set	126
  1622                           
  1623                           	psect	intentry
  1624  0004                     __pintentry:	
  1625                           ;incstack = 0
  1626                           ; Regs used in _ISR: []
  1627                           
  1628  0004                     interrupt_function:
  1629  007E                     saved_w	set	btemp
  1630  0004  00FE               	movwf	btemp
  1631  0005  0E03               	swapf	3,w
  1632  0006  00F0               	movwf	??_ISR
  1633  0007  080A               	movf	10,w
  1634  0008  00F1               	movwf	??_ISR+1
  1635  0009  120A  118A  2983   	ljmp	_ISR
  1636                           
  1637                           	psect	config
  1638                           
  1639                           ;Config register CONFIG1 @ 0x2007
  1640                           ;	Oscillator Selection bits
  1641                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1642                           ;	Watchdog Timer Enable bit
  1643                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1644                           ;	Power-up Timer Enable bit
  1645                           ;	PWRTE = OFF, PWRT disabled
  1646                           ;	RE3/MCLR pin function select bit
  1647                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1648                           ;	Code Protection bit
  1649                           ;	CP = OFF, Program memory code protection is disabled
  1650                           ;	Data Code Protection bit
  1651                           ;	CPD = OFF, Data memory code protection is disabled
  1652                           ;	Brown Out Reset Selection bits
  1653                           ;	BOREN = OFF, BOR disabled
  1654                           ;	Internal External Switchover bit
  1655                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1656                           ;	Fail-Safe Clock Monitor Enabled bit
  1657                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1658                           ;	Low Voltage Programming Enable bit
  1659                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1660                           ;	In-Circuit Debugger Mode bit
  1661                           ;	DEBUG = 0x1, unprogrammed default
  1662  2007                     	org	8199
  1663  2007  20D4               	dw	8404
  1664                           
  1665                           ;Config register CONFIG2 @ 0x2008
  1666                           ;	Brown-out Reset Selection bit
  1667                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1668                           ;	Flash Program Memory Self Write Enable bits
  1669                           ;	WRT = OFF, Write protection off
  1670  2008                     	org	8200
  1671  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Setup->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     686
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0      75
                            _Lcd_Cmd
                           _Lcd_Init
                           _initOscm
 ---------------------------------------------------------------------------------
 (2) _initOscm                                             3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     219
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      30
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     392
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      30
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Setup
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
     _initOscm

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Feb 12 00:08:36 2021

                        pc 0002                _SSPSTATbits 0094                         l60 00A8  
                       l54 00DC                         l55 00DC                         u40 010B  
                       u41 010A                         u50 011D                         u51 011C  
                       u60 0104                         u61 0103                         u77 0168  
                       u87 0151                         fsr 0004                        l130 0158  
                      l142 0141                        l127 018F                        l151 0104  
                      l145 016E                        l170 0039                        l139 0128  
                      l171 003F                        l163 0015                        l172 0045  
                      l164 006D                        l173 006E                        l165 001B  
                      l166 0021                        l167 0027                        l168 002D  
                      l169 0033                        l801 006F                        l811 0087  
                      l803 0073                        l821 008F                        l813 0089  
                      l805 0079                        l831 0098                        l823 0090  
                      l815 008C                        l807 007E                        l841 009D  
                      l833 0099                        l825 0093                        l817 008D  
                      l809 0084                        l771 014C                        l843 00A0  
                      l835 009A                        l827 0094                        l819 008E  
                      l765 018B                        l773 014D                        l781 004B  
                      l845 00A1                        l837 009B                        l829 0096  
                      l775 0155                        l767 0143                        l791 015D  
                      l847 00A4                        l839 009C                        _CKE 04A6  
                      l769 0149                        l961 0110                        l793 0163  
                      l777 0014                        l849 00A5                        l963 0117  
                      l795 0166                        l971 00E4                        l787 0129  
                      l965 011D                        l957 0106                        l797 016A  
                      l789 015A                        l973 00F1                        l981 00B6  
                      l967 0122                        l959 010B                        l799 016D  
                      l975 00F7                        l983 00C6                        l969 00E1  
                      l985 00CC                        l977 00A9                        l979 00AE  
                      _ISR 0183                        _SMP 04A7                        fsr0 0004  
                     ?_ISR 0070                       l1007 0053                       STR_1 017F  
                     STR_2 017A                       STR_3 0175                       i1l49 0183  
        ?_Lcd_Write_String 0070                       _main 00A9                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0159  
                    ??_ISR 0070                      ?_main 0070                      _ANSEL 0188  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _Setup 006F  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0142           __end_of_Lcd_Port 0190            __initialization 000F  
             __end_of_main 00E0                     ??_main 0079                     ?_Setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0016  
         __end_of_initOscm 006F                     saved_w 007E            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0076    __end_of__initialization 000F             __pcstackCOMMON 0070  
            __end_of_Setup 00A9             _Lcd_Set_Cursor 0105                    ??_Setup 0076  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pmaintext 00A9  
               __pintentry 0004  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0129  
               ??_Lcd_Init 0076               initOscm@IRCF 0074                 ??_Lcd_Port 0072  
               __stringtab 016F             _Lcd_Write_Char 0159                    _Lcd_Cmd 0142  
                ?_initOscm 0070            ?_Lcd_Set_Cursor 0076                    __ptext1 006F  
                  __ptext2 0013                    __ptext3 0129                    __ptext4 00E0  
                  __ptext5 0159                    __ptext6 0105                    __ptext7 0142  
                  __ptext8 018A                    __ptext9 0183               __size_of_ISR 0007  
   __end_of_Lcd_Write_Char 016F       end_of_initialization 000F                 ??_initOscm 0072  
                Lcd_Port@a 0072                  _PORTEbits 0009            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075           _Lcd_Write_String 00E0  
      start_initialization 000F                __end_of_ISR 018A          __size_of_Lcd_Init 0019  
        __size_of_Lcd_Port 0006            Lcd_Write_Char@a 0074                  ___latbits 0002  
                 ?_Lcd_Cmd 0070          __size_of_initOscm 005C           ??_Lcd_Set_Cursor 0077  
                __pstrings 016F             __size_of_Setup 003A          interrupt_function 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0075                   _PIR1bits 000C  
              __stringbase 0174           ??_Lcd_Write_Char 0073                   _Lcd_Init 0129  
                 _Lcd_Port 018A   __end_of_Lcd_Write_String 0105           __size_of_Lcd_Cmd 0017  
       __end_of__stringtab 0175                   _initOscm 0013              __size_of_main 0037  
               _INTCONbits 000B                   intlevel1 0000                  stringcode 016F  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0078                 _OPTION_REG 0081  
                 stringdir 016F                   stringtab 016F                 _SSPCONbits 0014  
