

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Feb 12 01:36:34 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 09/04/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0009                     _PORTE	set	9
   205  0007                     _PORTC	set	7
   206  0006                     _PORTB	set	6
   207  0005                     _PORTA	set	5
   208  000B                     _INTCONbits	set	11
   209  0008                     _PORTD	set	8
   210  0006                     _PORTBbits	set	6
   211  0058                     _RBIF	set	88
   212  0095                     _WPUB	set	149
   213  0096                     _IOCB	set	150
   214  0081                     _OPTION_REG	set	129
   215  0086                     _TRISB	set	134
   216  0085                     _TRISA	set	133
   217  0087                     _TRISC	set	135
   218  0089                     _TRISE	set	137
   219  0088                     _TRISD	set	136
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	cinit
   224  0013                     start_initialization:	
   225                           ; #config settings
   226                           
   227  0013                     __initialization:
   228                           
   229                           ; Clear objects allocated to COMMON
   230  0013  01F3               	clrf	__pbssCOMMON& (0+127)
   231  0014  01F4               	clrf	(__pbssCOMMON+1)& (0+127)
   232  0015                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235  0015                     __end_of__initialization:
   236  0015  0183               	clrf	3
   237  0016  120A  118A  2871   	ljmp	_main	;jump to C main() function
   238                           
   239                           	psect	bssCOMMON
   240  0073                     __pbssCOMMON:
   241  0073                     _B2:
   242  0073                     	ds	1
   243  0074                     _B1:
   244  0074                     	ds	1
   245                           
   246                           	psect	cstackCOMMON
   247  0070                     __pcstackCOMMON:
   248  0070                     ?_Setup:
   249  0070                     ?_ISR:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ??_ISR:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_main:	
   256                           ; 1 bytes @ 0x0
   257                           
   258                           
   259                           ; 1 bytes @ 0x0
   260  0070                     	ds	3
   261  0073                     ??_Setup:
   262  0073                     ??_main:	
   263                           ; 1 bytes @ 0x3
   264                           
   265                           
   266                           	psect	maintext
   267  0071                     __pmaintext:	
   268                           ; 1 bytes @ 0x3
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 78 in file "s2.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, status,2, status,0, pclath, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0
   291 ;;      Totals:         0       0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called:    2
   294 ;; This function calls:
   295 ;;		_Setup
   296 ;; This function is called by:
   297 ;;		Startup code after reset
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _main
   303  0071                     _main:
   304  0071                     l707:	
   305                           ;incstack = 0
   306                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   307                           
   308                           
   309                           ;s2.c: 80:     Setup();
   310  0071  120A  118A  204F  120A  118A  	fcall	_Setup
   311  0076                     l59:	
   312                           ;s2.c: 91:     while (1) {
   313                           
   314  0076                     l60:	
   315                           ;s2.c: 103:     }
   316                           
   317  0076  2876               	goto	l59
   318  0077  120A  118A  2810   	ljmp	start
   319  007A                     __end_of_main:
   320                           
   321                           	psect	text1
   322  004F                     __ptext1:	
   323 ;; *************** function _Setup *****************
   324 ;; Defined at:
   325 ;;		line 109 in file "s2.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, status,2
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   339 ;;      Params:         0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels used:    1
   345 ;; Hardware stack levels required when called:    1
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_main
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           
   354                           ;psect for function _Setup
   355  004F                     _Setup:
   356  004F                     l657:	
   357                           ;incstack = 0
   358                           ; Regs used in _Setup: [wreg+status,2]
   359                           
   360                           
   361                           ;s2.c: 110:     TRISD = 0;
   362  004F  1683               	bsf	3,5	;RP0=1, select bank1
   363  0050  1303               	bcf	3,6	;RP1=0, select bank1
   364  0051  0188               	clrf	8	;volatile
   365                           
   366                           ;s2.c: 111:     TRISE = 0;
   367  0052  0189               	clrf	9	;volatile
   368                           
   369                           ;s2.c: 112:     ANSEL = 0;
   370  0053  1683               	bsf	3,5	;RP0=1, select bank3
   371  0054  1703               	bsf	3,6	;RP1=1, select bank3
   372  0055  0188               	clrf	8	;volatile
   373                           
   374                           ;s2.c: 113:     ANSELH = 0;
   375  0056  0189               	clrf	9	;volatile
   376                           
   377                           ;s2.c: 114:     PORTA = 0;
   378  0057  1283               	bcf	3,5	;RP0=0, select bank0
   379  0058  1303               	bcf	3,6	;RP1=0, select bank0
   380  0059  0185               	clrf	5	;volatile
   381                           
   382                           ;s2.c: 115:     PORTB = 0;
   383  005A  0186               	clrf	6	;volatile
   384                           
   385                           ;s2.c: 116:     PORTC = 0;
   386  005B  0187               	clrf	7	;volatile
   387                           
   388                           ;s2.c: 117:     PORTD = 0;
   389  005C  0188               	clrf	8	;volatile
   390                           
   391                           ;s2.c: 118:     PORTE = 0;
   392  005D  0189               	clrf	9	;volatile
   393  005E                     l659:
   394                           
   395                           ;s2.c: 120:     TRISC = 0b00001000;
   396  005E  3008               	movlw	8
   397  005F  1683               	bsf	3,5	;RP0=1, select bank1
   398  0060  1303               	bcf	3,6	;RP1=0, select bank1
   399  0061  0087               	movwf	7	;volatile
   400  0062                     l661:
   401                           
   402                           ;s2.c: 121:     TRISA = 0b00100000;
   403  0062  3020               	movlw	32
   404  0063  0085               	movwf	5	;volatile
   405  0064                     l663:
   406                           
   407                           ;s2.c: 122:     TRISB = 0b00000011;
   408  0064  3003               	movlw	3
   409  0065  0086               	movwf	6	;volatile
   410  0066                     l665:
   411                           
   412                           ;s2.c: 123:     OPTION_REG = 0b00000111;
   413  0066  3007               	movlw	7
   414  0067  0081               	movwf	1	;volatile
   415  0068                     l667:
   416                           
   417                           ;s2.c: 124:     INTCONbits.GIE = 1;
   418  0068  178B               	bsf	11,7	;volatile
   419  0069                     l669:
   420                           
   421                           ;s2.c: 125:     INTCONbits.PEIE = 1;
   422  0069  170B               	bsf	11,6	;volatile
   423  006A                     l671:
   424                           
   425                           ;s2.c: 126:     INTCONbits.RBIE = 1;
   426  006A  158B               	bsf	11,3	;volatile
   427  006B                     l673:
   428                           
   429                           ;s2.c: 127:     INTCONbits.RBIF = 0;
   430  006B  100B               	bcf	11,0	;volatile
   431  006C                     l675:
   432                           
   433                           ;s2.c: 128:     IOCB = 3;
   434  006C  3003               	movlw	3
   435  006D  0096               	movwf	22	;volatile
   436  006E                     l677:
   437                           
   438                           ;s2.c: 129:     WPUB = 0b0000011;
   439  006E  3003               	movlw	3
   440  006F  0095               	movwf	21	;volatile
   441  0070                     l65:
   442  0070  0008               	return
   443  0071                     __end_of_Setup:
   444                           
   445                           	psect	text2
   446  0019                     __ptext2:	
   447 ;; *************** function _ISR *****************
   448 ;; Defined at:
   449 ;;		line 45 in file "s2.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0, btemp+1
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0
   465 ;;      Temps:          3       0       0       0       0
   466 ;;      Totals:         3       0       0       0       0
   467 ;;Total ram usage:        3 bytes
   468 ;; Hardware stack levels used:    1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		Interrupt level 1
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           
   477                           ;psect for function _ISR
   478  0019                     _ISR:
   479  0019                     i1l679:
   480                           
   481                           ;s2.c: 46:     if (RBIF == 1) {
   482  0019  1C0B               	btfss	11,0	;volatile
   483  001A  281C               	goto	u1_21
   484  001B  281D               	goto	u1_20
   485  001C                     u1_21:
   486  001C  2846               	goto	i1l54
   487  001D                     u1_20:
   488  001D                     i1l681:
   489                           
   490                           ;s2.c: 47:         if (PORTBbits.RB0 == 0) {
   491  001D  1806               	btfsc	6,0	;volatile
   492  001E  2820               	goto	u2_21
   493  001F  2821               	goto	u2_20
   494  0020                     u2_21:
   495  0020  2824               	goto	i1l685
   496  0021                     u2_20:
   497  0021                     i1l683:
   498                           
   499                           ;s2.c: 48:             B1 = 1;
   500  0021  01F4               	clrf	_B1
   501  0022  0AF4               	incf	_B1,f
   502                           
   503                           ;s2.c: 49:         } else {
   504  0023  2832               	goto	i1l693
   505  0024                     i1l685:
   506                           
   507                           ;s2.c: 50:             if (B1 == 1 && PORTBbits.RB0 == 1) {
   508  0024  0374               	decf	_B1,w
   509  0025  1D03               	btfss	3,2
   510  0026  2828               	goto	u3_21
   511  0027  2829               	goto	u3_20
   512  0028                     u3_21:
   513  0028  2832               	goto	i1l693
   514  0029                     u3_20:
   515  0029                     i1l687:
   516  0029  1C06               	btfss	6,0	;volatile
   517  002A  282C               	goto	u4_21
   518  002B  282D               	goto	u4_20
   519  002C                     u4_21:
   520  002C  2832               	goto	i1l693
   521  002D                     u4_20:
   522  002D                     i1l689:
   523                           
   524                           ;s2.c: 51:                 B1 = 0;
   525  002D  01F4               	clrf	_B1
   526  002E                     i1l691:
   527                           
   528                           ;s2.c: 52:                 PORTD++;
   529  002E  3001               	movlw	1
   530  002F  00FF               	movwf	btemp+1
   531  0030  087F               	movf	btemp+1,w
   532  0031  0788               	addwf	8,f	;volatile
   533  0032                     i1l693:
   534                           
   535                           ;s2.c: 57:         if (PORTBbits.RB1 == 0) {
   536  0032  1886               	btfsc	6,1	;volatile
   537  0033  2835               	goto	u5_21
   538  0034  2836               	goto	u5_20
   539  0035                     u5_21:
   540  0035  2839               	goto	i1l697
   541  0036                     u5_20:
   542  0036                     i1l695:
   543                           
   544                           ;s2.c: 58:             B2 = 1;
   545  0036  01F3               	clrf	_B2
   546  0037  0AF3               	incf	_B2,f
   547                           
   548                           ;s2.c: 59:         } else {
   549  0038  2845               	goto	i1l705
   550  0039                     i1l697:
   551                           
   552                           ;s2.c: 60:             if (B2 == 1 && PORTBbits.RB1 == 1) {
   553  0039  0373               	decf	_B2,w
   554  003A  1D03               	btfss	3,2
   555  003B  283D               	goto	u6_21
   556  003C  283E               	goto	u6_20
   557  003D                     u6_21:
   558  003D  2845               	goto	i1l705
   559  003E                     u6_20:
   560  003E                     i1l699:
   561  003E  1C86               	btfss	6,1	;volatile
   562  003F  2841               	goto	u7_21
   563  0040  2842               	goto	u7_20
   564  0041                     u7_21:
   565  0041  2845               	goto	i1l705
   566  0042                     u7_20:
   567  0042                     i1l701:
   568                           
   569                           ;s2.c: 61:                 B2 = 0;
   570  0042  01F3               	clrf	_B2
   571  0043                     i1l703:
   572                           
   573                           ;s2.c: 62:                 PORTD--;
   574  0043  3001               	movlw	1
   575  0044  0288               	subwf	8,f	;volatile
   576  0045                     i1l705:
   577                           
   578                           ;s2.c: 67:         INTCONbits.RBIF = 0;
   579  0045  100B               	bcf	11,0	;volatile
   580  0046                     i1l54:
   581  0046  0872               	movf	??_ISR+2,w
   582  0047  00FF               	movwf	btemp+1
   583  0048  0871               	movf	??_ISR+1,w
   584  0049  008A               	movwf	10
   585  004A  0E70               	swapf	??_ISR^(0+4294967168),w
   586  004B  0083               	movwf	3
   587  004C  0EFE               	swapf	btemp,f
   588  004D  0E7E               	swapf	btemp,w
   589  004E  0009               	retfie
   590  004F                     __end_of_ISR:
   591  007E                     btemp	set	126	;btemp
   592  007E                     wtemp0	set	126
   593                           
   594                           	psect	intentry
   595  0004                     __pintentry:	
   596                           ;incstack = 0
   597                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   598                           
   599  0004                     interrupt_function:
   600  007E                     saved_w	set	btemp
   601  0004  00FE               	movwf	btemp
   602  0005  0E03               	swapf	3,w
   603  0006  00F0               	movwf	??_ISR
   604  0007  080A               	movf	10,w
   605  0008  00F1               	movwf	??_ISR+1
   606  0009  1283               	bcf	3,5	;RP0=0, select bank0
   607  000A  1303               	bcf	3,6	;RP1=0, select bank0
   608  000B  087F               	movf	btemp+1,w
   609  000C  00F2               	movwf	??_ISR+2
   610  000D  120A  118A  2819   	ljmp	_ISR
   611                           
   612                           	psect	config
   613                           
   614                           ;Config register CONFIG1 @ 0x2007
   615                           ;	Oscillator Selection bits
   616                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   617                           ;	Watchdog Timer Enable bit
   618                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   619                           ;	Power-up Timer Enable bit
   620                           ;	PWRTE = OFF, PWRT disabled
   621                           ;	RE3/MCLR pin function select bit
   622                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   623                           ;	Code Protection bit
   624                           ;	CP = OFF, Program memory code protection is disabled
   625                           ;	Data Code Protection bit
   626                           ;	CPD = OFF, Data memory code protection is disabled
   627                           ;	Brown Out Reset Selection bits
   628                           ;	BOREN = OFF, BOR disabled
   629                           ;	Internal External Switchover bit
   630                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   631                           ;	Fail-Safe Clock Monitor Enabled bit
   632                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   633                           ;	Low Voltage Programming Enable bit
   634                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   635                           ;	In-Circuit Debugger Mode bit
   636                           ;	DEBUG = 0x1, unprogrammed default
   637  2007                     	org	8199
   638  2007  20D4               	dw	8404
   639                           
   640                           ;Config register CONFIG2 @ 0x2008
   641                           ;	Brown-out Reset Selection bit
   642                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   643                           ;	Flash Program Memory Self Write Enable bits
   644                           ;	WRT = OFF, Write protection off
   645  2008                     	org	8200
   646  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Feb 12 01:36:34 2021

                     _B1 0074                       _B2 0073                       l60 0076  
                     l65 0070                       l59 0076                      l707 0071  
                    l661 0062                      l671 006A                      l663 0064  
                    l673 006B                      l665 0066                      l657 004F  
                    l675 006C                      l667 0068                      l659 005E  
                    l677 006E                      l669 0069                      _ISR 0019  
                   ?_ISR 0070                     _IOCB 0096                     _RBIF 0058  
                   i1l54 0046                     _WPUB 0095                     u1_20 001D  
                   u1_21 001C                     u2_20 0021                     u2_21 0020  
                   u3_20 0029                     u3_21 0028                     u4_20 002D  
                   u4_21 002C                     u5_20 0036                     u5_21 0035  
                   u6_20 003E                     u6_21 003D                     u7_20 0042  
                   u7_21 0041                     _main 0071                     btemp 007E  
                   start 0010                    ??_ISR 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l701 0042                    i1l703 0043  
                  i1l705 0045                    i1l681 001D                    i1l691 002E  
                  i1l683 0021                    i1l693 0032                    i1l685 0024  
                  i1l695 0036                    i1l687 0029                    i1l679 0019  
                  i1l697 0039                    i1l689 002D                    i1l699 003E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _Setup 004F                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 007A                   ??_main 0073                   ?_Setup 0070  
                 _ANSELH 0189                   saved_w 007E  __end_of__initialization 0015  
         __pcstackCOMMON 0070            __end_of_Setup 0071                  ??_Setup 0073  
             __pmaintext 0071               __pintentry 0004                  __ptext1 004F  
                __ptext2 0019             __size_of_ISR 0036     end_of_initialization 0015  
              _PORTBbits 0006      start_initialization 0013              __end_of_ISR 004F  
            __pbssCOMMON 0073                ___latbits 0002           __size_of_Setup 0022  
      interrupt_function 0004            __size_of_main 0009               _INTCONbits 000B  
               intlevel1 0000               _OPTION_REG 0081  
