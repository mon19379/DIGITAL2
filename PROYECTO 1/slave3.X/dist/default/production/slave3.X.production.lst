

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Feb 16 13:10:35 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 09/04/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  000E                     	;# 
   380  000F                     	;# 
   381  0010                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0013                     	;# 
   385  0014                     	;# 
   386  0015                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  001D                     	;# 
   397  001E                     	;# 
   398  001F                     	;# 
   399  0081                     	;# 
   400  0085                     	;# 
   401  0086                     	;# 
   402  0087                     	;# 
   403  0088                     	;# 
   404  0089                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  008F                     	;# 
   409  0090                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  0105                     	;# 
   428  0107                     	;# 
   429  0108                     	;# 
   430  0109                     	;# 
   431  010C                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  010E                     	;# 
   435  010F                     	;# 
   436  0185                     	;# 
   437  0187                     	;# 
   438  0188                     	;# 
   439  0189                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0013                     _SSPBUF	set	19
   443  0014                     _SSPCON	set	20
   444  0009                     _PORTE	set	9
   445  0007                     _PORTC	set	7
   446  0006                     _PORTB	set	6
   447  0005                     _PORTA	set	5
   448  0008                     _PORTD	set	8
   449  001F                     _ADCON0bits	set	31
   450  001E                     _ADRESH	set	30
   451  000C                     _PIR1bits	set	12
   452  0001                     _TMR0	set	1
   453  000B                     _INTCONbits	set	11
   454  0094                     _SSPSTATbits	set	148
   455  0094                     _SSPSTAT	set	148
   456  009F                     _ADCON1bits	set	159
   457  009F                     _ADCON1	set	159
   458  008F                     _OSCCONbits	set	143
   459  008C                     _PIE1bits	set	140
   460  0081                     _OPTION_REG	set	129
   461  0089                     _TRISE	set	137
   462  0088                     _TRISD	set	136
   463  0086                     _TRISB	set	134
   464  0085                     _TRISA	set	133
   465  0087                     _TRISC	set	135
   466  043B                     _TRISC3	set	1083
   467  043D                     _TRISC5	set	1085
   468  0189                     _ANSELH	set	393
   469  0188                     _ANSEL	set	392
   470                           
   471                           	psect	cinit
   472  0013                     start_initialization:	
   473                           ; #config settings
   474                           
   475  0013                     __initialization:
   476                           
   477                           ; Clear objects allocated to COMMON
   478  0013  01F8               	clrf	__pbssCOMMON& (0+127)
   479  0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   480  0015                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483  0015                     __end_of__initialization:
   484  0015  0183               	clrf	3
   485  0016  120A  118A  29A3   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssCOMMON
   488  0078                     __pbssCOMMON:
   489  0078                     _CONTERM:
   490  0078                     	ds	1
   491  0079                     _term:
   492  0079                     	ds	1
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:
   496  0070                     ?_spiWrite:
   497  0070                     ??_spiWrite:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_Setup:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_initOscs3:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_ISR:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     spiWrite@dat:	
   513                           ; 1 bytes @ 0x0
   514                           
   515                           
   516                           ; 1 bytes @ 0x0
   517  0070                     	ds	1
   518  0071                     ??_ISR:
   519                           
   520                           ; 1 bytes @ 0x1
   521  0071                     	ds	3
   522  0074                     ?_configADC3:
   523  0074                     ??_initOscs3:	
   524                           ; 1 bytes @ 0x4
   525                           
   526  0074                     ?_spiInit:	
   527                           ; 1 bytes @ 0x4
   528                           
   529  0074                     configADC3@chan:	
   530                           ; 1 bytes @ 0x4
   531                           
   532  0074                     spiInit@sDataSample:	
   533                           ; 1 bytes @ 0x4
   534                           
   535                           
   536                           ; 1 bytes @ 0x4
   537  0074                     	ds	1
   538  0075                     ??_configADC3:
   539  0075                     spiInit@sClockIdle:	
   540                           ; 1 bytes @ 0x5
   541                           
   542                           
   543                           ; 1 bytes @ 0x5
   544  0075                     	ds	1
   545  0076                     initOscs3@IRCF:
   546  0076                     spiInit@sTransmitEdge:	
   547                           ; 1 bytes @ 0x6
   548                           
   549                           
   550                           ; 1 bytes @ 0x6
   551  0076                     	ds	1
   552  0077                     ??_spiInit:
   553  0077                     configADC3@fosc:	
   554                           ; 1 bytes @ 0x7
   555                           
   556  0077                     spiInit@sType:	
   557                           ; 1 bytes @ 0x7
   558                           
   559                           
   560                           ; 1 bytes @ 0x7
   561  0077                     	ds	1
   562  0078                     ??_Setup:
   563  0078                     ??_main:	
   564                           ; 1 bytes @ 0x8
   565                           
   566                           
   567                           	psect	maintext
   568  01A3                     __pmaintext:	
   569                           ; 1 bytes @ 0x8
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 72 in file "s3.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : B00/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   589 ;;      Params:         0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0
   592 ;;      Totals:         0       0       0       0       0
   593 ;;Total ram usage:        0 bytes
   594 ;; Hardware stack levels required when called:    4
   595 ;; This function calls:
   596 ;;		_Setup
   597 ;; This function is called by:
   598 ;;		Startup code after reset
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           
   603                           ;psect for function _main
   604  01A3                     _main:
   605  01A3                     l1117:	
   606                           ;incstack = 0
   607                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   608                           
   609  01A3  120A  118A  213B  120A  118A  	fcall	_Setup
   610  01A8                     l1119:
   611                           
   612                           ;s3.c: 86:          if (CONTERM > 20) {
   613  01A8  3015               	movlw	21
   614  01A9  0278               	subwf	_CONTERM,w
   615  01AA  1C03               	skipc
   616  01AB  29AD               	goto	u81
   617  01AC  29AE               	goto	u80
   618  01AD                     u81:
   619  01AD  29B2               	goto	l1125
   620  01AE                     u80:
   621  01AE                     l1121:
   622                           
   623                           ;s3.c: 87:             ADCON0bits.GO_nDONE = 1;
   624  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   625  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   626  01B0  149F               	bsf	31,1	;volatile
   627  01B1                     l1123:
   628                           
   629                           ;s3.c: 88:             CONTERM = 0;
   630  01B1  01F8               	clrf	_CONTERM
   631  01B2                     l1125:
   632                           
   633                           ;s3.c: 90:         PORTD = term;
   634  01B2  0879               	movf	_term,w
   635  01B3  1283               	bcf	3,5	;RP0=0, select bank0
   636  01B4  1303               	bcf	3,6	;RP1=0, select bank0
   637  01B5  0088               	movwf	8	;volatile
   638  01B6  29A8               	goto	l1119
   639  01B7  120A  118A  2810   	ljmp	start
   640  01BA                     __end_of_main:
   641                           
   642                           	psect	text1
   643  013B                     __ptext1:	
   644 ;; *************** function _Setup *****************
   645 ;; Defined at:
   646 ;;		line 108 in file "s3.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    3
   667 ;; This function calls:
   668 ;;		_configADC3
   669 ;;		_initOscs3
   670 ;;		_spiInit
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _Setup
   678  013B                     _Setup:
   679  013B                     l1069:	
   680                           ;incstack = 0
   681                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   682                           
   683                           
   684                           ;s3.c: 109:     configADC3(1, 10);
   685  013B  300A               	movlw	10
   686  013C  00FF               	movwf	btemp+1
   687  013D  087F               	movf	btemp+1,w
   688  013E  00F4               	movwf	configADC3@chan
   689  013F  3001               	movlw	1
   690  0140  120A  118A  2019  120A  118A  	fcall	_configADC3
   691  0145                     l1071:
   692                           
   693                           ;s3.c: 110:     initOscs3(6);
   694  0145  3006               	movlw	6
   695  0146  120A  118A  20DF  120A  118A  	fcall	_initOscs3
   696  014B                     l1073:
   697                           
   698                           ;s3.c: 111:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SPI
      +                          _IDLE_2_ACTIVE);
   699  014B  01F4               	clrf	spiInit@sDataSample
   700  014C  01F5               	clrf	spiInit@sClockIdle
   701  014D  01F6               	clrf	spiInit@sTransmitEdge
   702  014E  3024               	movlw	36
   703  014F  120A  118A  21BA  120A  118A  	fcall	_spiInit
   704  0154                     l1075:
   705                           
   706                           ;s3.c: 112:     ANSEL = 0;
   707  0154  1683               	bsf	3,5	;RP0=1, select bank3
   708  0155  1703               	bsf	3,6	;RP1=1, select bank3
   709  0156  0188               	clrf	8	;volatile
   710  0157                     l1077:
   711                           
   712                           ;s3.c: 113:     ANSELH = 0b00000010;
   713  0157  3002               	movlw	2
   714  0158  0089               	movwf	9	;volatile
   715  0159                     l1079:
   716                           
   717                           ;s3.c: 114:     PORTA = 0;
   718  0159  1283               	bcf	3,5	;RP0=0, select bank0
   719  015A  1303               	bcf	3,6	;RP1=0, select bank0
   720  015B  0185               	clrf	5	;volatile
   721  015C                     l1081:
   722                           
   723                           ;s3.c: 115:     PORTB = 0;
   724  015C  0186               	clrf	6	;volatile
   725  015D                     l1083:
   726                           
   727                           ;s3.c: 116:     PORTC = 0;
   728  015D  0187               	clrf	7	;volatile
   729  015E                     l1085:
   730                           
   731                           ;s3.c: 117:     PORTD = 0;
   732  015E  0188               	clrf	8	;volatile
   733  015F                     l1087:
   734                           
   735                           ;s3.c: 118:     PORTE = 0;
   736  015F  0189               	clrf	9	;volatile
   737  0160                     l1089:
   738                           
   739                           ;s3.c: 120:     TRISC = 0b00001000;
   740  0160  3008               	movlw	8
   741  0161  1683               	bsf	3,5	;RP0=1, select bank1
   742  0162  1303               	bcf	3,6	;RP1=0, select bank1
   743  0163  0087               	movwf	7	;volatile
   744  0164                     l1091:
   745                           
   746                           ;s3.c: 121:     TRISA = 0b00100000;
   747  0164  3020               	movlw	32
   748  0165  0085               	movwf	5	;volatile
   749  0166                     l1093:
   750                           
   751                           ;s3.c: 122:     TRISB = 0b00000010;
   752  0166  3002               	movlw	2
   753  0167  0086               	movwf	6	;volatile
   754  0168                     l1095:
   755                           
   756                           ;s3.c: 123:     TRISD = 0;
   757  0168  0188               	clrf	8	;volatile
   758  0169                     l1097:
   759                           
   760                           ;s3.c: 124:     TRISE = 0;
   761  0169  0189               	clrf	9	;volatile
   762  016A                     l1099:
   763                           
   764                           ;s3.c: 125:     OPTION_REG = 0b10000111;
   765  016A  3087               	movlw	135
   766  016B  0081               	movwf	1	;volatile
   767  016C                     l1101:
   768                           
   769                           ;s3.c: 126:     INTCONbits.GIE = 1;
   770  016C  178B               	bsf	11,7	;volatile
   771  016D                     l1103:
   772                           
   773                           ;s3.c: 127:     INTCONbits.PEIE = 1;
   774  016D  170B               	bsf	11,6	;volatile
   775  016E                     l1105:
   776                           
   777                           ;s3.c: 128:     PIE1bits.ADIE = 1;
   778  016E  170C               	bsf	12,6	;volatile
   779  016F                     l1107:
   780                           
   781                           ;s3.c: 129:     PIR1bits.ADIF = 0;
   782  016F  1283               	bcf	3,5	;RP0=0, select bank0
   783  0170  1303               	bcf	3,6	;RP1=0, select bank0
   784  0171  130C               	bcf	12,6	;volatile
   785  0172                     l1109:
   786                           
   787                           ;s3.c: 130:     PIR1bits.SSPIF = 0;
   788  0172  118C               	bcf	12,3	;volatile
   789  0173                     l1111:
   790                           
   791                           ;s3.c: 131:     PIE1bits.SSPIE = 1;
   792  0173  1683               	bsf	3,5	;RP0=1, select bank1
   793  0174  1303               	bcf	3,6	;RP1=0, select bank1
   794  0175  158C               	bsf	12,3	;volatile
   795  0176                     l1113:
   796                           
   797                           ;s3.c: 132:     INTCONbits.T0IE = 1;
   798  0176  168B               	bsf	11,5	;volatile
   799  0177                     l1115:
   800                           
   801                           ;s3.c: 133:     INTCONbits.T0IF = 0;
   802  0177  110B               	bcf	11,2	;volatile
   803  0178                     l72:
   804  0178  0008               	return
   805  0179                     __end_of_Setup:
   806                           
   807                           	psect	text2
   808  01BA                     __ptext2:	
   809 ;; *************** function _spiInit *****************
   810 ;; Defined at:
   811 ;;		line 13 in file "SSP3.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  sType           1    wreg     enum E1264
   814 ;;  sDataSample     1    4[COMMON] enum E1272
   815 ;;  sClockIdle      1    5[COMMON] enum E1276
   816 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  sType           1    7[COMMON] enum E1264
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         3       0       0       0       0
   829 ;;      Locals:         1       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         4       0       0       0       0
   832 ;;Total ram usage:        4 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    2
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_Setup
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _spiInit
   844  01BA                     _spiInit:
   845                           
   846                           ;incstack = 0
   847                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   848                           ;spiInit@sType stored from wreg
   849  01BA  00F7               	movwf	spiInit@sType
   850  01BB                     l1059:
   851                           
   852                           ;SSP3.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SSP3.c: 14: {;SSP3.c: 15:     TRISC5 = 0;
   853  01BB  1683               	bsf	3,5	;RP0=1, select bank1
   854  01BC  1303               	bcf	3,6	;RP1=0, select bank1
   855  01BD  1287               	bcf	7,5	;volatile
   856                           
   857                           ;SSP3.c: 16:     if(sType & 0b00000100)
   858  01BE  1D77               	btfss	spiInit@sType,2
   859  01BF  29C1               	goto	u71
   860  01C0  29C2               	goto	u70
   861  01C1                     u71:
   862  01C1  29C6               	goto	l1065
   863  01C2                     u70:
   864  01C2                     l1061:
   865                           
   866                           ;SSP3.c: 17:     {;SSP3.c: 18:         SSPSTAT = sTransmitEdge;
   867  01C2  0876               	movf	spiInit@sTransmitEdge,w
   868  01C3  0094               	movwf	20	;volatile
   869  01C4                     l1063:
   870                           
   871                           ;SSP3.c: 19:         TRISC3 = 1;
   872  01C4  1587               	bsf	7,3	;volatile
   873                           
   874                           ;SSP3.c: 20:     }
   875  01C5  29CA               	goto	l139
   876  01C6                     l1065:
   877                           
   878                           ;SSP3.c: 22:     {;SSP3.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   879  01C6  0874               	movf	spiInit@sDataSample,w
   880  01C7  0476               	iorwf	spiInit@sTransmitEdge,w
   881  01C8  0094               	movwf	20	;volatile
   882  01C9                     l1067:
   883                           
   884                           ;SSP3.c: 24:         TRISC3 = 0;
   885  01C9  1187               	bcf	7,3	;volatile
   886  01CA                     l139:	
   887                           ;SSP3.c: 25:     }
   888                           
   889                           
   890                           ;SSP3.c: 27:     SSPCON = sType | sClockIdle;
   891  01CA  0877               	movf	spiInit@sType,w
   892  01CB  0475               	iorwf	spiInit@sClockIdle,w
   893  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   894  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   895  01CE  0094               	movwf	20	;volatile
   896  01CF                     l140:
   897  01CF  0008               	return
   898  01D0                     __end_of_spiInit:
   899                           
   900                           	psect	text3
   901  00DF                     __ptext3:	
   902 ;; *************** function _initOscs3 *****************
   903 ;; Defined at:
   904 ;;		line 7 in file "oscs3.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  IRCF            1    wreg     unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  IRCF            1    6[COMMON] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   918 ;;      Params:         0       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0
   920 ;;      Temps:          2       0       0       0       0
   921 ;;      Totals:         3       0       0       0       0
   922 ;;Total ram usage:        3 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    2
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_Setup
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           
   933                           ;psect for function _initOscs3
   934  00DF                     _initOscs3:
   935                           
   936                           ;incstack = 0
   937                           ; Regs used in _initOscs3: [wreg-fsr0h+status,2+status,0]
   938                           ;initOscs3@IRCF stored from wreg
   939  00DF  00F6               	movwf	initOscs3@IRCF
   940  00E0                     l817:
   941                           
   942                           ;oscs3.c: 9:     switch (IRCF){
   943  00E0  2917               	goto	l821
   944  00E1                     l78:	
   945                           ;oscs3.c: 11:         case 0:
   946                           
   947                           
   948                           ;oscs3.c: 12:             OSCCONbits.IRCF2 = 0;
   949  00E1  1683               	bsf	3,5	;RP0=1, select bank1
   950  00E2  1303               	bcf	3,6	;RP1=0, select bank1
   951  00E3  130F               	bcf	15,6	;volatile
   952                           
   953                           ;oscs3.c: 13:             OSCCONbits.IRCF1 = 0;
   954  00E4  128F               	bcf	15,5	;volatile
   955                           
   956                           ;oscs3.c: 14:             OSCCONbits.IRCF0 = 0;
   957  00E5  120F               	bcf	15,4	;volatile
   958                           
   959                           ;oscs3.c: 16:             break;
   960  00E6  2939               	goto	l79
   961  00E7                     l80:	
   962                           ;oscs3.c: 18:         case 1:
   963                           
   964                           
   965                           ;oscs3.c: 19:             OSCCONbits.IRCF2 = 0;
   966  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   967  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   968  00E9  130F               	bcf	15,6	;volatile
   969                           
   970                           ;oscs3.c: 20:             OSCCONbits.IRCF1 = 0;
   971  00EA  128F               	bcf	15,5	;volatile
   972                           
   973                           ;oscs3.c: 21:             OSCCONbits.IRCF0 = 1;
   974  00EB  160F               	bsf	15,4	;volatile
   975                           
   976                           ;oscs3.c: 22:             break;
   977  00EC  2939               	goto	l79
   978  00ED                     l81:	
   979                           ;oscs3.c: 24:         case 2:
   980                           
   981                           
   982                           ;oscs3.c: 25:             OSCCONbits.IRCF2 = 0;
   983  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   984  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   985  00EF  130F               	bcf	15,6	;volatile
   986                           
   987                           ;oscs3.c: 26:             OSCCONbits.IRCF1 = 1;
   988  00F0  168F               	bsf	15,5	;volatile
   989                           
   990                           ;oscs3.c: 27:             OSCCONbits.IRCF0 = 0;
   991  00F1  120F               	bcf	15,4	;volatile
   992                           
   993                           ;oscs3.c: 28:             break;
   994  00F2  2939               	goto	l79
   995  00F3                     l82:	
   996                           ;oscs3.c: 30:         case 3:
   997                           
   998                           
   999                           ;oscs3.c: 31:             OSCCONbits.IRCF2 = 0;
  1000  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1001  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1002  00F5  130F               	bcf	15,6	;volatile
  1003                           
  1004                           ;oscs3.c: 32:             OSCCONbits.IRCF1 = 1;
  1005  00F6  168F               	bsf	15,5	;volatile
  1006                           
  1007                           ;oscs3.c: 33:             OSCCONbits.IRCF0 = 1;
  1008  00F7  160F               	bsf	15,4	;volatile
  1009                           
  1010                           ;oscs3.c: 34:             break;
  1011  00F8  2939               	goto	l79
  1012  00F9                     l83:	
  1013                           ;oscs3.c: 36:         case 4:
  1014                           
  1015                           
  1016                           ;oscs3.c: 37:             OSCCONbits.IRCF2 = 1;
  1017  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1018  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1019  00FB  170F               	bsf	15,6	;volatile
  1020                           
  1021                           ;oscs3.c: 38:             OSCCONbits.IRCF1 = 0;
  1022  00FC  128F               	bcf	15,5	;volatile
  1023                           
  1024                           ;oscs3.c: 39:             OSCCONbits.IRCF0 = 0;
  1025  00FD  120F               	bcf	15,4	;volatile
  1026                           
  1027                           ;oscs3.c: 40:             break;
  1028  00FE  2939               	goto	l79
  1029  00FF                     l84:	
  1030                           ;oscs3.c: 42:         case 5:
  1031                           
  1032                           
  1033                           ;oscs3.c: 43:             OSCCONbits.IRCF2 = 1;
  1034  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0100  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0101  170F               	bsf	15,6	;volatile
  1037                           
  1038                           ;oscs3.c: 44:             OSCCONbits.IRCF1 = 0;
  1039  0102  128F               	bcf	15,5	;volatile
  1040                           
  1041                           ;oscs3.c: 45:             OSCCONbits.IRCF0 = 1;
  1042  0103  160F               	bsf	15,4	;volatile
  1043                           
  1044                           ;oscs3.c: 46:             break;
  1045  0104  2939               	goto	l79
  1046  0105                     l85:	
  1047                           ;oscs3.c: 49:         case 6:
  1048                           
  1049                           
  1050                           ;oscs3.c: 50:             OSCCONbits.IRCF2 = 1;
  1051  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1052  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1053  0107  170F               	bsf	15,6	;volatile
  1054                           
  1055                           ;oscs3.c: 51:             OSCCONbits.IRCF1 = 1;
  1056  0108  168F               	bsf	15,5	;volatile
  1057                           
  1058                           ;oscs3.c: 52:             OSCCONbits.IRCF0 = 0;
  1059  0109  120F               	bcf	15,4	;volatile
  1060                           
  1061                           ;oscs3.c: 53:             break;
  1062  010A  2939               	goto	l79
  1063  010B                     l86:	
  1064                           ;oscs3.c: 55:         case 7:
  1065                           
  1066                           
  1067                           ;oscs3.c: 56:             OSCCONbits.IRCF2 = 1;
  1068  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1069  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1070  010D  170F               	bsf	15,6	;volatile
  1071                           
  1072                           ;oscs3.c: 57:             OSCCONbits.IRCF1 = 1;
  1073  010E  168F               	bsf	15,5	;volatile
  1074                           
  1075                           ;oscs3.c: 58:             OSCCONbits.IRCF0 = 1;
  1076  010F  160F               	bsf	15,4	;volatile
  1077                           
  1078                           ;oscs3.c: 59:             break;
  1079  0110  2939               	goto	l79
  1080  0111                     l87:	
  1081                           ;oscs3.c: 64:         default:
  1082                           
  1083                           
  1084                           ;oscs3.c: 65:             OSCCONbits.IRCF2 = 1;
  1085  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1087  0113  170F               	bsf	15,6	;volatile
  1088                           
  1089                           ;oscs3.c: 66:             OSCCONbits.IRCF1 = 1;
  1090  0114  168F               	bsf	15,5	;volatile
  1091                           
  1092                           ;oscs3.c: 67:             OSCCONbits.IRCF0 = 0;
  1093  0115  120F               	bcf	15,4	;volatile
  1094                           
  1095                           ;oscs3.c: 68:             break;
  1096  0116  2939               	goto	l79
  1097  0117                     l821:
  1098  0117  0876               	movf	initOscs3@IRCF,w
  1099  0118  00F4               	movwf	??_initOscs3
  1100  0119  01F5               	clrf	??_initOscs3+1
  1101                           
  1102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1103                           ; Switch size 1, requested type "simple"
  1104                           ; Number of cases is 1, Range of values is 0 to 0
  1105                           ; switch strategies available:
  1106                           ; Name         Instructions Cycles
  1107                           ; simple_byte            4     3 (average)
  1108                           ; direct_byte           11     8 (fixed)
  1109                           ; jumptable            260     6 (fixed)
  1110                           ;	Chosen strategy is simple_byte
  1111  011A  0875               	movf	??_initOscs3+1,w
  1112  011B  3A00               	xorlw	0	; case 0
  1113  011C  1903               	skipnz
  1114  011D  291F               	goto	l1187
  1115  011E  2911               	goto	l87
  1116  011F                     l1187:
  1117                           
  1118                           ; Switch size 1, requested type "simple"
  1119                           ; Number of cases is 8, Range of values is 0 to 7
  1120                           ; switch strategies available:
  1121                           ; Name         Instructions Cycles
  1122                           ; simple_byte           25    13 (average)
  1123                           ; direct_byte           32     8 (fixed)
  1124                           ; jumptable            260     6 (fixed)
  1125                           ;	Chosen strategy is simple_byte
  1126  011F  0874               	movf	??_initOscs3,w
  1127  0120  3A00               	xorlw	0	; case 0
  1128  0121  1903               	skipnz
  1129  0122  28E1               	goto	l78
  1130  0123  3A01               	xorlw	1	; case 1
  1131  0124  1903               	skipnz
  1132  0125  28E7               	goto	l80
  1133  0126  3A03               	xorlw	3	; case 2
  1134  0127  1903               	skipnz
  1135  0128  28ED               	goto	l81
  1136  0129  3A01               	xorlw	1	; case 3
  1137  012A  1903               	skipnz
  1138  012B  28F3               	goto	l82
  1139  012C  3A07               	xorlw	7	; case 4
  1140  012D  1903               	skipnz
  1141  012E  28F9               	goto	l83
  1142  012F  3A01               	xorlw	1	; case 5
  1143  0130  1903               	skipnz
  1144  0131  28FF               	goto	l84
  1145  0132  3A03               	xorlw	3	; case 6
  1146  0133  1903               	skipnz
  1147  0134  2905               	goto	l85
  1148  0135  3A01               	xorlw	1	; case 7
  1149  0136  1903               	skipnz
  1150  0137  290B               	goto	l86
  1151  0138  2911               	goto	l87
  1152  0139                     l79:
  1153                           
  1154                           ;oscs3.c: 72:     OSCCONbits.SCS = 1;
  1155  0139  140F               	bsf	15,0	;volatile
  1156  013A                     l88:
  1157  013A  0008               	return
  1158  013B                     __end_of_initOscs3:
  1159                           
  1160                           	psect	text4
  1161  0019                     __ptext4:	
  1162 ;; *************** function _configADC3 *****************
  1163 ;; Defined at:
  1164 ;;		line 11 in file "adcs3.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  fosc            1    wreg     unsigned char 
  1167 ;;  chan            1    4[COMMON] unsigned char 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  fosc            1    7[COMMON] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         1       0       0       0       0
  1180 ;;      Locals:         1       0       0       0       0
  1181 ;;      Temps:          2       0       0       0       0
  1182 ;;      Totals:         4       0       0       0       0
  1183 ;;Total ram usage:        4 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    2
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_Setup
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _configADC3
  1195  0019                     _configADC3:
  1196                           
  1197                           ;incstack = 0
  1198                           ; Regs used in _configADC3: [wreg-fsr0h+status,2+status,0]
  1199                           ;configADC3@fosc stored from wreg
  1200  0019  00F7               	movwf	configADC3@fosc
  1201  001A                     l991:
  1202                           
  1203                           ;adcs3.c: 13:     switch (fosc) {
  1204  001A  2838               	goto	l1005
  1205  001B                     l993:
  1206                           
  1207                           ;adcs3.c: 16:             ADCON0bits.ADCS = 0b00;
  1208  001B  303F               	movlw	-193
  1209  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1210  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1211  001E  059F               	andwf	31,f	;volatile
  1212                           
  1213                           ;adcs3.c: 17:             break;
  1214  001F  289D               	goto	l1043
  1215  0020                     l995:
  1216                           
  1217                           ;adcs3.c: 20:             ADCON0bits.ADCS = 0b01;
  1218  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0022  081F               	movf	31,w	;volatile
  1221  0023  393F               	andlw	-193
  1222  0024  3840               	iorlw	64
  1223  0025  009F               	movwf	31	;volatile
  1224                           
  1225                           ;adcs3.c: 21:             break;
  1226  0026  289D               	goto	l1043
  1227  0027                     l997:
  1228                           
  1229                           ;adcs3.c: 24:             ADCON0bits.ADCS = 0b10;
  1230  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0029  081F               	movf	31,w	;volatile
  1233  002A  393F               	andlw	-193
  1234  002B  3880               	iorlw	128
  1235  002C  009F               	movwf	31	;volatile
  1236                           
  1237                           ;adcs3.c: 25:             break;
  1238  002D  289D               	goto	l1043
  1239  002E                     l999:
  1240                           
  1241                           ;adcs3.c: 28:             ADCON0bits.ADCS = 0b11;
  1242  002E  30C0               	movlw	192
  1243  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0031  049F               	iorwf	31,f	;volatile
  1246                           
  1247                           ;adcs3.c: 29:             break;
  1248  0032  289D               	goto	l1043
  1249  0033                     l1001:
  1250                           
  1251                           ;adcs3.c: 32:             ADCON0bits.ADCS = 0b00;
  1252  0033  303F               	movlw	-193
  1253  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0036  059F               	andwf	31,f	;volatile
  1256                           
  1257                           ;adcs3.c: 33:             break;
  1258  0037  289D               	goto	l1043
  1259  0038                     l1005:
  1260  0038  0877               	movf	configADC3@fosc,w
  1261  0039  00F5               	movwf	??_configADC3
  1262  003A  01F6               	clrf	??_configADC3+1
  1263                           
  1264                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1265                           ; Switch size 1, requested type "simple"
  1266                           ; Number of cases is 1, Range of values is 0 to 0
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte            4     3 (average)
  1270                           ; direct_byte           11     8 (fixed)
  1271                           ; jumptable            260     6 (fixed)
  1272                           ;	Chosen strategy is simple_byte
  1273  003B  0876               	movf	??_configADC3+1,w
  1274  003C  3A00               	xorlw	0	; case 0
  1275  003D  1903               	skipnz
  1276  003E  2840               	goto	l1189
  1277  003F  2833               	goto	l1001
  1278  0040                     l1189:
  1279                           
  1280                           ; Switch size 1, requested type "simple"
  1281                           ; Number of cases is 4, Range of values is 0 to 3
  1282                           ; switch strategies available:
  1283                           ; Name         Instructions Cycles
  1284                           ; simple_byte           13     7 (average)
  1285                           ; direct_byte           20     8 (fixed)
  1286                           ; jumptable            260     6 (fixed)
  1287                           ;	Chosen strategy is simple_byte
  1288  0040  0875               	movf	??_configADC3,w
  1289  0041  3A00               	xorlw	0	; case 0
  1290  0042  1903               	skipnz
  1291  0043  281B               	goto	l993
  1292  0044  3A01               	xorlw	1	; case 1
  1293  0045  1903               	skipnz
  1294  0046  2820               	goto	l995
  1295  0047  3A03               	xorlw	3	; case 2
  1296  0048  1903               	skipnz
  1297  0049  2827               	goto	l997
  1298  004A  3A01               	xorlw	1	; case 3
  1299  004B  1903               	skipnz
  1300  004C  282E               	goto	l999
  1301  004D  2833               	goto	l1001
  1302  004E                     l1007:
  1303                           
  1304                           ;adcs3.c: 37:             ADCON0bits.CHS = 0b0000;
  1305  004E  30C3               	movlw	-61
  1306  004F  059F               	andwf	31,f	;volatile
  1307                           
  1308                           ;adcs3.c: 38:             break;
  1309  0050  28D7               	goto	l106
  1310  0051                     l1009:
  1311                           
  1312                           ;adcs3.c: 41:             ADCON0bits.CHS = 0b0001;
  1313  0051  081F               	movf	31,w	;volatile
  1314  0052  39C3               	andlw	-61
  1315  0053  3804               	iorlw	4
  1316  0054  009F               	movwf	31	;volatile
  1317                           
  1318                           ;adcs3.c: 42:             break;
  1319  0055  28D7               	goto	l106
  1320  0056                     l1011:
  1321                           
  1322                           ;adcs3.c: 45:             ADCON0bits.CHS = 0b0010;
  1323  0056  081F               	movf	31,w	;volatile
  1324  0057  39C3               	andlw	-61
  1325  0058  3808               	iorlw	8
  1326  0059  009F               	movwf	31	;volatile
  1327                           
  1328                           ;adcs3.c: 46:             break;
  1329  005A  28D7               	goto	l106
  1330  005B                     l1013:
  1331                           
  1332                           ;adcs3.c: 49:             ADCON0bits.CHS = 0b0011;
  1333  005B  081F               	movf	31,w	;volatile
  1334  005C  39C3               	andlw	-61
  1335  005D  380C               	iorlw	12
  1336  005E  009F               	movwf	31	;volatile
  1337                           
  1338                           ;adcs3.c: 50:             break;
  1339  005F  28D7               	goto	l106
  1340  0060                     l1015:
  1341                           
  1342                           ;adcs3.c: 53:             ADCON0bits.CHS = 0b0100;
  1343  0060  081F               	movf	31,w	;volatile
  1344  0061  39C3               	andlw	-61
  1345  0062  3810               	iorlw	16
  1346  0063  009F               	movwf	31	;volatile
  1347                           
  1348                           ;adcs3.c: 54:             break;
  1349  0064  28D7               	goto	l106
  1350  0065                     l1017:
  1351                           
  1352                           ;adcs3.c: 57:             ADCON0bits.CHS = 0b0101;
  1353  0065  081F               	movf	31,w	;volatile
  1354  0066  39C3               	andlw	-61
  1355  0067  3814               	iorlw	20
  1356  0068  009F               	movwf	31	;volatile
  1357                           
  1358                           ;adcs3.c: 58:             break;
  1359  0069  28D7               	goto	l106
  1360  006A                     l1019:
  1361                           
  1362                           ;adcs3.c: 61:             ADCON0bits.CHS = 0b0110;
  1363  006A  081F               	movf	31,w	;volatile
  1364  006B  39C3               	andlw	-61
  1365  006C  3818               	iorlw	24
  1366  006D  009F               	movwf	31	;volatile
  1367                           
  1368                           ;adcs3.c: 62:             break;
  1369  006E  28D7               	goto	l106
  1370  006F                     l1021:
  1371                           
  1372                           ;adcs3.c: 65:             ADCON0bits.CHS = 0b0111;
  1373  006F  081F               	movf	31,w	;volatile
  1374  0070  39C3               	andlw	-61
  1375  0071  381C               	iorlw	28
  1376  0072  009F               	movwf	31	;volatile
  1377                           
  1378                           ;adcs3.c: 66:             break;
  1379  0073  28D7               	goto	l106
  1380  0074                     l1023:
  1381                           
  1382                           ;adcs3.c: 69:             ADCON0bits.CHS = 0b1000;
  1383  0074  081F               	movf	31,w	;volatile
  1384  0075  39C3               	andlw	-61
  1385  0076  3820               	iorlw	32
  1386  0077  009F               	movwf	31	;volatile
  1387                           
  1388                           ;adcs3.c: 70:             break;
  1389  0078  28D7               	goto	l106
  1390  0079                     l1025:
  1391                           
  1392                           ;adcs3.c: 73:             ADCON0bits.CHS = 0b1001;
  1393  0079  081F               	movf	31,w	;volatile
  1394  007A  39C3               	andlw	-61
  1395  007B  3824               	iorlw	36
  1396  007C  009F               	movwf	31	;volatile
  1397                           
  1398                           ;adcs3.c: 74:             break;
  1399  007D  28D7               	goto	l106
  1400  007E                     l1027:
  1401                           
  1402                           ;adcs3.c: 77:             ADCON0bits.CHS = 0b1010;
  1403  007E  081F               	movf	31,w	;volatile
  1404  007F  39C3               	andlw	-61
  1405  0080  3828               	iorlw	40
  1406  0081  009F               	movwf	31	;volatile
  1407                           
  1408                           ;adcs3.c: 78:             break;
  1409  0082  28D7               	goto	l106
  1410  0083                     l1029:
  1411                           
  1412                           ;adcs3.c: 81:             ADCON0bits.CHS = 0b1011;
  1413  0083  081F               	movf	31,w	;volatile
  1414  0084  39C3               	andlw	-61
  1415  0085  382C               	iorlw	44
  1416  0086  009F               	movwf	31	;volatile
  1417                           
  1418                           ;adcs3.c: 82:             break;
  1419  0087  28D7               	goto	l106
  1420  0088                     l1031:
  1421                           
  1422                           ;adcs3.c: 85:             ADCON0bits.CHS = 0b1100;
  1423  0088  081F               	movf	31,w	;volatile
  1424  0089  39C3               	andlw	-61
  1425  008A  3830               	iorlw	48
  1426  008B  009F               	movwf	31	;volatile
  1427                           
  1428                           ;adcs3.c: 86:             break;
  1429  008C  28D7               	goto	l106
  1430  008D                     l1033:
  1431                           
  1432                           ;adcs3.c: 89:             ADCON0bits.CHS = 0b1101;
  1433  008D  081F               	movf	31,w	;volatile
  1434  008E  39C3               	andlw	-61
  1435  008F  3834               	iorlw	52
  1436  0090  009F               	movwf	31	;volatile
  1437                           
  1438                           ;adcs3.c: 90:             break;
  1439  0091  28D7               	goto	l106
  1440  0092                     l1035:
  1441                           
  1442                           ;adcs3.c: 93:             ADCON0bits.CHS = 0b1110;
  1443  0092  081F               	movf	31,w	;volatile
  1444  0093  39C3               	andlw	-61
  1445  0094  3838               	iorlw	56
  1446  0095  009F               	movwf	31	;volatile
  1447                           
  1448                           ;adcs3.c: 94:             break;
  1449  0096  28D7               	goto	l106
  1450  0097                     l1037:
  1451                           
  1452                           ;adcs3.c: 97:             ADCON0bits.CHS = 0b1111;
  1453  0097  303C               	movlw	60
  1454  0098  049F               	iorwf	31,f	;volatile
  1455                           
  1456                           ;adcs3.c: 98:             break;
  1457  0099  28D7               	goto	l106
  1458  009A                     l1039:
  1459                           
  1460                           ;adcs3.c: 101:             ADCON0bits.CHS = 0b0000;
  1461  009A  30C3               	movlw	-61
  1462  009B  059F               	andwf	31,f	;volatile
  1463                           
  1464                           ;adcs3.c: 102:             break;
  1465  009C  28D7               	goto	l106
  1466  009D                     l1043:
  1467  009D  0874               	movf	configADC3@chan,w
  1468  009E  00F5               	movwf	??_configADC3
  1469  009F  01F6               	clrf	??_configADC3+1
  1470                           
  1471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1472                           ; Switch size 1, requested type "simple"
  1473                           ; Number of cases is 1, Range of values is 0 to 0
  1474                           ; switch strategies available:
  1475                           ; Name         Instructions Cycles
  1476                           ; simple_byte            4     3 (average)
  1477                           ; direct_byte           11     8 (fixed)
  1478                           ; jumptable            260     6 (fixed)
  1479                           ;	Chosen strategy is simple_byte
  1480  00A0  0876               	movf	??_configADC3+1,w
  1481  00A1  3A00               	xorlw	0	; case 0
  1482  00A2  1903               	skipnz
  1483  00A3  28A5               	goto	l1191
  1484  00A4  289A               	goto	l1039
  1485  00A5                     l1191:
  1486                           
  1487                           ; Switch size 1, requested type "simple"
  1488                           ; Number of cases is 16, Range of values is 0 to 15
  1489                           ; switch strategies available:
  1490                           ; Name         Instructions Cycles
  1491                           ; simple_byte           49    25 (average)
  1492                           ; direct_byte           56     8 (fixed)
  1493                           ; jumptable            260     6 (fixed)
  1494                           ;	Chosen strategy is simple_byte
  1495  00A5  0875               	movf	??_configADC3,w
  1496  00A6  3A00               	xorlw	0	; case 0
  1497  00A7  1903               	skipnz
  1498  00A8  284E               	goto	l1007
  1499  00A9  3A01               	xorlw	1	; case 1
  1500  00AA  1903               	skipnz
  1501  00AB  2851               	goto	l1009
  1502  00AC  3A03               	xorlw	3	; case 2
  1503  00AD  1903               	skipnz
  1504  00AE  2856               	goto	l1011
  1505  00AF  3A01               	xorlw	1	; case 3
  1506  00B0  1903               	skipnz
  1507  00B1  285B               	goto	l1013
  1508  00B2  3A07               	xorlw	7	; case 4
  1509  00B3  1903               	skipnz
  1510  00B4  2860               	goto	l1015
  1511  00B5  3A01               	xorlw	1	; case 5
  1512  00B6  1903               	skipnz
  1513  00B7  2865               	goto	l1017
  1514  00B8  3A03               	xorlw	3	; case 6
  1515  00B9  1903               	skipnz
  1516  00BA  286A               	goto	l1019
  1517  00BB  3A01               	xorlw	1	; case 7
  1518  00BC  1903               	skipnz
  1519  00BD  286F               	goto	l1021
  1520  00BE  3A0F               	xorlw	15	; case 8
  1521  00BF  1903               	skipnz
  1522  00C0  2874               	goto	l1023
  1523  00C1  3A01               	xorlw	1	; case 9
  1524  00C2  1903               	skipnz
  1525  00C3  2879               	goto	l1025
  1526  00C4  3A03               	xorlw	3	; case 10
  1527  00C5  1903               	skipnz
  1528  00C6  287E               	goto	l1027
  1529  00C7  3A01               	xorlw	1	; case 11
  1530  00C8  1903               	skipnz
  1531  00C9  2883               	goto	l1029
  1532  00CA  3A07               	xorlw	7	; case 12
  1533  00CB  1903               	skipnz
  1534  00CC  2888               	goto	l1031
  1535  00CD  3A01               	xorlw	1	; case 13
  1536  00CE  1903               	skipnz
  1537  00CF  288D               	goto	l1033
  1538  00D0  3A03               	xorlw	3	; case 14
  1539  00D1  1903               	skipnz
  1540  00D2  2892               	goto	l1035
  1541  00D3  3A01               	xorlw	1	; case 15
  1542  00D4  1903               	skipnz
  1543  00D5  2897               	goto	l1037
  1544  00D6  289A               	goto	l1039
  1545  00D7                     l106:
  1546                           
  1547                           ;adcs3.c: 108:     ADCON0bits.GO_nDONE = 1;
  1548  00D7  149F               	bsf	31,1	;volatile
  1549                           
  1550                           ;adcs3.c: 112:     ADCON0bits.ADON = 1;
  1551  00D8  141F               	bsf	31,0	;volatile
  1552  00D9                     l1045:
  1553                           
  1554                           ;adcs3.c: 113:     ADCON1 = 0;
  1555  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1556  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1557  00DB  019F               	clrf	31	;volatile
  1558  00DC                     l1047:
  1559                           
  1560                           ;adcs3.c: 115:     ADCON1bits.VCFG0 = 1;
  1561  00DC  161F               	bsf	31,4	;volatile
  1562  00DD                     l1049:
  1563                           
  1564                           ;adcs3.c: 116:     ADCON1bits.VCFG1 = 1;
  1565  00DD  169F               	bsf	31,5	;volatile
  1566  00DE                     l123:
  1567  00DE  0008               	return
  1568  00DF                     __end_of_configADC3:
  1569                           
  1570                           	psect	text5
  1571  0179                     __ptext5:	
  1572 ;; *************** function _ISR *****************
  1573 ;; Defined at:
  1574 ;;		line 47 in file "s3.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0
  1590 ;;      Temps:          3       0       0       0       0
  1591 ;;      Totals:         3       0       0       0       0
  1592 ;;Total ram usage:        3 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    1
  1595 ;; This function calls:
  1596 ;;		_spiWrite
  1597 ;; This function is called by:
  1598 ;;		Interrupt level 1
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           
  1603                           ;psect for function _ISR
  1604  0179                     _ISR:
  1605  0179                     i1l889:
  1606  0179  1D0B               	btfss	11,2	;volatile
  1607  017A  297C               	goto	u3_21
  1608  017B  297D               	goto	u3_20
  1609  017C                     u3_21:
  1610  017C  2984               	goto	i1l897
  1611  017D                     u3_20:
  1612  017D                     i1l891:
  1613  017D  30EC               	movlw	236
  1614  017E  0081               	movwf	1	;volatile
  1615  017F                     i1l893:
  1616  017F  3001               	movlw	1
  1617  0180  00FF               	movwf	btemp+1
  1618  0181  087F               	movf	btemp+1,w
  1619  0182  07F8               	addwf	_CONTERM,f
  1620  0183                     i1l895:
  1621  0183  110B               	bcf	11,2	;volatile
  1622  0184                     i1l897:
  1623  0184  1D8C               	btfss	12,3	;volatile
  1624  0185  2987               	goto	u4_21
  1625  0186  2988               	goto	u4_20
  1626  0187                     u4_21:
  1627  0187  2991               	goto	i1l903
  1628  0188                     u4_20:
  1629  0188                     i1l899:
  1630  0188  0879               	movf	_term,w
  1631  0189  120A  118A  21D0  120A  118A  	fcall	_spiWrite
  1632  018E                     i1l901:
  1633  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1634  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0190  118C               	bcf	12,3	;volatile
  1636  0191                     i1l903:
  1637  0191  1F0C               	btfss	12,6	;volatile
  1638  0192  2994               	goto	u5_21
  1639  0193  2995               	goto	u5_20
  1640  0194                     u5_21:
  1641  0194  299A               	goto	i1l60
  1642  0195                     u5_20:
  1643  0195                     i1l905:
  1644  0195  081E               	movf	30,w	;volatile
  1645  0196  00FF               	movwf	btemp+1
  1646  0197  087F               	movf	btemp+1,w
  1647  0198  00F9               	movwf	_term
  1648  0199                     i1l907:
  1649  0199  130C               	bcf	12,6	;volatile
  1650  019A                     i1l60:
  1651  019A  0873               	movf	??_ISR+2,w
  1652  019B  00FF               	movwf	btemp+1
  1653  019C  0872               	movf	??_ISR+1,w
  1654  019D  008A               	movwf	10
  1655  019E  0E71               	swapf	??_ISR^(0+4294967168),w
  1656  019F  0083               	movwf	3
  1657  01A0  0EFE               	swapf	btemp,f
  1658  01A1  0E7E               	swapf	btemp,w
  1659  01A2  0009               	retfie
  1660  01A3                     __end_of_ISR:
  1661                           
  1662                           	psect	intentry
  1663  0004                     __pintentry:	
  1664                           ;incstack = 0
  1665                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1666                           
  1667  0004                     interrupt_function:
  1668  007E                     saved_w	set	btemp
  1669  0004  00FE               	movwf	btemp
  1670  0005  0E03               	swapf	3,w
  1671  0006  00F1               	movwf	??_ISR
  1672  0007  080A               	movf	10,w
  1673  0008  00F2               	movwf	??_ISR+1
  1674  0009  1283               	bcf	3,5	;RP0=0, select bank0
  1675  000A  1303               	bcf	3,6	;RP1=0, select bank0
  1676  000B  087F               	movf	btemp+1,w
  1677  000C  00F3               	movwf	??_ISR+2
  1678  000D  120A  118A  2979   	ljmp	_ISR
  1679                           
  1680                           	psect	text6
  1681  01D0                     __ptext6:	
  1682 ;; *************** function _spiWrite *****************
  1683 ;; Defined at:
  1684 ;;		line 35 in file "SSP3.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  dat             1    wreg     unsigned char 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  dat             1    0[COMMON] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         1       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0
  1701 ;;      Totals:         1       0       0       0       0
  1702 ;;Total ram usage:        1 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_ISR
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _spiWrite
  1713  01D0                     _spiWrite:
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _spiWrite: [wreg]
  1717                           ;spiWrite@dat stored from wreg
  1718  01D0  00F0               	movwf	spiWrite@dat
  1719  01D1                     i1l837:
  1720                           
  1721                           ;SSP3.c: 35: void spiWrite(char dat);SSP3.c: 36: {;SSP3.c: 37:     SSPBUF = dat;
  1722  01D1  0870               	movf	spiWrite@dat,w
  1723  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1724  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1725  01D4  0093               	movwf	19	;volatile
  1726  01D5                     i1l149:
  1727  01D5  0008               	return
  1728  01D6                     __end_of_spiWrite:
  1729  007E                     btemp	set	126	;btemp
  1730  007E                     wtemp0	set	126
  1731                           
  1732                           	psect	config
  1733                           
  1734                           ;Config register CONFIG1 @ 0x2007
  1735                           ;	Oscillator Selection bits
  1736                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1737                           ;	Watchdog Timer Enable bit
  1738                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1739                           ;	Power-up Timer Enable bit
  1740                           ;	PWRTE = OFF, PWRT disabled
  1741                           ;	RE3/MCLR pin function select bit
  1742                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1743                           ;	Code Protection bit
  1744                           ;	CP = OFF, Program memory code protection is disabled
  1745                           ;	Data Code Protection bit
  1746                           ;	CPD = OFF, Data memory code protection is disabled
  1747                           ;	Brown Out Reset Selection bits
  1748                           ;	BOREN = OFF, BOR disabled
  1749                           ;	Internal External Switchover bit
  1750                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1751                           ;	Fail-Safe Clock Monitor Enabled bit
  1752                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1753                           ;	Low Voltage Programming Enable bit
  1754                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1755                           ;	In-Circuit Debugger Mode bit
  1756                           ;	DEBUG = 0x1, unprogrammed default
  1757  2007                     	org	8199
  1758  2007  20D4               	dw	8404
  1759                           
  1760                           ;Config register CONFIG2 @ 0x2008
  1761                           ;	Brown-out Reset Selection bit
  1762                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1763                           ;	Flash Program Memory Self Write Enable bits
  1764                           ;	WRT = OFF, Write protection off
  1765  2008                     	org	8200
  1766  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Setup->_configADC3
    _Setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     495
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     495
                         _configADC3
                          _initOscs3
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOscs3                                            3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _configADC3                                           4     3      1     120
                                              4 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _configADC3
     _initOscs3
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Feb 16 13:10:35 2021

            _SSPSTATbits 0094                       l80 00E7                       l72 0178  
                     l81 00ED                       l82 00F3                       l83 00F9  
                     l84 00FF                       l85 0105                       l86 010B  
                     l78 00E1                       l87 0111                       l79 0139  
                     l88 013A                       u70 01C2                       u71 01C1  
                     u80 01AE                       u81 01AD                      l106 00D7  
                    l123 00DE                      l140 01CF                      l139 01CA  
                    l821 0117                      l817 00E0                      l991 001A  
                    l993 001B                      l995 0020                      l997 0027  
                    l999 002E                      _ISR 0179                     ?_ISR 0070  
                   l1001 0033                     l1011 0056                     l1021 006F  
                   l1013 005B                     l1005 0038                     l1101 016C  
                   l1031 0088                     l1023 0074                     l1015 0060  
                   l1007 004E                     l1111 0173                     l1103 016D  
                   l1033 008D                     l1025 0079                     l1017 0065  
                   l1009 0051                     l1113 0176                     l1105 016E  
                   l1121 01AE                     l1035 0092                     l1027 007E  
                   l1019 006A                     l1043 009D                     l1115 0177  
                   l1107 016F                     l1123 01B1                     l1045 00D9  
                   l1037 0097                     l1029 0083                     l1061 01C2  
                   l1109 0172                     l1125 01B2                     l1117 01A3  
                   l1047 00DC                     l1039 009A                     l1063 01C4  
                   l1071 0145                     l1119 01A8                     l1049 00DD  
                   l1065 01C6                     l1081 015C                     l1073 014B  
                   l1067 01C9                     l1059 01BB                     l1091 0164  
                   l1083 015D                     l1075 0154                     l1093 0166  
                   l1085 015E                     l1077 0157                     l1069 013B  
                   l1191 00A5                     l1095 0168                     l1087 015F  
                   l1079 0159                     l1097 0169                     l1089 0160  
                   l1187 011F                     l1099 016A                     l1189 0040  
                   i1l60 019A                     _TMR0 0001                     u3_20 017D  
                   u3_21 017C                     u4_20 0188                     u4_21 0187  
                   u5_20 0195                     u5_21 0194                     _main 01A3  
                   _term 0079                     btemp 007E                     start 0010  
                  ??_ISR 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l149 01D5                    i1l901 018E                    i1l903 0191  
                  i1l905 0195                    i1l907 0199                    i1l837 01D1  
                  i1l891 017D                    i1l893 017F                    i1l895 0183  
                  i1l897 0184                    i1l889 0179                    i1l899 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _Setup 013B                    pclath 000A  
        __end_of_spiInit 01D0                    status 0003                    wtemp0 007E  
        __initialization 0013             __end_of_main 01BA                   ??_main 0078  
                 ?_Setup 0070                   _ADCON1 009F                   _ADRESH 001E  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 01D6                ??_spiInit 0077  __end_of__initialization 0015  
         __pcstackCOMMON 0070            __end_of_Setup 0179                  ??_Setup 0078  
     __size_of_initOscs3 005C               __pmaintext 01A3               __pintentry 0004  
                _CONTERM 0078               _configADC3 0019                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 013B                  __ptext2 01BA  
                __ptext3 00DF                  __ptext4 0019                  __ptext5 0179  
                __ptext6 01D0        __end_of_initOscs3 013B             __size_of_ISR 002A  
                _spiInit 01BA     end_of_initialization 0015               ??_spiWrite 0070  
            ?_configADC3 0074              spiWrite@dat 0070      start_initialization 0013  
            __end_of_ISR 01A3      __size_of_configADC3 00C6              __pbssCOMMON 0078  
              ___latbits 0002        __size_of_spiWrite 0006                 ?_spiInit 0074  
         __size_of_Setup 003E                _initOscs3 00DF     spiInit@sTransmitEdge 0076  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0074  
               _PIR1bits 000C            initOscs3@IRCF 0076               _ADCON0bits 001F  
             _ADCON1bits 009F             ??_configADC3 0075               ?_initOscs3 0070  
     __end_of_configADC3 00DF         __size_of_spiInit 0016            __size_of_main 0017  
               _spiWrite 01D0             spiInit@sType 0077        spiInit@sClockIdle 0075  
             _INTCONbits 000B              ??_initOscs3 0074                 intlevel1 0000  
             _OSCCONbits 008F               _OPTION_REG 0081           configADC3@chan 0074  
         configADC3@fosc 0077  
