Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\PROYECTODM.X.production.sym \
  --cmf=dist/default/production\PROYECTODM.X.production.cmf -z -Q16F887 \
  -oC:\Users\franc\AppData\Local\Temp\sklo.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/PROYECTODM.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\franc\AppData\Local\Temp\sklo.o \
  dist/default/production\PROYECTODM.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\franc\AppData\Local\Temp\sklo.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\PROYECTODM.X.production.o
                cinit                                15       15        E        8       0
                intentry                              4        4        E        8       0
                config                             2007     2007        2        0       4
                text23                              272      272       C7        8       0
                text22                              68A      68A       1E        8       0
                text21                              75A      75A        6      DBC       0
                text20                              6A8      6A8       1C        8       0
                text19                              6F7      6F7       19      DBC       0
                text18                              4CD      4CD       5E        8       0
                text17                              66C      66C       1E        8       0
                text16                              727      727       15      DBC       0
                text15                              57A      57A       41        8       0
                text14                              464      464       69        8       0
                text13                              710      710       17      DBC       0
                text12                              61F      61F       27        8       0
                text11                              339      339       BD        8       0
                text10                              3F6      3F6       6E        8       0
                text9                               646      646       26        8       0
                text8                               6DE      6DE       19      DBC       0
                text7                               5F6      5F6       29        8       0
                text6                               52B      52B       4F        8       0
                text5                               5BB      5BB       3B        8       0
                text4                               172      172      100        8       0
                text3                               74D      74D        7      DBC       0
                text2                               73C      73C        9      DBC       0
                text1                               754      754        6      DBC       0
                maintext                             23       23      14F        8       0
                cstackBANK0                          3D       3D       17       20       1
                cstackCOMMON                         70       70        7       70       1
                clrtext                             745      745        8      DBC       0
                bssBANK0                             20       20       1D       20       1
                bssCOMMON                            77       77        1       70       1
                strings                             6C4      6C4       1A      D88       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15        E         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text23                              272      272       C7         0
                text22                              68A      68A       1E         0
                text21                              75A      75A        6         0
                text20                              6A8      6A8       1C         0
                text19                              6F7      6F7       19         0
                text18                              4CD      4CD       5E         0
                text17                              66C      66C       1E         0
                text16                              727      727       15         0
                text15                              57A      57A       41         0
                text14                              464      464       69         0
                text13                              710      710       17         0
                text12                              61F      61F       27         0
                text11                              339      339       BD         0
                text10                              3F6      3F6       6E         0
                text9                               646      646       26         0
                text8                               6DE      6DE       19         0
                text7                               5F6      5F6       29         0
                text6                               52B      52B       4F         0
                text5                               5BB      5BB       3B         0
                text4                               172      172      100         0
                text3                               74D      74D        7         0
                text2                               73C      73C        9         0
                text1                               754      754        6         0
                maintext                             23       23      14F         0
                clrtext                             745      745        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             6C4      6C4       1A         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        7         1
                bssCOMMON                            77       77        1         1

        CLASS   BANK0          
                cstackBANK0                          3D       3D       17         1
                bssBANK0                             20       20       1D         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0006C0  0006C4         8       0  CODE        2
                bssBANK0                       000020  000034  000054        20       1  BANK0       1
                cstackCOMMON                   000070  000008  000078        70       1  COMMON      1
                strings                        0006C4  00001A  0006DE       D88       0  STRING      2
                text8                          0006DE  000082  000760       DBC       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0054-006F             1C           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0760-1FFF            800
        COMMON           0078-007D              6           1
        CONST            0003-0003              1           2
                         0760-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0760-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0054-006F             1C           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0760-1FFF           18A0
        STRING           0003-0003              1           2
                         0760-1FFF            100

                                  Symbol Table

?___awdiv                  cstackBANK0  0043
?___wmul                   cstackBANK0  003D
Lcd_Cmd@a                  cstackBANK0  003F
Lcd_Port@a                 cstackCOMMON 0076
Lcd_Set_Cursor@a           cstackBANK0  0041
Lcd_Set_Cursor@b           cstackBANK0  0040
Lcd_Set_Cursor@temp        cstackBANK0  0042
Lcd_Write_Char@a           cstackBANK0  003E
Lcd_Write_String@a         cstackBANK0  0041
Lcd_Write_String@i         cstackBANK0  003F
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_BAUDCTLbits               (abs)        0187
_C1                        bssBANK0     0036
_CO1                       bssBANK0     002F
_CO2                       bssBANK0     002E
_CO3                       bssBANK0     002D
_CONTC                     bssBANK0     0032
_CONTD                     bssBANK0     0031
_CONTU                     bssBANK0     0030
_CP1                       bssBANK0     0039
_D1                        bssBANK0     0035
_DP1                       bssBANK0     0038
_INDIC                     bssBANK0     0033
_INTCONbits                (abs)        000B
_ISR                       text22       068A
_Lcd_Cmd                   text20       06A8
_Lcd_Init                  text19       06F7
_Lcd_Port                  text21       075A
_Lcd_Set_Cursor            text9        0646
_Lcd_Write_Char            text8        06DE
_Lcd_Write_String          text7        05F6
_OPTION_REG                (abs)        0081
_OSCCONbits                (abs)        008F
_PIE1bits                  (abs)        008C
_PIR1bits                  (abs)        000C
_PORTA                     (abs)        0005
_PORTB                     (abs)        0006
_PORTC                     (abs)        0007
_PORTCbits                 (abs)        0007
_PORTD                     (abs)        0008
_PORTE                     (abs)        0009
_PORTEbits                 (abs)        0009
_RCSTAbits                 (abs)        0018
_SEND                      bssCOMMON    0077
_SPBRG                     (abs)        0099
_SPBRGH                    (abs)        009A
_SSPBUF                    (abs)        0013
_SSPCON                    (abs)        0014
_SSPSTAT                   (abs)        0094
_SSPSTATbits               (abs)        0094
_Setup                     text15       057A
_T1                        bssBANK0     0026
_T2                        bssBANK0     0025
_T3                        bssBANK0     0024
_TEMP                      bssBANK0     0021
_TEMPC                     bssBANK0     002B
_TEMPD                     bssBANK0     002A
_TEMPN                     bssBANK0     0020
_TEMPND                    bssBANK0     0028
_TEMPNU                    bssBANK0     0027
_TEMPU                     bssBANK0     0029
_TN1                       bssBANK0     0023
_TN2                       bssBANK0     0022
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISC                     (abs)        0087
_TRISC3                    (abs)        043B
_TRISC5                    (abs)        043D
_TRISD                     (abs)        0088
_TRISE                     (abs)        0089
_TXREG                     (abs)        0019
_TXSTAbits                 (abs)        0098
_U1                        bssBANK0     0034
_UP1                       bssBANK0     0037
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        0023
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0015
__Hfunctab                 functab      0000
__Hinit                    init         0012
__Hintentry                intentry     0012
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        0760
__Hspace_1                 (abs)        0078
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        4010
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        0015
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0012
__Lfunctab                 functab      0000
__Linit                    init         0012
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        0760
__S1                       (abs)        0078
__S2                       (abs)        0000
__S3                       (abs)        0000
___awdiv                   text14       0464
___awdiv@counter           cstackBANK0  0047
___awdiv@dividend          cstackBANK0  0045
___awdiv@divisor           cstackBANK0  0043
___awdiv@quotient          cstackBANK0  0049
___awdiv@sign              cstackBANK0  0048
___bmul                    text13       0710
___bmul@multiplicand       cstackCOMMON 0076
___bmul@multiplier         cstackBANK0  003E
___bmul@product            cstackBANK0  003D
___int_sp                  stack        0000
___latbits                 (abs)        0002
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
___wmul                    text12       061F
___wmul@multiplicand       cstackBANK0  003F
___wmul@multiplier         cstackBANK0  003D
___wmul@product            cstackBANK0  0041
__end_of_ISR               text22       06A8
__end_of_Lcd_Cmd           text20       06C4
__end_of_Lcd_Init          text19       0710
__end_of_Lcd_Port          text21       0760
__end_of_Lcd_Set_Cursor    text9        066C
__end_of_Lcd_Write_Char    text8        06F7
__end_of_Lcd_Write_String  text7        061F
__end_of_Setup             text15       05BB
__end_of___awdiv           text14       04CD
__end_of___bmul            text13       0727
__end_of___wmul            text12       0646
__end_of__initialization   cinit        001F
__end_of__stringtab        strings      06CA
__end_of_initOscm          text18       052B
__end_of_main              maintext     0172
__end_of_mandar            text23       0339
__end_of_map               text11       03F6
__end_of_map2              text10       0464
__end_of_map3              text4        0272
__end_of_spiInit           text17       068A
__end_of_spiRead           text2        0745
__end_of_spiReceiveWait    text3        0754
__end_of_spiWrite          text1        075A
__end_of_temperatura       text6        057A
__end_of_temperatura2      text5        05F6
__end_of_usartm            text16       073C
__initialization           cinit        0015
__pbssBANK0                bssBANK0     0020
__pbssCOMMON               bssCOMMON    0077
__pcstackBANK0             cstackBANK0  003D
__pcstackCOMMON            cstackCOMMON 0070
__pintentry                intentry     0004
__pmaintext                maintext     0023
__pstrings                 strings      06C4
__ptext1                   text1        0754
__ptext10                  text10       03F6
__ptext11                  text11       0339
__ptext12                  text12       061F
__ptext13                  text13       0710
__ptext14                  text14       0464
__ptext15                  text15       057A
__ptext16                  text16       0727
__ptext17                  text17       066C
__ptext18                  text18       04CD
__ptext19                  text19       06F7
__ptext2                   text2        073C
__ptext20                  text20       06A8
__ptext21                  text21       075A
__ptext22                  text22       068A
__ptext23                  text23       0272
__ptext3                   text3        074D
__ptext4                   text4        0172
__ptext5                   text5        05BB
__ptext6                   text6        052B
__ptext7                   text7        05F6
__ptext8                   text8        06DE
__ptext9                   text9        0646
__size_of_ISR              (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_Setup            (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___bmul           (abs)        0000
__size_of___wmul           (abs)        0000
__size_of_initOscm         (abs)        0000
__size_of_main             (abs)        0000
__size_of_mandar           (abs)        0000
__size_of_map              (abs)        0000
__size_of_map2             (abs)        0000
__size_of_map3             (abs)        0000
__size_of_spiInit          (abs)        0000
__size_of_spiRead          (abs)        0000
__size_of_spiReceiveWait   (abs)        0000
__size_of_spiWrite         (abs)        0000
__size_of_temperatura      (abs)        0000
__size_of_temperatura2     (abs)        0000
__size_of_usartm           (abs)        0000
__stringbase               strings      06C9
__stringtab                strings      06C4
_cont1                     bssBANK0     003A
_initOscm                  text18       04CD
_main                      maintext     0023
_mandar                    text23       0272
_map                       text11       0339
_map$1252                  cstackBANK0  0051
_map2                      text10       03F6
_map3                      text4        0172
_pot1                      bssBANK0     003B
_spiInit                   text17       066C
_spiRead                   text2        073C
_spiReceiveWait            text3        074D
_spiWrite                  text1        0754
_temperatura               text6        052B
_temperatura2              text5        05BB
_term1                     bssBANK0     002C
_usartm                    text16       0727
btemp                      (abs)        007E
clear_ram0                 clrtext      0745
end_of_initialization      cinit        001F
initOscm@IRCF              cstackCOMMON 0076
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
spiInit@sClockIdle         cstackBANK0  003E
spiInit@sDataSample        cstackBANK0  003D
spiInit@sTransmitEdge      cstackBANK0  003F
spiInit@sType              cstackCOMMON 0076
spiWrite@dat               cstackCOMMON 0076
start                      init         0012
start_initialization       cinit        0015
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 107 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_String
		_Setup
		_map
		_map2
		_map3
		_spiRead
		_spiWrite
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _spiWrite *****************
 Defined at:
		line 35 in file "SSP.c"
 Parameters:    Size  Location     Type
  dat             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dat             1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _spiRead *****************
 Defined at:
		line 50 in file "SSP.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_spiReceiveWait
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _spiReceiveWait *****************
 Defined at:
		line 30 in file "SSP.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_spiRead
 This function uses a non-reentrant model


 *************** function _map3 *****************
 Defined at:
		line 263 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___awdiv
		___bmul
		___wmul
		_temperatura
		_temperatura2
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _temperatura2 *****************
 Defined at:
		line 409 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_String
 This function is called by:
		_map3
 This function uses a non-reentrant model


 *************** function _temperatura *****************
 Defined at:
		line 397 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_String
 This function is called by:
		_map3
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 60 in file "LCDM.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(5), 
		 -> STR_2(5), STR_1(4), 
 Auto vars:     Size  Location     Type
  a               1    4[BANK0 ] PTR unsigned char 
		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(5), 
		 -> STR_2(5), STR_1(4), 
  i               2    2[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
		_temperatura
		_temperatura2
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 51 in file "LCDM.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Port
 This function is called by:
		_main
		_temperatura
		_temperatura2
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 30 in file "LCDM.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    3[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[BANK0 ] unsigned char 
  temp            1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
		_temperatura
		_temperatura2
 This function uses a non-reentrant model


 *************** function _map2 *****************
 Defined at:
		line 252 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___bmul
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _map *****************
 Defined at:
		line 239 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___bmul
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[BANK0 ] unsigned int 
  multiplicand    2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_map
		_map2
		_map3
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    6[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    1[BANK0 ] unsigned char 
  product         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       2       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_map
		_map2
		_map3
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    6[BANK0 ] int 
  dividend        2    8[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2   12[BANK0 ] int 
  sign            1   11[BANK0 ] unsigned char 
  counter         1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_map
		_map2
		_map3
 This function uses a non-reentrant model


 *************** function _Setup *****************
 Defined at:
		line 201 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Cmd
		_Lcd_Init
		_initOscm
		_spiInit
		_usartm
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _usartm *****************
 Defined at:
		line 5 in file "usartm.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _spiInit *****************
 Defined at:
		line 13 in file "SSP.c"
 Parameters:    Size  Location     Type
  sType           1    wreg     enum E1264
  sDataSample     1    0[BANK0 ] enum E1272
  sClockIdle      1    1[BANK0 ] enum E1276
  sTransmitEdg    1    2[BANK0 ] enum E1280
 Auto vars:     Size  Location     Type
  sType           1    6[COMMON] enum E1264
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       3       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _initOscm *****************
 Defined at:
		line 7 in file "oscm.c"
 Parameters:    Size  Location     Type
  IRCF            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  IRCF            1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         1       2       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 41 in file "LCDM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_Setup
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 16 in file "LCDM.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Port
 This function is called by:
		_Setup
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Clear
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 12 in file "LCDM.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 89 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_mandar
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _mandar *****************
 Defined at:
		line 299 in file "MASTER.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
usartm.c
		_usartm        		CODE           	0727	0000	22

usartm.c estimated size: 22

shared
		__stringtab    		STRING         	06C4	0000	7
		__initialization		CODE           	0015	0000	11

shared estimated size: 18

oscm.c
		_initOscm      		CODE           	04CD	0000	95

oscm.c estimated size: 95

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	061F	0000	40

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c estimated size: 40

MASTER.c
		_map           		CODE           	0339	0000	190
		_temperatura   		CODE           	052B	0000	80
		_ISR           		CODE           	068A	0000	31
		_temperatura2  		CODE           	05BB	0000	60
		_main          		CODE           	0023	0000	336
		_map2          		CODE           	03F6	0000	111
		_Setup         		CODE           	057A	0000	66
		_map3          		CODE           	0172	0000	257
		_mandar        		CODE           	0272	0000	200

MASTER.c estimated size: 1331

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c
		___bmul        		CODE           	0710	0000	24

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c estimated size: 24

SSP.c
		_spiWrite      		CODE           	0754	0000	7
		_spiInit       		CODE           	066C	0000	31
		_spiReceiveWait		CODE           	074D	0000	8
		_spiRead       		CODE           	073C	0000	10

SSP.c estimated size: 56

LCDM.c
		_Lcd_Write_String		CODE           	05F6	0000	42
		_Lcd_Init      		CODE           	06F7	0000	26
		_Lcd_Write_Char		CODE           	06DE	0000	26
		_Lcd_Cmd       		CODE           	06A8	0000	29
		_Lcd_Set_Cursor		CODE           	0646	0000	39
		_Lcd_Port      		CODE           	075A	0000	7

LCDM.c estimated size: 169

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	0464	0000	106

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c estimated size: 106

