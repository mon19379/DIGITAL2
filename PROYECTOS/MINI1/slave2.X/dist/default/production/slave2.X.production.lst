

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Feb 15 01:34:14 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 09/04/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  0009                     _PORTE	set	9
   367  0007                     _PORTC	set	7
   368  0006                     _PORTB	set	6
   369  0005                     _PORTA	set	5
   370  000C                     _PIR1bits	set	12
   371  000B                     _INTCONbits	set	11
   372  0006                     _PORTBbits	set	6
   373  0008                     _PORTD	set	8
   374  0058                     _RBIF	set	88
   375  008F                     _OSCCONbits	set	143
   376  0094                     _SSPSTATbits	set	148
   377  0094                     _SSPSTAT	set	148
   378  008C                     _PIE1bits	set	140
   379  0095                     _WPUB	set	149
   380  0096                     _IOCB	set	150
   381  0081                     _OPTION_REG	set	129
   382  0086                     _TRISB	set	134
   383  0085                     _TRISA	set	133
   384  0087                     _TRISC	set	135
   385  0089                     _TRISE	set	137
   386  0088                     _TRISD	set	136
   387  043B                     _TRISC3	set	1083
   388  043D                     _TRISC5	set	1085
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	cinit
   393  0013                     start_initialization:	
   394                           ; #config settings
   395                           
   396  0013                     __initialization:
   397                           
   398                           ; Clear objects allocated to COMMON
   399  0013  01F7               	clrf	__pbssCOMMON& (0+127)
   400  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   401  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   402  0016                     end_of_initialization:	
   403                           ;End of C runtime variable initialization code
   404                           
   405  0016                     __end_of__initialization:
   406  0016  0183               	clrf	3
   407  0017  120A  118A  2912   	ljmp	_main	;jump to C main() function
   408                           
   409                           	psect	bssCOMMON
   410  0077                     __pbssCOMMON:
   411  0077                     _c1:
   412  0077                     	ds	1
   413  0078                     _B2:
   414  0078                     	ds	1
   415  0079                     _B1:
   416  0079                     	ds	1
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:
   420  0070                     ?_spiWrite:
   421  0070                     ??_spiWrite:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_Setup:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_initOscs2:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_ISR:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     spiWrite@dat:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	1
   442  0071                     ??_ISR:
   443                           
   444                           ; 1 bytes @ 0x1
   445  0071                     	ds	3
   446  0074                     ??_initOscs2:
   447  0074                     ?_spiInit:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     spiInit@sDataSample:	
   451                           ; 1 bytes @ 0x4
   452                           
   453                           
   454                           ; 1 bytes @ 0x4
   455  0074                     	ds	1
   456  0075                     spiInit@sClockIdle:
   457                           
   458                           ; 1 bytes @ 0x5
   459  0075                     	ds	1
   460  0076                     spiInit@sTransmitEdge:
   461  0076                     initOscs2@IRCF:	
   462                           ; 1 bytes @ 0x6
   463                           
   464                           
   465                           ; 1 bytes @ 0x6
   466  0076                     	ds	1
   467  0077                     ??_Setup:
   468  0077                     ??_spiInit:	
   469                           ; 1 bytes @ 0x7
   470                           
   471  0077                     ??_main:	
   472                           ; 1 bytes @ 0x7
   473                           
   474                           
   475                           	psect	cstackBANK0
   476  0020                     __pcstackBANK0:	
   477                           ; 1 bytes @ 0x7
   478                           
   479  0020                     spiInit@sType:
   480                           
   481                           ; 1 bytes @ 0x0
   482  0020                     	ds	1
   483                           
   484                           	psect	maintext
   485  0112                     __pmaintext:	
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 87 in file "s2.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels required when called:    4
   511 ;; This function calls:
   512 ;;		_Setup
   513 ;; This function is called by:
   514 ;;		Startup code after reset
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _main
   520  0112                     _main:
   521  0112                     l994:	
   522                           ;incstack = 0
   523                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   524                           
   525                           
   526                           ;s2.c: 89:     Setup();
   527  0112  120A  118A  20BD  120A  118A  	fcall	_Setup
   528  0117                     l72:	
   529                           ;s2.c: 100:     while (1) {
   530                           
   531  0117                     l73:	
   532                           ;s2.c: 112:     }
   533                           
   534  0117  2917               	goto	l72
   535  0118  120A  118A  2810   	ljmp	start
   536  011B                     __end_of_main:
   537                           
   538                           	psect	text1
   539  00BD                     __ptext1:	
   540 ;; *************** function _Setup *****************
   541 ;; Defined at:
   542 ;;		line 118 in file "s2.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    3
   563 ;; This function calls:
   564 ;;		_initOscs2
   565 ;;		_spiInit
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _Setup
   573  00BD                     _Setup:
   574  00BD                     l948:	
   575                           ;incstack = 0
   576                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   577                           
   578                           
   579                           ;s2.c: 119:     initOscs2(6);
   580  00BD  3006               	movlw	6
   581  00BE  120A  118A  201A  120A  118A  	fcall	_initOscs2
   582  00C3                     l950:
   583                           
   584                           ;s2.c: 120:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SPI
      +                          _IDLE_2_ACTIVE);
   585  00C3  01F4               	clrf	spiInit@sDataSample
   586  00C4  01F5               	clrf	spiInit@sClockIdle
   587  00C5  01F6               	clrf	spiInit@sTransmitEdge
   588  00C6  3024               	movlw	36
   589  00C7  120A  118A  20F4  120A  118A  	fcall	_spiInit
   590  00CC                     l952:
   591                           
   592                           ;s2.c: 121:     TRISD = 0;
   593  00CC  1683               	bsf	3,5	;RP0=1, select bank1
   594  00CD  1303               	bcf	3,6	;RP1=0, select bank1
   595  00CE  0188               	clrf	8	;volatile
   596  00CF                     l954:
   597                           
   598                           ;s2.c: 122:     TRISE = 0;
   599  00CF  0189               	clrf	9	;volatile
   600  00D0                     l956:
   601                           
   602                           ;s2.c: 123:     ANSEL = 0;
   603  00D0  1683               	bsf	3,5	;RP0=1, select bank3
   604  00D1  1703               	bsf	3,6	;RP1=1, select bank3
   605  00D2  0188               	clrf	8	;volatile
   606  00D3                     l958:
   607                           
   608                           ;s2.c: 124:     ANSELH = 0;
   609  00D3  0189               	clrf	9	;volatile
   610  00D4                     l960:
   611                           
   612                           ;s2.c: 125:     PORTA = 0;
   613  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   614  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   615  00D6  0185               	clrf	5	;volatile
   616  00D7                     l962:
   617                           
   618                           ;s2.c: 126:     PORTB = 0;
   619  00D7  0186               	clrf	6	;volatile
   620  00D8                     l964:
   621                           
   622                           ;s2.c: 127:     PORTC = 0;
   623  00D8  0187               	clrf	7	;volatile
   624  00D9                     l966:
   625                           
   626                           ;s2.c: 128:     PORTD = 0;
   627  00D9  0188               	clrf	8	;volatile
   628  00DA                     l968:
   629                           
   630                           ;s2.c: 129:     PORTE = 0;
   631  00DA  0189               	clrf	9	;volatile
   632  00DB                     l970:
   633                           
   634                           ;s2.c: 131:     TRISC = 0b00001000;
   635  00DB  3008               	movlw	8
   636  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   637  00DD  1303               	bcf	3,6	;RP1=0, select bank1
   638  00DE  0087               	movwf	7	;volatile
   639  00DF                     l972:
   640                           
   641                           ;s2.c: 132:     TRISA = 0b00100000;
   642  00DF  3020               	movlw	32
   643  00E0  0085               	movwf	5	;volatile
   644  00E1                     l974:
   645                           
   646                           ;s2.c: 133:     TRISB = 0b00000011;
   647  00E1  3003               	movlw	3
   648  00E2  0086               	movwf	6	;volatile
   649  00E3                     l976:
   650                           
   651                           ;s2.c: 134:     OPTION_REG = 0b00000111;
   652  00E3  3007               	movlw	7
   653  00E4  0081               	movwf	1	;volatile
   654  00E5                     l978:
   655                           
   656                           ;s2.c: 135:     INTCONbits.GIE = 1;
   657  00E5  178B               	bsf	11,7	;volatile
   658  00E6                     l980:
   659                           
   660                           ;s2.c: 136:     INTCONbits.PEIE = 1;
   661  00E6  170B               	bsf	11,6	;volatile
   662  00E7                     l982:
   663                           
   664                           ;s2.c: 137:     INTCONbits.RBIE = 1;
   665  00E7  158B               	bsf	11,3	;volatile
   666  00E8                     l984:
   667                           
   668                           ;s2.c: 138:     INTCONbits.RBIF = 0;
   669  00E8  100B               	bcf	11,0	;volatile
   670  00E9                     l986:
   671                           
   672                           ;s2.c: 139:     IOCB = 3;
   673  00E9  3003               	movlw	3
   674  00EA  0096               	movwf	22	;volatile
   675  00EB                     l988:
   676                           
   677                           ;s2.c: 140:     WPUB = 0b0000011;
   678  00EB  3003               	movlw	3
   679  00EC  0095               	movwf	21	;volatile
   680  00ED                     l990:
   681                           
   682                           ;s2.c: 141:     PIR1bits.SSPIF = 0;
   683  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   684  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   685  00EF  118C               	bcf	12,3	;volatile
   686  00F0                     l992:
   687                           
   688                           ;s2.c: 142:     PIE1bits.SSPIE = 1;
   689  00F0  1683               	bsf	3,5	;RP0=1, select bank1
   690  00F1  1303               	bcf	3,6	;RP1=0, select bank1
   691  00F2  158C               	bsf	12,3	;volatile
   692  00F3                     l78:
   693  00F3  0008               	return
   694  00F4                     __end_of_Setup:
   695                           
   696                           	psect	text2
   697  00F4                     __ptext2:	
   698 ;; *************** function _spiInit *****************
   699 ;; Defined at:
   700 ;;		line 13 in file "SSP2.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  sType           1    wreg     enum E1264
   703 ;;  sDataSample     1    4[COMMON] enum E1272
   704 ;;  sClockIdle      1    5[COMMON] enum E1276
   705 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  sType           1    0[BANK0 ] enum E1264
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         3       0       0       0       0
   718 ;;      Locals:         0       1       0       0       0
   719 ;;      Temps:          0       0       0       0       0
   720 ;;      Totals:         3       1       0       0       0
   721 ;;Total ram usage:        4 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    2
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_Setup
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           
   732                           ;psect for function _spiInit
   733  00F4                     _spiInit:
   734                           
   735                           ;incstack = 0
   736                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   737                           ;spiInit@sType stored from wreg
   738  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   739  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   740  00F6  00A0               	movwf	spiInit@sType
   741  00F7                     l938:
   742                           
   743                           ;SSP2.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sC
      +                          lockIdle, Spi_Transmit_Edge sTransmitEdge);SSP2.c: 14: {;SSP2.c: 15:     TRISC5 = 0;
   744  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   745  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   746  00F9  1287               	bcf	7,5	;volatile
   747                           
   748                           ;SSP2.c: 16:     if(sType & 0b00000100)
   749  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   750  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   751  00FC  1D20               	btfss	spiInit@sType,2
   752  00FD  28FF               	goto	u121
   753  00FE  2900               	goto	u120
   754  00FF                     u121:
   755  00FF  2906               	goto	l944
   756  0100                     u120:
   757  0100                     l940:
   758                           
   759                           ;SSP2.c: 17:     {;SSP2.c: 18:         SSPSTAT = sTransmitEdge;
   760  0100  0876               	movf	spiInit@sTransmitEdge,w
   761  0101  1683               	bsf	3,5	;RP0=1, select bank1
   762  0102  1303               	bcf	3,6	;RP1=0, select bank1
   763  0103  0094               	movwf	20	;volatile
   764  0104                     l942:
   765                           
   766                           ;SSP2.c: 19:         TRISC3 = 1;
   767  0104  1587               	bsf	7,3	;volatile
   768                           
   769                           ;SSP2.c: 20:     }
   770  0105  290C               	goto	l94
   771  0106                     l944:
   772                           
   773                           ;SSP2.c: 22:     {;SSP2.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   774  0106  0874               	movf	spiInit@sDataSample,w
   775  0107  0476               	iorwf	spiInit@sTransmitEdge,w
   776  0108  1683               	bsf	3,5	;RP0=1, select bank1
   777  0109  1303               	bcf	3,6	;RP1=0, select bank1
   778  010A  0094               	movwf	20	;volatile
   779  010B                     l946:
   780                           
   781                           ;SSP2.c: 24:         TRISC3 = 0;
   782  010B  1187               	bcf	7,3	;volatile
   783  010C                     l94:	
   784                           ;SSP2.c: 25:     }
   785                           
   786                           
   787                           ;SSP2.c: 27:     SSPCON = sType | sClockIdle;
   788  010C  1283               	bcf	3,5	;RP0=0, select bank0
   789  010D  1303               	bcf	3,6	;RP1=0, select bank0
   790  010E  0820               	movf	spiInit@sType,w
   791  010F  0475               	iorwf	spiInit@sClockIdle,w
   792  0110  0094               	movwf	20	;volatile
   793  0111                     l95:
   794  0111  0008               	return
   795  0112                     __end_of_spiInit:
   796                           
   797                           	psect	text3
   798  001A                     __ptext3:	
   799 ;; *************** function _initOscs2 *****************
   800 ;; Defined at:
   801 ;;		line 7 in file "osc2.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  IRCF            1    wreg     unsigned char 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  IRCF            1    6[COMMON] unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         1       0       0       0       0
   817 ;;      Temps:          2       0       0       0       0
   818 ;;      Totals:         3       0       0       0       0
   819 ;;Total ram usage:        3 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    2
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_Setup
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _initOscs2
   831  001A                     _initOscs2:
   832                           
   833                           ;incstack = 0
   834                           ; Regs used in _initOscs2: [wreg-fsr0h+status,2+status,0]
   835                           ;initOscs2@IRCF stored from wreg
   836  001A  00F6               	movwf	initOscs2@IRCF
   837  001B                     l720:
   838                           
   839                           ;osc2.c: 9:     switch (IRCF){
   840  001B  2852               	goto	l724
   841  001C                     l118:	
   842                           ;osc2.c: 11:         case 0:
   843                           
   844                           
   845                           ;osc2.c: 12:             OSCCONbits.IRCF2 = 0;
   846  001C  1683               	bsf	3,5	;RP0=1, select bank1
   847  001D  1303               	bcf	3,6	;RP1=0, select bank1
   848  001E  130F               	bcf	15,6	;volatile
   849                           
   850                           ;osc2.c: 13:             OSCCONbits.IRCF1 = 0;
   851  001F  128F               	bcf	15,5	;volatile
   852                           
   853                           ;osc2.c: 14:             OSCCONbits.IRCF0 = 0;
   854  0020  120F               	bcf	15,4	;volatile
   855                           
   856                           ;osc2.c: 16:             break;
   857  0021  2874               	goto	l119
   858  0022                     l120:	
   859                           ;osc2.c: 18:         case 1:
   860                           
   861                           
   862                           ;osc2.c: 19:             OSCCONbits.IRCF2 = 0;
   863  0022  1683               	bsf	3,5	;RP0=1, select bank1
   864  0023  1303               	bcf	3,6	;RP1=0, select bank1
   865  0024  130F               	bcf	15,6	;volatile
   866                           
   867                           ;osc2.c: 20:             OSCCONbits.IRCF1 = 0;
   868  0025  128F               	bcf	15,5	;volatile
   869                           
   870                           ;osc2.c: 21:             OSCCONbits.IRCF0 = 1;
   871  0026  160F               	bsf	15,4	;volatile
   872                           
   873                           ;osc2.c: 22:             break;
   874  0027  2874               	goto	l119
   875  0028                     l121:	
   876                           ;osc2.c: 24:         case 2:
   877                           
   878                           
   879                           ;osc2.c: 25:             OSCCONbits.IRCF2 = 0;
   880  0028  1683               	bsf	3,5	;RP0=1, select bank1
   881  0029  1303               	bcf	3,6	;RP1=0, select bank1
   882  002A  130F               	bcf	15,6	;volatile
   883                           
   884                           ;osc2.c: 26:             OSCCONbits.IRCF1 = 1;
   885  002B  168F               	bsf	15,5	;volatile
   886                           
   887                           ;osc2.c: 27:             OSCCONbits.IRCF0 = 0;
   888  002C  120F               	bcf	15,4	;volatile
   889                           
   890                           ;osc2.c: 28:             break;
   891  002D  2874               	goto	l119
   892  002E                     l122:	
   893                           ;osc2.c: 30:         case 3:
   894                           
   895                           
   896                           ;osc2.c: 31:             OSCCONbits.IRCF2 = 0;
   897  002E  1683               	bsf	3,5	;RP0=1, select bank1
   898  002F  1303               	bcf	3,6	;RP1=0, select bank1
   899  0030  130F               	bcf	15,6	;volatile
   900                           
   901                           ;osc2.c: 32:             OSCCONbits.IRCF1 = 1;
   902  0031  168F               	bsf	15,5	;volatile
   903                           
   904                           ;osc2.c: 33:             OSCCONbits.IRCF0 = 1;
   905  0032  160F               	bsf	15,4	;volatile
   906                           
   907                           ;osc2.c: 34:             break;
   908  0033  2874               	goto	l119
   909  0034                     l123:	
   910                           ;osc2.c: 36:         case 4:
   911                           
   912                           
   913                           ;osc2.c: 37:             OSCCONbits.IRCF2 = 1;
   914  0034  1683               	bsf	3,5	;RP0=1, select bank1
   915  0035  1303               	bcf	3,6	;RP1=0, select bank1
   916  0036  170F               	bsf	15,6	;volatile
   917                           
   918                           ;osc2.c: 38:             OSCCONbits.IRCF1 = 0;
   919  0037  128F               	bcf	15,5	;volatile
   920                           
   921                           ;osc2.c: 39:             OSCCONbits.IRCF0 = 0;
   922  0038  120F               	bcf	15,4	;volatile
   923                           
   924                           ;osc2.c: 40:             break;
   925  0039  2874               	goto	l119
   926  003A                     l124:	
   927                           ;osc2.c: 42:         case 5:
   928                           
   929                           
   930                           ;osc2.c: 43:             OSCCONbits.IRCF2 = 1;
   931  003A  1683               	bsf	3,5	;RP0=1, select bank1
   932  003B  1303               	bcf	3,6	;RP1=0, select bank1
   933  003C  170F               	bsf	15,6	;volatile
   934                           
   935                           ;osc2.c: 44:             OSCCONbits.IRCF1 = 0;
   936  003D  128F               	bcf	15,5	;volatile
   937                           
   938                           ;osc2.c: 45:             OSCCONbits.IRCF0 = 1;
   939  003E  160F               	bsf	15,4	;volatile
   940                           
   941                           ;osc2.c: 46:             break;
   942  003F  2874               	goto	l119
   943  0040                     l125:	
   944                           ;osc2.c: 49:         case 6:
   945                           
   946                           
   947                           ;osc2.c: 50:             OSCCONbits.IRCF2 = 1;
   948  0040  1683               	bsf	3,5	;RP0=1, select bank1
   949  0041  1303               	bcf	3,6	;RP1=0, select bank1
   950  0042  170F               	bsf	15,6	;volatile
   951                           
   952                           ;osc2.c: 51:             OSCCONbits.IRCF1 = 1;
   953  0043  168F               	bsf	15,5	;volatile
   954                           
   955                           ;osc2.c: 52:             OSCCONbits.IRCF0 = 0;
   956  0044  120F               	bcf	15,4	;volatile
   957                           
   958                           ;osc2.c: 53:             break;
   959  0045  2874               	goto	l119
   960  0046                     l126:	
   961                           ;osc2.c: 55:         case 7:
   962                           
   963                           
   964                           ;osc2.c: 56:             OSCCONbits.IRCF2 = 1;
   965  0046  1683               	bsf	3,5	;RP0=1, select bank1
   966  0047  1303               	bcf	3,6	;RP1=0, select bank1
   967  0048  170F               	bsf	15,6	;volatile
   968                           
   969                           ;osc2.c: 57:             OSCCONbits.IRCF1 = 1;
   970  0049  168F               	bsf	15,5	;volatile
   971                           
   972                           ;osc2.c: 58:             OSCCONbits.IRCF0 = 1;
   973  004A  160F               	bsf	15,4	;volatile
   974                           
   975                           ;osc2.c: 59:             break;
   976  004B  2874               	goto	l119
   977  004C                     l127:	
   978                           ;osc2.c: 64:         default:
   979                           
   980                           
   981                           ;osc2.c: 65:             OSCCONbits.IRCF2 = 1;
   982  004C  1683               	bsf	3,5	;RP0=1, select bank1
   983  004D  1303               	bcf	3,6	;RP1=0, select bank1
   984  004E  170F               	bsf	15,6	;volatile
   985                           
   986                           ;osc2.c: 66:             OSCCONbits.IRCF1 = 1;
   987  004F  168F               	bsf	15,5	;volatile
   988                           
   989                           ;osc2.c: 67:             OSCCONbits.IRCF0 = 0;
   990  0050  120F               	bcf	15,4	;volatile
   991                           
   992                           ;osc2.c: 68:             break;
   993  0051  2874               	goto	l119
   994  0052                     l724:
   995  0052  0876               	movf	initOscs2@IRCF,w
   996  0053  00F4               	movwf	??_initOscs2
   997  0054  01F5               	clrf	??_initOscs2+1
   998                           
   999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1000                           ; Switch size 1, requested type "simple"
  1001                           ; Number of cases is 1, Range of values is 0 to 0
  1002                           ; switch strategies available:
  1003                           ; Name         Instructions Cycles
  1004                           ; simple_byte            4     3 (average)
  1005                           ; direct_byte           11     8 (fixed)
  1006                           ; jumptable            260     6 (fixed)
  1007                           ;	Chosen strategy is simple_byte
  1008  0055  0875               	movf	??_initOscs2+1,w
  1009  0056  3A00               	xorlw	0	; case 0
  1010  0057  1903               	skipnz
  1011  0058  285A               	goto	l1016
  1012  0059  284C               	goto	l127
  1013  005A                     l1016:
  1014                           
  1015                           ; Switch size 1, requested type "simple"
  1016                           ; Number of cases is 8, Range of values is 0 to 7
  1017                           ; switch strategies available:
  1018                           ; Name         Instructions Cycles
  1019                           ; simple_byte           25    13 (average)
  1020                           ; direct_byte           32     8 (fixed)
  1021                           ; jumptable            260     6 (fixed)
  1022                           ;	Chosen strategy is simple_byte
  1023  005A  0874               	movf	??_initOscs2,w
  1024  005B  3A00               	xorlw	0	; case 0
  1025  005C  1903               	skipnz
  1026  005D  281C               	goto	l118
  1027  005E  3A01               	xorlw	1	; case 1
  1028  005F  1903               	skipnz
  1029  0060  2822               	goto	l120
  1030  0061  3A03               	xorlw	3	; case 2
  1031  0062  1903               	skipnz
  1032  0063  2828               	goto	l121
  1033  0064  3A01               	xorlw	1	; case 3
  1034  0065  1903               	skipnz
  1035  0066  282E               	goto	l122
  1036  0067  3A07               	xorlw	7	; case 4
  1037  0068  1903               	skipnz
  1038  0069  2834               	goto	l123
  1039  006A  3A01               	xorlw	1	; case 5
  1040  006B  1903               	skipnz
  1041  006C  283A               	goto	l124
  1042  006D  3A03               	xorlw	3	; case 6
  1043  006E  1903               	skipnz
  1044  006F  2840               	goto	l125
  1045  0070  3A01               	xorlw	1	; case 7
  1046  0071  1903               	skipnz
  1047  0072  2846               	goto	l126
  1048  0073  284C               	goto	l127
  1049  0074                     l119:
  1050                           
  1051                           ;osc2.c: 72:     OSCCONbits.SCS = 1;
  1052  0074  140F               	bsf	15,0	;volatile
  1053  0075                     l128:
  1054  0075  0008               	return
  1055  0076                     __end_of_initOscs2:
  1056                           
  1057                           	psect	text4
  1058  0076                     __ptext4:	
  1059 ;; *************** function _ISR *****************
  1060 ;; Defined at:
  1061 ;;		line 46 in file "s2.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0
  1077 ;;      Temps:          3       0       0       0       0
  1078 ;;      Totals:         3       0       0       0       0
  1079 ;;Total ram usage:        3 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    1
  1082 ;; This function calls:
  1083 ;;		_spiWrite
  1084 ;; This function is called by:
  1085 ;;		Interrupt level 1
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _ISR
  1091  0076                     _ISR:
  1092  0076                     i1l790:
  1093                           
  1094                           ;s2.c: 47:     c1 = PORTD;
  1095  0076  0808               	movf	8,w	;volatile
  1096  0077  00FF               	movwf	btemp+1
  1097  0078  087F               	movf	btemp+1,w
  1098  0079  00F7               	movwf	_c1
  1099  007A                     i1l792:
  1100                           
  1101                           ;s2.c: 48:     if (RBIF == 1) {
  1102  007A  1C0B               	btfss	11,0	;volatile
  1103  007B  287D               	goto	u3_21
  1104  007C  287E               	goto	u3_20
  1105  007D                     u3_21:
  1106  007D  28A7               	goto	i1l820
  1107  007E                     u3_20:
  1108  007E                     i1l794:
  1109                           
  1110                           ;s2.c: 49:         if (PORTBbits.RB0 == 0) {
  1111  007E  1806               	btfsc	6,0	;volatile
  1112  007F  2881               	goto	u4_21
  1113  0080  2882               	goto	u4_20
  1114  0081                     u4_21:
  1115  0081  2885               	goto	i1l798
  1116  0082                     u4_20:
  1117  0082                     i1l796:
  1118                           
  1119                           ;s2.c: 50:             B1 = 1;
  1120  0082  01F9               	clrf	_B1
  1121  0083  0AF9               	incf	_B1,f
  1122                           
  1123                           ;s2.c: 51:         } else {
  1124  0084  2893               	goto	i1l806
  1125  0085                     i1l798:
  1126                           
  1127                           ;s2.c: 52:             if (B1 == 1 && PORTBbits.RB0 == 1) {
  1128  0085  0379               	decf	_B1,w
  1129  0086  1D03               	btfss	3,2
  1130  0087  2889               	goto	u5_21
  1131  0088  288A               	goto	u5_20
  1132  0089                     u5_21:
  1133  0089  2893               	goto	i1l806
  1134  008A                     u5_20:
  1135  008A                     i1l800:
  1136  008A  1C06               	btfss	6,0	;volatile
  1137  008B  288D               	goto	u6_21
  1138  008C  288E               	goto	u6_20
  1139  008D                     u6_21:
  1140  008D  2893               	goto	i1l806
  1141  008E                     u6_20:
  1142  008E                     i1l802:
  1143                           
  1144                           ;s2.c: 53:                 B1 = 0;
  1145  008E  01F9               	clrf	_B1
  1146  008F                     i1l804:
  1147                           
  1148                           ;s2.c: 54:                 PORTD++;
  1149  008F  3001               	movlw	1
  1150  0090  00FF               	movwf	btemp+1
  1151  0091  087F               	movf	btemp+1,w
  1152  0092  0788               	addwf	8,f	;volatile
  1153  0093                     i1l806:
  1154                           
  1155                           ;s2.c: 60:         if (PORTBbits.RB1 == 0) {
  1156  0093  1886               	btfsc	6,1	;volatile
  1157  0094  2896               	goto	u7_21
  1158  0095  2897               	goto	u7_20
  1159  0096                     u7_21:
  1160  0096  289A               	goto	i1l810
  1161  0097                     u7_20:
  1162  0097                     i1l808:
  1163                           
  1164                           ;s2.c: 61:             B2 = 1;
  1165  0097  01F8               	clrf	_B2
  1166  0098  0AF8               	incf	_B2,f
  1167                           
  1168                           ;s2.c: 62:         } else {
  1169  0099  28A6               	goto	i1l818
  1170  009A                     i1l810:
  1171                           
  1172                           ;s2.c: 63:             if (B2 == 1 && PORTBbits.RB1 == 1) {
  1173  009A  0378               	decf	_B2,w
  1174  009B  1D03               	btfss	3,2
  1175  009C  289E               	goto	u8_21
  1176  009D  289F               	goto	u8_20
  1177  009E                     u8_21:
  1178  009E  28A6               	goto	i1l818
  1179  009F                     u8_20:
  1180  009F                     i1l812:
  1181  009F  1C86               	btfss	6,1	;volatile
  1182  00A0  28A2               	goto	u9_21
  1183  00A1  28A3               	goto	u9_20
  1184  00A2                     u9_21:
  1185  00A2  28A6               	goto	i1l818
  1186  00A3                     u9_20:
  1187  00A3                     i1l814:
  1188                           
  1189                           ;s2.c: 64:                 B2 = 0;
  1190  00A3  01F8               	clrf	_B2
  1191  00A4                     i1l816:
  1192                           
  1193                           ;s2.c: 65:                 PORTD--;
  1194  00A4  3001               	movlw	1
  1195  00A5  0288               	subwf	8,f	;volatile
  1196  00A6                     i1l818:
  1197                           
  1198                           ;s2.c: 71:         INTCONbits.RBIF = 0;
  1199  00A6  100B               	bcf	11,0	;volatile
  1200  00A7                     i1l820:
  1201                           
  1202                           ;s2.c: 77:     if (PIR1bits.SSPIF == 1) {
  1203  00A7  1D8C               	btfss	12,3	;volatile
  1204  00A8  28AA               	goto	u10_21
  1205  00A9  28AB               	goto	u10_20
  1206  00AA                     u10_21:
  1207  00AA  28B4               	goto	i1l67
  1208  00AB                     u10_20:
  1209  00AB                     i1l822:
  1210                           
  1211                           ;s2.c: 78:         spiWrite(c1);
  1212  00AB  0877               	movf	_c1,w
  1213  00AC  120A  118A  211B  120A  118A  	fcall	_spiWrite
  1214  00B1                     i1l824:
  1215                           
  1216                           ;s2.c: 79:         PIR1bits.SSPIF = 0;
  1217  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1218  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1219  00B3  118C               	bcf	12,3	;volatile
  1220  00B4                     i1l67:
  1221  00B4  0873               	movf	??_ISR+2,w
  1222  00B5  00FF               	movwf	btemp+1
  1223  00B6  0872               	movf	??_ISR+1,w
  1224  00B7  008A               	movwf	10
  1225  00B8  0E71               	swapf	??_ISR^(0+4294967168),w
  1226  00B9  0083               	movwf	3
  1227  00BA  0EFE               	swapf	btemp,f
  1228  00BB  0E7E               	swapf	btemp,w
  1229  00BC  0009               	retfie
  1230  00BD                     __end_of_ISR:
  1231                           
  1232                           	psect	intentry
  1233  0004                     __pintentry:	
  1234                           ;incstack = 0
  1235                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1236                           
  1237  0004                     interrupt_function:
  1238  007E                     saved_w	set	btemp
  1239  0004  00FE               	movwf	btemp
  1240  0005  0E03               	swapf	3,w
  1241  0006  00F1               	movwf	??_ISR
  1242  0007  080A               	movf	10,w
  1243  0008  00F2               	movwf	??_ISR+1
  1244  0009  1283               	bcf	3,5	;RP0=0, select bank0
  1245  000A  1303               	bcf	3,6	;RP1=0, select bank0
  1246  000B  087F               	movf	btemp+1,w
  1247  000C  00F3               	movwf	??_ISR+2
  1248  000D  120A  118A  2876   	ljmp	_ISR
  1249                           
  1250                           	psect	text5
  1251  011B                     __ptext5:	
  1252 ;; *************** function _spiWrite *****************
  1253 ;; Defined at:
  1254 ;;		line 35 in file "SSP2.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  dat             1    wreg     unsigned char 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  dat             1    0[COMMON] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         1       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0
  1271 ;;      Totals:         1       0       0       0       0
  1272 ;;Total ram usage:        1 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_ISR
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _spiWrite
  1283  011B                     _spiWrite:
  1284                           
  1285                           ;incstack = 0
  1286                           ; Regs used in _spiWrite: [wreg]
  1287                           ;spiWrite@dat stored from wreg
  1288  011B  00F0               	movwf	spiWrite@dat
  1289  011C                     i1l740:
  1290                           
  1291                           ;SSP2.c: 35: void spiWrite(char dat);SSP2.c: 36: {;SSP2.c: 37:     SSPBUF = dat;
  1292  011C  0870               	movf	spiWrite@dat,w
  1293  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1294  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1295  011F  0093               	movwf	19	;volatile
  1296  0120                     i1l104:
  1297  0120  0008               	return
  1298  0121                     __end_of_spiWrite:
  1299  007E                     btemp	set	126	;btemp
  1300  007E                     wtemp0	set	126
  1301                           
  1302                           	psect	config
  1303                           
  1304                           ;Config register CONFIG1 @ 0x2007
  1305                           ;	Oscillator Selection bits
  1306                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1307                           ;	Watchdog Timer Enable bit
  1308                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1309                           ;	Power-up Timer Enable bit
  1310                           ;	PWRTE = OFF, PWRT disabled
  1311                           ;	RE3/MCLR pin function select bit
  1312                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1313                           ;	Code Protection bit
  1314                           ;	CP = OFF, Program memory code protection is disabled
  1315                           ;	Data Code Protection bit
  1316                           ;	CPD = OFF, Data memory code protection is disabled
  1317                           ;	Brown Out Reset Selection bits
  1318                           ;	BOREN = OFF, BOR disabled
  1319                           ;	Internal External Switchover bit
  1320                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1321                           ;	Fail-Safe Clock Monitor Enabled bit
  1322                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1323                           ;	Low Voltage Programming Enable bit
  1324                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1325                           ;	In-Circuit Debugger Mode bit
  1326                           ;	DEBUG = 0x1, unprogrammed default
  1327  2007                     	org	8199
  1328  2007  20D4               	dw	8404
  1329                           
  1330                           ;Config register CONFIG2 @ 0x2008
  1331                           ;	Brown-out Reset Selection bit
  1332                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1333                           ;	Flash Program Memory Self Write Enable bits
  1334                           ;	WRT = OFF, Write protection off
  1335  2008                     	org	8200
  1336  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Setup->_initOscs2
    _Setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _Setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     471
                          _initOscs2
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initOscs2                                            3     3      0      15
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _initOscs2
     _spiInit

 _ISR (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Feb 15 01:34:14 2021

            _SSPSTATbits 0094                       _B1 0079                       _B2 0078  
                     l72 0117                       l73 0117                       l94 010C  
                     l78 00F3                       l95 0111                       _c1 0077  
                    l120 0022                      l121 0028                      l122 002E  
                    l123 0034                      l124 003A                      l125 0040  
                    l126 0046                      l118 001C                      l127 004C  
                    l119 0074                      l128 0075                      l720 001B  
                    l724 0052                      l940 0100                      l942 0104  
                    l950 00C3                      l944 0106                      l960 00D4  
                    l952 00CC                      l946 010B                      l938 00F7  
                    l970 00DB                      l962 00D7                      l954 00CF  
                    l980 00E6                      l972 00DF                      l964 00D8  
                    l956 00D0                      l948 00BD                      l990 00ED  
                    l982 00E7                      l974 00E1                      l966 00D9  
                    l958 00D3                      l992 00F0                      l984 00E8  
                    l976 00E3                      l968 00DA                      l986 00E9  
                    l978 00E5                      l994 0112                      l988 00EB  
                    u120 0100                      u121 00FF                      _ISR 0076  
                   ?_ISR 0070                     l1016 005A                     _IOCB 0096  
                   _RBIF 0058                     i1l67 00B4                     _WPUB 0095  
                   u3_20 007E                     u3_21 007D                     u4_20 0082  
                   u4_21 0081                     u5_20 008A                     u5_21 0089  
                   u6_20 008E                     u6_21 008D                     u7_20 0097  
                   u7_21 0096                     u8_20 009F                     u8_21 009E  
                   u9_20 00A3                     u9_21 00A2                     _main 0112  
                   btemp 007E                     start 0010                    ??_ISR 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l104 0120  
                  i1l800 008A                    i1l810 009A                    i1l802 008E  
                  i1l740 011C                    i1l812 009F                    i1l804 008F  
                  i1l820 00A7                    i1l822 00AB                    i1l814 00A3  
                  i1l806 0093                    i1l824 00B1                    i1l816 00A4  
                  i1l808 0097                    i1l818 00A6                    i1l790 0076  
                  i1l792 007A                    i1l794 007E                    i1l796 0082  
                  i1l798 0085                    u10_20 00AB                    u10_21 00AA  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _Setup 00BD                    pclath 000A  
        __end_of_spiInit 0112                    status 0003                    wtemp0 007E  
        __initialization 0013             __end_of_main 011B                   ??_main 0077  
                 ?_Setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 0121                ??_spiInit 0077  
__end_of__initialization 0016           __pcstackCOMMON 0070            __end_of_Setup 00F4  
                ??_Setup 0077       __size_of_initOscs2 005C               __pmaintext 0112  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 00BD                  __ptext2 00F4                  __ptext3 001A  
                __ptext4 0076                  __ptext5 011B        __end_of_initOscs2 0076  
           __size_of_ISR 0047                  _spiInit 00F4     end_of_initialization 0016  
             ??_spiWrite 0070                _PORTBbits 0006              spiWrite@dat 0070  
    start_initialization 0013              __end_of_ISR 00BD              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_spiWrite 0006  
               ?_spiInit 0074           __size_of_Setup 0037                _initOscs2 001A  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0074                 _PIR1bits 000C            initOscs2@IRCF 0076  
             ?_initOscs2 0070         __size_of_spiInit 001E            __size_of_main 0009  
               _spiWrite 011B             spiInit@sType 0020        spiInit@sClockIdle 0075  
             _INTCONbits 000B              ??_initOscs2 0074                 intlevel1 0000  
             _OSCCONbits 008F               _OPTION_REG 0081  
