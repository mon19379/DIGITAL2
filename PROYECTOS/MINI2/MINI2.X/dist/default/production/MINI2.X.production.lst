

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Mar 04 00:28:54 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 09/04/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  0013                     _SSPBUF	set	19
   457  0014                     _SSPCON	set	20
   458  0005                     _PORTAbits	set	5
   459  0019                     _TXREG	set	25
   460  0009                     _PORTE	set	9
   461  0008                     _PORTD	set	8
   462  0007                     _PORTC	set	7
   463  0006                     _PORTB	set	6
   464  0005                     _PORTA	set	5
   465  001A                     _RCREG	set	26
   466  000C                     _PIR1bits	set	12
   467  0001                     _TMR0	set	1
   468  000B                     _INTCONbits	set	11
   469  0063                     _SSPIF	set	99
   470  005E                     _PEIE	set	94
   471  005F                     _GIE	set	95
   472  0099                     _SPBRG	set	153
   473  009A                     _SPBRGH	set	154
   474  0098                     _TXSTAbits	set	152
   475  008F                     _OSCCONbits	set	143
   476  0091                     _SSPCON2bits	set	145
   477  0087                     _TRISCbits	set	135
   478  0094                     _SSPSTAT	set	148
   479  0093                     _SSPADD	set	147
   480  0091                     _SSPCON2	set	145
   481  0081                     _OPTION_REG	set	129
   482  0089                     _TRISE	set	137
   483  0088                     _TRISD	set	136
   484  0086                     _TRISB	set	134
   485  0085                     _TRISA	set	133
   486  008C                     _PIE1bits	set	140
   487  0463                     _SSPIE	set	1123
   488  043C                     _TRISC4	set	1084
   489  043B                     _TRISC3	set	1083
   490  0187                     _BAUDCTLbits	set	391
   491  0189                     _ANSELH	set	393
   492  0188                     _ANSEL	set	392
   493                           
   494                           	psect	cinit
   495  0015                     start_initialization:	
   496                           ; #config settings
   497                           
   498  0015                     __initialization:
   499                           
   500                           ; Clear objects allocated to COMMON
   501  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   502  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   503  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   504  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   505  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   506  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   507                           
   508                           ; Clear objects allocated to BANK0
   509  001B  1383               	bcf	3,7	;select IRP bank0
   510  001C  3020               	movlw	low __pbssBANK0
   511  001D  0084               	movwf	4
   512  001E  303D               	movlw	low (__pbssBANK0+29)
   513  001F  120A  118A  245F  120A  118A  	fcall	clear_ram0
   514  0024                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  0024                     __end_of__initialization:
   518  0024  0183               	clrf	3
   519  0025  120A  118A  2BFD   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMMON
   522  0070                     __pbssCOMMON:
   523  0070                     _TOG:
   524  0070                     	ds	1
   525  0071                     _MONTH:
   526  0071                     	ds	1
   527  0072                     _DAY:
   528  0072                     	ds	1
   529  0073                     _H:
   530  0073                     	ds	1
   531  0074                     _MIN:
   532  0074                     	ds	1
   533  0075                     _SEC:
   534  0075                     	ds	1
   535                           
   536                           	psect	bssBANK0
   537  0020                     __pbssBANK0:
   538  0020                     _FLAG:
   539  0020                     	ds	1
   540  0021                     _YD:
   541  0021                     	ds	1
   542  0022                     _YU:
   543  0022                     	ds	1
   544  0023                     _MOD:
   545  0023                     	ds	1
   546  0024                     _MOU:
   547  0024                     	ds	1
   548  0025                     _DD:
   549  0025                     	ds	1
   550  0026                     _DU:
   551  0026                     	ds	1
   552  0027                     _HD:
   553  0027                     	ds	1
   554  0028                     _HU:
   555  0028                     	ds	1
   556  0029                     _MD:
   557  0029                     	ds	1
   558  002A                     _MU:
   559  002A                     	ds	1
   560  002B                     _SD:
   561  002B                     	ds	1
   562  002C                     _SU:
   563  002C                     	ds	1
   564  002D                     _YEARD:
   565  002D                     	ds	1
   566  002E                     _YEARU:
   567  002E                     	ds	1
   568  002F                     _MONTHD:
   569  002F                     	ds	1
   570  0030                     _MONTHU:
   571  0030                     	ds	1
   572  0031                     _DAYD:
   573  0031                     	ds	1
   574  0032                     _DAYU:
   575  0032                     	ds	1
   576  0033                     _HORAD:
   577  0033                     	ds	1
   578  0034                     _HORAU:
   579  0034                     	ds	1
   580  0035                     _MIND:
   581  0035                     	ds	1
   582  0036                     _MINU:
   583  0036                     	ds	1
   584  0037                     _SECD:
   585  0037                     	ds	1
   586  0038                     _SECU:
   587  0038                     	ds	1
   588  0039                     _NADA:
   589  0039                     	ds	1
   590  003A                     _YEAR:
   591  003A                     	ds	1
   592  003B                     _SEND:
   593  003B                     	ds	1
   594  003C                     _CONT:
   595  003C                     	ds	1
   596                           
   597                           	psect	clrtext
   598  045F                     clear_ram0:	
   599                           ;	Called with FSR containing the base address, and
   600                           ;	W with the last address+1
   601                           
   602  045F  0064               	clrwdt	;clear the watchdog before getting into this loop
   603  0460                     clrloop0:
   604  0460  0180               	clrf	0	;clear RAM location pointed to by FSR
   605  0461  0A84               	incf	4,f	;increment pointer
   606  0462  0604               	xorwf	4,w	;XOR with final address
   607  0463  1903               	btfsc	3,2	;have we reached the end yet?
   608  0464  3400               	retlw	0	;all done for this memory range, return
   609  0465  0604               	xorwf	4,w	;XOR again to restore value
   610  0466  2C60               	goto	clrloop0	;do the next byte
   611                           
   612                           	psect	cstackCOMMON
   613  0076                     __pcstackCOMMON:
   614  0076                     ?_mandar:
   615  0076                     ??_mandar:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0076                     ?_recibir:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0076                     ??_recibir:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0076                     ?_Setup:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0076                     ?_timeout:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0076                     ?_timein:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0076                     ?_conver:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0076                     ?_initOsc:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0076                     ?_usart:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0076                     ?_I2C_Master_Start:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0076                     ?_I2C_Master_Stop:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0076                     ?_I2C_Master_Read:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0076                     ?_ISR:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0076                     ?_main:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0076                     ?_I2C_Master_Wait:	
   658                           ; 1 bytes @ 0x0
   659                           
   660                           
   661                           ; 1 bytes @ 0x0
   662  0076                     	ds	2
   663  0078                     ??_ISR:
   664                           
   665                           ; 1 bytes @ 0x2
   666  0078                     	ds	4
   667                           
   668                           	psect	cstackBANK0
   669  003D                     __pcstackBANK0:
   670  003D                     ??_conver:
   671  003D                     ??_initOsc:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  003D                     ??_usart:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  003D                     ??_I2C_Master_Start:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  003D                     ?_I2C_Master_Write:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  003D                     ??_I2C_Master_Stop:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  003D                     ??_I2C_Master_Read:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  003D                     ??_I2C_Master_Wait:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  003D                     ?___lldiv:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  003D                     I2C_Master_Write@d:	
   696                           ; 4 bytes @ 0x0
   697                           
   698  003D                     ___lldiv@divisor:	
   699                           ; 2 bytes @ 0x0
   700                           
   701                           
   702                           ; 4 bytes @ 0x0
   703  003D                     	ds	2
   704  003F                     ??_timeout:
   705  003F                     ??_I2C_Master_Write:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  003F                     I2C_Master_Read@a:	
   709                           ; 1 bytes @ 0x2
   710                           
   711  003F                     initOsc@IRCF:	
   712                           ; 1 bytes @ 0x2
   713                           
   714                           
   715                           ; 1 bytes @ 0x2
   716  003F                     	ds	1
   717  0040                     I2C_Master_Read@temp:
   718                           
   719                           ; 2 bytes @ 0x3
   720  0040                     	ds	1
   721  0041                     ___lldiv@dividend:
   722                           
   723                           ; 4 bytes @ 0x4
   724  0041                     	ds	1
   725  0042                     ??_timein:
   726                           
   727                           ; 1 bytes @ 0x5
   728  0042                     	ds	3
   729  0045                     ??___lldiv:
   730                           
   731                           ; 1 bytes @ 0x8
   732  0045                     	ds	1
   733  0046                     ___lldiv@quotient:
   734                           
   735                           ; 4 bytes @ 0x9
   736  0046                     	ds	4
   737  004A                     ___lldiv@counter:
   738                           
   739                           ; 1 bytes @ 0xD
   740  004A                     	ds	1
   741  004B                     ?_I2C_Master_Init:
   742  004B                     I2C_Master_Init@c:	
   743                           ; 1 bytes @ 0xE
   744                           
   745                           
   746                           ; 4 bytes @ 0xE
   747  004B                     	ds	4
   748  004F                     ??_I2C_Master_Init:
   749                           
   750                           ; 1 bytes @ 0x12
   751  004F                     	ds	4
   752  0053                     ??_Setup:
   753  0053                     ??_main:	
   754                           ; 1 bytes @ 0x16
   755                           
   756                           
   757                           	psect	maintext
   758  03FD                     __pmaintext:	
   759                           ; 1 bytes @ 0x16
   760 ;;
   761 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   762 ;;
   763 ;; *************** function _main *****************
   764 ;; Defined at:
   765 ;;		line 116 in file "master.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : B00/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         0       0       0       0       0
   783 ;;Total ram usage:        0 bytes
   784 ;; Hardware stack levels required when called:    5
   785 ;; This function calls:
   786 ;;		_Setup
   787 ;;		_conver
   788 ;;		_timein
   789 ;;		_timeout
   790 ;; This function is called by:
   791 ;;		Startup code after reset
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _main
   797  03FD                     _main:
   798  03FD                     l1813:	
   799                           ;incstack = 0
   800                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   801                           
   802  03FD  120A  118A  232C  120A  118A  	fcall	_Setup
   803  0402                     l1815:
   804  0402  120A  118A  21BE  120A  118A  	fcall	_timeout
   805  0407                     l1817:
   806                           
   807                           ;master.c: 131:         timein();
   808  0407  120A  118A  214B  120A  118A  	fcall	_timein
   809  040C                     l1819:
   810                           
   811                           ;master.c: 132:         conver();
   812  040C  120A  118A  2028  120A  118A  	fcall	_conver
   813  0411                     l1821:
   814                           
   815                           ;master.c: 133:         if (CONT > 30) {
   816  0411  301F               	movlw	31
   817  0412  1283               	bcf	3,5	;RP0=0, select bank0
   818  0413  1303               	bcf	3,6	;RP1=0, select bank0
   819  0414  023C               	subwf	_CONT,w
   820  0415  1C03               	skipc
   821  0416  2C18               	goto	u701
   822  0417  2C19               	goto	u700
   823  0418                     u701:
   824  0418  2C07               	goto	l1817
   825  0419                     u700:
   826  0419                     l1823:
   827                           
   828                           ;master.c: 134:             CONT = 0;
   829  0419  01BC               	clrf	_CONT
   830  041A                     l1825:
   831                           
   832                           ;master.c: 135:             PIE1bits.TXIE = 1;
   833  041A  1683               	bsf	3,5	;RP0=1, select bank1
   834  041B  1303               	bcf	3,6	;RP1=0, select bank1
   835  041C  160C               	bsf	12,4	;volatile
   836  041D  2C07               	goto	l1817
   837  041E  120A  118A  2812   	ljmp	start
   838  0421                     __end_of_main:
   839                           
   840                           	psect	text1
   841  01BE                     __ptext1:	
   842 ;; *************** function _timeout *****************
   843 ;; Defined at:
   844 ;;		line 259 in file "master.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    4
   865 ;; This function calls:
   866 ;;		_I2C_Master_Start
   867 ;;		_I2C_Master_Stop
   868 ;;		_I2C_Master_Write
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _timeout
   876  01BE                     _timeout:
   877  01BE                     l1751:	
   878                           ;incstack = 0
   879                           ; Regs used in _timeout: [wreg+status,2+status,0+pclath+cstack]
   880                           
   881                           
   882                           ;master.c: 260:     I2C_Master_Start();
   883  01BE  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Start
   884                           
   885                           ;master.c: 261:     I2C_Master_Write(0xD0);
   886  01C3  30D0               	movlw	208
   887  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   888  01C5  1303               	bcf	3,6	;RP1=0, select bank0
   889  01C6  00BD               	movwf	I2C_Master_Write@d
   890  01C7  3000               	movlw	0
   891  01C8  00BE               	movwf	I2C_Master_Write@d+1
   892  01C9  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   893                           
   894                           ;master.c: 262:     I2C_Master_Write(0);
   895  01CE  3000               	movlw	0
   896  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   897  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   898  01D1  00BD               	movwf	I2C_Master_Write@d
   899  01D2  00BE               	movwf	I2C_Master_Write@d+1
   900  01D3  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   901                           
   902                           ;master.c: 263:     I2C_Master_Write(0b00000000);
   903  01D8  3000               	movlw	0
   904  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   905  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   906  01DB  00BD               	movwf	I2C_Master_Write@d
   907  01DC  00BE               	movwf	I2C_Master_Write@d+1
   908  01DD  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   909                           
   910                           ;master.c: 264:     I2C_Master_Write(0b00000000);
   911  01E2  3000               	movlw	0
   912  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   913  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   914  01E5  00BD               	movwf	I2C_Master_Write@d
   915  01E6  00BE               	movwf	I2C_Master_Write@d+1
   916  01E7  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   917                           
   918                           ;master.c: 265:     I2C_Master_Write(0b00000000);
   919  01EC  3000               	movlw	0
   920  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   921  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   922  01EF  00BD               	movwf	I2C_Master_Write@d
   923  01F0  00BE               	movwf	I2C_Master_Write@d+1
   924  01F1  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   925                           
   926                           ;master.c: 266:     I2C_Master_Write(1);
   927  01F6  3001               	movlw	1
   928  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   929  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   930  01F9  00BD               	movwf	I2C_Master_Write@d
   931  01FA  3000               	movlw	0
   932  01FB  00BE               	movwf	I2C_Master_Write@d+1
   933  01FC  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   934                           
   935                           ;master.c: 267:     I2C_Master_Write(0x20);
   936  0201  3020               	movlw	32
   937  0202  1283               	bcf	3,5	;RP0=0, select bank0
   938  0203  1303               	bcf	3,6	;RP1=0, select bank0
   939  0204  00BD               	movwf	I2C_Master_Write@d
   940  0205  3000               	movlw	0
   941  0206  00BE               	movwf	I2C_Master_Write@d+1
   942  0207  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   943                           
   944                           ;master.c: 268:     I2C_Master_Write(0x10);
   945  020C  3010               	movlw	16
   946  020D  1283               	bcf	3,5	;RP0=0, select bank0
   947  020E  1303               	bcf	3,6	;RP1=0, select bank0
   948  020F  00BD               	movwf	I2C_Master_Write@d
   949  0210  3000               	movlw	0
   950  0211  00BE               	movwf	I2C_Master_Write@d+1
   951  0212  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   952                           
   953                           ;master.c: 269:     I2C_Master_Write(0x21);
   954  0217  3021               	movlw	33
   955  0218  1283               	bcf	3,5	;RP0=0, select bank0
   956  0219  1303               	bcf	3,6	;RP1=0, select bank0
   957  021A  00BD               	movwf	I2C_Master_Write@d
   958  021B  3000               	movlw	0
   959  021C  00BE               	movwf	I2C_Master_Write@d+1
   960  021D  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
   961                           
   962                           ;master.c: 270:     I2C_Master_Stop();
   963  0222  120A  118A  244D  120A  118A  	fcall	_I2C_Master_Stop
   964  0227                     l182:
   965  0227  0008               	return
   966  0228                     __end_of_timeout:
   967                           
   968                           	psect	text2
   969  014B                     __ptext2:	
   970 ;; *************** function _timein *****************
   971 ;; Defined at:
   972 ;;		line 277 in file "master.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         0       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0
   989 ;;      Totals:         0       0       0       0       0
   990 ;;Total ram usage:        0 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; Hardware stack levels required when called:    4
   993 ;; This function calls:
   994 ;;		_I2C_Master_Read
   995 ;;		_I2C_Master_Start
   996 ;;		_I2C_Master_Stop
   997 ;;		_I2C_Master_Write
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _timein
  1005  014B                     _timein:
  1006  014B                     l1753:	
  1007                           ;incstack = 0
  1008                           ; Regs used in _timein: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1009                           
  1010                           
  1011                           ;master.c: 278:     I2C_Master_Start();
  1012  014B  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Start
  1013                           
  1014                           ;master.c: 279:     I2C_Master_Write(0xD0);
  1015  0150  30D0               	movlw	208
  1016  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0153  00BD               	movwf	I2C_Master_Write@d
  1019  0154  3000               	movlw	0
  1020  0155  00BE               	movwf	I2C_Master_Write@d+1
  1021  0156  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
  1022                           
  1023                           ;master.c: 280:     I2C_Master_Write(0);
  1024  015B  3000               	movlw	0
  1025  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1026  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1027  015E  00BD               	movwf	I2C_Master_Write@d
  1028  015F  00BE               	movwf	I2C_Master_Write@d+1
  1029  0160  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
  1030                           
  1031                           ;master.c: 282:     I2C_Master_Start();
  1032  0165  120A  118A  2456  120A  118A  	fcall	_I2C_Master_Start
  1033                           
  1034                           ;master.c: 283:     I2C_Master_Write(0xD1);
  1035  016A  30D1               	movlw	209
  1036  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1037  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1038  016D  00BD               	movwf	I2C_Master_Write@d
  1039  016E  3000               	movlw	0
  1040  016F  00BE               	movwf	I2C_Master_Write@d+1
  1041  0170  120A  118A  2443  120A  118A  	fcall	_I2C_Master_Write
  1042  0175                     l1755:
  1043                           
  1044                           ;master.c: 284:     SEC = I2C_Master_Read(1);
  1045  0175  3001               	movlw	1
  1046  0176  120A  118A  23A2  120A  118A  	fcall	_I2C_Master_Read
  1047  017B  00FF               	movwf	btemp+1
  1048  017C  087F               	movf	btemp+1,w
  1049  017D  00F5               	movwf	_SEC
  1050  017E                     l1757:
  1051                           
  1052                           ;master.c: 285:     MIN = I2C_Master_Read(1);
  1053  017E  3001               	movlw	1
  1054  017F  120A  118A  23A2  120A  118A  	fcall	_I2C_Master_Read
  1055  0184  00FF               	movwf	btemp+1
  1056  0185  087F               	movf	btemp+1,w
  1057  0186  00F4               	movwf	_MIN
  1058  0187                     l1759:
  1059                           
  1060                           ;master.c: 286:     H = I2C_Master_Read(1);
  1061  0187  3001               	movlw	1
  1062  0188  120A  118A  23A2  120A  118A  	fcall	_I2C_Master_Read
  1063  018D  00FF               	movwf	btemp+1
  1064  018E  087F               	movf	btemp+1,w
  1065  018F  00F3               	movwf	_H
  1066  0190                     l1761:
  1067                           
  1068                           ;master.c: 287:     NADA = I2C_Master_Read(1);
  1069  0190  3001               	movlw	1
  1070  0191  120A  118A  23A2  120A  118A  	fcall	_I2C_Master_Read
  1071  0196  00FF               	movwf	btemp+1
  1072  0197  087F               	movf	btemp+1,w
  1073  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1075  019A  00B9               	movwf	_NADA
  1076  019B                     l1763:
  1077                           
  1078                           ;master.c: 288:     DAY = I2C_Master_Read(1);
  1079  019B  3001               	movlw	1
  1080  019C  120A  118A  23A2  120A  118A  	fcall	_I2C_Master_Read
  1081  01A1  00FF               	movwf	btemp+1
  1082  01A2  087F               	movf	btemp+1,w
  1083  01A3  00F2               	movwf	_DAY
  1084  01A4                     l1765:
  1085                           
  1086                           ;master.c: 289:     MONTH = I2C_Master_Read(1);
  1087  01A4  3001               	movlw	1
  1088  01A5  120A  118A  23A2  120A  118A  	fcall	_I2C_Master_Read
  1089  01AA  00FF               	movwf	btemp+1
  1090  01AB  087F               	movf	btemp+1,w
  1091  01AC  00F1               	movwf	_MONTH
  1092  01AD                     l1767:
  1093                           
  1094                           ;master.c: 290:     YEAR = I2C_Master_Read(0);
  1095  01AD  3000               	movlw	0
  1096  01AE  120A  118A  23A2  120A  118A  	fcall	_I2C_Master_Read
  1097  01B3  00FF               	movwf	btemp+1
  1098  01B4  087F               	movf	btemp+1,w
  1099  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1100  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1101  01B7  00BA               	movwf	_YEAR
  1102  01B8                     l1769:
  1103                           
  1104                           ;master.c: 291:     I2C_Master_Stop();
  1105  01B8  120A  118A  244D  120A  118A  	fcall	_I2C_Master_Stop
  1106  01BD                     l185:
  1107  01BD  0008               	return
  1108  01BE                     __end_of_timein:
  1109                           
  1110                           	psect	text3
  1111  0443                     __ptext3:	
  1112 ;; *************** function _I2C_Master_Write *****************
  1113 ;; Defined at:
  1114 ;;		line 65 in file "I2C.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  d               2    0[BANK0 ] unsigned int 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0, pclath, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       2       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0
  1131 ;;      Totals:         0       2       0       0       0
  1132 ;;Total ram usage:        2 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    3
  1135 ;; This function calls:
  1136 ;;		_I2C_Master_Wait
  1137 ;; This function is called by:
  1138 ;;		_timeout
  1139 ;;		_timein
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _I2C_Master_Write
  1145  0443                     _I2C_Master_Write:
  1146  0443                     l1681:	
  1147                           ;incstack = 0
  1148                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1149                           
  1150                           
  1151                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1152  0443  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  1153  0448                     l1683:
  1154                           
  1155                           ;I2C.c: 68:     SSPBUF = d;
  1156  0448  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0449  1303               	bcf	3,6	;RP1=0, select bank0
  1158  044A  083D               	movf	I2C_Master_Write@d,w
  1159  044B  0093               	movwf	19	;volatile
  1160  044C                     l242:
  1161  044C  0008               	return
  1162  044D                     __end_of_I2C_Master_Write:
  1163                           
  1164                           	psect	text4
  1165  044D                     __ptext4:	
  1166 ;; *************** function _I2C_Master_Stop *****************
  1167 ;; Defined at:
  1168 ;;		line 55 in file "I2C.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    3
  1189 ;; This function calls:
  1190 ;;		_I2C_Master_Wait
  1191 ;; This function is called by:
  1192 ;;		_timeout
  1193 ;;		_timein
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           
  1198                           ;psect for function _I2C_Master_Stop
  1199  044D                     _I2C_Master_Stop:
  1200  044D                     l1685:	
  1201                           ;incstack = 0
  1202                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1203                           
  1204                           
  1205                           ;I2C.c: 57:     I2C_Master_Wait();
  1206  044D  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  1207  0452                     l1687:
  1208                           
  1209                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1210  0452  1683               	bsf	3,5	;RP0=1, select bank1
  1211  0453  1303               	bcf	3,6	;RP1=0, select bank1
  1212  0454  1511               	bsf	17,2	;volatile
  1213  0455                     l239:
  1214  0455  0008               	return
  1215  0456                     __end_of_I2C_Master_Stop:
  1216                           
  1217                           	psect	text5
  1218  0456                     __ptext5:	
  1219 ;; *************** function _I2C_Master_Start *****************
  1220 ;; Defined at:
  1221 ;;		line 39 in file "I2C.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0
  1238 ;;      Totals:         0       0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    3
  1242 ;; This function calls:
  1243 ;;		_I2C_Master_Wait
  1244 ;; This function is called by:
  1245 ;;		_timeout
  1246 ;;		_timein
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           
  1251                           ;psect for function _I2C_Master_Start
  1252  0456                     _I2C_Master_Start:
  1253  0456                     l1677:	
  1254                           ;incstack = 0
  1255                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1256                           
  1257                           
  1258                           ;I2C.c: 41:     I2C_Master_Wait();
  1259  0456  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  1260  045B                     l1679:
  1261                           
  1262                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1263  045B  1683               	bsf	3,5	;RP0=1, select bank1
  1264  045C  1303               	bcf	3,6	;RP1=0, select bank1
  1265  045D  1411               	bsf	17,0	;volatile
  1266  045E                     l233:
  1267  045E  0008               	return
  1268  045F                     __end_of_I2C_Master_Start:
  1269                           
  1270                           	psect	text6
  1271  03A2                     __ptext6:	
  1272 ;; *************** function _I2C_Master_Read *****************
  1273 ;; Defined at:
  1274 ;;		line 74 in file "I2C.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  a               1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  a               1    2[BANK0 ] unsigned char 
  1279 ;;  temp            2    3[BANK0 ] unsigned short 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      unsigned char 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0, pclath, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1289 ;;      Params:         0       0       0       0       0
  1290 ;;      Locals:         0       3       0       0       0
  1291 ;;      Temps:          0       2       0       0       0
  1292 ;;      Totals:         0       5       0       0       0
  1293 ;;Total ram usage:        5 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    3
  1296 ;; This function calls:
  1297 ;;		_I2C_Master_Wait
  1298 ;; This function is called by:
  1299 ;;		_timein
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _I2C_Master_Read
  1305  03A2                     _I2C_Master_Read:
  1306                           
  1307                           ;incstack = 0
  1308                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1309                           ;I2C_Master_Read@a stored from wreg
  1310  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1311  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1312  03A4  00BF               	movwf	I2C_Master_Read@a
  1313  03A5                     l1689:
  1314                           
  1315                           ;I2C.c: 74: unsigned char I2C_Master_Read(unsigned char a);I2C.c: 75: {;I2C.c: 76:     u
      +                          nsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1316  03A5  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  1317  03AA                     l1691:
  1318                           
  1319                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1320  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  1321  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  1322  03AC  1591               	bsf	17,3	;volatile
  1323                           
  1324                           ;I2C.c: 79:     I2C_Master_Wait();
  1325  03AD  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  1326  03B2                     l1693:
  1327                           
  1328                           ;I2C.c: 80:     temp = SSPBUF;
  1329  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1330  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1331  03B4  0813               	movf	19,w	;volatile
  1332  03B5  00BD               	movwf	??_I2C_Master_Read
  1333  03B6  01BE               	clrf	??_I2C_Master_Read+1
  1334  03B7  083D               	movf	??_I2C_Master_Read,w
  1335  03B8  00C0               	movwf	I2C_Master_Read@temp
  1336  03B9  083E               	movf	??_I2C_Master_Read+1,w
  1337  03BA  00C1               	movwf	I2C_Master_Read@temp+1
  1338  03BB                     l1695:
  1339                           
  1340                           ;I2C.c: 81:     I2C_Master_Wait();
  1341  03BB  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  1342  03C0                     l1697:
  1343                           
  1344                           ;I2C.c: 82:     if(a == 1){
  1345  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1346  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1347  03C2  033F               	decf	I2C_Master_Read@a,w
  1348  03C3  1D03               	btfss	3,2
  1349  03C4  2BC6               	goto	u631
  1350  03C5  2BC7               	goto	u630
  1351  03C6                     u631:
  1352  03C6  2BCB               	goto	l245
  1353  03C7                     u630:
  1354  03C7                     l1699:
  1355                           
  1356                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1357  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  1358  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  1359  03C9  1291               	bcf	17,5	;volatile
  1360                           
  1361                           ;I2C.c: 84:     }else{
  1362  03CA  2BCE               	goto	l246
  1363  03CB                     l245:
  1364                           
  1365                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1366  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  1367  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  1368  03CD  1691               	bsf	17,5	;volatile
  1369  03CE                     l246:	
  1370                           ;I2C.c: 86:     }
  1371                           
  1372                           
  1373                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1374  03CE  1611               	bsf	17,4	;volatile
  1375  03CF                     l1701:
  1376                           
  1377                           ;I2C.c: 88:     return temp;
  1378  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1379  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1380  03D1  0840               	movf	I2C_Master_Read@temp,w
  1381  03D2                     l247:
  1382  03D2  0008               	return
  1383  03D3                     __end_of_I2C_Master_Read:
  1384                           
  1385                           	psect	text7
  1386  0436                     __ptext7:	
  1387 ;; *************** function _I2C_Master_Wait *****************
  1388 ;; Defined at:
  1389 ;;		line 32 in file "I2C.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         0       0       0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    2
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_I2C_Master_Start
  1414 ;;		_I2C_Master_Stop
  1415 ;;		_I2C_Master_Write
  1416 ;;		_I2C_Master_Read
  1417 ;;		_I2C_Master_RepeatedStart
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _I2C_Master_Wait
  1423  0436                     _I2C_Master_Wait:
  1424  0436                     l1607:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1427                           
  1428  0436                     l227:	
  1429                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1430                           
  1431  0436  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0437  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0438  1914               	btfsc	20,2	;volatile
  1434  0439  2C3B               	goto	u531
  1435  043A  2C3C               	goto	u530
  1436  043B                     u531:
  1437  043B  2C36               	goto	l227
  1438  043C                     u530:
  1439  043C                     l1609:
  1440  043C  0811               	movf	17,w	;volatile
  1441  043D  391F               	andlw	31
  1442  043E  1D03               	btfss	3,2
  1443  043F  2C41               	goto	u541
  1444  0440  2C42               	goto	u540
  1445  0441                     u541:
  1446  0441  2C36               	goto	l227
  1447  0442                     u540:
  1448  0442                     l230:
  1449  0442  0008               	return
  1450  0443                     __end_of_I2C_Master_Wait:
  1451                           
  1452                           	psect	text8
  1453  0028                     __ptext8:	
  1454 ;; *************** function _conver *****************
  1455 ;; Defined at:
  1456 ;;		line 297 in file "master.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0, btemp+1
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1470 ;;      Params:         0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0
  1472 ;;      Temps:          0       1       0       0       0
  1473 ;;      Totals:         0       1       0       0       0
  1474 ;;Total ram usage:        1 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    2
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function _conver
  1486  0028                     _conver:
  1487  0028                     l1771:	
  1488                           ;incstack = 0
  1489                           ; Regs used in _conver: [wreg+status,2+status,0+btemp+1]
  1490                           
  1491                           
  1492                           ;master.c: 298:     SECU = (SEC & 0b00001111);
  1493  0028  0875               	movf	_SEC,w
  1494  0029  390F               	andlw	15
  1495  002A  00FF               	movwf	btemp+1
  1496  002B  087F               	movf	btemp+1,w
  1497  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1498  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1499  002E  00B8               	movwf	_SECU
  1500  002F                     l1773:
  1501                           
  1502                           ;master.c: 299:     SECD = ((SEC & 0b11110000) >> 4);
  1503  002F  0875               	movf	_SEC,w
  1504  0030  00BD               	movwf	??_conver
  1505  0031  3004               	movlw	4
  1506  0032                     u645:
  1507  0032  1003               	clrc
  1508  0033  0CBD               	rrf	??_conver,f
  1509  0034  3EFF               	addlw	-1
  1510  0035  1D03               	skipz
  1511  0036  2832               	goto	u645
  1512  0037  083D               	movf	??_conver,w
  1513  0038  390F               	andlw	15
  1514  0039  00FF               	movwf	btemp+1
  1515  003A  087F               	movf	btemp+1,w
  1516  003B  00B7               	movwf	_SECD
  1517  003C                     l1775:
  1518                           
  1519                           ;master.c: 300:     MINU = (MIN & 0b00001111);
  1520  003C  0874               	movf	_MIN,w
  1521  003D  390F               	andlw	15
  1522  003E  00FF               	movwf	btemp+1
  1523  003F  087F               	movf	btemp+1,w
  1524  0040  00B6               	movwf	_MINU
  1525                           
  1526                           ;master.c: 301:     MIND = ((MIN & 0b11110000) >> 4);
  1527  0041  0874               	movf	_MIN,w
  1528  0042  00BD               	movwf	??_conver
  1529  0043  3004               	movlw	4
  1530  0044                     u655:
  1531  0044  1003               	clrc
  1532  0045  0CBD               	rrf	??_conver,f
  1533  0046  3EFF               	addlw	-1
  1534  0047  1D03               	skipz
  1535  0048  2844               	goto	u655
  1536  0049  083D               	movf	??_conver,w
  1537  004A  390F               	andlw	15
  1538  004B  00FF               	movwf	btemp+1
  1539  004C  087F               	movf	btemp+1,w
  1540  004D  00B5               	movwf	_MIND
  1541  004E                     l1777:
  1542                           
  1543                           ;master.c: 302:     HORAU = (H & 0b00001111);
  1544  004E  0873               	movf	_H,w
  1545  004F  390F               	andlw	15
  1546  0050  00FF               	movwf	btemp+1
  1547  0051  087F               	movf	btemp+1,w
  1548  0052  00B4               	movwf	_HORAU
  1549  0053                     l1779:
  1550                           
  1551                           ;master.c: 303:     HORAD = ((H & 0b00110000) >> 4);
  1552  0053  0873               	movf	_H,w
  1553  0054  00BD               	movwf	??_conver
  1554  0055  3004               	movlw	4
  1555  0056                     u665:
  1556  0056  1003               	clrc
  1557  0057  0CBD               	rrf	??_conver,f
  1558  0058  3EFF               	addlw	-1
  1559  0059  1D03               	skipz
  1560  005A  2856               	goto	u665
  1561  005B  083D               	movf	??_conver,w
  1562  005C  3903               	andlw	3
  1563  005D  00FF               	movwf	btemp+1
  1564  005E  087F               	movf	btemp+1,w
  1565  005F  00B3               	movwf	_HORAD
  1566                           
  1567                           ;master.c: 304:     DAYU = (DAY & 0b00001111);
  1568  0060  0872               	movf	_DAY,w
  1569  0061  390F               	andlw	15
  1570  0062  00FF               	movwf	btemp+1
  1571  0063  087F               	movf	btemp+1,w
  1572  0064  00B2               	movwf	_DAYU
  1573  0065                     l1781:
  1574                           
  1575                           ;master.c: 305:     DAYD = ((DAY & 0b11110000) >> 4);
  1576  0065  0872               	movf	_DAY,w
  1577  0066  00BD               	movwf	??_conver
  1578  0067  3004               	movlw	4
  1579  0068                     u675:
  1580  0068  1003               	clrc
  1581  0069  0CBD               	rrf	??_conver,f
  1582  006A  3EFF               	addlw	-1
  1583  006B  1D03               	skipz
  1584  006C  2868               	goto	u675
  1585  006D  083D               	movf	??_conver,w
  1586  006E  390F               	andlw	15
  1587  006F  00FF               	movwf	btemp+1
  1588  0070  087F               	movf	btemp+1,w
  1589  0071  00B1               	movwf	_DAYD
  1590  0072                     l1783:
  1591                           
  1592                           ;master.c: 306:     MONTHU = (MONTH & 0b00001111);
  1593  0072  0871               	movf	_MONTH,w
  1594  0073  390F               	andlw	15
  1595  0074  00FF               	movwf	btemp+1
  1596  0075  087F               	movf	btemp+1,w
  1597  0076  00B0               	movwf	_MONTHU
  1598                           
  1599                           ;master.c: 307:     MONTHD = ((MONTH & 0b11110000) >> 4);
  1600  0077  0871               	movf	_MONTH,w
  1601  0078  00BD               	movwf	??_conver
  1602  0079  3004               	movlw	4
  1603  007A                     u685:
  1604  007A  1003               	clrc
  1605  007B  0CBD               	rrf	??_conver,f
  1606  007C  3EFF               	addlw	-1
  1607  007D  1D03               	skipz
  1608  007E  287A               	goto	u685
  1609  007F  083D               	movf	??_conver,w
  1610  0080  390F               	andlw	15
  1611  0081  00FF               	movwf	btemp+1
  1612  0082  087F               	movf	btemp+1,w
  1613  0083  00AF               	movwf	_MONTHD
  1614  0084                     l1785:
  1615                           
  1616                           ;master.c: 308:     YEARU = (YEAR & 0b00001111);
  1617  0084  083A               	movf	_YEAR,w
  1618  0085  390F               	andlw	15
  1619  0086  00FF               	movwf	btemp+1
  1620  0087  087F               	movf	btemp+1,w
  1621  0088  00AE               	movwf	_YEARU
  1622  0089                     l1787:
  1623                           
  1624                           ;master.c: 309:     YEARD = ((YEAR & 0b11110000) >> 4);
  1625  0089  083A               	movf	_YEAR,w
  1626  008A  00BD               	movwf	??_conver
  1627  008B  3004               	movlw	4
  1628  008C                     u695:
  1629  008C  1003               	clrc
  1630  008D  0CBD               	rrf	??_conver,f
  1631  008E  3EFF               	addlw	-1
  1632  008F  1D03               	skipz
  1633  0090  288C               	goto	u695
  1634  0091  083D               	movf	??_conver,w
  1635  0092  390F               	andlw	15
  1636  0093  00FF               	movwf	btemp+1
  1637  0094  087F               	movf	btemp+1,w
  1638  0095  00AD               	movwf	_YEARD
  1639  0096                     l1789:
  1640                           
  1641                           ;master.c: 312:     SU = (SECU + 0x30);
  1642  0096  0838               	movf	_SECU,w
  1643  0097  3E30               	addlw	48
  1644  0098  00FF               	movwf	btemp+1
  1645  0099  087F               	movf	btemp+1,w
  1646  009A  00AC               	movwf	_SU
  1647  009B                     l1791:
  1648                           
  1649                           ;master.c: 313:     SD = (SECD + 0x30);
  1650  009B  0837               	movf	_SECD,w
  1651  009C  3E30               	addlw	48
  1652  009D  00FF               	movwf	btemp+1
  1653  009E  087F               	movf	btemp+1,w
  1654  009F  00AB               	movwf	_SD
  1655  00A0                     l1793:
  1656                           
  1657                           ;master.c: 314:     MU = (MINU + 0x30);
  1658  00A0  0836               	movf	_MINU,w
  1659  00A1  3E30               	addlw	48
  1660  00A2  00FF               	movwf	btemp+1
  1661  00A3  087F               	movf	btemp+1,w
  1662  00A4  00AA               	movwf	_MU
  1663  00A5                     l1795:
  1664                           
  1665                           ;master.c: 315:     MD = (MIND + 0x30);
  1666  00A5  0835               	movf	_MIND,w
  1667  00A6  3E30               	addlw	48
  1668  00A7  00FF               	movwf	btemp+1
  1669  00A8  087F               	movf	btemp+1,w
  1670  00A9  00A9               	movwf	_MD
  1671  00AA                     l1797:
  1672                           
  1673                           ;master.c: 316:     HU = (HORAU + 0x30);
  1674  00AA  0834               	movf	_HORAU,w
  1675  00AB  3E30               	addlw	48
  1676  00AC  00FF               	movwf	btemp+1
  1677  00AD  087F               	movf	btemp+1,w
  1678  00AE  00A8               	movwf	_HU
  1679  00AF                     l1799:
  1680                           
  1681                           ;master.c: 317:     HD = (HORAD + 0x30);
  1682  00AF  0833               	movf	_HORAD,w
  1683  00B0  3E30               	addlw	48
  1684  00B1  00FF               	movwf	btemp+1
  1685  00B2  087F               	movf	btemp+1,w
  1686  00B3  00A7               	movwf	_HD
  1687  00B4                     l1801:
  1688                           
  1689                           ;master.c: 318:     DU = (DAYU + 0x30);
  1690  00B4  0832               	movf	_DAYU,w
  1691  00B5  3E30               	addlw	48
  1692  00B6  00FF               	movwf	btemp+1
  1693  00B7  087F               	movf	btemp+1,w
  1694  00B8  00A6               	movwf	_DU
  1695  00B9                     l1803:
  1696                           
  1697                           ;master.c: 319:     DD = (DAYD + 0x30);
  1698  00B9  0831               	movf	_DAYD,w
  1699  00BA  3E30               	addlw	48
  1700  00BB  00FF               	movwf	btemp+1
  1701  00BC  087F               	movf	btemp+1,w
  1702  00BD  00A5               	movwf	_DD
  1703  00BE                     l1805:
  1704                           
  1705                           ;master.c: 320:     MOU = (MONTHU + 0x30);
  1706  00BE  0830               	movf	_MONTHU,w
  1707  00BF  3E30               	addlw	48
  1708  00C0  00FF               	movwf	btemp+1
  1709  00C1  087F               	movf	btemp+1,w
  1710  00C2  00A4               	movwf	_MOU
  1711  00C3                     l1807:
  1712                           
  1713                           ;master.c: 321:     MOD = (MONTHD + 0x30);
  1714  00C3  082F               	movf	_MONTHD,w
  1715  00C4  3E30               	addlw	48
  1716  00C5  00FF               	movwf	btemp+1
  1717  00C6  087F               	movf	btemp+1,w
  1718  00C7  00A3               	movwf	_MOD
  1719  00C8                     l1809:
  1720                           
  1721                           ;master.c: 322:     YU = (YEARU + 0x30);
  1722  00C8  082E               	movf	_YEARU,w
  1723  00C9  3E30               	addlw	48
  1724  00CA  00FF               	movwf	btemp+1
  1725  00CB  087F               	movf	btemp+1,w
  1726  00CC  00A2               	movwf	_YU
  1727  00CD                     l1811:
  1728                           
  1729                           ;master.c: 323:     YD = (YEARD + 0x30);
  1730  00CD  082D               	movf	_YEARD,w
  1731  00CE  3E30               	addlw	48
  1732  00CF  00FF               	movwf	btemp+1
  1733  00D0  087F               	movf	btemp+1,w
  1734  00D1  00A1               	movwf	_YD
  1735  00D2                     l188:
  1736  00D2  0008               	return
  1737  00D3                     __end_of_conver:
  1738                           
  1739                           	psect	text9
  1740  032C                     __ptext9:	
  1741 ;; *************** function _Setup *****************
  1742 ;; Defined at:
  1743 ;;		line 152 in file "master.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    4
  1764 ;; This function calls:
  1765 ;;		_I2C_Master_Init
  1766 ;;		_initOsc
  1767 ;;		_usart
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _Setup
  1775  032C                     _Setup:
  1776  032C                     l1705:	
  1777                           ;incstack = 0
  1778                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1779                           
  1780                           
  1781                           ;master.c: 153:     initOsc(6);
  1782  032C  3006               	movlw	6
  1783  032D  120A  118A  2290  120A  118A  	fcall	_initOsc
  1784  0332                     l1707:
  1785                           
  1786                           ;master.c: 154:     usart();
  1787  0332  120A  118A  2421  120A  118A  	fcall	_usart
  1788  0337                     l1709:
  1789                           
  1790                           ;master.c: 155:     TRISA = 0;
  1791  0337  1683               	bsf	3,5	;RP0=1, select bank1
  1792  0338  1303               	bcf	3,6	;RP1=0, select bank1
  1793  0339  0185               	clrf	5	;volatile
  1794  033A                     l1711:
  1795                           
  1796                           ;master.c: 156:     TRISB = 0;
  1797  033A  0186               	clrf	6	;volatile
  1798  033B                     l1713:
  1799                           
  1800                           ;master.c: 157:     TRISD = 0;
  1801  033B  0188               	clrf	8	;volatile
  1802  033C                     l1715:
  1803                           
  1804                           ;master.c: 158:     TRISE = 0;
  1805  033C  0189               	clrf	9	;volatile
  1806  033D                     l1717:
  1807                           
  1808                           ;master.c: 159:     ANSEL = 0;
  1809  033D  1683               	bsf	3,5	;RP0=1, select bank3
  1810  033E  1703               	bsf	3,6	;RP1=1, select bank3
  1811  033F  0188               	clrf	8	;volatile
  1812  0340                     l1719:
  1813                           
  1814                           ;master.c: 160:     ANSELH = 0;
  1815  0340  0189               	clrf	9	;volatile
  1816  0341                     l1721:
  1817                           
  1818                           ;master.c: 161:     PORTA = 0;
  1819  0341  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0342  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0343  0185               	clrf	5	;volatile
  1822  0344                     l1723:
  1823                           
  1824                           ;master.c: 162:     PORTB = 0;
  1825  0344  0186               	clrf	6	;volatile
  1826  0345                     l1725:
  1827                           
  1828                           ;master.c: 163:     PORTC = 0;
  1829  0345  0187               	clrf	7	;volatile
  1830  0346                     l1727:
  1831                           
  1832                           ;master.c: 164:     PORTD = 0;
  1833  0346  0188               	clrf	8	;volatile
  1834  0347                     l1729:
  1835                           
  1836                           ;master.c: 165:     PORTE = 0;
  1837  0347  0189               	clrf	9	;volatile
  1838  0348                     l1731:
  1839                           
  1840                           ;master.c: 167:     OPTION_REG = 0b10000111;
  1841  0348  3087               	movlw	135
  1842  0349  1683               	bsf	3,5	;RP0=1, select bank1
  1843  034A  1303               	bcf	3,6	;RP1=0, select bank1
  1844  034B  0081               	movwf	1	;volatile
  1845  034C                     l1733:
  1846                           
  1847                           ;master.c: 168:     INTCONbits.GIE = 1;
  1848  034C  178B               	bsf	11,7	;volatile
  1849  034D                     l1735:
  1850                           
  1851                           ;master.c: 169:     INTCONbits.PEIE = 1;
  1852  034D  170B               	bsf	11,6	;volatile
  1853  034E                     l1737:
  1854                           
  1855                           ;master.c: 170:     PIR1bits.TXIF = 0;
  1856  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1857  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0350  120C               	bcf	12,4	;volatile
  1859  0351                     l1739:
  1860                           
  1861                           ;master.c: 171:     PIE1bits.TXIE = 1;
  1862  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1863  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1864  0353  160C               	bsf	12,4	;volatile
  1865  0354                     l1741:
  1866                           
  1867                           ;master.c: 172:     INTCONbits.T0IF = 0;
  1868  0354  110B               	bcf	11,2	;volatile
  1869  0355                     l1743:
  1870                           
  1871                           ;master.c: 173:     INTCONbits.T0IE = 1;
  1872  0355  168B               	bsf	11,5	;volatile
  1873  0356                     l1745:
  1874                           
  1875                           ;master.c: 174:     PIE1bits.RCIE = 1;
  1876  0356  168C               	bsf	12,5	;volatile
  1877  0357                     l1747:
  1878                           
  1879                           ;master.c: 175:     PIR1bits.RCIF = 0;
  1880  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0359  128C               	bcf	12,5	;volatile
  1883  035A                     l1749:
  1884                           
  1885                           ;master.c: 176:     I2C_Master_Init(100000);
  1886  035A  3000               	movlw	0
  1887  035B  00CE               	movwf	I2C_Master_Init@c+3
  1888  035C  3001               	movlw	1
  1889  035D  00CD               	movwf	I2C_Master_Init@c+2
  1890  035E  3086               	movlw	134
  1891  035F  00CC               	movwf	I2C_Master_Init@c+1
  1892  0360  30A0               	movlw	160
  1893  0361  00CB               	movwf	I2C_Master_Init@c
  1894  0362  120A  118A  2368  120A  118A  	fcall	_I2C_Master_Init
  1895  0367                     l155:
  1896  0367  0008               	return
  1897  0368                     __end_of_Setup:
  1898                           
  1899                           	psect	text10
  1900  0421                     __ptext10:	
  1901 ;; *************** function _usart *****************
  1902 ;; Defined at:
  1903 ;;		line 5 in file "usart.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    2
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_Setup
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _usart
  1933  0421                     _usart:
  1934  0421                     l1649:	
  1935                           ;incstack = 0
  1936                           ; Regs used in _usart: [wreg+status,2]
  1937                           
  1938                           
  1939                           ;usart.c: 8:     TXSTAbits.TX9 = 0;
  1940  0421  1683               	bsf	3,5	;RP0=1, select bank1
  1941  0422  1303               	bcf	3,6	;RP1=0, select bank1
  1942  0423  1318               	bcf	24,6	;volatile
  1943                           
  1944                           ;usart.c: 9:     TXSTAbits.SYNC = 0;
  1945  0424  1218               	bcf	24,4	;volatile
  1946                           
  1947                           ;usart.c: 10:     TXSTAbits.BRGH = 1;
  1948  0425  1518               	bsf	24,2	;volatile
  1949                           
  1950                           ;usart.c: 11:     BAUDCTLbits.BRG16 = 0;
  1951  0426  1683               	bsf	3,5	;RP0=1, select bank3
  1952  0427  1703               	bsf	3,6	;RP1=1, select bank3
  1953  0428  1187               	bcf	7,3	;volatile
  1954  0429                     l1651:
  1955                           
  1956                           ;usart.c: 12:     SPBRGH = 0;
  1957  0429  1683               	bsf	3,5	;RP0=1, select bank1
  1958  042A  1303               	bcf	3,6	;RP1=0, select bank1
  1959  042B  019A               	clrf	26	;volatile
  1960  042C                     l1653:
  1961                           
  1962                           ;usart.c: 13:     SPBRG = 25;
  1963  042C  3019               	movlw	25
  1964  042D  0099               	movwf	25	;volatile
  1965  042E                     l1655:
  1966                           
  1967                           ;usart.c: 14:     PIE1bits.TXIE = 1;
  1968  042E  160C               	bsf	12,4	;volatile
  1969  042F                     l1657:
  1970                           
  1971                           ;usart.c: 15:     TXSTAbits.TXEN = 1;
  1972  042F  1698               	bsf	24,5	;volatile
  1973  0430                     l1659:
  1974                           
  1975                           ;usart.c: 18:     RCSTAbits.SPEN = 1;
  1976  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0432  1798               	bsf	24,7	;volatile
  1979  0433                     l1661:
  1980                           
  1981                           ;usart.c: 19:     RCSTAbits. RX9 = 0;
  1982  0433  1318               	bcf	24,6	;volatile
  1983  0434                     l1663:
  1984                           
  1985                           ;usart.c: 20:     RCSTAbits.CREN = 1;
  1986  0434  1618               	bsf	24,4	;volatile
  1987  0435                     l281:
  1988  0435  0008               	return
  1989  0436                     __end_of_usart:
  1990                           
  1991                           	psect	text11
  1992  0290                     __ptext11:	
  1993 ;; *************** function _initOsc *****************
  1994 ;; Defined at:
  1995 ;;		line 7 in file "OSC.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  IRCF            1    wreg     unsigned char 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  IRCF            1    2[BANK0 ] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  1    wreg      void 
  2002 ;; Registers used:
  2003 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2009 ;;      Params:         0       0       0       0       0
  2010 ;;      Locals:         0       1       0       0       0
  2011 ;;      Temps:          0       2       0       0       0
  2012 ;;      Totals:         0       3       0       0       0
  2013 ;;Total ram usage:        3 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    2
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_Setup
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _initOsc
  2025  0290                     _initOsc:
  2026                           
  2027                           ;incstack = 0
  2028                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2029                           ;initOsc@IRCF stored from wreg
  2030  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0292  00BF               	movwf	initOsc@IRCF
  2033  0293                     l1637:
  2034                           
  2035                           ;OSC.c: 9:     switch (IRCF){
  2036  0293  2ACA               	goto	l1641
  2037  0294                     l256:	
  2038                           ;OSC.c: 11:         case 0:
  2039                           
  2040                           
  2041                           ;OSC.c: 12:             OSCCONbits.IRCF2 = 0;
  2042  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0296  130F               	bcf	15,6	;volatile
  2045                           
  2046                           ;OSC.c: 13:             OSCCONbits.IRCF1 = 0;
  2047  0297  128F               	bcf	15,5	;volatile
  2048                           
  2049                           ;OSC.c: 14:             OSCCONbits.IRCF0 = 0;
  2050  0298  120F               	bcf	15,4	;volatile
  2051                           
  2052                           ;OSC.c: 16:             break;
  2053  0299  2AEC               	goto	l257
  2054  029A                     l258:	
  2055                           ;OSC.c: 18:         case 1:
  2056                           
  2057                           
  2058                           ;OSC.c: 19:             OSCCONbits.IRCF2 = 0;
  2059  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2060  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2061  029C  130F               	bcf	15,6	;volatile
  2062                           
  2063                           ;OSC.c: 20:             OSCCONbits.IRCF1 = 0;
  2064  029D  128F               	bcf	15,5	;volatile
  2065                           
  2066                           ;OSC.c: 21:             OSCCONbits.IRCF0 = 1;
  2067  029E  160F               	bsf	15,4	;volatile
  2068                           
  2069                           ;OSC.c: 22:             break;
  2070  029F  2AEC               	goto	l257
  2071  02A0                     l259:	
  2072                           ;OSC.c: 24:         case 2:
  2073                           
  2074                           
  2075                           ;OSC.c: 25:             OSCCONbits.IRCF2 = 0;
  2076  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2077  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2078  02A2  130F               	bcf	15,6	;volatile
  2079                           
  2080                           ;OSC.c: 26:             OSCCONbits.IRCF1 = 1;
  2081  02A3  168F               	bsf	15,5	;volatile
  2082                           
  2083                           ;OSC.c: 27:             OSCCONbits.IRCF0 = 0;
  2084  02A4  120F               	bcf	15,4	;volatile
  2085                           
  2086                           ;OSC.c: 28:             break;
  2087  02A5  2AEC               	goto	l257
  2088  02A6                     l260:	
  2089                           ;OSC.c: 30:         case 3:
  2090                           
  2091                           
  2092                           ;OSC.c: 31:             OSCCONbits.IRCF2 = 0;
  2093  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2094  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  2095  02A8  130F               	bcf	15,6	;volatile
  2096                           
  2097                           ;OSC.c: 32:             OSCCONbits.IRCF1 = 1;
  2098  02A9  168F               	bsf	15,5	;volatile
  2099                           
  2100                           ;OSC.c: 33:             OSCCONbits.IRCF0 = 1;
  2101  02AA  160F               	bsf	15,4	;volatile
  2102                           
  2103                           ;OSC.c: 34:             break;
  2104  02AB  2AEC               	goto	l257
  2105  02AC                     l261:	
  2106                           ;OSC.c: 36:         case 4:
  2107                           
  2108                           
  2109                           ;OSC.c: 37:             OSCCONbits.IRCF2 = 1;
  2110  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2111  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2112  02AE  170F               	bsf	15,6	;volatile
  2113                           
  2114                           ;OSC.c: 38:             OSCCONbits.IRCF1 = 0;
  2115  02AF  128F               	bcf	15,5	;volatile
  2116                           
  2117                           ;OSC.c: 39:             OSCCONbits.IRCF0 = 0;
  2118  02B0  120F               	bcf	15,4	;volatile
  2119                           
  2120                           ;OSC.c: 40:             break;
  2121  02B1  2AEC               	goto	l257
  2122  02B2                     l262:	
  2123                           ;OSC.c: 42:         case 5:
  2124                           
  2125                           
  2126                           ;OSC.c: 43:             OSCCONbits.IRCF2 = 1;
  2127  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2128  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2129  02B4  170F               	bsf	15,6	;volatile
  2130                           
  2131                           ;OSC.c: 44:             OSCCONbits.IRCF1 = 0;
  2132  02B5  128F               	bcf	15,5	;volatile
  2133                           
  2134                           ;OSC.c: 45:             OSCCONbits.IRCF0 = 1;
  2135  02B6  160F               	bsf	15,4	;volatile
  2136                           
  2137                           ;OSC.c: 46:             break;
  2138  02B7  2AEC               	goto	l257
  2139  02B8                     l263:	
  2140                           ;OSC.c: 49:         case 6:
  2141                           
  2142                           
  2143                           ;OSC.c: 50:             OSCCONbits.IRCF2 = 1;
  2144  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2145  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2146  02BA  170F               	bsf	15,6	;volatile
  2147                           
  2148                           ;OSC.c: 51:             OSCCONbits.IRCF1 = 1;
  2149  02BB  168F               	bsf	15,5	;volatile
  2150                           
  2151                           ;OSC.c: 52:             OSCCONbits.IRCF0 = 0;
  2152  02BC  120F               	bcf	15,4	;volatile
  2153                           
  2154                           ;OSC.c: 53:             break;
  2155  02BD  2AEC               	goto	l257
  2156  02BE                     l264:	
  2157                           ;OSC.c: 55:         case 7:
  2158                           
  2159                           
  2160                           ;OSC.c: 56:             OSCCONbits.IRCF2 = 1;
  2161  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2162  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2163  02C0  170F               	bsf	15,6	;volatile
  2164                           
  2165                           ;OSC.c: 57:             OSCCONbits.IRCF1 = 1;
  2166  02C1  168F               	bsf	15,5	;volatile
  2167                           
  2168                           ;OSC.c: 58:             OSCCONbits.IRCF0 = 1;
  2169  02C2  160F               	bsf	15,4	;volatile
  2170                           
  2171                           ;OSC.c: 59:             break;
  2172  02C3  2AEC               	goto	l257
  2173  02C4                     l265:	
  2174                           ;OSC.c: 64:         default:
  2175                           
  2176                           
  2177                           ;OSC.c: 65:             OSCCONbits.IRCF2 = 1;
  2178  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2179  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2180  02C6  170F               	bsf	15,6	;volatile
  2181                           
  2182                           ;OSC.c: 66:             OSCCONbits.IRCF1 = 1;
  2183  02C7  168F               	bsf	15,5	;volatile
  2184                           
  2185                           ;OSC.c: 67:             OSCCONbits.IRCF0 = 0;
  2186  02C8  120F               	bcf	15,4	;volatile
  2187                           
  2188                           ;OSC.c: 68:             break;
  2189  02C9  2AEC               	goto	l257
  2190  02CA                     l1641:
  2191  02CA  083F               	movf	initOsc@IRCF,w
  2192  02CB  00BD               	movwf	??_initOsc
  2193  02CC  01BE               	clrf	??_initOsc+1
  2194                           
  2195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2196                           ; Switch size 1, requested type "simple"
  2197                           ; Number of cases is 1, Range of values is 0 to 0
  2198                           ; switch strategies available:
  2199                           ; Name         Instructions Cycles
  2200                           ; simple_byte            4     3 (average)
  2201                           ; direct_byte           11     8 (fixed)
  2202                           ; jumptable            260     6 (fixed)
  2203                           ;	Chosen strategy is simple_byte
  2204  02CD  083E               	movf	??_initOsc+1,w
  2205  02CE  3A00               	xorlw	0	; case 0
  2206  02CF  1903               	skipnz
  2207  02D0  2AD2               	goto	l1881
  2208  02D1  2AC4               	goto	l265
  2209  02D2                     l1881:
  2210                           
  2211                           ; Switch size 1, requested type "simple"
  2212                           ; Number of cases is 8, Range of values is 0 to 7
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte           25    13 (average)
  2216                           ; direct_byte           32     8 (fixed)
  2217                           ; jumptable            260     6 (fixed)
  2218                           ;	Chosen strategy is simple_byte
  2219  02D2  083D               	movf	??_initOsc,w
  2220  02D3  3A00               	xorlw	0	; case 0
  2221  02D4  1903               	skipnz
  2222  02D5  2A94               	goto	l256
  2223  02D6  3A01               	xorlw	1	; case 1
  2224  02D7  1903               	skipnz
  2225  02D8  2A9A               	goto	l258
  2226  02D9  3A03               	xorlw	3	; case 2
  2227  02DA  1903               	skipnz
  2228  02DB  2AA0               	goto	l259
  2229  02DC  3A01               	xorlw	1	; case 3
  2230  02DD  1903               	skipnz
  2231  02DE  2AA6               	goto	l260
  2232  02DF  3A07               	xorlw	7	; case 4
  2233  02E0  1903               	skipnz
  2234  02E1  2AAC               	goto	l261
  2235  02E2  3A01               	xorlw	1	; case 5
  2236  02E3  1903               	skipnz
  2237  02E4  2AB2               	goto	l262
  2238  02E5  3A03               	xorlw	3	; case 6
  2239  02E6  1903               	skipnz
  2240  02E7  2AB8               	goto	l263
  2241  02E8  3A01               	xorlw	1	; case 7
  2242  02E9  1903               	skipnz
  2243  02EA  2ABE               	goto	l264
  2244  02EB  2AC4               	goto	l265
  2245  02EC                     l257:
  2246                           
  2247                           ;OSC.c: 72:     OSCCONbits.SCS = 1;
  2248  02EC  140F               	bsf	15,0	;volatile
  2249  02ED                     l266:
  2250  02ED  0008               	return
  2251  02EE                     __end_of_initOsc:
  2252                           
  2253                           	psect	text12
  2254  0368                     __ptext12:	
  2255 ;; *************** function _I2C_Master_Init *****************
  2256 ;; Defined at:
  2257 ;;		line 16 in file "I2C.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  c               4   14[BANK0 ] const unsigned long 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       4       0       0       0
  2272 ;;      Locals:         0       0       0       0       0
  2273 ;;      Temps:          0       4       0       0       0
  2274 ;;      Totals:         0       8       0       0       0
  2275 ;;Total ram usage:        8 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    3
  2278 ;; This function calls:
  2279 ;;		___lldiv
  2280 ;; This function is called by:
  2281 ;;		_Setup
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _I2C_Master_Init
  2287  0368                     _I2C_Master_Init:
  2288  0368                     l1665:	
  2289                           ;incstack = 0
  2290                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2291                           
  2292                           
  2293                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2294  0368  3028               	movlw	40
  2295  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2296  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2297  036B  0094               	movwf	20	;volatile
  2298  036C                     l1667:
  2299                           
  2300                           ;I2C.c: 19:     SSPCON2 = 0;
  2301  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2302  036D  1303               	bcf	3,6	;RP1=0, select bank1
  2303  036E  0191               	clrf	17	;volatile
  2304  036F                     l1669:
  2305                           
  2306                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  2307  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0371  084B               	movf	I2C_Master_Init@c,w
  2310  0372  00CF               	movwf	??_I2C_Master_Init
  2311  0373  084C               	movf	I2C_Master_Init@c+1,w
  2312  0374  00D0               	movwf	??_I2C_Master_Init+1
  2313  0375  084D               	movf	I2C_Master_Init@c+2,w
  2314  0376  00D1               	movwf	??_I2C_Master_Init+2
  2315  0377  084E               	movf	I2C_Master_Init@c+3,w
  2316  0378  00D2               	movwf	??_I2C_Master_Init+3
  2317  0379  3002               	movlw	2
  2318  037A                     u625:
  2319  037A  1003               	clrc
  2320  037B  0DCF               	rlf	??_I2C_Master_Init,f
  2321  037C  0DD0               	rlf	??_I2C_Master_Init+1,f
  2322  037D  0DD1               	rlf	??_I2C_Master_Init+2,f
  2323  037E  0DD2               	rlf	??_I2C_Master_Init+3,f
  2324  037F                     u620:
  2325  037F  3EFF               	addlw	-1
  2326  0380  1D03               	skipz
  2327  0381  2B7A               	goto	u625
  2328  0382  0852               	movf	??_I2C_Master_Init+3,w
  2329  0383  00C0               	movwf	___lldiv@divisor+3
  2330  0384  0851               	movf	??_I2C_Master_Init+2,w
  2331  0385  00BF               	movwf	___lldiv@divisor+2
  2332  0386  0850               	movf	??_I2C_Master_Init+1,w
  2333  0387  00BE               	movwf	___lldiv@divisor+1
  2334  0388  084F               	movf	??_I2C_Master_Init,w
  2335  0389  00BD               	movwf	___lldiv@divisor
  2336  038A  3000               	movlw	0
  2337  038B  00C4               	movwf	___lldiv@dividend+3
  2338  038C  303D               	movlw	61
  2339  038D  00C3               	movwf	___lldiv@dividend+2
  2340  038E  3009               	movlw	9
  2341  038F  00C2               	movwf	___lldiv@dividend+1
  2342  0390  3000               	movlw	0
  2343  0391  00C1               	movwf	___lldiv@dividend
  2344  0392  120A  118A  2228  120A  118A  	fcall	___lldiv
  2345  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0399  083D               	movf	?___lldiv,w
  2348  039A  3EFF               	addlw	255
  2349  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2350  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2351  039D  0093               	movwf	19	;volatile
  2352  039E                     l1671:
  2353                           
  2354                           ;I2C.c: 21:     SSPSTAT = 0;
  2355  039E  0194               	clrf	20	;volatile
  2356  039F                     l1673:
  2357                           
  2358                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2359  039F  1587               	bsf	7,3	;volatile
  2360  03A0                     l1675:
  2361                           
  2362                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2363  03A0  1607               	bsf	7,4	;volatile
  2364  03A1                     l224:
  2365  03A1  0008               	return
  2366  03A2                     __end_of_I2C_Master_Init:
  2367                           
  2368                           	psect	text13
  2369  0228                     __ptext13:	
  2370 ;; *************** function ___lldiv *****************
  2371 ;; Defined at:
  2372 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  divisor         4    0[BANK0 ] unsigned long 
  2375 ;;  dividend        4    4[BANK0 ] unsigned long 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  quotient        4    9[BANK0 ] unsigned long 
  2378 ;;  counter         1   13[BANK0 ] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  4    0[BANK0 ] unsigned long 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, btemp+1
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         0       8       0       0       0
  2389 ;;      Locals:         0       5       0       0       0
  2390 ;;      Temps:          0       1       0       0       0
  2391 ;;      Totals:         0      14       0       0       0
  2392 ;;Total ram usage:       14 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    2
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_I2C_Master_Init
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           
  2403                           ;psect for function ___lldiv
  2404  0228                     ___lldiv:
  2405  0228                     l1611:	
  2406                           ;incstack = 0
  2407                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2408                           
  2409  0228  3000               	movlw	0
  2410  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2411  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2412  022B  00C9               	movwf	___lldiv@quotient+3
  2413  022C  3000               	movlw	0
  2414  022D  00C8               	movwf	___lldiv@quotient+2
  2415  022E  3000               	movlw	0
  2416  022F  00C7               	movwf	___lldiv@quotient+1
  2417  0230  3000               	movlw	0
  2418  0231  00C6               	movwf	___lldiv@quotient
  2419  0232  0840               	movf	___lldiv@divisor+3,w
  2420  0233  043F               	iorwf	___lldiv@divisor+2,w
  2421  0234  043E               	iorwf	___lldiv@divisor+1,w
  2422  0235  043D               	iorwf	___lldiv@divisor,w
  2423  0236  1903               	skipnz
  2424  0237  2A39               	goto	u551
  2425  0238  2A3A               	goto	u550
  2426  0239                     u551:
  2427  0239  2A87               	goto	l1633
  2428  023A                     u550:
  2429  023A                     l1613:
  2430  023A  01CA               	clrf	___lldiv@counter
  2431  023B  0ACA               	incf	___lldiv@counter,f
  2432  023C  2A4A               	goto	l1619
  2433  023D                     l1615:
  2434  023D  3001               	movlw	1
  2435  023E  00C5               	movwf	??___lldiv
  2436  023F                     u565:
  2437  023F  1003               	clrc
  2438  0240  0DBD               	rlf	___lldiv@divisor,f
  2439  0241  0DBE               	rlf	___lldiv@divisor+1,f
  2440  0242  0DBF               	rlf	___lldiv@divisor+2,f
  2441  0243  0DC0               	rlf	___lldiv@divisor+3,f
  2442  0244  0BC5               	decfsz	??___lldiv,f
  2443  0245  2A3F               	goto	u565
  2444  0246                     l1617:
  2445  0246  3001               	movlw	1
  2446  0247  00FF               	movwf	btemp+1
  2447  0248  087F               	movf	btemp+1,w
  2448  0249  07CA               	addwf	___lldiv@counter,f
  2449  024A                     l1619:
  2450  024A  1FC0               	btfss	___lldiv@divisor+3,7
  2451  024B  2A4D               	goto	u571
  2452  024C  2A4E               	goto	u570
  2453  024D                     u571:
  2454  024D  2A3D               	goto	l1615
  2455  024E                     u570:
  2456  024E                     l1621:
  2457  024E  3001               	movlw	1
  2458  024F  00C5               	movwf	??___lldiv
  2459  0250                     u585:
  2460  0250  1003               	clrc
  2461  0251  0DC6               	rlf	___lldiv@quotient,f
  2462  0252  0DC7               	rlf	___lldiv@quotient+1,f
  2463  0253  0DC8               	rlf	___lldiv@quotient+2,f
  2464  0254  0DC9               	rlf	___lldiv@quotient+3,f
  2465  0255  0BC5               	decfsz	??___lldiv,f
  2466  0256  2A50               	goto	u585
  2467  0257                     l1623:
  2468  0257  0840               	movf	___lldiv@divisor+3,w
  2469  0258  0244               	subwf	___lldiv@dividend+3,w
  2470  0259  1D03               	skipz
  2471  025A  2A65               	goto	u595
  2472  025B  083F               	movf	___lldiv@divisor+2,w
  2473  025C  0243               	subwf	___lldiv@dividend+2,w
  2474  025D  1D03               	skipz
  2475  025E  2A65               	goto	u595
  2476  025F  083E               	movf	___lldiv@divisor+1,w
  2477  0260  0242               	subwf	___lldiv@dividend+1,w
  2478  0261  1D03               	skipz
  2479  0262  2A65               	goto	u595
  2480  0263  083D               	movf	___lldiv@divisor,w
  2481  0264  0241               	subwf	___lldiv@dividend,w
  2482  0265                     u595:
  2483  0265  1C03               	skipc
  2484  0266  2A68               	goto	u591
  2485  0267  2A69               	goto	u590
  2486  0268                     u591:
  2487  0268  2A78               	goto	l1629
  2488  0269                     u590:
  2489  0269                     l1625:
  2490  0269  083D               	movf	___lldiv@divisor,w
  2491  026A  02C1               	subwf	___lldiv@dividend,f
  2492  026B  083E               	movf	___lldiv@divisor+1,w
  2493  026C  1C03               	skipc
  2494  026D  0F3E               	incfsz	___lldiv@divisor+1,w
  2495  026E  02C2               	subwf	___lldiv@dividend+1,f
  2496  026F  083F               	movf	___lldiv@divisor+2,w
  2497  0270  1C03               	skipc
  2498  0271  0F3F               	incfsz	___lldiv@divisor+2,w
  2499  0272  02C3               	subwf	___lldiv@dividend+2,f
  2500  0273  0840               	movf	___lldiv@divisor+3,w
  2501  0274  1C03               	skipc
  2502  0275  0F40               	incfsz	___lldiv@divisor+3,w
  2503  0276  02C4               	subwf	___lldiv@dividend+3,f
  2504  0277                     l1627:
  2505  0277  1446               	bsf	___lldiv@quotient,0
  2506  0278                     l1629:
  2507  0278  3001               	movlw	1
  2508  0279                     u605:
  2509  0279  1003               	clrc
  2510  027A  0CC0               	rrf	___lldiv@divisor+3,f
  2511  027B  0CBF               	rrf	___lldiv@divisor+2,f
  2512  027C  0CBE               	rrf	___lldiv@divisor+1,f
  2513  027D  0CBD               	rrf	___lldiv@divisor,f
  2514  027E  3EFF               	addlw	-1
  2515  027F  1D03               	skipz
  2516  0280  2A79               	goto	u605
  2517  0281                     l1631:
  2518  0281  3001               	movlw	1
  2519  0282  02CA               	subwf	___lldiv@counter,f
  2520  0283  1D03               	btfss	3,2
  2521  0284  2A86               	goto	u611
  2522  0285  2A87               	goto	u610
  2523  0286                     u611:
  2524  0286  2A4E               	goto	l1621
  2525  0287                     u610:
  2526  0287                     l1633:
  2527  0287  0849               	movf	___lldiv@quotient+3,w
  2528  0288  00C0               	movwf	?___lldiv+3
  2529  0289  0848               	movf	___lldiv@quotient+2,w
  2530  028A  00BF               	movwf	?___lldiv+2
  2531  028B  0847               	movf	___lldiv@quotient+1,w
  2532  028C  00BE               	movwf	?___lldiv+1
  2533  028D  0846               	movf	___lldiv@quotient,w
  2534  028E  00BD               	movwf	?___lldiv
  2535  028F                     l403:
  2536  028F  0008               	return
  2537  0290                     __end_of___lldiv:
  2538                           
  2539                           	psect	text14
  2540  02EE                     __ptext14:	
  2541 ;; *************** function _ISR *****************
  2542 ;; Defined at:
  2543 ;;		line 92 in file "master.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0
  2559 ;;      Temps:          4       0       0       0       0
  2560 ;;      Totals:         4       0       0       0       0
  2561 ;;Total ram usage:        4 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    1
  2564 ;; This function calls:
  2565 ;;		_mandar
  2566 ;;		_recibir
  2567 ;; This function is called by:
  2568 ;;		Interrupt level 1
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function _ISR
  2574  02EE                     _ISR:
  2575  02EE                     i1l1513:
  2576  02EE  1D0B               	btfss	11,2	;volatile
  2577  02EF  2AF1               	goto	u48_21
  2578  02F0  2AF2               	goto	u48_20
  2579  02F1                     u48_21:
  2580  02F1  2AF9               	goto	i1l1521
  2581  02F2                     u48_20:
  2582  02F2                     i1l1515:
  2583  02F2  30EC               	movlw	236
  2584  02F3  0081               	movwf	1	;volatile
  2585  02F4                     i1l1517:
  2586  02F4  3001               	movlw	1
  2587  02F5  00FF               	movwf	btemp+1
  2588  02F6  087F               	movf	btemp+1,w
  2589  02F7  07BC               	addwf	_CONT,f
  2590  02F8                     i1l1519:
  2591  02F8  110B               	bcf	11,2	;volatile
  2592  02F9                     i1l1521:
  2593  02F9  0320               	decf	_FLAG,w
  2594  02FA  1D03               	btfss	3,2
  2595  02FB  2AFD               	goto	u49_21
  2596  02FC  2AFE               	goto	u49_20
  2597  02FD                     u49_21:
  2598  02FD  2B11               	goto	i1l1533
  2599  02FE                     u49_20:
  2600  02FE                     i1l1523:
  2601  02FE  1E0C               	btfss	12,4	;volatile
  2602  02FF  2B01               	goto	u50_21
  2603  0300  2B02               	goto	u50_20
  2604  0301                     u50_21:
  2605  0301  2B11               	goto	i1l1533
  2606  0302                     u50_20:
  2607  0302                     i1l1525:
  2608  0302  120A  118A  20D3  120A  118A  	fcall	_mandar
  2609  0307                     i1l1527:
  2610  0307  3001               	movlw	1
  2611  0308  00FF               	movwf	btemp+1
  2612  0309  087F               	movf	btemp+1,w
  2613  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2614  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2615  030C  07BB               	addwf	_SEND,f
  2616  030D                     i1l1529:
  2617  030D  120C               	bcf	12,4	;volatile
  2618  030E                     i1l1531:
  2619  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2620  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2621  0310  120C               	bcf	12,4	;volatile
  2622  0311                     i1l1533:
  2623  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0312  1E8C               	btfss	12,5	;volatile
  2625  0313  2B15               	goto	u51_21
  2626  0314  2B16               	goto	u51_20
  2627  0315                     u51_21:
  2628  0315  2B1F               	goto	i1l143
  2629  0316                     u51_20:
  2630  0316                     i1l1535:
  2631  0316  081A               	movf	26,w	;volatile
  2632  0317  00FF               	movwf	btemp+1
  2633  0318  087F               	movf	btemp+1,w
  2634  0319  00F0               	movwf	_TOG
  2635  031A                     i1l1537:
  2636  031A  120A  118A  23D3  120A  118A  	fcall	_recibir
  2637  031F                     i1l143:
  2638  031F  087B               	movf	??_ISR+3,w
  2639  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2640  0321  1303               	bcf	3,6	;RP1=0, select bank0
  2641  0322  00FF               	movwf	btemp+1
  2642  0323  087A               	movf	??_ISR+2,w
  2643  0324  008A               	movwf	10
  2644  0325  0879               	movf	??_ISR+1,w
  2645  0326  0084               	movwf	4
  2646  0327  0E78               	swapf	??_ISR^(0+4294967168),w
  2647  0328  0083               	movwf	3
  2648  0329  0EFE               	swapf	btemp,f
  2649  032A  0E7E               	swapf	btemp,w
  2650  032B  0009               	retfie
  2651  032C                     __end_of_ISR:
  2652                           
  2653                           	psect	intentry
  2654  0004                     __pintentry:	
  2655                           ;incstack = 0
  2656                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2657                           
  2658  0004                     interrupt_function:
  2659  007E                     saved_w	set	btemp
  2660  0004  00FE               	movwf	btemp
  2661  0005  0E03               	swapf	3,w
  2662  0006  00F8               	movwf	??_ISR
  2663  0007  0804               	movf	4,w
  2664  0008  00F9               	movwf	??_ISR+1
  2665  0009  080A               	movf	10,w
  2666  000A  00FA               	movwf	??_ISR+2
  2667  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2668  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2669  000D  087F               	movf	btemp+1,w
  2670  000E  00FB               	movwf	??_ISR+3
  2671  000F  120A  118A  2AEE   	ljmp	_ISR
  2672                           
  2673                           	psect	text15
  2674  03D3                     __ptext15:	
  2675 ;; *************** function _recibir *****************
  2676 ;; Defined at:
  2677 ;;		line 330 in file "master.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_ISR
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _recibir
  2706  03D3                     _recibir:
  2707  03D3                     i1l1389:	
  2708                           ;incstack = 0
  2709                           ; Regs used in _recibir: [wreg+status,2+status,0]
  2710                           
  2711                           
  2712                           ;master.c: 331:     if (TOG == 1) {
  2713  03D3  0370               	decf	_TOG,w
  2714  03D4  1D03               	btfss	3,2
  2715  03D5  2BD7               	goto	u38_21
  2716  03D6  2BD8               	goto	u38_20
  2717  03D7                     u38_21:
  2718  03D7  2BDE               	goto	i1l1393
  2719  03D8                     u38_20:
  2720  03D8                     i1l1391:
  2721                           
  2722                           ;master.c: 332:         FLAG = 1;
  2723  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2724  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2725  03DA  01A0               	clrf	_FLAG
  2726  03DB  0AA0               	incf	_FLAG,f
  2727                           
  2728                           ;master.c: 333:         PORTAbits.RA0 = 0;
  2729  03DC  1005               	bcf	5,0	;volatile
  2730                           
  2731                           ;master.c: 334:         PORTAbits.RA1 = 0;
  2732  03DD  1085               	bcf	5,1	;volatile
  2733  03DE                     i1l1393:
  2734                           
  2735                           ;master.c: 337:     if (TOG == 2) {
  2736  03DE  3002               	movlw	2
  2737  03DF  0670               	xorwf	_TOG,w
  2738  03E0  1D03               	btfss	3,2
  2739  03E1  2BE3               	goto	u39_21
  2740  03E2  2BE4               	goto	u39_20
  2741  03E3                     u39_21:
  2742  03E3  2BE8               	goto	i1l1397
  2743  03E4                     u39_20:
  2744  03E4                     i1l1395:
  2745                           
  2746                           ;master.c: 338:         PORTAbits.RA0 = 1;
  2747  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2748  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2749  03E6  1405               	bsf	5,0	;volatile
  2750                           
  2751                           ;master.c: 339:         PORTAbits.RA1 = 0;
  2752  03E7  1085               	bcf	5,1	;volatile
  2753  03E8                     i1l1397:
  2754                           
  2755                           ;master.c: 341:     if (TOG == 3) {
  2756  03E8  3003               	movlw	3
  2757  03E9  0670               	xorwf	_TOG,w
  2758  03EA  1D03               	btfss	3,2
  2759  03EB  2BED               	goto	u40_21
  2760  03EC  2BEE               	goto	u40_20
  2761  03ED                     u40_21:
  2762  03ED  2BF2               	goto	i1l1401
  2763  03EE                     u40_20:
  2764  03EE                     i1l1399:
  2765                           
  2766                           ;master.c: 342:         PORTAbits.RA1 = 1;
  2767  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2768  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2769  03F0  1485               	bsf	5,1	;volatile
  2770                           
  2771                           ;master.c: 343:         PORTAbits.RA0 = 0;
  2772  03F1  1005               	bcf	5,0	;volatile
  2773  03F2                     i1l1401:
  2774                           
  2775                           ;master.c: 346:     if (TOG == 4){
  2776  03F2  3004               	movlw	4
  2777  03F3  0670               	xorwf	_TOG,w
  2778  03F4  1D03               	btfss	3,2
  2779  03F5  2BF7               	goto	u41_21
  2780  03F6  2BF8               	goto	u41_20
  2781  03F7                     u41_21:
  2782  03F7  2BFC               	goto	i1l195
  2783  03F8                     u41_20:
  2784  03F8                     i1l1403:
  2785                           
  2786                           ;master.c: 347:         PORTAbits.RA0 = 1;
  2787  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2788  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2789  03FA  1405               	bsf	5,0	;volatile
  2790                           
  2791                           ;master.c: 348:         PORTAbits.RA1 = 1;
  2792  03FB  1485               	bsf	5,1	;volatile
  2793  03FC                     i1l195:
  2794  03FC  0008               	return
  2795  03FD                     __end_of_recibir:
  2796                           
  2797                           	psect	text16
  2798  00D3                     __ptext16:	
  2799 ;; *************** function _mandar *****************
  2800 ;; Defined at:
  2801 ;;		line 185 in file "master.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0
  2817 ;;      Temps:          2       0       0       0       0
  2818 ;;      Totals:         2       0       0       0       0
  2819 ;;Total ram usage:        2 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; This function calls:
  2822 ;;		Nothing
  2823 ;; This function is called by:
  2824 ;;		_ISR
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           
  2829                           ;psect for function _mandar
  2830  00D3                     _mandar:
  2831  00D3                     i1l1339:	
  2832                           ;incstack = 0
  2833                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  2834                           
  2835                           
  2836                           ;master.c: 186:     switch (SEND) {
  2837  00D3  2905               	goto	i1l1383
  2838  00D4                     i1l1341:
  2839                           
  2840                           ;master.c: 188:             TXREG = 0x20;
  2841  00D4  3020               	movlw	32
  2842  00D5  0099               	movwf	25	;volatile
  2843                           
  2844                           ;master.c: 189:             break;
  2845  00D6  294A               	goto	i1l179
  2846  00D7                     i1l1343:
  2847                           
  2848                           ;master.c: 191:             TXREG = HD;
  2849  00D7  0827               	movf	_HD,w
  2850  00D8  0099               	movwf	25	;volatile
  2851                           
  2852                           ;master.c: 192:             break;
  2853  00D9  294A               	goto	i1l179
  2854  00DA                     i1l1345:
  2855                           
  2856                           ;master.c: 194:             TXREG = HU;
  2857  00DA  0828               	movf	_HU,w
  2858  00DB  0099               	movwf	25	;volatile
  2859                           
  2860                           ;master.c: 195:             break;
  2861  00DC  294A               	goto	i1l179
  2862  00DD                     i1l1347:
  2863                           
  2864                           ;master.c: 198:             TXREG = 0x3A;
  2865  00DD  303A               	movlw	58
  2866  00DE  0099               	movwf	25	;volatile
  2867                           
  2868                           ;master.c: 199:             break;
  2869  00DF  294A               	goto	i1l179
  2870  00E0                     i1l1349:
  2871                           
  2872                           ;master.c: 202:             TXREG = MD;
  2873  00E0  0829               	movf	_MD,w
  2874  00E1  0099               	movwf	25	;volatile
  2875                           
  2876                           ;master.c: 203:             break;
  2877  00E2  294A               	goto	i1l179
  2878  00E3                     i1l1351:
  2879                           
  2880                           ;master.c: 205:             TXREG = MU;
  2881  00E3  082A               	movf	_MU,w
  2882  00E4  0099               	movwf	25	;volatile
  2883                           
  2884                           ;master.c: 206:             break;
  2885  00E5  294A               	goto	i1l179
  2886  00E6                     i1l1355:
  2887                           
  2888                           ;master.c: 211:             TXREG = SD;
  2889  00E6  082B               	movf	_SD,w
  2890  00E7  0099               	movwf	25	;volatile
  2891                           
  2892                           ;master.c: 212:             break;
  2893  00E8  294A               	goto	i1l179
  2894  00E9                     i1l1357:
  2895                           
  2896                           ;master.c: 215:             TXREG = SU;
  2897  00E9  082C               	movf	_SU,w
  2898  00EA  0099               	movwf	25	;volatile
  2899                           
  2900                           ;master.c: 216:             break;
  2901  00EB  294A               	goto	i1l179
  2902  00EC                     i1l1361:
  2903                           
  2904                           ;master.c: 223:             TXREG = DD;
  2905  00EC  0825               	movf	_DD,w
  2906  00ED  0099               	movwf	25	;volatile
  2907                           
  2908                           ;master.c: 224:             break;
  2909  00EE  294A               	goto	i1l179
  2910  00EF                     i1l1363:
  2911                           
  2912                           ;master.c: 227:             TXREG = DU;
  2913  00EF  0826               	movf	_DU,w
  2914  00F0  0099               	movwf	25	;volatile
  2915                           
  2916                           ;master.c: 228:             break;
  2917  00F1  294A               	goto	i1l179
  2918  00F2                     i1l1365:
  2919                           
  2920                           ;master.c: 231:             TXREG = 0x2F;
  2921  00F2  302F               	movlw	47
  2922  00F3  0099               	movwf	25	;volatile
  2923                           
  2924                           ;master.c: 232:             break;
  2925  00F4  294A               	goto	i1l179
  2926  00F5                     i1l1367:
  2927                           
  2928                           ;master.c: 234:             TXREG = MOD;
  2929  00F5  0823               	movf	_MOD,w
  2930  00F6  0099               	movwf	25	;volatile
  2931                           
  2932                           ;master.c: 235:             break;
  2933  00F7  294A               	goto	i1l179
  2934  00F8                     i1l1369:
  2935                           
  2936                           ;master.c: 238:             TXREG = MOU;
  2937  00F8  0824               	movf	_MOU,w
  2938  00F9  0099               	movwf	25	;volatile
  2939                           
  2940                           ;master.c: 239:             break;
  2941  00FA  294A               	goto	i1l179
  2942  00FB                     i1l1373:
  2943                           
  2944                           ;master.c: 245:             TXREG = YD;
  2945  00FB  0821               	movf	_YD,w
  2946  00FC  0099               	movwf	25	;volatile
  2947                           
  2948                           ;master.c: 246:             break;
  2949  00FD  294A               	goto	i1l179
  2950  00FE                     i1l1375:
  2951                           
  2952                           ;master.c: 249:             TXREG = YU;
  2953  00FE  0822               	movf	_YU,w
  2954  00FF  0099               	movwf	25	;volatile
  2955                           
  2956                           ;master.c: 250:             break;
  2957  0100  294A               	goto	i1l179
  2958  0101                     i1l1377:
  2959                           
  2960                           ;master.c: 253:             TXREG = 0x0A;
  2961  0101  300A               	movlw	10
  2962  0102  0099               	movwf	25	;volatile
  2963  0103                     i1l1379:
  2964                           
  2965                           ;master.c: 254:             SEND = 0;
  2966  0103  01BB               	clrf	_SEND
  2967                           
  2968                           ;master.c: 255:             break;
  2969  0104  294A               	goto	i1l179
  2970  0105                     i1l1383:
  2971  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0107  083B               	movf	_SEND,w
  2974  0108  00F6               	movwf	??_mandar
  2975  0109  01F7               	clrf	??_mandar+1
  2976                           
  2977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2978                           ; Switch size 1, requested type "simple"
  2979                           ; Number of cases is 1, Range of values is 0 to 0
  2980                           ; switch strategies available:
  2981                           ; Name         Instructions Cycles
  2982                           ; simple_byte            4     3 (average)
  2983                           ; direct_byte           11     8 (fixed)
  2984                           ; jumptable            260     6 (fixed)
  2985                           ;	Chosen strategy is simple_byte
  2986  010A  0877               	movf	??_mandar+1,w
  2987  010B  3A00               	xorlw	0	; case 0
  2988  010C  1903               	skipnz
  2989  010D  290F               	goto	i1l1883
  2990  010E  294A               	goto	i1l179
  2991  010F                     i1l1883:
  2992                           
  2993                           ; Switch size 1, requested type "simple"
  2994                           ; Number of cases is 19, Range of values is 0 to 18
  2995                           ; switch strategies available:
  2996                           ; Name         Instructions Cycles
  2997                           ; simple_byte           58    30 (average)
  2998                           ; direct_byte           65     8 (fixed)
  2999                           ; jumptable            260     6 (fixed)
  3000                           ;	Chosen strategy is simple_byte
  3001  010F  0876               	movf	??_mandar,w
  3002  0110  3A00               	xorlw	0	; case 0
  3003  0111  1903               	skipnz
  3004  0112  28D4               	goto	i1l1341
  3005  0113  3A01               	xorlw	1	; case 1
  3006  0114  1903               	skipnz
  3007  0115  28D7               	goto	i1l1343
  3008  0116  3A03               	xorlw	3	; case 2
  3009  0117  1903               	skipnz
  3010  0118  28DA               	goto	i1l1345
  3011  0119  3A01               	xorlw	1	; case 3
  3012  011A  1903               	skipnz
  3013  011B  28DD               	goto	i1l1347
  3014  011C  3A07               	xorlw	7	; case 4
  3015  011D  1903               	skipnz
  3016  011E  28E0               	goto	i1l1349
  3017  011F  3A01               	xorlw	1	; case 5
  3018  0120  1903               	skipnz
  3019  0121  28E3               	goto	i1l1351
  3020  0122  3A03               	xorlw	3	; case 6
  3021  0123  1903               	skipnz
  3022  0124  28DD               	goto	i1l1347
  3023  0125  3A01               	xorlw	1	; case 7
  3024  0126  1903               	skipnz
  3025  0127  28E6               	goto	i1l1355
  3026  0128  3A0F               	xorlw	15	; case 8
  3027  0129  1903               	skipnz
  3028  012A  28E9               	goto	i1l1357
  3029  012B  3A01               	xorlw	1	; case 9
  3030  012C  1903               	skipnz
  3031  012D  28D4               	goto	i1l1341
  3032  012E  3A03               	xorlw	3	; case 10
  3033  012F  1903               	skipnz
  3034  0130  28EC               	goto	i1l1361
  3035  0131  3A01               	xorlw	1	; case 11
  3036  0132  1903               	skipnz
  3037  0133  28EF               	goto	i1l1363
  3038  0134  3A07               	xorlw	7	; case 12
  3039  0135  1903               	skipnz
  3040  0136  28F2               	goto	i1l1365
  3041  0137  3A01               	xorlw	1	; case 13
  3042  0138  1903               	skipnz
  3043  0139  28F5               	goto	i1l1367
  3044  013A  3A03               	xorlw	3	; case 14
  3045  013B  1903               	skipnz
  3046  013C  28F8               	goto	i1l1369
  3047  013D  3A01               	xorlw	1	; case 15
  3048  013E  1903               	skipnz
  3049  013F  28F2               	goto	i1l1365
  3050  0140  3A1F               	xorlw	31	; case 16
  3051  0141  1903               	skipnz
  3052  0142  28FB               	goto	i1l1373
  3053  0143  3A01               	xorlw	1	; case 17
  3054  0144  1903               	skipnz
  3055  0145  28FE               	goto	i1l1375
  3056  0146  3A03               	xorlw	3	; case 18
  3057  0147  1903               	skipnz
  3058  0148  2901               	goto	i1l1377
  3059  0149  294A               	goto	i1l179
  3060  014A                     i1l179:
  3061  014A  0008               	return
  3062  014B                     __end_of_mandar:
  3063  007E                     btemp	set	126	;btemp
  3064  007E                     wtemp0	set	126
  3065                           
  3066                           	psect	config
  3067                           
  3068                           ;Config register CONFIG1 @ 0x2007
  3069                           ;	Oscillator Selection bits
  3070                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3071                           ;	Watchdog Timer Enable bit
  3072                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3073                           ;	Power-up Timer Enable bit
  3074                           ;	PWRTE = OFF, PWRT disabled
  3075                           ;	RE3/MCLR pin function select bit
  3076                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3077                           ;	Code Protection bit
  3078                           ;	CP = OFF, Program memory code protection is disabled
  3079                           ;	Data Code Protection bit
  3080                           ;	CPD = OFF, Data memory code protection is disabled
  3081                           ;	Brown Out Reset Selection bits
  3082                           ;	BOREN = OFF, BOR disabled
  3083                           ;	Internal External Switchover bit
  3084                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3085                           ;	Fail-Safe Clock Monitor Enabled bit
  3086                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3087                           ;	Low Voltage Programming Enable bit
  3088                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3089                           ;	In-Circuit Debugger Mode bit
  3090                           ;	DEBUG = 0x1, unprogrammed default
  3091  2007                     	org	8199
  3092  2007  20D4               	dw	8404
  3093                           
  3094                           ;Config register CONFIG2 @ 0x2008
  3095                           ;	Brown-out Reset Selection bit
  3096                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3097                           ;	Flash Program Memory Self Write Enable bits
  3098                           ;	WRT = OFF, Write protection off
  3099  2008                     	org	8200
  3100  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     22      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_mandar

Critical Paths under _main in BANK0

    _timeout->_I2C_Master_Write
    _timein->_I2C_Master_Read
    _Setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2860
                              _Setup
                             _conver
                             _timein
                            _timeout
 ---------------------------------------------------------------------------------
 (1) _timeout                                              0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _timein                                               0     0      0    1176
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      5     5      0      65
                                              0 BANK0      5     5      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conver                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     573
                    _I2C_Master_Init
                            _initOsc
                              _usart
 ---------------------------------------------------------------------------------
 (2) _usart                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              2 COMMON     4     4      0
                             _mandar
                            _recibir
 ---------------------------------------------------------------------------------
 (5) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _I2C_Master_Init
       ___lldiv
     _initOsc
     _usart
   _conver
   _timein
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _timeout
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _ISR (ROOT)
   _mandar
   _recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3F      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Mar 04 00:28:54 2021

                        _H 0073                         _DD 0025                         _HD 0027  
                       _DU 0026                         _MD 0029                         _HU 0028  
                       _SD 002B                         _MU 002A                         _YD 0021  
                       _SU 002C                         _YU 0022                         fsr 0004  
                      l230 0442                        l224 03A1                        l233 045E  
                      l242 044C                        l403 028F                        l155 0367  
                      l227 0436                        l260 02A6                        l261 02AC  
                      l245 03CB                        l262 02B2                        l246 03CE  
                      l182 0227                        l263 02B8                        l247 03D2  
                      l239 0455                        l264 02BE                        l256 0294  
                      l265 02C4                        l257 02EC                        l281 0435  
                      l185 01BD                        l266 02ED                        l258 029A  
                      l259 02A0                        l188 00D2                        _DAY 0072  
                      _GIE 005F                        _MIN 0074                        _MOD 0023  
                      _SEC 0075                        u610 0287                        u530 043C  
                      u611 0286                        u531 043B                        u620 037F  
                      u540 0442                        u700 0419                        _ISR 02EE  
                      u605 0279                        u541 0441                        u701 0418  
                      u550 023A                        u630 03C7                        u551 0239  
                      u631 03C6                        u625 037A                        u570 024E  
                      u571 024D                        u565 023F                        u645 0032  
                      u590 0269                        u591 0268                        u655 0044  
                      _MOU 0024                        u585 0250                        u665 0056  
                      u595 0265                        u675 0068                        u685 007A  
                      u695 008C                        _TOG 0070                        fsr0 0004  
                      indf 0000                       ?_ISR 0076                       l1611 0228  
                     l1621 024E                       l1613 023A                       l1701 03CF  
                     l1631 0281                       l1623 0257                       l1615 023D  
                     l1711 033A                       l1607 0436                       l1625 0269  
                     l1617 0246                       l1633 0287                       l1641 02CA  
                     l1721 0341                       l1713 033B                       l1705 032C  
                     l1801 00B4                       l1609 043C                       l1627 0277  
                     l1619 024A                       l1651 0429                       l1731 0348  
                     l1723 0344                       l1715 033C                       l1707 0332  
                     l1811 00CD                       l1803 00B9                       l1629 0278  
                     l1637 0293                       l1661 0433                       l1653 042C  
                     l1741 0354                       l1733 034C                       l1725 0345  
                     l1717 033D                       l1709 0337                       l1805 00BE  
                     l1821 0411                       l1813 03FD                       l1671 039E  
                     l1663 0434                       l1655 042E                       l1743 0355  
                     l1735 034D                       l1727 0346                       l1719 0340  
                     l1807 00C3                       l1751 01BE                       l1823 0419  
                     l1815 0402                       l1673 039F                       l1665 0368  
                     l1657 042F                       l1649 0421                       l1745 0356  
                     l1737 034E                       l1729 0347                       l1809 00C8  
                     l1681 0443                       l1761 0190                       l1753 014B  
                     l1825 041A                       l1817 0407                       l1675 03A0  
                     l1667 036C                       l1659 0430                       l1747 0357  
                     l1739 0351                       l1771 0028                       l1691 03AA  
                     l1683 0448                       l1763 019B                       l1755 0175  
                     l1819 040C                       l1669 036F                       l1749 035A  
                     l1781 0065                       l1773 002F                       l1693 03B2  
                     l1677 0456                       l1685 044D                       l1765 01A4  
                     l1757 017E                       l1791 009B                       l1783 0072  
                     l1775 003C                       l1695 03BB                       l1679 045B  
                     l1687 0452                       l1767 01AD                       l1759 0187  
                     l1881 02D2                       l1793 00A0                       l1785 0084  
                     l1777 004E                       l1697 03C0                       l1689 03A5  
                     l1769 01B8                       l1795 00A5                       l1787 0089  
                     l1779 0053                       l1699 03C7                       l1797 00AA  
                     l1789 0096                       l1799 00AF                       _DAYD 0031  
                     _FLAG 0020                       _DAYU 0032                       _NADA 0039  
                     _CONT 003C                       _PEIE 005E                       _MIND 0035  
                     _SECD 0037                       _MINU 0036                       _SECU 0038  
                     _SEND 003B                       _TMR0 0001                       _YEAR 003A  
                     _main 03FD                       btemp 007E                       start 0012  
                    ??_ISR 0078           ?_I2C_Master_Init 004B           ?_I2C_Master_Read 0076  
         ?_I2C_Master_Wait 0076           ?_I2C_Master_Stop 0076                      ?_main 0076  
                    _ANSEL 0188            __end_of___lldiv 0290                      _HORAD 0033  
                    i1l143 031F                      _HORAU 0034                      i1l179 014A  
                    i1l195 03FC                      _RCREG 001A                      _MONTH 0071  
                    u40_20 03EE                      u40_21 03ED                      u41_20 03F8  
                    u41_21 03F7                      u50_20 0302                      u50_21 0301  
                    _SPBRG 0099                      _YEARD 002D                      u51_20 0316  
                    u51_21 0315                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _YEARU 002E                      u38_20 03D8                      u38_21 03D7  
                    u39_20 03E4                      u39_21 03E3                      u48_20 02F2  
                    u48_21 02F1                      u49_20 02FE                      u49_21 02FD  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019                      _Setup 032C            __end_of_initOsc 02EE  
          __end_of_recibir 03FD                      _usart 0421                      pclath 000A  
          __end_of_timeout 0228                      status 0003                      wtemp0 007E  
          __initialization 0015               __end_of_main 0421                     ??_main 0053  
        ?_I2C_Master_Start 0076          ?_I2C_Master_Write 003D                     ?_Setup 0076  
       ??_I2C_Master_Start 003D         ??_I2C_Master_Write 003F                initOsc@IRCF 003F  
                   _ANSELH 0189                     ?_usart 0076                     i1l1401 03F2  
                   i1l1403 03F8                     i1l1341 00D4                     i1l1351 00E3  
                   i1l1343 00D7                     i1l1361 00EC                     i1l1345 00DA  
                   i1l1521 02F9                     i1l1513 02EE                     i1l1363 00EF  
                   i1l1355 00E6                     i1l1347 00DD                     i1l1339 00D3  
                   i1l1531 030E                     i1l1523 02FE                     i1l1515 02F2  
                   i1l1373 00FB                     i1l1365 00F2                     i1l1357 00E9  
                   i1l1349 00E0                     i1l1525 0302                     i1l1533 0311  
                   i1l1517 02F4                     i1l1375 00FE                     i1l1367 00F5  
                   i1l1383 0105                     i1l1391 03D8                     i1l1535 0316  
                   i1l1527 0307                     i1l1519 02F8                     i1l1377 0101  
                   i1l1369 00F8                     i1l1393 03DE                     i1l1537 031A  
                   i1l1529 030D                     i1l1379 0103                     i1l1395 03E4  
                   i1l1397 03E8                     i1l1389 03D3                     i1l1399 03EE  
                   i1l1883 010F                     _MONTHD 002F                     _MONTHU 0030  
                   _SPBRGH 009A                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 0045                     _conver 0028                     _mandar 00D3  
                   _timein 014B                  ??_initOsc 003D                  ??_recibir 0076  
                   saved_w 007E                  ??_timeout 003F    __end_of__initialization 0024  
           __pcstackCOMMON 0076              __end_of_Setup 0368              __end_of_usart 0436  
                  ??_Setup 0053                    ??_usart 003D                 __pbssBANK0 0020  
               __pmaintext 03FD                 __pintentry 0004                    ?_conver 0076  
                  ?_mandar 0076                    ?_timein 0076                    _SSPCON2 0091  
                  _SSPSTAT 0094                    ___lldiv 0228            __size_of_conver 00AB  
          __size_of_mandar 0078                    __ptext1 01BE                    __ptext2 014B  
                  __ptext3 0443                    __ptext4 044D                    __ptext5 0456  
                  __ptext6 03A2                    __ptext7 0436                    __ptext8 0028  
                  __ptext9 032C            __size_of_timein 0073               __size_of_ISR 003E  
                  _initOsc 0290                    _recibir 03D3   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0031   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _timeout 01BE                    clrloop0 0460       end_of_initialization 0024  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 003D  
          ___lldiv@counter 004A                  _RCSTAbits 0018           I2C_Master_Init@c 004B  
         I2C_Master_Read@a 003F                  _PORTAbits 0005                  _TRISCbits 0087  
                _TXSTAbits 0098                _BAUDCTLbits 0187             __end_of_conver 00D3  
           __end_of_mandar 014B             __end_of_timein 01BE        start_initialization 0015  
              __end_of_ISR 032C          ??_I2C_Master_Init 004F          ??_I2C_Master_Read 003D  
        ??_I2C_Master_Wait 003D          ??_I2C_Master_Stop 003D                   ??_conver 003D  
                 ??_mandar 0076                   ??_timein 0042                __pbssCOMMON 0070  
                ___latbits 0002              __pcstackBANK0 003D           _I2C_Master_Start 0456  
         _I2C_Master_Write 0443                   ?___lldiv 003D                   ?_initOsc 0076  
                 ?_recibir 0076             __size_of_Setup 003C                   ?_timeout 0076  
           __size_of_usart 0015          interrupt_function 0004                  clear_ram0 045F  
                 _PIE1bits 008C                   _PIR1bits 000C        I2C_Master_Read@temp 0040  
         __size_of___lldiv 0068            _I2C_Master_Init 0368            _I2C_Master_Read 03A2  
          _I2C_Master_Wait 0436            _I2C_Master_Stop 044D           __size_of_initOsc 005E  
         __size_of_recibir 002A                   __ptext10 0421                   __ptext11 0290  
                 __ptext12 0368                   __ptext13 0228                   __ptext14 02EE  
                 __ptext15 03D3                   __ptext16 00D3           __size_of_timeout 006A  
            __size_of_main 0024   __end_of_I2C_Master_Start 045F   __end_of_I2C_Master_Write 044D  
               _INTCONbits 000B                   intlevel1 0000           ___lldiv@dividend 0041  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 03A2    __end_of_I2C_Master_Read 03D3  
  __end_of_I2C_Master_Wait 0443    __end_of_I2C_Master_Stop 0456                 _OPTION_REG 0081  
         ___lldiv@quotient 0046          I2C_Master_Write@d 003D                _SSPCON2bits 0091  
