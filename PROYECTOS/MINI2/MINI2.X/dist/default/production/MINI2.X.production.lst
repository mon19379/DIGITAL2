

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Mar 02 20:39:12 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 09/04/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0018                     _RCSTAbits	set	24
   455  0013                     _SSPBUF	set	19
   456  0014                     _SSPCON	set	20
   457  0019                     _TXREG	set	25
   458  0009                     _PORTE	set	9
   459  0008                     _PORTD	set	8
   460  0007                     _PORTC	set	7
   461  0006                     _PORTB	set	6
   462  0005                     _PORTA	set	5
   463  000C                     _PIR1bits	set	12
   464  0001                     _TMR0	set	1
   465  000B                     _INTCONbits	set	11
   466  0063                     _SSPIF	set	99
   467  005E                     _PEIE	set	94
   468  005F                     _GIE	set	95
   469  0099                     _SPBRG	set	153
   470  009A                     _SPBRGH	set	154
   471  0098                     _TXSTAbits	set	152
   472  008F                     _OSCCONbits	set	143
   473  0091                     _SSPCON2bits	set	145
   474  0087                     _TRISCbits	set	135
   475  0094                     _SSPSTAT	set	148
   476  0093                     _SSPADD	set	147
   477  0091                     _SSPCON2	set	145
   478  0081                     _OPTION_REG	set	129
   479  0089                     _TRISE	set	137
   480  0088                     _TRISD	set	136
   481  0086                     _TRISB	set	134
   482  0085                     _TRISA	set	133
   483  008C                     _PIE1bits	set	140
   484  0463                     _SSPIE	set	1123
   485  043C                     _TRISC4	set	1084
   486  043B                     _TRISC3	set	1083
   487  0187                     _BAUDCTLbits	set	391
   488  0189                     _ANSELH	set	393
   489  0188                     _ANSEL	set	392
   490                           
   491                           	psect	cinit
   492  0015                     start_initialization:	
   493                           ; #config settings
   494                           
   495  0015                     __initialization:
   496                           
   497                           ; Clear objects allocated to COMMON
   498  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   499  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   500  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   501  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   502  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   503  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   504                           
   505                           ; Clear objects allocated to BANK0
   506  001B  1383               	bcf	3,7	;select IRP bank0
   507  001C  3020               	movlw	low __pbssBANK0
   508  001D  0084               	movwf	4
   509  001E  303B               	movlw	low (__pbssBANK0+27)
   510  001F  120A  118A  241F  120A  118A  	fcall	clear_ram0
   511  0024                     end_of_initialization:	
   512                           ;End of C runtime variable initialization code
   513                           
   514  0024                     __end_of__initialization:
   515  0024  0183               	clrf	3
   516  0025  120A  118A  2BBD   	ljmp	_main	;jump to C main() function
   517                           
   518                           	psect	bssCOMMON
   519  0070                     __pbssCOMMON:
   520  0070                     _YEAR:
   521  0070                     	ds	1
   522  0071                     _MONTH:
   523  0071                     	ds	1
   524  0072                     _DAY:
   525  0072                     	ds	1
   526  0073                     _H:
   527  0073                     	ds	1
   528  0074                     _MIN:
   529  0074                     	ds	1
   530  0075                     _SEC:
   531  0075                     	ds	1
   532                           
   533                           	psect	bssBANK0
   534  0020                     __pbssBANK0:
   535  0020                     _YD:
   536  0020                     	ds	1
   537  0021                     _YU:
   538  0021                     	ds	1
   539  0022                     _MOD:
   540  0022                     	ds	1
   541  0023                     _MOU:
   542  0023                     	ds	1
   543  0024                     _DD:
   544  0024                     	ds	1
   545  0025                     _DU:
   546  0025                     	ds	1
   547  0026                     _HD:
   548  0026                     	ds	1
   549  0027                     _HU:
   550  0027                     	ds	1
   551  0028                     _MD:
   552  0028                     	ds	1
   553  0029                     _MU:
   554  0029                     	ds	1
   555  002A                     _SD:
   556  002A                     	ds	1
   557  002B                     _SU:
   558  002B                     	ds	1
   559  002C                     _YEARD:
   560  002C                     	ds	1
   561  002D                     _YEARU:
   562  002D                     	ds	1
   563  002E                     _MONTHD:
   564  002E                     	ds	1
   565  002F                     _MONTHU:
   566  002F                     	ds	1
   567  0030                     _DAYD:
   568  0030                     	ds	1
   569  0031                     _DAYU:
   570  0031                     	ds	1
   571  0032                     _HORAD:
   572  0032                     	ds	1
   573  0033                     _HORAU:
   574  0033                     	ds	1
   575  0034                     _MIND:
   576  0034                     	ds	1
   577  0035                     _MINU:
   578  0035                     	ds	1
   579  0036                     _SECD:
   580  0036                     	ds	1
   581  0037                     _SECU:
   582  0037                     	ds	1
   583  0038                     _NADA:
   584  0038                     	ds	1
   585  0039                     _SEND:
   586  0039                     	ds	1
   587  003A                     _CONT:
   588  003A                     	ds	1
   589                           
   590                           	psect	clrtext
   591  041F                     clear_ram0:	
   592                           ;	Called with FSR containing the base address, and
   593                           ;	W with the last address+1
   594                           
   595  041F  0064               	clrwdt	;clear the watchdog before getting into this loop
   596  0420                     clrloop0:
   597  0420  0180               	clrf	0	;clear RAM location pointed to by FSR
   598  0421  0A84               	incf	4,f	;increment pointer
   599  0422  0604               	xorwf	4,w	;XOR with final address
   600  0423  1903               	btfsc	3,2	;have we reached the end yet?
   601  0424  3400               	retlw	0	;all done for this memory range, return
   602  0425  0604               	xorwf	4,w	;XOR again to restore value
   603  0426  2C20               	goto	clrloop0	;do the next byte
   604                           
   605                           	psect	cstackCOMMON
   606  0076                     __pcstackCOMMON:
   607  0076                     ?_mandar:
   608  0076                     ??_mandar:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0076                     ?_Setup:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0076                     ?_timeout:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0076                     ?_timein:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0076                     ?_conver:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0076                     ?_initOsc:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0076                     ?_usart:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0076                     ?_I2C_Master_Start:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0076                     ?_I2C_Master_Stop:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0076                     ?_I2C_Master_Read:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0076                     ?_ISR:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0076                     ?_main:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0076                     ?_I2C_Master_Wait:	
   645                           ; 1 bytes @ 0x0
   646                           
   647                           
   648                           ; 1 bytes @ 0x0
   649  0076                     	ds	2
   650  0078                     ??_ISR:
   651                           
   652                           ; 1 bytes @ 0x2
   653  0078                     	ds	4
   654                           
   655                           	psect	cstackBANK0
   656  003B                     __pcstackBANK0:
   657  003B                     ??_conver:
   658  003B                     ??_initOsc:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  003B                     ??_usart:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  003B                     ??_I2C_Master_Start:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  003B                     ?_I2C_Master_Write:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  003B                     ??_I2C_Master_Stop:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  003B                     ??_I2C_Master_Read:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  003B                     ??_I2C_Master_Wait:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  003B                     ?___lldiv:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  003B                     I2C_Master_Write@d:	
   683                           ; 4 bytes @ 0x0
   684                           
   685  003B                     ___lldiv@divisor:	
   686                           ; 2 bytes @ 0x0
   687                           
   688                           
   689                           ; 4 bytes @ 0x0
   690  003B                     	ds	2
   691  003D                     ??_timeout:
   692  003D                     ??_I2C_Master_Write:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  003D                     I2C_Master_Read@a:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  003D                     initOsc@IRCF:	
   699                           ; 1 bytes @ 0x2
   700                           
   701                           
   702                           ; 1 bytes @ 0x2
   703  003D                     	ds	1
   704  003E                     I2C_Master_Read@temp:
   705                           
   706                           ; 2 bytes @ 0x3
   707  003E                     	ds	1
   708  003F                     ___lldiv@dividend:
   709                           
   710                           ; 4 bytes @ 0x4
   711  003F                     	ds	1
   712  0040                     ??_timein:
   713                           
   714                           ; 1 bytes @ 0x5
   715  0040                     	ds	3
   716  0043                     ??___lldiv:
   717                           
   718                           ; 1 bytes @ 0x8
   719  0043                     	ds	1
   720  0044                     ___lldiv@quotient:
   721                           
   722                           ; 4 bytes @ 0x9
   723  0044                     	ds	4
   724  0048                     ___lldiv@counter:
   725                           
   726                           ; 1 bytes @ 0xD
   727  0048                     	ds	1
   728  0049                     ?_I2C_Master_Init:
   729  0049                     I2C_Master_Init@c:	
   730                           ; 1 bytes @ 0xE
   731                           
   732                           
   733                           ; 4 bytes @ 0xE
   734  0049                     	ds	4
   735  004D                     ??_I2C_Master_Init:
   736                           
   737                           ; 1 bytes @ 0x12
   738  004D                     	ds	4
   739  0051                     ??_Setup:
   740  0051                     ??_main:	
   741                           ; 1 bytes @ 0x16
   742                           
   743                           
   744                           	psect	maintext
   745  03BD                     __pmaintext:	
   746                           ; 1 bytes @ 0x16
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 111 in file "master.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : B00/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels required when called:    5
   772 ;; This function calls:
   773 ;;		_Setup
   774 ;;		_conver
   775 ;;		_timein
   776 ;;		_timeout
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _main
   784  03BD                     _main:
   785  03BD                     l1734:	
   786                           ;incstack = 0
   787                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   788                           
   789  03BD  120A  118A  22EE  120A  118A  	fcall	_Setup
   790  03C2                     l1736:
   791  03C2  120A  118A  21BC  120A  118A  	fcall	_timeout
   792  03C7                     l1738:
   793  03C7  3015               	movlw	21
   794  03C8  1283               	bcf	3,5	;RP0=0, select bank0
   795  03C9  1303               	bcf	3,6	;RP1=0, select bank0
   796  03CA  023A               	subwf	_CONT,w
   797  03CB  1C03               	skipc
   798  03CC  2BCE               	goto	u581
   799  03CD  2BCF               	goto	u580
   800  03CE                     u581:
   801  03CE  2BDE               	goto	l140
   802  03CF                     u580:
   803  03CF                     l1740:
   804  03CF  01BA               	clrf	_CONT
   805  03D0                     l1742:
   806  03D0  1683               	bsf	3,5	;RP0=1, select bank1
   807  03D1  1303               	bcf	3,6	;RP1=0, select bank1
   808  03D2  160C               	bsf	12,4	;volatile
   809  03D3                     l1744:
   810                           
   811                           ;master.c: 128:             timein();
   812  03D3  120A  118A  214B  120A  118A  	fcall	_timein
   813  03D8                     l1746:
   814                           
   815                           ;master.c: 129:             conver();
   816  03D8  120A  118A  2028  120A  118A  	fcall	_conver
   817  03DD  2BD3               	goto	l1744
   818  03DE                     l140:
   819  03DE  120A  118A  2812   	ljmp	start
   820  03E1                     __end_of_main:
   821                           
   822                           	psect	text1
   823  01BC                     __ptext1:	
   824 ;; *************** function _timeout *****************
   825 ;; Defined at:
   826 ;;		line 251 in file "master.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0
   843 ;;      Totals:         0       0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    4
   847 ;; This function calls:
   848 ;;		_I2C_Master_Start
   849 ;;		_I2C_Master_Stop
   850 ;;		_I2C_Master_Write
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _timeout
   858  01BC                     _timeout:
   859  01BC                     l1672:	
   860                           ;incstack = 0
   861                           ; Regs used in _timeout: [wreg+status,2+status,0+pclath+cstack]
   862                           
   863                           
   864                           ;master.c: 252:     I2C_Master_Start();
   865  01BC  120A  118A  2416  120A  118A  	fcall	_I2C_Master_Start
   866                           
   867                           ;master.c: 253:     I2C_Master_Write(0xD0);
   868  01C1  30D0               	movlw	208
   869  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   870  01C3  1303               	bcf	3,6	;RP1=0, select bank0
   871  01C4  00BB               	movwf	I2C_Master_Write@d
   872  01C5  3000               	movlw	0
   873  01C6  00BC               	movwf	I2C_Master_Write@d+1
   874  01C7  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   875                           
   876                           ;master.c: 254:     I2C_Master_Write(0);
   877  01CC  3000               	movlw	0
   878  01CD  1283               	bcf	3,5	;RP0=0, select bank0
   879  01CE  1303               	bcf	3,6	;RP1=0, select bank0
   880  01CF  00BB               	movwf	I2C_Master_Write@d
   881  01D0  00BC               	movwf	I2C_Master_Write@d+1
   882  01D1  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   883                           
   884                           ;master.c: 255:     I2C_Master_Write(0b00000000);
   885  01D6  3000               	movlw	0
   886  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   887  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   888  01D9  00BB               	movwf	I2C_Master_Write@d
   889  01DA  00BC               	movwf	I2C_Master_Write@d+1
   890  01DB  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   891                           
   892                           ;master.c: 256:     I2C_Master_Write(0b00000011);
   893  01E0  3003               	movlw	3
   894  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   895  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   896  01E3  00BB               	movwf	I2C_Master_Write@d
   897  01E4  3000               	movlw	0
   898  01E5  00BC               	movwf	I2C_Master_Write@d+1
   899  01E6  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   900                           
   901                           ;master.c: 257:     I2C_Master_Write(0b01010011);
   902  01EB  3053               	movlw	83
   903  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   904  01ED  1303               	bcf	3,6	;RP1=0, select bank0
   905  01EE  00BB               	movwf	I2C_Master_Write@d
   906  01EF  3000               	movlw	0
   907  01F0  00BC               	movwf	I2C_Master_Write@d+1
   908  01F1  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   909                           
   910                           ;master.c: 258:     I2C_Master_Write(1);
   911  01F6  3001               	movlw	1
   912  01F7  1283               	bcf	3,5	;RP0=0, select bank0
   913  01F8  1303               	bcf	3,6	;RP1=0, select bank0
   914  01F9  00BB               	movwf	I2C_Master_Write@d
   915  01FA  3000               	movlw	0
   916  01FB  00BC               	movwf	I2C_Master_Write@d+1
   917  01FC  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   918                           
   919                           ;master.c: 259:     I2C_Master_Write(0x20);
   920  0201  3020               	movlw	32
   921  0202  1283               	bcf	3,5	;RP0=0, select bank0
   922  0203  1303               	bcf	3,6	;RP1=0, select bank0
   923  0204  00BB               	movwf	I2C_Master_Write@d
   924  0205  3000               	movlw	0
   925  0206  00BC               	movwf	I2C_Master_Write@d+1
   926  0207  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   927                           
   928                           ;master.c: 260:     I2C_Master_Write(0x10);
   929  020C  3010               	movlw	16
   930  020D  1283               	bcf	3,5	;RP0=0, select bank0
   931  020E  1303               	bcf	3,6	;RP1=0, select bank0
   932  020F  00BB               	movwf	I2C_Master_Write@d
   933  0210  3000               	movlw	0
   934  0211  00BC               	movwf	I2C_Master_Write@d+1
   935  0212  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   936                           
   937                           ;master.c: 261:     I2C_Master_Write(0x21);
   938  0217  3021               	movlw	33
   939  0218  1283               	bcf	3,5	;RP0=0, select bank0
   940  0219  1303               	bcf	3,6	;RP1=0, select bank0
   941  021A  00BB               	movwf	I2C_Master_Write@d
   942  021B  3000               	movlw	0
   943  021C  00BC               	movwf	I2C_Master_Write@d+1
   944  021D  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
   945                           
   946                           ;master.c: 262:     I2C_Master_Stop();
   947  0222  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Stop
   948  0227                     l170:
   949  0227  0008               	return
   950  0228                     __end_of_timeout:
   951                           
   952                           	psect	text2
   953  014B                     __ptext2:	
   954 ;; *************** function _timein *****************
   955 ;; Defined at:
   956 ;;		line 269 in file "master.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    4
   977 ;; This function calls:
   978 ;;		_I2C_Master_Read
   979 ;;		_I2C_Master_Start
   980 ;;		_I2C_Master_Stop
   981 ;;		_I2C_Master_Write
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _timein
   989  014B                     _timein:
   990  014B                     l1674:	
   991                           ;incstack = 0
   992                           ; Regs used in _timein: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   993                           
   994                           
   995                           ;master.c: 270:     I2C_Master_Start();
   996  014B  120A  118A  2416  120A  118A  	fcall	_I2C_Master_Start
   997                           
   998                           ;master.c: 271:     I2C_Master_Write(0xD1);
   999  0150  30D1               	movlw	209
  1000  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0153  00BB               	movwf	I2C_Master_Write@d
  1003  0154  3000               	movlw	0
  1004  0155  00BC               	movwf	I2C_Master_Write@d+1
  1005  0156  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
  1006                           
  1007                           ;master.c: 272:     I2C_Master_Write(0);
  1008  015B  3000               	movlw	0
  1009  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1010  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1011  015E  00BB               	movwf	I2C_Master_Write@d
  1012  015F  00BC               	movwf	I2C_Master_Write@d+1
  1013  0160  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
  1014                           
  1015                           ;master.c: 274:     I2C_Master_Start();
  1016  0165  120A  118A  2416  120A  118A  	fcall	_I2C_Master_Start
  1017                           
  1018                           ;master.c: 275:     I2C_Master_Write(0xD1);
  1019  016A  30D1               	movlw	209
  1020  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1021  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1022  016D  00BB               	movwf	I2C_Master_Write@d
  1023  016E  3000               	movlw	0
  1024  016F  00BC               	movwf	I2C_Master_Write@d+1
  1025  0170  120A  118A  2403  120A  118A  	fcall	_I2C_Master_Write
  1026  0175                     l1676:
  1027                           
  1028                           ;master.c: 276:     SEC = I2C_Master_Read(1);
  1029  0175  3001               	movlw	1
  1030  0176  120A  118A  2362  120A  118A  	fcall	_I2C_Master_Read
  1031  017B  00FF               	movwf	btemp+1
  1032  017C  087F               	movf	btemp+1,w
  1033  017D  00F5               	movwf	_SEC
  1034  017E                     l1678:
  1035                           
  1036                           ;master.c: 277:     MIN = I2C_Master_Read(1);
  1037  017E  3001               	movlw	1
  1038  017F  120A  118A  2362  120A  118A  	fcall	_I2C_Master_Read
  1039  0184  00FF               	movwf	btemp+1
  1040  0185  087F               	movf	btemp+1,w
  1041  0186  00F4               	movwf	_MIN
  1042  0187                     l1680:
  1043                           
  1044                           ;master.c: 278:     H = I2C_Master_Read(1);
  1045  0187  3001               	movlw	1
  1046  0188  120A  118A  2362  120A  118A  	fcall	_I2C_Master_Read
  1047  018D  00FF               	movwf	btemp+1
  1048  018E  087F               	movf	btemp+1,w
  1049  018F  00F3               	movwf	_H
  1050  0190                     l1682:
  1051                           
  1052                           ;master.c: 279:     NADA = I2C_Master_Read(1);
  1053  0190  3001               	movlw	1
  1054  0191  120A  118A  2362  120A  118A  	fcall	_I2C_Master_Read
  1055  0196  00FF               	movwf	btemp+1
  1056  0197  087F               	movf	btemp+1,w
  1057  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1059  019A  00B8               	movwf	_NADA
  1060  019B                     l1684:
  1061                           
  1062                           ;master.c: 280:     DAY = I2C_Master_Read(1);
  1063  019B  3001               	movlw	1
  1064  019C  120A  118A  2362  120A  118A  	fcall	_I2C_Master_Read
  1065  01A1  00FF               	movwf	btemp+1
  1066  01A2  087F               	movf	btemp+1,w
  1067  01A3  00F2               	movwf	_DAY
  1068  01A4                     l1686:
  1069                           
  1070                           ;master.c: 281:     MONTH = I2C_Master_Read(1);
  1071  01A4  3001               	movlw	1
  1072  01A5  120A  118A  2362  120A  118A  	fcall	_I2C_Master_Read
  1073  01AA  00FF               	movwf	btemp+1
  1074  01AB  087F               	movf	btemp+1,w
  1075  01AC  00F1               	movwf	_MONTH
  1076  01AD                     l1688:
  1077                           
  1078                           ;master.c: 282:     YEAR = I2C_Master_Read(0);
  1079  01AD  3000               	movlw	0
  1080  01AE  120A  118A  2362  120A  118A  	fcall	_I2C_Master_Read
  1081  01B3  00FF               	movwf	btemp+1
  1082  01B4  087F               	movf	btemp+1,w
  1083  01B5  00F0               	movwf	_YEAR
  1084  01B6                     l1690:
  1085                           
  1086                           ;master.c: 283:     I2C_Master_Stop();
  1087  01B6  120A  118A  240D  120A  118A  	fcall	_I2C_Master_Stop
  1088  01BB                     l173:
  1089  01BB  0008               	return
  1090  01BC                     __end_of_timein:
  1091                           
  1092                           	psect	text3
  1093  0403                     __ptext3:	
  1094 ;; *************** function _I2C_Master_Write *****************
  1095 ;; Defined at:
  1096 ;;		line 65 in file "I2C.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  d               2    0[BANK0 ] unsigned int 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, pclath, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       2       0       0       0
  1111 ;;      Locals:         0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0
  1113 ;;      Totals:         0       2       0       0       0
  1114 ;;Total ram usage:        2 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    3
  1117 ;; This function calls:
  1118 ;;		_I2C_Master_Wait
  1119 ;; This function is called by:
  1120 ;;		_timeout
  1121 ;;		_timein
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _I2C_Master_Write
  1127  0403                     _I2C_Master_Write:
  1128  0403                     l1606:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1131                           
  1132                           
  1133                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1134  0403  120A  118A  23F6  120A  118A  	fcall	_I2C_Master_Wait
  1135  0408                     l1608:
  1136                           
  1137                           ;I2C.c: 68:     SSPBUF = d;
  1138  0408  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0409  1303               	bcf	3,6	;RP1=0, select bank0
  1140  040A  083B               	movf	I2C_Master_Write@d,w
  1141  040B  0093               	movwf	19	;volatile
  1142  040C                     l223:
  1143  040C  0008               	return
  1144  040D                     __end_of_I2C_Master_Write:
  1145                           
  1146                           	psect	text4
  1147  040D                     __ptext4:	
  1148 ;; *************** function _I2C_Master_Stop *****************
  1149 ;; Defined at:
  1150 ;;		line 55 in file "I2C.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    3
  1171 ;; This function calls:
  1172 ;;		_I2C_Master_Wait
  1173 ;; This function is called by:
  1174 ;;		_timeout
  1175 ;;		_timein
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _I2C_Master_Stop
  1181  040D                     _I2C_Master_Stop:
  1182  040D                     l1610:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1185                           
  1186                           
  1187                           ;I2C.c: 57:     I2C_Master_Wait();
  1188  040D  120A  118A  23F6  120A  118A  	fcall	_I2C_Master_Wait
  1189  0412                     l1612:
  1190                           
  1191                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1192  0412  1683               	bsf	3,5	;RP0=1, select bank1
  1193  0413  1303               	bcf	3,6	;RP1=0, select bank1
  1194  0414  1511               	bsf	17,2	;volatile
  1195  0415                     l220:
  1196  0415  0008               	return
  1197  0416                     __end_of_I2C_Master_Stop:
  1198                           
  1199                           	psect	text5
  1200  0416                     __ptext5:	
  1201 ;; *************** function _I2C_Master_Start *****************
  1202 ;; Defined at:
  1203 ;;		line 39 in file "I2C.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    3
  1224 ;; This function calls:
  1225 ;;		_I2C_Master_Wait
  1226 ;; This function is called by:
  1227 ;;		_timeout
  1228 ;;		_timein
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _I2C_Master_Start
  1234  0416                     _I2C_Master_Start:
  1235  0416                     l1602:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1238                           
  1239                           
  1240                           ;I2C.c: 41:     I2C_Master_Wait();
  1241  0416  120A  118A  23F6  120A  118A  	fcall	_I2C_Master_Wait
  1242  041B                     l1604:
  1243                           
  1244                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1245  041B  1683               	bsf	3,5	;RP0=1, select bank1
  1246  041C  1303               	bcf	3,6	;RP1=0, select bank1
  1247  041D  1411               	bsf	17,0	;volatile
  1248  041E                     l214:
  1249  041E  0008               	return
  1250  041F                     __end_of_I2C_Master_Start:
  1251                           
  1252                           	psect	text6
  1253  0362                     __ptext6:	
  1254 ;; *************** function _I2C_Master_Read *****************
  1255 ;; Defined at:
  1256 ;;		line 74 in file "I2C.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  a               1    wreg     unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  a               1    2[BANK0 ] unsigned char 
  1261 ;;  temp            2    3[BANK0 ] unsigned short 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      unsigned char 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         0       0       0       0       0
  1272 ;;      Locals:         0       3       0       0       0
  1273 ;;      Temps:          0       2       0       0       0
  1274 ;;      Totals:         0       5       0       0       0
  1275 ;;Total ram usage:        5 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    3
  1278 ;; This function calls:
  1279 ;;		_I2C_Master_Wait
  1280 ;; This function is called by:
  1281 ;;		_timein
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _I2C_Master_Read
  1287  0362                     _I2C_Master_Read:
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1291                           ;I2C_Master_Read@a stored from wreg
  1292  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1293  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1294  0364  00BD               	movwf	I2C_Master_Read@a
  1295  0365                     l1614:
  1296                           
  1297                           ;I2C.c: 74: unsigned char I2C_Master_Read(unsigned char a);I2C.c: 75: {;I2C.c: 76:     u
      +                          nsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1298  0365  120A  118A  23F6  120A  118A  	fcall	_I2C_Master_Wait
  1299  036A                     l1616:
  1300                           
  1301                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1302  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1303  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1304  036C  1591               	bsf	17,3	;volatile
  1305                           
  1306                           ;I2C.c: 79:     I2C_Master_Wait();
  1307  036D  120A  118A  23F6  120A  118A  	fcall	_I2C_Master_Wait
  1308  0372                     l1618:
  1309                           
  1310                           ;I2C.c: 80:     temp = SSPBUF;
  1311  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0374  0813               	movf	19,w	;volatile
  1314  0375  00BB               	movwf	??_I2C_Master_Read
  1315  0376  01BC               	clrf	??_I2C_Master_Read+1
  1316  0377  083B               	movf	??_I2C_Master_Read,w
  1317  0378  00BE               	movwf	I2C_Master_Read@temp
  1318  0379  083C               	movf	??_I2C_Master_Read+1,w
  1319  037A  00BF               	movwf	I2C_Master_Read@temp+1
  1320  037B                     l1620:
  1321                           
  1322                           ;I2C.c: 81:     I2C_Master_Wait();
  1323  037B  120A  118A  23F6  120A  118A  	fcall	_I2C_Master_Wait
  1324  0380                     l1622:
  1325                           
  1326                           ;I2C.c: 82:     if(a == 1){
  1327  0380  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0381  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0382  033D               	decf	I2C_Master_Read@a,w
  1330  0383  1D03               	btfss	3,2
  1331  0384  2B86               	goto	u511
  1332  0385  2B87               	goto	u510
  1333  0386                     u511:
  1334  0386  2B8B               	goto	l226
  1335  0387                     u510:
  1336  0387                     l1624:
  1337                           
  1338                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1339  0387  1683               	bsf	3,5	;RP0=1, select bank1
  1340  0388  1303               	bcf	3,6	;RP1=0, select bank1
  1341  0389  1291               	bcf	17,5	;volatile
  1342                           
  1343                           ;I2C.c: 84:     }else{
  1344  038A  2B8E               	goto	l227
  1345  038B                     l226:
  1346                           
  1347                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1348  038B  1683               	bsf	3,5	;RP0=1, select bank1
  1349  038C  1303               	bcf	3,6	;RP1=0, select bank1
  1350  038D  1691               	bsf	17,5	;volatile
  1351  038E                     l227:	
  1352                           ;I2C.c: 86:     }
  1353                           
  1354                           
  1355                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1356  038E  1611               	bsf	17,4	;volatile
  1357  038F                     l1626:
  1358                           
  1359                           ;I2C.c: 88:     return temp;
  1360  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0391  083E               	movf	I2C_Master_Read@temp,w
  1363  0392                     l228:
  1364  0392  0008               	return
  1365  0393                     __end_of_I2C_Master_Read:
  1366                           
  1367                           	psect	text7
  1368  03F6                     __ptext7:	
  1369 ;; *************** function _I2C_Master_Wait *****************
  1370 ;; Defined at:
  1371 ;;		line 32 in file "I2C.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0
  1388 ;;      Totals:         0       0       0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    2
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_I2C_Master_Start
  1396 ;;		_I2C_Master_Stop
  1397 ;;		_I2C_Master_Write
  1398 ;;		_I2C_Master_Read
  1399 ;;		_I2C_Master_RepeatedStart
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _I2C_Master_Wait
  1405  03F6                     _I2C_Master_Wait:
  1406  03F6                     l1532:	
  1407                           ;incstack = 0
  1408                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1409                           
  1410  03F6                     l208:	
  1411                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1412                           
  1413  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  1414  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  1415  03F8  1914               	btfsc	20,2	;volatile
  1416  03F9  2BFB               	goto	u411
  1417  03FA  2BFC               	goto	u410
  1418  03FB                     u411:
  1419  03FB  2BF6               	goto	l208
  1420  03FC                     u410:
  1421  03FC                     l1534:
  1422  03FC  0811               	movf	17,w	;volatile
  1423  03FD  391F               	andlw	31
  1424  03FE  1D03               	btfss	3,2
  1425  03FF  2C01               	goto	u421
  1426  0400  2C02               	goto	u420
  1427  0401                     u421:
  1428  0401  2BF6               	goto	l208
  1429  0402                     u420:
  1430  0402                     l211:
  1431  0402  0008               	return
  1432  0403                     __end_of_I2C_Master_Wait:
  1433                           
  1434                           	psect	text8
  1435  0028                     __ptext8:	
  1436 ;; *************** function _conver *****************
  1437 ;; Defined at:
  1438 ;;		line 289 in file "master.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, btemp+1
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0
  1454 ;;      Temps:          0       1       0       0       0
  1455 ;;      Totals:         0       1       0       0       0
  1456 ;;Total ram usage:        1 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    2
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _conver
  1468  0028                     _conver:
  1469  0028                     l1692:	
  1470                           ;incstack = 0
  1471                           ; Regs used in _conver: [wreg+status,2+status,0+btemp+1]
  1472                           
  1473                           
  1474                           ;master.c: 290:     SECU = (SEC & 0b00001111);
  1475  0028  0875               	movf	_SEC,w
  1476  0029  390F               	andlw	15
  1477  002A  00FF               	movwf	btemp+1
  1478  002B  087F               	movf	btemp+1,w
  1479  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1480  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1481  002E  00B7               	movwf	_SECU
  1482  002F                     l1694:
  1483                           
  1484                           ;master.c: 291:     SECD = ((SEC & 0b11110000) >> 4);
  1485  002F  0875               	movf	_SEC,w
  1486  0030  00BB               	movwf	??_conver
  1487  0031  3004               	movlw	4
  1488  0032                     u525:
  1489  0032  1003               	clrc
  1490  0033  0CBB               	rrf	??_conver,f
  1491  0034  3EFF               	addlw	-1
  1492  0035  1D03               	skipz
  1493  0036  2832               	goto	u525
  1494  0037  083B               	movf	??_conver,w
  1495  0038  390F               	andlw	15
  1496  0039  00FF               	movwf	btemp+1
  1497  003A  087F               	movf	btemp+1,w
  1498  003B  00B6               	movwf	_SECD
  1499  003C                     l1696:
  1500                           
  1501                           ;master.c: 292:     MINU = (MIN & 0b00001111);
  1502  003C  0874               	movf	_MIN,w
  1503  003D  390F               	andlw	15
  1504  003E  00FF               	movwf	btemp+1
  1505  003F  087F               	movf	btemp+1,w
  1506  0040  00B5               	movwf	_MINU
  1507                           
  1508                           ;master.c: 293:     MIND = ((MIN & 0b11110000) >> 4);
  1509  0041  0874               	movf	_MIN,w
  1510  0042  00BB               	movwf	??_conver
  1511  0043  3004               	movlw	4
  1512  0044                     u535:
  1513  0044  1003               	clrc
  1514  0045  0CBB               	rrf	??_conver,f
  1515  0046  3EFF               	addlw	-1
  1516  0047  1D03               	skipz
  1517  0048  2844               	goto	u535
  1518  0049  083B               	movf	??_conver,w
  1519  004A  390F               	andlw	15
  1520  004B  00FF               	movwf	btemp+1
  1521  004C  087F               	movf	btemp+1,w
  1522  004D  00B4               	movwf	_MIND
  1523  004E                     l1698:
  1524                           
  1525                           ;master.c: 294:     HORAU = (H & 0b00001111);
  1526  004E  0873               	movf	_H,w
  1527  004F  390F               	andlw	15
  1528  0050  00FF               	movwf	btemp+1
  1529  0051  087F               	movf	btemp+1,w
  1530  0052  00B3               	movwf	_HORAU
  1531  0053                     l1700:
  1532                           
  1533                           ;master.c: 295:     HORAD = ((H & 0b11110000) >> 4);
  1534  0053  0873               	movf	_H,w
  1535  0054  00BB               	movwf	??_conver
  1536  0055  3004               	movlw	4
  1537  0056                     u545:
  1538  0056  1003               	clrc
  1539  0057  0CBB               	rrf	??_conver,f
  1540  0058  3EFF               	addlw	-1
  1541  0059  1D03               	skipz
  1542  005A  2856               	goto	u545
  1543  005B  083B               	movf	??_conver,w
  1544  005C  390F               	andlw	15
  1545  005D  00FF               	movwf	btemp+1
  1546  005E  087F               	movf	btemp+1,w
  1547  005F  00B2               	movwf	_HORAD
  1548                           
  1549                           ;master.c: 296:     DAYU = (DAY & 0b00001111);
  1550  0060  0872               	movf	_DAY,w
  1551  0061  390F               	andlw	15
  1552  0062  00FF               	movwf	btemp+1
  1553  0063  087F               	movf	btemp+1,w
  1554  0064  00B1               	movwf	_DAYU
  1555  0065                     l1702:
  1556                           
  1557                           ;master.c: 297:     DAYD = ((DAY & 0b11110000) >> 4);
  1558  0065  0872               	movf	_DAY,w
  1559  0066  00BB               	movwf	??_conver
  1560  0067  3004               	movlw	4
  1561  0068                     u555:
  1562  0068  1003               	clrc
  1563  0069  0CBB               	rrf	??_conver,f
  1564  006A  3EFF               	addlw	-1
  1565  006B  1D03               	skipz
  1566  006C  2868               	goto	u555
  1567  006D  083B               	movf	??_conver,w
  1568  006E  390F               	andlw	15
  1569  006F  00FF               	movwf	btemp+1
  1570  0070  087F               	movf	btemp+1,w
  1571  0071  00B0               	movwf	_DAYD
  1572  0072                     l1704:
  1573                           
  1574                           ;master.c: 298:     MONTHU = (MONTH & 0b00001111);
  1575  0072  0871               	movf	_MONTH,w
  1576  0073  390F               	andlw	15
  1577  0074  00FF               	movwf	btemp+1
  1578  0075  087F               	movf	btemp+1,w
  1579  0076  00AF               	movwf	_MONTHU
  1580                           
  1581                           ;master.c: 299:     MONTHD = ((MONTH & 0b11110000) >> 4);
  1582  0077  0871               	movf	_MONTH,w
  1583  0078  00BB               	movwf	??_conver
  1584  0079  3004               	movlw	4
  1585  007A                     u565:
  1586  007A  1003               	clrc
  1587  007B  0CBB               	rrf	??_conver,f
  1588  007C  3EFF               	addlw	-1
  1589  007D  1D03               	skipz
  1590  007E  287A               	goto	u565
  1591  007F  083B               	movf	??_conver,w
  1592  0080  390F               	andlw	15
  1593  0081  00FF               	movwf	btemp+1
  1594  0082  087F               	movf	btemp+1,w
  1595  0083  00AE               	movwf	_MONTHD
  1596  0084                     l1706:
  1597                           
  1598                           ;master.c: 300:     YEARU = (YEAR & 0b00001111);
  1599  0084  0870               	movf	_YEAR,w
  1600  0085  390F               	andlw	15
  1601  0086  00FF               	movwf	btemp+1
  1602  0087  087F               	movf	btemp+1,w
  1603  0088  00AD               	movwf	_YEARU
  1604  0089                     l1708:
  1605                           
  1606                           ;master.c: 301:     YEARD = ((YEAR & 0b11110000) >> 4);
  1607  0089  0870               	movf	_YEAR,w
  1608  008A  00BB               	movwf	??_conver
  1609  008B  3004               	movlw	4
  1610  008C                     u575:
  1611  008C  1003               	clrc
  1612  008D  0CBB               	rrf	??_conver,f
  1613  008E  3EFF               	addlw	-1
  1614  008F  1D03               	skipz
  1615  0090  288C               	goto	u575
  1616  0091  083B               	movf	??_conver,w
  1617  0092  390F               	andlw	15
  1618  0093  00FF               	movwf	btemp+1
  1619  0094  087F               	movf	btemp+1,w
  1620  0095  00AC               	movwf	_YEARD
  1621  0096                     l1710:
  1622                           
  1623                           ;master.c: 304:     SU = (SECU + 0x30);
  1624  0096  0837               	movf	_SECU,w
  1625  0097  3E30               	addlw	48
  1626  0098  00FF               	movwf	btemp+1
  1627  0099  087F               	movf	btemp+1,w
  1628  009A  00AB               	movwf	_SU
  1629  009B                     l1712:
  1630                           
  1631                           ;master.c: 305:     SD = (SECD + 0x30);
  1632  009B  0836               	movf	_SECD,w
  1633  009C  3E30               	addlw	48
  1634  009D  00FF               	movwf	btemp+1
  1635  009E  087F               	movf	btemp+1,w
  1636  009F  00AA               	movwf	_SD
  1637  00A0                     l1714:
  1638                           
  1639                           ;master.c: 306:     MU = (MINU + 0x30);
  1640  00A0  0835               	movf	_MINU,w
  1641  00A1  3E30               	addlw	48
  1642  00A2  00FF               	movwf	btemp+1
  1643  00A3  087F               	movf	btemp+1,w
  1644  00A4  00A9               	movwf	_MU
  1645  00A5                     l1716:
  1646                           
  1647                           ;master.c: 307:     MD = (MIND + 0x30);
  1648  00A5  0834               	movf	_MIND,w
  1649  00A6  3E30               	addlw	48
  1650  00A7  00FF               	movwf	btemp+1
  1651  00A8  087F               	movf	btemp+1,w
  1652  00A9  00A8               	movwf	_MD
  1653  00AA                     l1718:
  1654                           
  1655                           ;master.c: 308:     HU = (HORAU + 0x30);
  1656  00AA  0833               	movf	_HORAU,w
  1657  00AB  3E30               	addlw	48
  1658  00AC  00FF               	movwf	btemp+1
  1659  00AD  087F               	movf	btemp+1,w
  1660  00AE  00A7               	movwf	_HU
  1661  00AF                     l1720:
  1662                           
  1663                           ;master.c: 309:     HD = (HORAD + 0x30);
  1664  00AF  0832               	movf	_HORAD,w
  1665  00B0  3E30               	addlw	48
  1666  00B1  00FF               	movwf	btemp+1
  1667  00B2  087F               	movf	btemp+1,w
  1668  00B3  00A6               	movwf	_HD
  1669  00B4                     l1722:
  1670                           
  1671                           ;master.c: 310:     DU = (DAYU + 0x30);
  1672  00B4  0831               	movf	_DAYU,w
  1673  00B5  3E30               	addlw	48
  1674  00B6  00FF               	movwf	btemp+1
  1675  00B7  087F               	movf	btemp+1,w
  1676  00B8  00A5               	movwf	_DU
  1677  00B9                     l1724:
  1678                           
  1679                           ;master.c: 311:     DD = (DAYD + 0x30);
  1680  00B9  0830               	movf	_DAYD,w
  1681  00BA  3E30               	addlw	48
  1682  00BB  00FF               	movwf	btemp+1
  1683  00BC  087F               	movf	btemp+1,w
  1684  00BD  00A4               	movwf	_DD
  1685  00BE                     l1726:
  1686                           
  1687                           ;master.c: 312:     MOU = (MONTHU + 0x30);
  1688  00BE  082F               	movf	_MONTHU,w
  1689  00BF  3E30               	addlw	48
  1690  00C0  00FF               	movwf	btemp+1
  1691  00C1  087F               	movf	btemp+1,w
  1692  00C2  00A3               	movwf	_MOU
  1693  00C3                     l1728:
  1694                           
  1695                           ;master.c: 313:     MOD = (MONTHD + 0x30);
  1696  00C3  082E               	movf	_MONTHD,w
  1697  00C4  3E30               	addlw	48
  1698  00C5  00FF               	movwf	btemp+1
  1699  00C6  087F               	movf	btemp+1,w
  1700  00C7  00A2               	movwf	_MOD
  1701  00C8                     l1730:
  1702                           
  1703                           ;master.c: 314:     YU = (YEARU + 0x30);
  1704  00C8  082D               	movf	_YEARU,w
  1705  00C9  3E30               	addlw	48
  1706  00CA  00FF               	movwf	btemp+1
  1707  00CB  087F               	movf	btemp+1,w
  1708  00CC  00A1               	movwf	_YU
  1709  00CD                     l1732:
  1710                           
  1711                           ;master.c: 315:     YD = (YEARD + 0x30);
  1712  00CD  082C               	movf	_YEARD,w
  1713  00CE  3E30               	addlw	48
  1714  00CF  00FF               	movwf	btemp+1
  1715  00D0  087F               	movf	btemp+1,w
  1716  00D1  00A0               	movwf	_YD
  1717  00D2                     l176:
  1718  00D2  0008               	return
  1719  00D3                     __end_of_conver:
  1720                           
  1721                           	psect	text9
  1722  02EE                     __ptext9:	
  1723 ;; *************** function _Setup *****************
  1724 ;; Defined at:
  1725 ;;		line 146 in file "master.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         0       0       0       0       0
  1743 ;;Total ram usage:        0 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    4
  1746 ;; This function calls:
  1747 ;;		_I2C_Master_Init
  1748 ;;		_initOsc
  1749 ;;		_usart
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function _Setup
  1757  02EE                     _Setup:
  1758  02EE                     l1630:	
  1759                           ;incstack = 0
  1760                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1761                           
  1762                           
  1763                           ;master.c: 147:     initOsc(6);
  1764  02EE  3006               	movlw	6
  1765  02EF  120A  118A  2290  120A  118A  	fcall	_initOsc
  1766  02F4                     l1632:
  1767                           
  1768                           ;master.c: 148:     usart();
  1769  02F4  120A  118A  23E1  120A  118A  	fcall	_usart
  1770  02F9                     l1634:
  1771                           
  1772                           ;master.c: 149:     TRISA = 0;
  1773  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  1774  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  1775  02FB  0185               	clrf	5	;volatile
  1776  02FC                     l1636:
  1777                           
  1778                           ;master.c: 150:     TRISB = 0;
  1779  02FC  0186               	clrf	6	;volatile
  1780  02FD                     l1638:
  1781                           
  1782                           ;master.c: 151:     TRISD = 0;
  1783  02FD  0188               	clrf	8	;volatile
  1784  02FE                     l1640:
  1785                           
  1786                           ;master.c: 152:     TRISE = 0;
  1787  02FE  0189               	clrf	9	;volatile
  1788  02FF                     l1642:
  1789                           
  1790                           ;master.c: 153:     ANSEL = 0;
  1791  02FF  1683               	bsf	3,5	;RP0=1, select bank3
  1792  0300  1703               	bsf	3,6	;RP1=1, select bank3
  1793  0301  0188               	clrf	8	;volatile
  1794  0302                     l1644:
  1795                           
  1796                           ;master.c: 154:     ANSELH = 0;
  1797  0302  0189               	clrf	9	;volatile
  1798  0303                     l1646:
  1799                           
  1800                           ;master.c: 155:     PORTA = 0;
  1801  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0305  0185               	clrf	5	;volatile
  1804  0306                     l1648:
  1805                           
  1806                           ;master.c: 156:     PORTB = 0;
  1807  0306  0186               	clrf	6	;volatile
  1808  0307                     l1650:
  1809                           
  1810                           ;master.c: 157:     PORTC = 0;
  1811  0307  0187               	clrf	7	;volatile
  1812  0308                     l1652:
  1813                           
  1814                           ;master.c: 158:     PORTD = 0;
  1815  0308  0188               	clrf	8	;volatile
  1816  0309                     l1654:
  1817                           
  1818                           ;master.c: 159:     PORTE = 0;
  1819  0309  0189               	clrf	9	;volatile
  1820  030A                     l1656:
  1821                           
  1822                           ;master.c: 161:     OPTION_REG = 0b10000111;
  1823  030A  3087               	movlw	135
  1824  030B  1683               	bsf	3,5	;RP0=1, select bank1
  1825  030C  1303               	bcf	3,6	;RP1=0, select bank1
  1826  030D  0081               	movwf	1	;volatile
  1827  030E                     l1658:
  1828                           
  1829                           ;master.c: 162:     INTCONbits.GIE = 1;
  1830  030E  178B               	bsf	11,7	;volatile
  1831  030F                     l1660:
  1832                           
  1833                           ;master.c: 163:     INTCONbits.PEIE = 1;
  1834  030F  170B               	bsf	11,6	;volatile
  1835  0310                     l1662:
  1836                           
  1837                           ;master.c: 164:     PIR1bits.TXIF = 0;
  1838  0310  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0311  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0312  120C               	bcf	12,4	;volatile
  1841  0313                     l1664:
  1842                           
  1843                           ;master.c: 165:     PIE1bits.TXIE = 1;
  1844  0313  1683               	bsf	3,5	;RP0=1, select bank1
  1845  0314  1303               	bcf	3,6	;RP1=0, select bank1
  1846  0315  160C               	bsf	12,4	;volatile
  1847  0316                     l1666:
  1848                           
  1849                           ;master.c: 166:     INTCONbits.T0IF = 0;
  1850  0316  110B               	bcf	11,2	;volatile
  1851  0317                     l1668:
  1852                           
  1853                           ;master.c: 167:     INTCONbits.T0IE = 1;
  1854  0317  168B               	bsf	11,5	;volatile
  1855  0318                     l1670:
  1856                           
  1857                           ;master.c: 168:     I2C_Master_Init(100000);
  1858  0318  3000               	movlw	0
  1859  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1860  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1861  031B  00CC               	movwf	I2C_Master_Init@c+3
  1862  031C  3001               	movlw	1
  1863  031D  00CB               	movwf	I2C_Master_Init@c+2
  1864  031E  3086               	movlw	134
  1865  031F  00CA               	movwf	I2C_Master_Init@c+1
  1866  0320  30A0               	movlw	160
  1867  0321  00C9               	movwf	I2C_Master_Init@c
  1868  0322  120A  118A  2328  120A  118A  	fcall	_I2C_Master_Init
  1869  0327                     l143:
  1870  0327  0008               	return
  1871  0328                     __end_of_Setup:
  1872                           
  1873                           	psect	text10
  1874  03E1                     __ptext10:	
  1875 ;; *************** function _usart *****************
  1876 ;; Defined at:
  1877 ;;		line 5 in file "usart.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    2
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_Setup
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function _usart
  1907  03E1                     _usart:
  1908  03E1                     l1574:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _usart: [wreg+status,2]
  1911                           
  1912                           
  1913                           ;usart.c: 8:     TXSTAbits.TX9 = 0;
  1914  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  1915  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  1916  03E3  1318               	bcf	24,6	;volatile
  1917                           
  1918                           ;usart.c: 9:     TXSTAbits.SYNC = 0;
  1919  03E4  1218               	bcf	24,4	;volatile
  1920                           
  1921                           ;usart.c: 10:     TXSTAbits.BRGH = 1;
  1922  03E5  1518               	bsf	24,2	;volatile
  1923                           
  1924                           ;usart.c: 11:     BAUDCTLbits.BRG16 = 0;
  1925  03E6  1683               	bsf	3,5	;RP0=1, select bank3
  1926  03E7  1703               	bsf	3,6	;RP1=1, select bank3
  1927  03E8  1187               	bcf	7,3	;volatile
  1928  03E9                     l1576:
  1929                           
  1930                           ;usart.c: 12:     SPBRGH = 0;
  1931  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1932  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1933  03EB  019A               	clrf	26	;volatile
  1934  03EC                     l1578:
  1935                           
  1936                           ;usart.c: 13:     SPBRG = 25;
  1937  03EC  3019               	movlw	25
  1938  03ED  0099               	movwf	25	;volatile
  1939  03EE                     l1580:
  1940                           
  1941                           ;usart.c: 14:     PIE1bits.TXIE = 1;
  1942  03EE  160C               	bsf	12,4	;volatile
  1943  03EF                     l1582:
  1944                           
  1945                           ;usart.c: 15:     TXSTAbits.TXEN = 1;
  1946  03EF  1698               	bsf	24,5	;volatile
  1947  03F0                     l1584:
  1948                           
  1949                           ;usart.c: 18:     RCSTAbits.SPEN = 1;
  1950  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1951  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1952  03F2  1798               	bsf	24,7	;volatile
  1953  03F3                     l1586:
  1954                           
  1955                           ;usart.c: 19:     RCSTAbits. RX9 = 0;
  1956  03F3  1318               	bcf	24,6	;volatile
  1957  03F4                     l1588:
  1958                           
  1959                           ;usart.c: 20:     RCSTAbits.CREN = 1;
  1960  03F4  1618               	bsf	24,4	;volatile
  1961  03F5                     l262:
  1962  03F5  0008               	return
  1963  03F6                     __end_of_usart:
  1964                           
  1965                           	psect	text11
  1966  0290                     __ptext11:	
  1967 ;; *************** function _initOsc *****************
  1968 ;; Defined at:
  1969 ;;		line 7 in file "OSC.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  IRCF            1    wreg     unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  IRCF            1    2[BANK0 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         0       0       0       0       0
  1984 ;;      Locals:         0       1       0       0       0
  1985 ;;      Temps:          0       2       0       0       0
  1986 ;;      Totals:         0       3       0       0       0
  1987 ;;Total ram usage:        3 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    2
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_Setup
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _initOsc
  1999  0290                     _initOsc:
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2003                           ;initOsc@IRCF stored from wreg
  2004  0290  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0291  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0292  00BD               	movwf	initOsc@IRCF
  2007  0293                     l1562:
  2008                           
  2009                           ;OSC.c: 9:     switch (IRCF){
  2010  0293  2ACA               	goto	l1566
  2011  0294                     l237:	
  2012                           ;OSC.c: 11:         case 0:
  2013                           
  2014                           
  2015                           ;OSC.c: 12:             OSCCONbits.IRCF2 = 0;
  2016  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2018  0296  130F               	bcf	15,6	;volatile
  2019                           
  2020                           ;OSC.c: 13:             OSCCONbits.IRCF1 = 0;
  2021  0297  128F               	bcf	15,5	;volatile
  2022                           
  2023                           ;OSC.c: 14:             OSCCONbits.IRCF0 = 0;
  2024  0298  120F               	bcf	15,4	;volatile
  2025                           
  2026                           ;OSC.c: 16:             break;
  2027  0299  2AEC               	goto	l238
  2028  029A                     l239:	
  2029                           ;OSC.c: 18:         case 1:
  2030                           
  2031                           
  2032                           ;OSC.c: 19:             OSCCONbits.IRCF2 = 0;
  2033  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2034  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2035  029C  130F               	bcf	15,6	;volatile
  2036                           
  2037                           ;OSC.c: 20:             OSCCONbits.IRCF1 = 0;
  2038  029D  128F               	bcf	15,5	;volatile
  2039                           
  2040                           ;OSC.c: 21:             OSCCONbits.IRCF0 = 1;
  2041  029E  160F               	bsf	15,4	;volatile
  2042                           
  2043                           ;OSC.c: 22:             break;
  2044  029F  2AEC               	goto	l238
  2045  02A0                     l240:	
  2046                           ;OSC.c: 24:         case 2:
  2047                           
  2048                           
  2049                           ;OSC.c: 25:             OSCCONbits.IRCF2 = 0;
  2050  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2051  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2052  02A2  130F               	bcf	15,6	;volatile
  2053                           
  2054                           ;OSC.c: 26:             OSCCONbits.IRCF1 = 1;
  2055  02A3  168F               	bsf	15,5	;volatile
  2056                           
  2057                           ;OSC.c: 27:             OSCCONbits.IRCF0 = 0;
  2058  02A4  120F               	bcf	15,4	;volatile
  2059                           
  2060                           ;OSC.c: 28:             break;
  2061  02A5  2AEC               	goto	l238
  2062  02A6                     l241:	
  2063                           ;OSC.c: 30:         case 3:
  2064                           
  2065                           
  2066                           ;OSC.c: 31:             OSCCONbits.IRCF2 = 0;
  2067  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2068  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  2069  02A8  130F               	bcf	15,6	;volatile
  2070                           
  2071                           ;OSC.c: 32:             OSCCONbits.IRCF1 = 1;
  2072  02A9  168F               	bsf	15,5	;volatile
  2073                           
  2074                           ;OSC.c: 33:             OSCCONbits.IRCF0 = 1;
  2075  02AA  160F               	bsf	15,4	;volatile
  2076                           
  2077                           ;OSC.c: 34:             break;
  2078  02AB  2AEC               	goto	l238
  2079  02AC                     l242:	
  2080                           ;OSC.c: 36:         case 4:
  2081                           
  2082                           
  2083                           ;OSC.c: 37:             OSCCONbits.IRCF2 = 1;
  2084  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2085  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2086  02AE  170F               	bsf	15,6	;volatile
  2087                           
  2088                           ;OSC.c: 38:             OSCCONbits.IRCF1 = 0;
  2089  02AF  128F               	bcf	15,5	;volatile
  2090                           
  2091                           ;OSC.c: 39:             OSCCONbits.IRCF0 = 0;
  2092  02B0  120F               	bcf	15,4	;volatile
  2093                           
  2094                           ;OSC.c: 40:             break;
  2095  02B1  2AEC               	goto	l238
  2096  02B2                     l243:	
  2097                           ;OSC.c: 42:         case 5:
  2098                           
  2099                           
  2100                           ;OSC.c: 43:             OSCCONbits.IRCF2 = 1;
  2101  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2102  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  2103  02B4  170F               	bsf	15,6	;volatile
  2104                           
  2105                           ;OSC.c: 44:             OSCCONbits.IRCF1 = 0;
  2106  02B5  128F               	bcf	15,5	;volatile
  2107                           
  2108                           ;OSC.c: 45:             OSCCONbits.IRCF0 = 1;
  2109  02B6  160F               	bsf	15,4	;volatile
  2110                           
  2111                           ;OSC.c: 46:             break;
  2112  02B7  2AEC               	goto	l238
  2113  02B8                     l244:	
  2114                           ;OSC.c: 49:         case 6:
  2115                           
  2116                           
  2117                           ;OSC.c: 50:             OSCCONbits.IRCF2 = 1;
  2118  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2119  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  2120  02BA  170F               	bsf	15,6	;volatile
  2121                           
  2122                           ;OSC.c: 51:             OSCCONbits.IRCF1 = 1;
  2123  02BB  168F               	bsf	15,5	;volatile
  2124                           
  2125                           ;OSC.c: 52:             OSCCONbits.IRCF0 = 0;
  2126  02BC  120F               	bcf	15,4	;volatile
  2127                           
  2128                           ;OSC.c: 53:             break;
  2129  02BD  2AEC               	goto	l238
  2130  02BE                     l245:	
  2131                           ;OSC.c: 55:         case 7:
  2132                           
  2133                           
  2134                           ;OSC.c: 56:             OSCCONbits.IRCF2 = 1;
  2135  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2136  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2137  02C0  170F               	bsf	15,6	;volatile
  2138                           
  2139                           ;OSC.c: 57:             OSCCONbits.IRCF1 = 1;
  2140  02C1  168F               	bsf	15,5	;volatile
  2141                           
  2142                           ;OSC.c: 58:             OSCCONbits.IRCF0 = 1;
  2143  02C2  160F               	bsf	15,4	;volatile
  2144                           
  2145                           ;OSC.c: 59:             break;
  2146  02C3  2AEC               	goto	l238
  2147  02C4                     l246:	
  2148                           ;OSC.c: 64:         default:
  2149                           
  2150                           
  2151                           ;OSC.c: 65:             OSCCONbits.IRCF2 = 1;
  2152  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2153  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2154  02C6  170F               	bsf	15,6	;volatile
  2155                           
  2156                           ;OSC.c: 66:             OSCCONbits.IRCF1 = 1;
  2157  02C7  168F               	bsf	15,5	;volatile
  2158                           
  2159                           ;OSC.c: 67:             OSCCONbits.IRCF0 = 0;
  2160  02C8  120F               	bcf	15,4	;volatile
  2161                           
  2162                           ;OSC.c: 68:             break;
  2163  02C9  2AEC               	goto	l238
  2164  02CA                     l1566:
  2165  02CA  083D               	movf	initOsc@IRCF,w
  2166  02CB  00BB               	movwf	??_initOsc
  2167  02CC  01BC               	clrf	??_initOsc+1
  2168                           
  2169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2170                           ; Switch size 1, requested type "simple"
  2171                           ; Number of cases is 1, Range of values is 0 to 0
  2172                           ; switch strategies available:
  2173                           ; Name         Instructions Cycles
  2174                           ; simple_byte            4     3 (average)
  2175                           ; direct_byte           11     8 (fixed)
  2176                           ; jumptable            260     6 (fixed)
  2177                           ;	Chosen strategy is simple_byte
  2178  02CD  083C               	movf	??_initOsc+1,w
  2179  02CE  3A00               	xorlw	0	; case 0
  2180  02CF  1903               	skipnz
  2181  02D0  2AD2               	goto	l1802
  2182  02D1  2AC4               	goto	l246
  2183  02D2                     l1802:
  2184                           
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 8, Range of values is 0 to 7
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte           25    13 (average)
  2190                           ; direct_byte           32     8 (fixed)
  2191                           ; jumptable            260     6 (fixed)
  2192                           ;	Chosen strategy is simple_byte
  2193  02D2  083B               	movf	??_initOsc,w
  2194  02D3  3A00               	xorlw	0	; case 0
  2195  02D4  1903               	skipnz
  2196  02D5  2A94               	goto	l237
  2197  02D6  3A01               	xorlw	1	; case 1
  2198  02D7  1903               	skipnz
  2199  02D8  2A9A               	goto	l239
  2200  02D9  3A03               	xorlw	3	; case 2
  2201  02DA  1903               	skipnz
  2202  02DB  2AA0               	goto	l240
  2203  02DC  3A01               	xorlw	1	; case 3
  2204  02DD  1903               	skipnz
  2205  02DE  2AA6               	goto	l241
  2206  02DF  3A07               	xorlw	7	; case 4
  2207  02E0  1903               	skipnz
  2208  02E1  2AAC               	goto	l242
  2209  02E2  3A01               	xorlw	1	; case 5
  2210  02E3  1903               	skipnz
  2211  02E4  2AB2               	goto	l243
  2212  02E5  3A03               	xorlw	3	; case 6
  2213  02E6  1903               	skipnz
  2214  02E7  2AB8               	goto	l244
  2215  02E8  3A01               	xorlw	1	; case 7
  2216  02E9  1903               	skipnz
  2217  02EA  2ABE               	goto	l245
  2218  02EB  2AC4               	goto	l246
  2219  02EC                     l238:
  2220                           
  2221                           ;OSC.c: 72:     OSCCONbits.SCS = 1;
  2222  02EC  140F               	bsf	15,0	;volatile
  2223  02ED                     l247:
  2224  02ED  0008               	return
  2225  02EE                     __end_of_initOsc:
  2226                           
  2227                           	psect	text12
  2228  0328                     __ptext12:	
  2229 ;; *************** function _I2C_Master_Init *****************
  2230 ;; Defined at:
  2231 ;;		line 16 in file "I2C.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;  c               4   14[BANK0 ] const unsigned long 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2245 ;;      Params:         0       4       0       0       0
  2246 ;;      Locals:         0       0       0       0       0
  2247 ;;      Temps:          0       4       0       0       0
  2248 ;;      Totals:         0       8       0       0       0
  2249 ;;Total ram usage:        8 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    3
  2252 ;; This function calls:
  2253 ;;		___lldiv
  2254 ;; This function is called by:
  2255 ;;		_Setup
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function _I2C_Master_Init
  2261  0328                     _I2C_Master_Init:
  2262  0328                     l1590:	
  2263                           ;incstack = 0
  2264                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2265                           
  2266                           
  2267                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2268  0328  3028               	movlw	40
  2269  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2270  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2271  032B  0094               	movwf	20	;volatile
  2272  032C                     l1592:
  2273                           
  2274                           ;I2C.c: 19:     SSPCON2 = 0;
  2275  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2276  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2277  032E  0191               	clrf	17	;volatile
  2278  032F                     l1594:
  2279                           
  2280                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  2281  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0331  0849               	movf	I2C_Master_Init@c,w
  2284  0332  00CD               	movwf	??_I2C_Master_Init
  2285  0333  084A               	movf	I2C_Master_Init@c+1,w
  2286  0334  00CE               	movwf	??_I2C_Master_Init+1
  2287  0335  084B               	movf	I2C_Master_Init@c+2,w
  2288  0336  00CF               	movwf	??_I2C_Master_Init+2
  2289  0337  084C               	movf	I2C_Master_Init@c+3,w
  2290  0338  00D0               	movwf	??_I2C_Master_Init+3
  2291  0339  3002               	movlw	2
  2292  033A                     u505:
  2293  033A  1003               	clrc
  2294  033B  0DCD               	rlf	??_I2C_Master_Init,f
  2295  033C  0DCE               	rlf	??_I2C_Master_Init+1,f
  2296  033D  0DCF               	rlf	??_I2C_Master_Init+2,f
  2297  033E  0DD0               	rlf	??_I2C_Master_Init+3,f
  2298  033F                     u500:
  2299  033F  3EFF               	addlw	-1
  2300  0340  1D03               	skipz
  2301  0341  2B3A               	goto	u505
  2302  0342  0850               	movf	??_I2C_Master_Init+3,w
  2303  0343  00BE               	movwf	___lldiv@divisor+3
  2304  0344  084F               	movf	??_I2C_Master_Init+2,w
  2305  0345  00BD               	movwf	___lldiv@divisor+2
  2306  0346  084E               	movf	??_I2C_Master_Init+1,w
  2307  0347  00BC               	movwf	___lldiv@divisor+1
  2308  0348  084D               	movf	??_I2C_Master_Init,w
  2309  0349  00BB               	movwf	___lldiv@divisor
  2310  034A  3000               	movlw	0
  2311  034B  00C2               	movwf	___lldiv@dividend+3
  2312  034C  303D               	movlw	61
  2313  034D  00C1               	movwf	___lldiv@dividend+2
  2314  034E  3009               	movlw	9
  2315  034F  00C0               	movwf	___lldiv@dividend+1
  2316  0350  3000               	movlw	0
  2317  0351  00BF               	movwf	___lldiv@dividend
  2318  0352  120A  118A  2228  120A  118A  	fcall	___lldiv
  2319  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0359  083B               	movf	?___lldiv,w
  2322  035A  3EFF               	addlw	255
  2323  035B  1683               	bsf	3,5	;RP0=1, select bank1
  2324  035C  1303               	bcf	3,6	;RP1=0, select bank1
  2325  035D  0093               	movwf	19	;volatile
  2326  035E                     l1596:
  2327                           
  2328                           ;I2C.c: 21:     SSPSTAT = 0;
  2329  035E  0194               	clrf	20	;volatile
  2330  035F                     l1598:
  2331                           
  2332                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2333  035F  1587               	bsf	7,3	;volatile
  2334  0360                     l1600:
  2335                           
  2336                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2337  0360  1607               	bsf	7,4	;volatile
  2338  0361                     l205:
  2339  0361  0008               	return
  2340  0362                     __end_of_I2C_Master_Init:
  2341                           
  2342                           	psect	text13
  2343  0228                     __ptext13:	
  2344 ;; *************** function ___lldiv *****************
  2345 ;; Defined at:
  2346 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  divisor         4    0[BANK0 ] unsigned long 
  2349 ;;  dividend        4    4[BANK0 ] unsigned long 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  quotient        4    9[BANK0 ] unsigned long 
  2352 ;;  counter         1   13[BANK0 ] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  4    0[BANK0 ] unsigned long 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, btemp+1
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       8       0       0       0
  2363 ;;      Locals:         0       5       0       0       0
  2364 ;;      Temps:          0       1       0       0       0
  2365 ;;      Totals:         0      14       0       0       0
  2366 ;;Total ram usage:       14 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_I2C_Master_Init
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function ___lldiv
  2378  0228                     ___lldiv:
  2379  0228                     l1536:	
  2380                           ;incstack = 0
  2381                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2382                           
  2383  0228  3000               	movlw	0
  2384  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2385  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2386  022B  00C7               	movwf	___lldiv@quotient+3
  2387  022C  3000               	movlw	0
  2388  022D  00C6               	movwf	___lldiv@quotient+2
  2389  022E  3000               	movlw	0
  2390  022F  00C5               	movwf	___lldiv@quotient+1
  2391  0230  3000               	movlw	0
  2392  0231  00C4               	movwf	___lldiv@quotient
  2393  0232  083E               	movf	___lldiv@divisor+3,w
  2394  0233  043D               	iorwf	___lldiv@divisor+2,w
  2395  0234  043C               	iorwf	___lldiv@divisor+1,w
  2396  0235  043B               	iorwf	___lldiv@divisor,w
  2397  0236  1903               	skipnz
  2398  0237  2A39               	goto	u431
  2399  0238  2A3A               	goto	u430
  2400  0239                     u431:
  2401  0239  2A87               	goto	l1558
  2402  023A                     u430:
  2403  023A                     l1538:
  2404  023A  01C8               	clrf	___lldiv@counter
  2405  023B  0AC8               	incf	___lldiv@counter,f
  2406  023C  2A4A               	goto	l1544
  2407  023D                     l1540:
  2408  023D  3001               	movlw	1
  2409  023E  00C3               	movwf	??___lldiv
  2410  023F                     u445:
  2411  023F  1003               	clrc
  2412  0240  0DBB               	rlf	___lldiv@divisor,f
  2413  0241  0DBC               	rlf	___lldiv@divisor+1,f
  2414  0242  0DBD               	rlf	___lldiv@divisor+2,f
  2415  0243  0DBE               	rlf	___lldiv@divisor+3,f
  2416  0244  0BC3               	decfsz	??___lldiv,f
  2417  0245  2A3F               	goto	u445
  2418  0246                     l1542:
  2419  0246  3001               	movlw	1
  2420  0247  00FF               	movwf	btemp+1
  2421  0248  087F               	movf	btemp+1,w
  2422  0249  07C8               	addwf	___lldiv@counter,f
  2423  024A                     l1544:
  2424  024A  1FBE               	btfss	___lldiv@divisor+3,7
  2425  024B  2A4D               	goto	u451
  2426  024C  2A4E               	goto	u450
  2427  024D                     u451:
  2428  024D  2A3D               	goto	l1540
  2429  024E                     u450:
  2430  024E                     l1546:
  2431  024E  3001               	movlw	1
  2432  024F  00C3               	movwf	??___lldiv
  2433  0250                     u465:
  2434  0250  1003               	clrc
  2435  0251  0DC4               	rlf	___lldiv@quotient,f
  2436  0252  0DC5               	rlf	___lldiv@quotient+1,f
  2437  0253  0DC6               	rlf	___lldiv@quotient+2,f
  2438  0254  0DC7               	rlf	___lldiv@quotient+3,f
  2439  0255  0BC3               	decfsz	??___lldiv,f
  2440  0256  2A50               	goto	u465
  2441  0257                     l1548:
  2442  0257  083E               	movf	___lldiv@divisor+3,w
  2443  0258  0242               	subwf	___lldiv@dividend+3,w
  2444  0259  1D03               	skipz
  2445  025A  2A65               	goto	u475
  2446  025B  083D               	movf	___lldiv@divisor+2,w
  2447  025C  0241               	subwf	___lldiv@dividend+2,w
  2448  025D  1D03               	skipz
  2449  025E  2A65               	goto	u475
  2450  025F  083C               	movf	___lldiv@divisor+1,w
  2451  0260  0240               	subwf	___lldiv@dividend+1,w
  2452  0261  1D03               	skipz
  2453  0262  2A65               	goto	u475
  2454  0263  083B               	movf	___lldiv@divisor,w
  2455  0264  023F               	subwf	___lldiv@dividend,w
  2456  0265                     u475:
  2457  0265  1C03               	skipc
  2458  0266  2A68               	goto	u471
  2459  0267  2A69               	goto	u470
  2460  0268                     u471:
  2461  0268  2A78               	goto	l1554
  2462  0269                     u470:
  2463  0269                     l1550:
  2464  0269  083B               	movf	___lldiv@divisor,w
  2465  026A  02BF               	subwf	___lldiv@dividend,f
  2466  026B  083C               	movf	___lldiv@divisor+1,w
  2467  026C  1C03               	skipc
  2468  026D  0F3C               	incfsz	___lldiv@divisor+1,w
  2469  026E  02C0               	subwf	___lldiv@dividend+1,f
  2470  026F  083D               	movf	___lldiv@divisor+2,w
  2471  0270  1C03               	skipc
  2472  0271  0F3D               	incfsz	___lldiv@divisor+2,w
  2473  0272  02C1               	subwf	___lldiv@dividend+2,f
  2474  0273  083E               	movf	___lldiv@divisor+3,w
  2475  0274  1C03               	skipc
  2476  0275  0F3E               	incfsz	___lldiv@divisor+3,w
  2477  0276  02C2               	subwf	___lldiv@dividend+3,f
  2478  0277                     l1552:
  2479  0277  1444               	bsf	___lldiv@quotient,0
  2480  0278                     l1554:
  2481  0278  3001               	movlw	1
  2482  0279                     u485:
  2483  0279  1003               	clrc
  2484  027A  0CBE               	rrf	___lldiv@divisor+3,f
  2485  027B  0CBD               	rrf	___lldiv@divisor+2,f
  2486  027C  0CBC               	rrf	___lldiv@divisor+1,f
  2487  027D  0CBB               	rrf	___lldiv@divisor,f
  2488  027E  3EFF               	addlw	-1
  2489  027F  1D03               	skipz
  2490  0280  2A79               	goto	u485
  2491  0281                     l1556:
  2492  0281  3001               	movlw	1
  2493  0282  02C8               	subwf	___lldiv@counter,f
  2494  0283  1D03               	btfss	3,2
  2495  0284  2A86               	goto	u491
  2496  0285  2A87               	goto	u490
  2497  0286                     u491:
  2498  0286  2A4E               	goto	l1546
  2499  0287                     u490:
  2500  0287                     l1558:
  2501  0287  0847               	movf	___lldiv@quotient+3,w
  2502  0288  00BE               	movwf	?___lldiv+3
  2503  0289  0846               	movf	___lldiv@quotient+2,w
  2504  028A  00BD               	movwf	?___lldiv+2
  2505  028B  0845               	movf	___lldiv@quotient+1,w
  2506  028C  00BC               	movwf	?___lldiv+1
  2507  028D  0844               	movf	___lldiv@quotient,w
  2508  028E  00BB               	movwf	?___lldiv
  2509  028F                     l384:
  2510  028F  0008               	return
  2511  0290                     __end_of___lldiv:
  2512                           
  2513                           	psect	text14
  2514  0393                     __ptext14:	
  2515 ;; *************** function _ISR *****************
  2516 ;; Defined at:
  2517 ;;		line 90 in file "master.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0
  2533 ;;      Temps:          4       0       0       0       0
  2534 ;;      Totals:         4       0       0       0       0
  2535 ;;Total ram usage:        4 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    1
  2538 ;; This function calls:
  2539 ;;		_mandar
  2540 ;; This function is called by:
  2541 ;;		Interrupt level 1
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _ISR
  2547  0393                     _ISR:
  2548  0393                     i1l1446:
  2549  0393  1D0B               	btfss	11,2	;volatile
  2550  0394  2B96               	goto	u38_21
  2551  0395  2B97               	goto	u38_20
  2552  0396                     u38_21:
  2553  0396  2B9E               	goto	i1l1454
  2554  0397                     u38_20:
  2555  0397                     i1l1448:
  2556  0397  30EC               	movlw	236
  2557  0398  0081               	movwf	1	;volatile
  2558  0399                     i1l1450:
  2559  0399  3001               	movlw	1
  2560  039A  00FF               	movwf	btemp+1
  2561  039B  087F               	movf	btemp+1,w
  2562  039C  07BA               	addwf	_CONT,f
  2563  039D                     i1l1452:
  2564  039D  110B               	bcf	11,2	;volatile
  2565  039E                     i1l1454:
  2566  039E  1E0C               	btfss	12,4	;volatile
  2567  039F  2BA1               	goto	u39_21
  2568  03A0  2BA2               	goto	u39_20
  2569  03A1                     u39_21:
  2570  03A1  2BB1               	goto	i1l131
  2571  03A2                     u39_20:
  2572  03A2                     i1l1456:
  2573  03A2  120A  118A  20D3  120A  118A  	fcall	_mandar
  2574  03A7                     i1l1458:
  2575  03A7  3001               	movlw	1
  2576  03A8  00FF               	movwf	btemp+1
  2577  03A9  087F               	movf	btemp+1,w
  2578  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  2579  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  2580  03AC  07B9               	addwf	_SEND,f
  2581  03AD                     i1l1460:
  2582  03AD  120C               	bcf	12,4	;volatile
  2583  03AE                     i1l1462:
  2584  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2585  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2586  03B0  120C               	bcf	12,4	;volatile
  2587  03B1                     i1l131:
  2588  03B1  087B               	movf	??_ISR+3,w
  2589  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2590  03B3  00FF               	movwf	btemp+1
  2591  03B4  087A               	movf	??_ISR+2,w
  2592  03B5  008A               	movwf	10
  2593  03B6  0879               	movf	??_ISR+1,w
  2594  03B7  0084               	movwf	4
  2595  03B8  0E78               	swapf	??_ISR^(0+4294967168),w
  2596  03B9  0083               	movwf	3
  2597  03BA  0EFE               	swapf	btemp,f
  2598  03BB  0E7E               	swapf	btemp,w
  2599  03BC  0009               	retfie
  2600  03BD                     __end_of_ISR:
  2601                           
  2602                           	psect	intentry
  2603  0004                     __pintentry:	
  2604                           ;incstack = 0
  2605                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2606                           
  2607  0004                     interrupt_function:
  2608  007E                     saved_w	set	btemp
  2609  0004  00FE               	movwf	btemp
  2610  0005  0E03               	swapf	3,w
  2611  0006  00F8               	movwf	??_ISR
  2612  0007  0804               	movf	4,w
  2613  0008  00F9               	movwf	??_ISR+1
  2614  0009  080A               	movf	10,w
  2615  000A  00FA               	movwf	??_ISR+2
  2616  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2617  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2618  000D  087F               	movf	btemp+1,w
  2619  000E  00FB               	movwf	??_ISR+3
  2620  000F  120A  118A  2B93   	ljmp	_ISR
  2621                           
  2622                           	psect	text15
  2623  00D3                     __ptext15:	
  2624 ;; *************** function _mandar *****************
  2625 ;; Defined at:
  2626 ;;		line 177 in file "master.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2640 ;;      Params:         0       0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0
  2642 ;;      Temps:          2       0       0       0       0
  2643 ;;      Totals:         2       0       0       0       0
  2644 ;;Total ram usage:        2 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; This function calls:
  2647 ;;		Nothing
  2648 ;; This function is called by:
  2649 ;;		_ISR
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _mandar
  2655  00D3                     _mandar:
  2656  00D3                     i1l1292:	
  2657                           ;incstack = 0
  2658                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  2659                           
  2660                           
  2661                           ;master.c: 178:     switch (SEND) {
  2662  00D3  2905               	goto	i1l1336
  2663  00D4                     i1l1294:
  2664                           
  2665                           ;master.c: 180:             TXREG = 0x20;
  2666  00D4  3020               	movlw	32
  2667  00D5  0099               	movwf	25	;volatile
  2668                           
  2669                           ;master.c: 181:             break;
  2670  00D6  294A               	goto	i1l167
  2671  00D7                     i1l1296:
  2672                           
  2673                           ;master.c: 183:             TXREG = SU;
  2674  00D7  082B               	movf	_SU,w
  2675  00D8  0099               	movwf	25	;volatile
  2676                           
  2677                           ;master.c: 184:             break;
  2678  00D9  294A               	goto	i1l167
  2679  00DA                     i1l1298:
  2680                           
  2681                           ;master.c: 186:             TXREG = SD;
  2682  00DA  082A               	movf	_SD,w
  2683  00DB  0099               	movwf	25	;volatile
  2684                           
  2685                           ;master.c: 187:             break;
  2686  00DC  294A               	goto	i1l167
  2687  00DD                     i1l1300:
  2688                           
  2689                           ;master.c: 190:             TXREG = 0x3A;
  2690  00DD  303A               	movlw	58
  2691  00DE  0099               	movwf	25	;volatile
  2692                           
  2693                           ;master.c: 191:             break;
  2694  00DF  294A               	goto	i1l167
  2695  00E0                     i1l1302:
  2696                           
  2697                           ;master.c: 194:             TXREG = MU;
  2698  00E0  0829               	movf	_MU,w
  2699  00E1  0099               	movwf	25	;volatile
  2700                           
  2701                           ;master.c: 195:             break;
  2702  00E2  294A               	goto	i1l167
  2703  00E3                     i1l1304:
  2704                           
  2705                           ;master.c: 197:             TXREG = MD;
  2706  00E3  0828               	movf	_MD,w
  2707  00E4  0099               	movwf	25	;volatile
  2708                           
  2709                           ;master.c: 198:             break;
  2710  00E5  294A               	goto	i1l167
  2711  00E6                     i1l1308:
  2712                           
  2713                           ;master.c: 203:             TXREG = HU;
  2714  00E6  0827               	movf	_HU,w
  2715  00E7  0099               	movwf	25	;volatile
  2716                           
  2717                           ;master.c: 204:             break;
  2718  00E8  294A               	goto	i1l167
  2719  00E9                     i1l1310:
  2720                           
  2721                           ;master.c: 207:             TXREG = HD;
  2722  00E9  0826               	movf	_HD,w
  2723  00EA  0099               	movwf	25	;volatile
  2724                           
  2725                           ;master.c: 208:             break;
  2726  00EB  294A               	goto	i1l167
  2727  00EC                     i1l1314:
  2728                           
  2729                           ;master.c: 215:             TXREG = DAYU;
  2730  00EC  0831               	movf	_DAYU,w
  2731  00ED  0099               	movwf	25	;volatile
  2732                           
  2733                           ;master.c: 216:             break;
  2734  00EE  294A               	goto	i1l167
  2735  00EF                     i1l1316:
  2736                           
  2737                           ;master.c: 219:             TXREG = DAYD;
  2738  00EF  0830               	movf	_DAYD,w
  2739  00F0  0099               	movwf	25	;volatile
  2740                           
  2741                           ;master.c: 220:             break;
  2742  00F1  294A               	goto	i1l167
  2743  00F2                     i1l1318:
  2744                           
  2745                           ;master.c: 223:             TXREG = 0x2F;
  2746  00F2  302F               	movlw	47
  2747  00F3  0099               	movwf	25	;volatile
  2748                           
  2749                           ;master.c: 224:             break;
  2750  00F4  294A               	goto	i1l167
  2751  00F5                     i1l1320:
  2752                           
  2753                           ;master.c: 226:             TXREG = MOU;
  2754  00F5  0823               	movf	_MOU,w
  2755  00F6  0099               	movwf	25	;volatile
  2756                           
  2757                           ;master.c: 227:             break;
  2758  00F7  294A               	goto	i1l167
  2759  00F8                     i1l1322:
  2760                           
  2761                           ;master.c: 230:             TXREG = MOD;
  2762  00F8  0822               	movf	_MOD,w
  2763  00F9  0099               	movwf	25	;volatile
  2764                           
  2765                           ;master.c: 231:             break;
  2766  00FA  294A               	goto	i1l167
  2767  00FB                     i1l1326:
  2768                           
  2769                           ;master.c: 237:             TXREG = YU;
  2770  00FB  0821               	movf	_YU,w
  2771  00FC  0099               	movwf	25	;volatile
  2772                           
  2773                           ;master.c: 238:             break;
  2774  00FD  294A               	goto	i1l167
  2775  00FE                     i1l1328:
  2776                           
  2777                           ;master.c: 241:             TXREG = YD;
  2778  00FE  0820               	movf	_YD,w
  2779  00FF  0099               	movwf	25	;volatile
  2780                           
  2781                           ;master.c: 242:             break;
  2782  0100  294A               	goto	i1l167
  2783  0101                     i1l1330:
  2784                           
  2785                           ;master.c: 245:             TXREG = 0x0A;
  2786  0101  300A               	movlw	10
  2787  0102  0099               	movwf	25	;volatile
  2788  0103                     i1l1332:
  2789                           
  2790                           ;master.c: 246:             SEND = 0;
  2791  0103  01B9               	clrf	_SEND
  2792                           
  2793                           ;master.c: 247:             break;
  2794  0104  294A               	goto	i1l167
  2795  0105                     i1l1336:
  2796  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0107  0839               	movf	_SEND,w
  2799  0108  00F6               	movwf	??_mandar
  2800  0109  01F7               	clrf	??_mandar+1
  2801                           
  2802                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2803                           ; Switch size 1, requested type "simple"
  2804                           ; Number of cases is 1, Range of values is 0 to 0
  2805                           ; switch strategies available:
  2806                           ; Name         Instructions Cycles
  2807                           ; simple_byte            4     3 (average)
  2808                           ; direct_byte           11     8 (fixed)
  2809                           ; jumptable            260     6 (fixed)
  2810                           ;	Chosen strategy is simple_byte
  2811  010A  0877               	movf	??_mandar+1,w
  2812  010B  3A00               	xorlw	0	; case 0
  2813  010C  1903               	skipnz
  2814  010D  290F               	goto	i1l1804
  2815  010E  294A               	goto	i1l167
  2816  010F                     i1l1804:
  2817                           
  2818                           ; Switch size 1, requested type "simple"
  2819                           ; Number of cases is 19, Range of values is 0 to 18
  2820                           ; switch strategies available:
  2821                           ; Name         Instructions Cycles
  2822                           ; simple_byte           58    30 (average)
  2823                           ; direct_byte           65     8 (fixed)
  2824                           ; jumptable            260     6 (fixed)
  2825                           ;	Chosen strategy is simple_byte
  2826  010F  0876               	movf	??_mandar,w
  2827  0110  3A00               	xorlw	0	; case 0
  2828  0111  1903               	skipnz
  2829  0112  28D4               	goto	i1l1294
  2830  0113  3A01               	xorlw	1	; case 1
  2831  0114  1903               	skipnz
  2832  0115  28D7               	goto	i1l1296
  2833  0116  3A03               	xorlw	3	; case 2
  2834  0117  1903               	skipnz
  2835  0118  28DA               	goto	i1l1298
  2836  0119  3A01               	xorlw	1	; case 3
  2837  011A  1903               	skipnz
  2838  011B  28DD               	goto	i1l1300
  2839  011C  3A07               	xorlw	7	; case 4
  2840  011D  1903               	skipnz
  2841  011E  28E0               	goto	i1l1302
  2842  011F  3A01               	xorlw	1	; case 5
  2843  0120  1903               	skipnz
  2844  0121  28E3               	goto	i1l1304
  2845  0122  3A03               	xorlw	3	; case 6
  2846  0123  1903               	skipnz
  2847  0124  28DD               	goto	i1l1300
  2848  0125  3A01               	xorlw	1	; case 7
  2849  0126  1903               	skipnz
  2850  0127  28E6               	goto	i1l1308
  2851  0128  3A0F               	xorlw	15	; case 8
  2852  0129  1903               	skipnz
  2853  012A  28E9               	goto	i1l1310
  2854  012B  3A01               	xorlw	1	; case 9
  2855  012C  1903               	skipnz
  2856  012D  28D4               	goto	i1l1294
  2857  012E  3A03               	xorlw	3	; case 10
  2858  012F  1903               	skipnz
  2859  0130  28EC               	goto	i1l1314
  2860  0131  3A01               	xorlw	1	; case 11
  2861  0132  1903               	skipnz
  2862  0133  28EF               	goto	i1l1316
  2863  0134  3A07               	xorlw	7	; case 12
  2864  0135  1903               	skipnz
  2865  0136  28F2               	goto	i1l1318
  2866  0137  3A01               	xorlw	1	; case 13
  2867  0138  1903               	skipnz
  2868  0139  28F5               	goto	i1l1320
  2869  013A  3A03               	xorlw	3	; case 14
  2870  013B  1903               	skipnz
  2871  013C  28F8               	goto	i1l1322
  2872  013D  3A01               	xorlw	1	; case 15
  2873  013E  1903               	skipnz
  2874  013F  28F2               	goto	i1l1318
  2875  0140  3A1F               	xorlw	31	; case 16
  2876  0141  1903               	skipnz
  2877  0142  28FB               	goto	i1l1326
  2878  0143  3A01               	xorlw	1	; case 17
  2879  0144  1903               	skipnz
  2880  0145  28FE               	goto	i1l1328
  2881  0146  3A03               	xorlw	3	; case 18
  2882  0147  1903               	skipnz
  2883  0148  2901               	goto	i1l1330
  2884  0149  294A               	goto	i1l167
  2885  014A                     i1l167:
  2886  014A  0008               	return
  2887  014B                     __end_of_mandar:
  2888  007E                     btemp	set	126	;btemp
  2889  007E                     wtemp0	set	126
  2890                           
  2891                           	psect	config
  2892                           
  2893                           ;Config register CONFIG1 @ 0x2007
  2894                           ;	Oscillator Selection bits
  2895                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2896                           ;	Watchdog Timer Enable bit
  2897                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2898                           ;	Power-up Timer Enable bit
  2899                           ;	PWRTE = OFF, PWRT disabled
  2900                           ;	RE3/MCLR pin function select bit
  2901                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2902                           ;	Code Protection bit
  2903                           ;	CP = OFF, Program memory code protection is disabled
  2904                           ;	Data Code Protection bit
  2905                           ;	CPD = OFF, Data memory code protection is disabled
  2906                           ;	Brown Out Reset Selection bits
  2907                           ;	BOREN = OFF, BOR disabled
  2908                           ;	Internal External Switchover bit
  2909                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2910                           ;	Fail-Safe Clock Monitor Enabled bit
  2911                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2912                           ;	Low Voltage Programming Enable bit
  2913                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2914                           ;	In-Circuit Debugger Mode bit
  2915                           ;	DEBUG = 0x1, unprogrammed default
  2916  2007                     	org	8199
  2917  2007  20D4               	dw	8404
  2918                           
  2919                           ;Config register CONFIG2 @ 0x2008
  2920                           ;	Brown-out Reset Selection bit
  2921                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2922                           ;	Flash Program Memory Self Write Enable bits
  2923                           ;	WRT = OFF, Write protection off
  2924  2008                     	org	8200
  2925  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     22      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_mandar

Critical Paths under _main in BANK0

    _timeout->_I2C_Master_Write
    _timein->_I2C_Master_Read
    _Setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2860
                              _Setup
                             _conver
                             _timein
                            _timeout
 ---------------------------------------------------------------------------------
 (1) _timeout                                              0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _timein                                               0     0      0    1176
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      5     5      0      65
                                              0 BANK0      5     5      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conver                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     573
                    _I2C_Master_Init
                            _initOsc
                              _usart
 ---------------------------------------------------------------------------------
 (2) _usart                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              2 COMMON     4     4      0
                             _mandar
 ---------------------------------------------------------------------------------
 (5) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _I2C_Master_Init
       ___lldiv
     _initOsc
     _usart
   _conver
   _timein
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _timeout
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _ISR (ROOT)
   _mandar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3D      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Mar 02 20:39:12 2021

                        _H 0073                         _DD 0024                         _HD 0026  
                       _DU 0025                         _MD 0028                         _HU 0027  
                       _SD 002A                         _MU 0029                         _YD 0020  
                       _SU 002B                         _YU 0021                         fsr 0004  
                      l211 0402                        l220 0415                        l140 03DE  
                      l205 0361                        l214 041E                        l143 0327  
                      l223 040C                        l240 02A0                        l208 03F6  
                      l241 02A6                        l242 02AC                        l226 038B  
                      l170 0227                        l243 02B2                        l227 038E  
                      l244 02B8                        l228 0392                        l245 02BE  
                      l237 0294                        l173 01BB                        l246 02C4  
                      l238 02EC                        l262 03F5                        l247 02ED  
                      l239 029A                        l176 00D2                        l384 028F  
                      _DAY 0072                        _GIE 005F                        u410 03FC  
                      u411 03FB                        u500 033F                        u420 0402  
                      _MIN 0074                        u421 0401                        u430 023A  
                      u510 0387                        _MOD 0022                        u431 0239  
                      u511 0386                        u505 033A                        _SEC 0075  
                      u450 024E                        u451 024D                        _ISR 0393  
                      u445 023F                        u525 0032                        u470 0269  
                      u471 0268                        u535 0044                        u465 0250  
                      u545 0056                        u490 0287                        u491 0286  
                      u475 0265                        u555 0068                        u580 03CF  
                      u485 0279                        u565 007A                        u581 03CE  
                      u575 008C                        _MOU 0023                        fsr0 0004  
                      indf 0000                       ?_ISR 0076                       l1600 0360  
                     l1602 0416                       l1610 040D                       l1540 023D  
                     l1700 0053                       l1532 03F6                       l1620 037B  
                     l1604 041B                       l1612 0412                       l1550 0269  
                     l1542 0246                       l1630 02EE                       l1710 0096  
                     l1702 0065                       l1534 03FC                       l1622 0380  
                     l1614 0365                       l1606 0403                       l1552 0277  
                     l1544 024A                       l1536 0228                       l1640 02FE  
                     l1632 02F4                       l1720 00AF                       l1712 009B  
                     l1704 0072                       l1624 0387                       l1616 036A  
                     l1608 0408                       l1554 0278                       l1546 024E  
                     l1538 023A                       l1802 02D2                       l1562 0293  
                     l1650 0307                       l1642 02FF                       l1634 02F9  
                     l1730 00C8                       l1722 00B4                       l1714 00A0  
                     l1706 0084                       l1626 038F                       l1618 0372  
                     l1556 0281                       l1548 0257                       l1580 03EE  
                     l1660 030F                       l1652 0308                       l1644 0302  
                     l1636 02FC                       l1732 00CD                       l1724 00B9  
                     l1716 00A5                       l1708 0089                       l1740 03CF  
                     l1558 0287                       l1590 0328                       l1566 02CA  
                     l1582 03EF                       l1574 03E1                       l1670 0318  
                     l1662 0310                       l1654 0309                       l1646 0303  
                     l1638 02FD                       l1726 00BE                       l1718 00AA  
                     l1742 03D0                       l1734 03BD                       l1592 032C  
                     l1584 03F0                       l1576 03E9                       l1664 0313  
                     l1656 030A                       l1648 0306                       l1728 00C3  
                     l1680 0187                       l1672 01BC                       l1744 03D3  
                     l1736 03C2                       l1594 032F                       l1586 03F3  
                     l1578 03EC                       l1666 0316                       l1658 030E  
                     l1690 01B6                       l1682 0190                       l1674 014B  
                     l1746 03D8                       l1738 03C7                       l1596 035E  
                     l1588 03F4                       l1668 0317                       l1692 0028  
                     l1684 019B                       l1676 0175                       l1598 035F  
                     l1694 002F                       l1686 01A4                       l1678 017E  
                     l1696 003C                       l1688 01AD                       l1698 004E  
                     _DAYD 0030                       _DAYU 0031                       _NADA 0038  
                     _CONT 003A                       _PEIE 005E                       _MIND 0034  
                     _SECD 0036                       _MINU 0035                       _SECU 0037  
                     _SEND 0039                       _TMR0 0001                       _YEAR 0070  
                     _main 03BD                       btemp 007E                       start 0012  
                    ??_ISR 0078           ?_I2C_Master_Init 0049           ?_I2C_Master_Read 0076  
         ?_I2C_Master_Wait 0076           ?_I2C_Master_Stop 0076                      ?_main 0076  
                    _ANSEL 0188            __end_of___lldiv 0290                      _HORAD 0032  
                    i1l131 03B1                      i1l167 014A                      _HORAU 0033  
                    _MONTH 0071                      _SPBRG 0099                      _YEARD 002C  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _YEARU 002D  
                    u38_20 0397                      u38_21 0396                      u39_20 03A2  
                    u39_21 03A1                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019                      _Setup 02EE  
          __end_of_initOsc 02EE                      _usart 03E1                      pclath 000A  
          __end_of_timeout 0228                      status 0003                      wtemp0 007E  
          __initialization 0015               __end_of_main 03E1                     ??_main 0051  
        ?_I2C_Master_Start 0076          ?_I2C_Master_Write 003B                     ?_Setup 0076  
       ??_I2C_Master_Start 003B         ??_I2C_Master_Write 003D                initOsc@IRCF 003D  
                   _ANSELH 0189                     ?_usart 0076                     i1l1300 00DD  
                   i1l1310 00E9                     i1l1302 00E0                     i1l1320 00F5  
                   i1l1304 00E3                     i1l1330 0101                     i1l1322 00F8  
                   i1l1314 00EC                     i1l1332 0103                     i1l1316 00EF  
                   i1l1308 00E6                     i1l1326 00FB                     i1l1318 00F2  
                   i1l1328 00FE                     i1l1336 0105                     i1l1450 0399  
                   i1l1292 00D3                     i1l1460 03AD                     i1l1452 039D  
                   i1l1294 00D4                     i1l1462 03AE                     i1l1454 039E  
                   i1l1446 0393                     i1l1296 00D7                     i1l1456 03A2  
                   i1l1448 0397                     i1l1298 00DA                     i1l1458 03A7  
                   i1l1804 010F                     _MONTHD 002E                     _MONTHU 002F  
                   _SPBRGH 009A                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 0043                     _conver 0028                     _mandar 00D3  
                   _timein 014B                  ??_initOsc 003B                     saved_w 007E  
                ??_timeout 003D    __end_of__initialization 0024             __pcstackCOMMON 0076  
            __end_of_Setup 0328              __end_of_usart 03F6                    ??_Setup 0051  
                  ??_usart 003B                 __pbssBANK0 0020                 __pmaintext 03BD  
               __pintentry 0004                    ?_conver 0076                    ?_mandar 0076  
                  ?_timein 0076                    _SSPCON2 0091                    _SSPSTAT 0094  
                  ___lldiv 0228            __size_of_conver 00AB            __size_of_mandar 0078  
                  __ptext1 01BC                    __ptext2 014B                    __ptext3 0403  
                  __ptext4 040D                    __ptext5 0416                    __ptext6 0362  
                  __ptext7 03F6                    __ptext8 0028                    __ptext9 02EE  
          __size_of_timein 0071               __size_of_ISR 002A                    _initOsc 0290  
 __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 0031   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _timeout 01BC                    clrloop0 0420  
     end_of_initialization 0024  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 003B            ___lldiv@counter 0048                  _RCSTAbits 0018  
         I2C_Master_Init@c 0049           I2C_Master_Read@a 003D                  _TRISCbits 0087  
                _TXSTAbits 0098                _BAUDCTLbits 0187             __end_of_conver 00D3  
           __end_of_mandar 014B             __end_of_timein 01BC        start_initialization 0015  
              __end_of_ISR 03BD          ??_I2C_Master_Init 004D          ??_I2C_Master_Read 003B  
        ??_I2C_Master_Wait 003B          ??_I2C_Master_Stop 003B                   ??_conver 003B  
                 ??_mandar 0076                   ??_timein 0040                __pbssCOMMON 0070  
                ___latbits 0002              __pcstackBANK0 003B           _I2C_Master_Start 0416  
         _I2C_Master_Write 0403                   ?___lldiv 003B                   ?_initOsc 0076  
           __size_of_Setup 003A                   ?_timeout 0076             __size_of_usart 0015  
        interrupt_function 0004                  clear_ram0 041F                   _PIE1bits 008C  
                 _PIR1bits 000C        I2C_Master_Read@temp 003E           __size_of___lldiv 0068  
          _I2C_Master_Init 0328            _I2C_Master_Read 0362            _I2C_Master_Wait 03F6  
          _I2C_Master_Stop 040D           __size_of_initOsc 005E                   __ptext10 03E1  
                 __ptext11 0290                   __ptext12 0328                   __ptext13 0228  
                 __ptext14 0393                   __ptext15 00D3           __size_of_timeout 006C  
            __size_of_main 0024   __end_of_I2C_Master_Start 041F   __end_of_I2C_Master_Write 040D  
               _INTCONbits 000B                   intlevel1 0000           ___lldiv@dividend 003F  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0362    __end_of_I2C_Master_Read 0393  
  __end_of_I2C_Master_Wait 0403    __end_of_I2C_Master_Stop 0416                 _OPTION_REG 0081  
         ___lldiv@quotient 0044          I2C_Master_Write@d 003B                _SSPCON2bits 0091  
