

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Mar 02 01:12:38 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 09/04/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  008F                     	;# 
   417  0090                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0105                     	;# 
   436  0107                     	;# 
   437  0108                     	;# 
   438  0109                     	;# 
   439  010C                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0187                     	;# 
   446  0188                     	;# 
   447  0189                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  0018                     _RCSTAbits	set	24
   451  0013                     _SSPBUF	set	19
   452  0014                     _SSPCON	set	20
   453  0019                     _TXREG	set	25
   454  0009                     _PORTE	set	9
   455  0008                     _PORTD	set	8
   456  0007                     _PORTC	set	7
   457  0006                     _PORTB	set	6
   458  0005                     _PORTA	set	5
   459  001F                     _ADCON0bits	set	31
   460  000C                     _PIR1bits	set	12
   461  0001                     _TMR0	set	1
   462  000B                     _INTCONbits	set	11
   463  0063                     _SSPIF	set	99
   464  005E                     _PEIE	set	94
   465  005F                     _GIE	set	95
   466  0099                     _SPBRG	set	153
   467  009A                     _SPBRGH	set	154
   468  0098                     _TXSTAbits	set	152
   469  008F                     _OSCCONbits	set	143
   470  0091                     _SSPCON2bits	set	145
   471  0087                     _TRISCbits	set	135
   472  0094                     _SSPSTAT	set	148
   473  0093                     _SSPADD	set	147
   474  0091                     _SSPCON2	set	145
   475  0081                     _OPTION_REG	set	129
   476  0086                     _TRISB	set	134
   477  0088                     _TRISD	set	136
   478  0089                     _TRISE	set	137
   479  0085                     _TRISA	set	133
   480  008C                     _PIE1bits	set	140
   481  0463                     _SSPIE	set	1123
   482  043C                     _TRISC4	set	1084
   483  043B                     _TRISC3	set	1083
   484  0187                     _BAUDCTLbits	set	391
   485  0189                     _ANSELH	set	393
   486  0188                     _ANSEL	set	392
   487                           
   488                           	psect	cinit
   489  0015                     start_initialization:	
   490                           ; #config settings
   491                           
   492  0015                     __initialization:
   493                           
   494                           ; Clear objects allocated to COMMON
   495  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   496  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   497  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   498  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   499  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   500  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   501                           
   502                           ; Clear objects allocated to BANK0
   503  001B  1383               	bcf	3,7	;select IRP bank0
   504  001C  3020               	movlw	low __pbssBANK0
   505  001D  0084               	movwf	4
   506  001E  303B               	movlw	low (__pbssBANK0+27)
   507  001F  120A  118A  22C5  120A  118A  	fcall	clear_ram0
   508  0024                     end_of_initialization:	
   509                           ;End of C runtime variable initialization code
   510                           
   511  0024                     __end_of__initialization:
   512  0024  0183               	clrf	3
   513  0025  120A  118A  2A81   	ljmp	_main	;jump to C main() function
   514                           
   515                           	psect	bssCOMMON
   516  0070                     __pbssCOMMON:
   517  0070                     _DAYD:
   518  0070                     	ds	1
   519  0071                     _DAYU:
   520  0071                     	ds	1
   521  0072                     _MIN:
   522  0072                     	ds	1
   523  0073                     _SEC:
   524  0073                     	ds	1
   525  0074                     _SEND:
   526  0074                     	ds	1
   527  0075                     _CONT:
   528  0075                     	ds	1
   529                           
   530                           	psect	bssBANK0
   531  0020                     __pbssBANK0:
   532  0020                     _YD:
   533  0020                     	ds	1
   534  0021                     _YU:
   535  0021                     	ds	1
   536  0022                     _MOD:
   537  0022                     	ds	1
   538  0023                     _MOU:
   539  0023                     	ds	1
   540  0024                     _DD:
   541  0024                     	ds	1
   542  0025                     _DU:
   543  0025                     	ds	1
   544  0026                     _HD:
   545  0026                     	ds	1
   546  0027                     _HU:
   547  0027                     	ds	1
   548  0028                     _MD:
   549  0028                     	ds	1
   550  0029                     _MU:
   551  0029                     	ds	1
   552  002A                     _SD:
   553  002A                     	ds	1
   554  002B                     _SU:
   555  002B                     	ds	1
   556  002C                     _YEARD:
   557  002C                     	ds	1
   558  002D                     _YEARU:
   559  002D                     	ds	1
   560  002E                     _MONTHD:
   561  002E                     	ds	1
   562  002F                     _MONTHU:
   563  002F                     	ds	1
   564  0030                     _HORAD:
   565  0030                     	ds	1
   566  0031                     _HORAU:
   567  0031                     	ds	1
   568  0032                     _MIND:
   569  0032                     	ds	1
   570  0033                     _MINU:
   571  0033                     	ds	1
   572  0034                     _SECD:
   573  0034                     	ds	1
   574  0035                     _SECU:
   575  0035                     	ds	1
   576  0036                     _NADA:
   577  0036                     	ds	1
   578  0037                     _YEAR:
   579  0037                     	ds	1
   580  0038                     _MONTH:
   581  0038                     	ds	1
   582  0039                     _DAY:
   583  0039                     	ds	1
   584  003A                     _H:
   585  003A                     	ds	1
   586                           
   587                           	psect	clrtext
   588  02C5                     clear_ram0:	
   589                           ;	Called with FSR containing the base address, and
   590                           ;	W with the last address+1
   591                           
   592  02C5  0064               	clrwdt	;clear the watchdog before getting into this loop
   593  02C6                     clrloop0:
   594  02C6  0180               	clrf	0	;clear RAM location pointed to by FSR
   595  02C7  0A84               	incf	4,f	;increment pointer
   596  02C8  0604               	xorwf	4,w	;XOR with final address
   597  02C9  1903               	btfsc	3,2	;have we reached the end yet?
   598  02CA  3400               	retlw	0	;all done for this memory range, return
   599  02CB  0604               	xorwf	4,w	;XOR again to restore value
   600  02CC  2AC6               	goto	clrloop0	;do the next byte
   601                           
   602                           	psect	cstackCOMMON
   603  0076                     __pcstackCOMMON:
   604  0076                     ?_mandar:
   605  0076                     ??_mandar:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0076                     ?_Setup:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0076                     ?_timeout:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0076                     ?_initOsc:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0076                     ?_I2C_Master_Start:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0076                     ?_I2C_Master_Stop:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0076                     ?_ISR:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0076                     ?_main:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0076                     ?_I2C_Master_Wait:	
   630                           ; 1 bytes @ 0x0
   631                           
   632                           
   633                           ; 1 bytes @ 0x0
   634  0076                     	ds	2
   635  0078                     ??_ISR:
   636                           
   637                           ; 1 bytes @ 0x2
   638  0078                     	ds	4
   639                           
   640                           	psect	cstackBANK0
   641  003B                     __pcstackBANK0:
   642  003B                     ??_initOsc:
   643  003B                     ??_I2C_Master_Start:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  003B                     ?_I2C_Master_Write:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  003B                     ??_I2C_Master_Stop:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  003B                     ??_I2C_Master_Wait:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  003B                     ?___lldiv:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  003B                     I2C_Master_Write@d:	
   659                           ; 4 bytes @ 0x0
   660                           
   661  003B                     ___lldiv@divisor:	
   662                           ; 2 bytes @ 0x0
   663                           
   664                           
   665                           ; 4 bytes @ 0x0
   666  003B                     	ds	2
   667  003D                     ??_timeout:
   668  003D                     ??_I2C_Master_Write:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  003D                     initOsc@IRCF:	
   672                           ; 1 bytes @ 0x2
   673                           
   674                           
   675                           ; 1 bytes @ 0x2
   676  003D                     	ds	2
   677  003F                     ___lldiv@dividend:
   678                           
   679                           ; 4 bytes @ 0x4
   680  003F                     	ds	4
   681  0043                     ??___lldiv:
   682                           
   683                           ; 1 bytes @ 0x8
   684  0043                     	ds	1
   685  0044                     ___lldiv@quotient:
   686                           
   687                           ; 4 bytes @ 0x9
   688  0044                     	ds	4
   689  0048                     ___lldiv@counter:
   690                           
   691                           ; 1 bytes @ 0xD
   692  0048                     	ds	1
   693  0049                     ?_I2C_Master_Init:
   694  0049                     I2C_Master_Init@c:	
   695                           ; 1 bytes @ 0xE
   696                           
   697                           
   698                           ; 4 bytes @ 0xE
   699  0049                     	ds	4
   700  004D                     ??_I2C_Master_Init:
   701                           
   702                           ; 1 bytes @ 0x12
   703  004D                     	ds	4
   704  0051                     ??_Setup:
   705  0051                     ??_main:	
   706                           ; 1 bytes @ 0x16
   707                           
   708                           
   709                           	psect	maintext
   710  0281                     __pmaintext:	
   711                           ; 1 bytes @ 0x16
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 109 in file "master.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : B00/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   731 ;;      Params:         0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels required when called:    5
   737 ;; This function calls:
   738 ;;		_Setup
   739 ;;		_timeout
   740 ;; This function is called by:
   741 ;;		Startup code after reset
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function _main
   747  0281                     _main:
   748  0281                     l1591:	
   749                           ;incstack = 0
   750                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   751                           
   752  0281  120A  118A  2227  120A  118A  	fcall	_Setup
   753  0286                     l1593:
   754  0286  120A  118A  20BB  120A  118A  	fcall	_timeout
   755  028B                     l1595:
   756  028B  3015               	movlw	21
   757  028C  0275               	subwf	_CONT,w
   758  028D  1C03               	skipc
   759  028E  2A90               	goto	u391
   760  028F  2A91               	goto	u390
   761  0290                     u391:
   762  0290  2A99               	goto	l136
   763  0291                     u390:
   764  0291                     l1597:
   765  0291  1283               	bcf	3,5	;RP0=0, select bank0
   766  0292  1303               	bcf	3,6	;RP1=0, select bank0
   767  0293  149F               	bsf	31,1	;volatile
   768  0294                     l1599:
   769  0294  01F5               	clrf	_CONT
   770  0295                     l1601:
   771  0295  1683               	bsf	3,5	;RP0=1, select bank1
   772  0296  1303               	bcf	3,6	;RP1=0, select bank1
   773  0297  160C               	bsf	12,4	;volatile
   774  0298                     l133:	
   775                           ;master.c: 125:         while (1) {
   776                           
   777  0298                     l134:	
   778                           ;master.c: 134:         }
   779                           
   780  0298  2A98               	goto	l133
   781  0299                     l136:
   782  0299  120A  118A  2812   	ljmp	start
   783  029C                     __end_of_main:
   784                           
   785                           	psect	text1
   786  00BB                     __ptext1:	
   787 ;; *************** function _timeout *****************
   788 ;; Defined at:
   789 ;;		line 245 in file "master.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    4
   810 ;; This function calls:
   811 ;;		_I2C_Master_Start
   812 ;;		_I2C_Master_Stop
   813 ;;		_I2C_Master_Write
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _timeout
   821  00BB                     _timeout:
   822  00BB                     l1589:	
   823                           ;incstack = 0
   824                           ; Regs used in _timeout: [wreg+status,2+status,0+pclath+cstack]
   825                           
   826                           
   827                           ;master.c: 246:     I2C_Master_Start();
   828  00BB  120A  118A  22BC  120A  118A  	fcall	_I2C_Master_Start
   829                           
   830                           ;master.c: 247:     I2C_Master_Write(0xD0);
   831  00C0  30D0               	movlw	208
   832  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   833  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   834  00C3  00BB               	movwf	I2C_Master_Write@d
   835  00C4  3000               	movlw	0
   836  00C5  00BC               	movwf	I2C_Master_Write@d+1
   837  00C6  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   838                           
   839                           ;master.c: 248:     I2C_Master_Write(0);
   840  00CB  3000               	movlw	0
   841  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   842  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   843  00CE  00BB               	movwf	I2C_Master_Write@d
   844  00CF  00BC               	movwf	I2C_Master_Write@d+1
   845  00D0  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   846                           
   847                           ;master.c: 249:     I2C_Master_Write(0b00000000);
   848  00D5  3000               	movlw	0
   849  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   850  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   851  00D8  00BB               	movwf	I2C_Master_Write@d
   852  00D9  00BC               	movwf	I2C_Master_Write@d+1
   853  00DA  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   854                           
   855                           ;master.c: 250:     I2C_Master_Write(0b00000011);
   856  00DF  3003               	movlw	3
   857  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   858  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   859  00E2  00BB               	movwf	I2C_Master_Write@d
   860  00E3  3000               	movlw	0
   861  00E4  00BC               	movwf	I2C_Master_Write@d+1
   862  00E5  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   863                           
   864                           ;master.c: 251:     I2C_Master_Write(0b01010011);
   865  00EA  3053               	movlw	83
   866  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   867  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   868  00ED  00BB               	movwf	I2C_Master_Write@d
   869  00EE  3000               	movlw	0
   870  00EF  00BC               	movwf	I2C_Master_Write@d+1
   871  00F0  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   872                           
   873                           ;master.c: 252:     I2C_Master_Write(1);
   874  00F5  3001               	movlw	1
   875  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   876  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   877  00F8  00BB               	movwf	I2C_Master_Write@d
   878  00F9  3000               	movlw	0
   879  00FA  00BC               	movwf	I2C_Master_Write@d+1
   880  00FB  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   881                           
   882                           ;master.c: 253:     I2C_Master_Write(0x20);
   883  0100  3020               	movlw	32
   884  0101  1283               	bcf	3,5	;RP0=0, select bank0
   885  0102  1303               	bcf	3,6	;RP1=0, select bank0
   886  0103  00BB               	movwf	I2C_Master_Write@d
   887  0104  3000               	movlw	0
   888  0105  00BC               	movwf	I2C_Master_Write@d+1
   889  0106  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   890                           
   891                           ;master.c: 254:     I2C_Master_Write(0x10);
   892  010B  3010               	movlw	16
   893  010C  1283               	bcf	3,5	;RP0=0, select bank0
   894  010D  1303               	bcf	3,6	;RP1=0, select bank0
   895  010E  00BB               	movwf	I2C_Master_Write@d
   896  010F  3000               	movlw	0
   897  0110  00BC               	movwf	I2C_Master_Write@d+1
   898  0111  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   899                           
   900                           ;master.c: 255:     I2C_Master_Write(0x21);
   901  0116  3021               	movlw	33
   902  0117  1283               	bcf	3,5	;RP0=0, select bank0
   903  0118  1303               	bcf	3,6	;RP1=0, select bank0
   904  0119  00BB               	movwf	I2C_Master_Write@d
   905  011A  3000               	movlw	0
   906  011B  00BC               	movwf	I2C_Master_Write@d+1
   907  011C  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   908                           
   909                           ;master.c: 256:     I2C_Master_Stop();
   910  0121  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Stop
   911  0126                     l165:
   912  0126  0008               	return
   913  0127                     __end_of_timeout:
   914                           
   915                           	psect	text2
   916  02A9                     __ptext2:	
   917 ;; *************** function _I2C_Master_Write *****************
   918 ;; Defined at:
   919 ;;		line 65 in file "I2C.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  d               2    0[BANK0 ] unsigned int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       2       0       0       0
   934 ;;      Locals:         0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         0       2       0       0       0
   937 ;;Total ram usage:        2 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    3
   940 ;; This function calls:
   941 ;;		_I2C_Master_Wait
   942 ;; This function is called by:
   943 ;;		_timeout
   944 ;;		_timein
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _I2C_Master_Write
   950  02A9                     _I2C_Master_Write:
   951  02A9                     l1545:	
   952                           ;incstack = 0
   953                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
   954                           
   955                           
   956                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
   957  02A9  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Wait
   958  02AE                     l1547:
   959                           
   960                           ;I2C.c: 68:     SSPBUF = d;
   961  02AE  1283               	bcf	3,5	;RP0=0, select bank0
   962  02AF  1303               	bcf	3,6	;RP1=0, select bank0
   963  02B0  083B               	movf	I2C_Master_Write@d,w
   964  02B1  0093               	movwf	19	;volatile
   965  02B2                     l218:
   966  02B2  0008               	return
   967  02B3                     __end_of_I2C_Master_Write:
   968                           
   969                           	psect	text3
   970  02B3                     __ptext3:	
   971 ;; *************** function _I2C_Master_Stop *****************
   972 ;; Defined at:
   973 ;;		line 55 in file "I2C.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   987 ;;      Params:         0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    3
   994 ;; This function calls:
   995 ;;		_I2C_Master_Wait
   996 ;; This function is called by:
   997 ;;		_timeout
   998 ;;		_timein
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           
  1003                           ;psect for function _I2C_Master_Stop
  1004  02B3                     _I2C_Master_Stop:
  1005  02B3                     l1549:	
  1006                           ;incstack = 0
  1007                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1008                           
  1009                           
  1010                           ;I2C.c: 57:     I2C_Master_Wait();
  1011  02B3  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Wait
  1012  02B8                     l1551:
  1013                           
  1014                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1015  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  1016  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  1017  02BA  1511               	bsf	17,2	;volatile
  1018  02BB                     l215:
  1019  02BB  0008               	return
  1020  02BC                     __end_of_I2C_Master_Stop:
  1021                           
  1022                           	psect	text4
  1023  02BC                     __ptext4:	
  1024 ;; *************** function _I2C_Master_Start *****************
  1025 ;; Defined at:
  1026 ;;		line 39 in file "I2C.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    3
  1047 ;; This function calls:
  1048 ;;		_I2C_Master_Wait
  1049 ;; This function is called by:
  1050 ;;		_timeout
  1051 ;;		_timein
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _I2C_Master_Start
  1057  02BC                     _I2C_Master_Start:
  1058  02BC                     l1541:	
  1059                           ;incstack = 0
  1060                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1061                           
  1062                           
  1063                           ;I2C.c: 41:     I2C_Master_Wait();
  1064  02BC  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Wait
  1065  02C1                     l1543:
  1066                           
  1067                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1068  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  1069  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  1070  02C3  1411               	bsf	17,0	;volatile
  1071  02C4                     l209:
  1072  02C4  0008               	return
  1073  02C5                     __end_of_I2C_Master_Start:
  1074                           
  1075                           	psect	text5
  1076  029C                     __ptext5:	
  1077 ;; *************** function _I2C_Master_Wait *****************
  1078 ;; Defined at:
  1079 ;;		line 32 in file "I2C.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    2
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_I2C_Master_Start
  1104 ;;		_I2C_Master_Stop
  1105 ;;		_I2C_Master_Write
  1106 ;;		_I2C_Master_RepeatedStart
  1107 ;;		_I2C_Master_Read
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _I2C_Master_Wait
  1113  029C                     _I2C_Master_Wait:
  1114  029C                     l1487:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1117                           
  1118  029C                     l203:	
  1119                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1120                           
  1121  029C  1683               	bsf	3,5	;RP0=1, select bank1
  1122  029D  1303               	bcf	3,6	;RP1=0, select bank1
  1123  029E  1914               	btfsc	20,2	;volatile
  1124  029F  2AA1               	goto	u291
  1125  02A0  2AA2               	goto	u290
  1126  02A1                     u291:
  1127  02A1  2A9C               	goto	l203
  1128  02A2                     u290:
  1129  02A2                     l1489:
  1130  02A2  0811               	movf	17,w	;volatile
  1131  02A3  391F               	andlw	31
  1132  02A4  1D03               	btfss	3,2
  1133  02A5  2AA7               	goto	u301
  1134  02A6  2AA8               	goto	u300
  1135  02A7                     u301:
  1136  02A7  2A9C               	goto	l203
  1137  02A8                     u300:
  1138  02A8                     l206:
  1139  02A8  0008               	return
  1140  02A9                     __end_of_I2C_Master_Wait:
  1141                           
  1142                           	psect	text6
  1143  0227                     __ptext6:	
  1144 ;; *************** function _Setup *****************
  1145 ;; Defined at:
  1146 ;;		line 142 in file "master.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    4
  1167 ;; This function calls:
  1168 ;;		_I2C_Master_Init
  1169 ;;		_initOsc
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function _Setup
  1177  0227                     _Setup:
  1178  0227                     l1553:	
  1179                           ;incstack = 0
  1180                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1181                           
  1182                           
  1183                           ;master.c: 143:     I2C_Master_Init(100000);
  1184  0227  3000               	movlw	0
  1185  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1187  022A  00CC               	movwf	I2C_Master_Init@c+3
  1188  022B  3001               	movlw	1
  1189  022C  00CB               	movwf	I2C_Master_Init@c+2
  1190  022D  3086               	movlw	134
  1191  022E  00CA               	movwf	I2C_Master_Init@c+1
  1192  022F  30A0               	movlw	160
  1193  0230  00C9               	movwf	I2C_Master_Init@c
  1194  0231  120A  118A  21ED  120A  118A  	fcall	_I2C_Master_Init
  1195  0236                     l1555:
  1196                           
  1197                           ;master.c: 144:     initOsc(6);
  1198  0236  3006               	movlw	6
  1199  0237  120A  118A  218F  120A  118A  	fcall	_initOsc
  1200  023C                     l1557:
  1201                           
  1202                           ;master.c: 145:     TRISA = 0;
  1203  023C  1683               	bsf	3,5	;RP0=1, select bank1
  1204  023D  1303               	bcf	3,6	;RP1=0, select bank1
  1205  023E  0185               	clrf	5	;volatile
  1206  023F                     l1559:
  1207                           
  1208                           ;master.c: 146:     TRISE = 0;
  1209  023F  0189               	clrf	9	;volatile
  1210  0240                     l1561:
  1211                           
  1212                           ;master.c: 147:     ANSEL = 0;
  1213  0240  1683               	bsf	3,5	;RP0=1, select bank3
  1214  0241  1703               	bsf	3,6	;RP1=1, select bank3
  1215  0242  0188               	clrf	8	;volatile
  1216  0243                     l1563:
  1217                           
  1218                           ;master.c: 148:     ANSELH = 0;
  1219  0243  0189               	clrf	9	;volatile
  1220  0244                     l1565:
  1221                           
  1222                           ;master.c: 149:     PORTA = 0;
  1223  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0246  0185               	clrf	5	;volatile
  1226  0247                     l1567:
  1227                           
  1228                           ;master.c: 150:     PORTB = 0;
  1229  0247  0186               	clrf	6	;volatile
  1230  0248                     l1569:
  1231                           
  1232                           ;master.c: 151:     PORTC = 0;
  1233  0248  0187               	clrf	7	;volatile
  1234  0249                     l1571:
  1235                           
  1236                           ;master.c: 152:     PORTD = 0;
  1237  0249  0188               	clrf	8	;volatile
  1238  024A                     l1573:
  1239                           
  1240                           ;master.c: 153:     PORTE = 0;
  1241  024A  0189               	clrf	9	;volatile
  1242  024B                     l1575:
  1243                           
  1244                           ;master.c: 155:     TRISD = 0;
  1245  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1246  024C  1303               	bcf	3,6	;RP1=0, select bank1
  1247  024D  0188               	clrf	8	;volatile
  1248  024E                     l1577:
  1249                           
  1250                           ;master.c: 156:     TRISB = 0;
  1251  024E  0186               	clrf	6	;volatile
  1252  024F                     l1579:
  1253                           
  1254                           ;master.c: 157:     OPTION_REG = 0b10000111;
  1255  024F  3087               	movlw	135
  1256  0250  0081               	movwf	1	;volatile
  1257  0251                     l1581:
  1258                           
  1259                           ;master.c: 158:     INTCONbits.GIE = 1;
  1260  0251  178B               	bsf	11,7	;volatile
  1261  0252                     l1583:
  1262                           
  1263                           ;master.c: 159:     INTCONbits.PEIE = 1;
  1264  0252  170B               	bsf	11,6	;volatile
  1265  0253                     l1585:
  1266                           
  1267                           ;master.c: 160:     PIR1bits.TXIF = 0;
  1268  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0255  120C               	bcf	12,4	;volatile
  1271  0256                     l1587:
  1272                           
  1273                           ;master.c: 161:     PIE1bits.TXIE = 1;
  1274  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1275  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0258  160C               	bsf	12,4	;volatile
  1277  0259                     l139:
  1278  0259  0008               	return
  1279  025A                     __end_of_Setup:
  1280                           
  1281                           	psect	text7
  1282  018F                     __ptext7:	
  1283 ;; *************** function _initOsc *****************
  1284 ;; Defined at:
  1285 ;;		line 7 in file "OSC.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  IRCF            1    wreg     unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  IRCF            1    2[BANK0 ] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       0       0       0       0
  1300 ;;      Locals:         0       1       0       0       0
  1301 ;;      Temps:          0       2       0       0       0
  1302 ;;      Totals:         0       3       0       0       0
  1303 ;;Total ram usage:        3 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    2
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_Setup
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _initOsc
  1315  018F                     _initOsc:
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1319                           ;initOsc@IRCF stored from wreg
  1320  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0191  00BD               	movwf	initOsc@IRCF
  1323  0192                     l1529:
  1324                           
  1325                           ;OSC.c: 9:     switch (IRCF){
  1326  0192  29C9               	goto	l1533
  1327  0193                     l232:	
  1328                           ;OSC.c: 11:         case 0:
  1329                           
  1330                           
  1331                           ;OSC.c: 12:             OSCCONbits.IRCF2 = 0;
  1332  0193  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0194  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0195  130F               	bcf	15,6	;volatile
  1335                           
  1336                           ;OSC.c: 13:             OSCCONbits.IRCF1 = 0;
  1337  0196  128F               	bcf	15,5	;volatile
  1338                           
  1339                           ;OSC.c: 14:             OSCCONbits.IRCF0 = 0;
  1340  0197  120F               	bcf	15,4	;volatile
  1341                           
  1342                           ;OSC.c: 16:             break;
  1343  0198  29EB               	goto	l233
  1344  0199                     l234:	
  1345                           ;OSC.c: 18:         case 1:
  1346                           
  1347                           
  1348                           ;OSC.c: 19:             OSCCONbits.IRCF2 = 0;
  1349  0199  1683               	bsf	3,5	;RP0=1, select bank1
  1350  019A  1303               	bcf	3,6	;RP1=0, select bank1
  1351  019B  130F               	bcf	15,6	;volatile
  1352                           
  1353                           ;OSC.c: 20:             OSCCONbits.IRCF1 = 0;
  1354  019C  128F               	bcf	15,5	;volatile
  1355                           
  1356                           ;OSC.c: 21:             OSCCONbits.IRCF0 = 1;
  1357  019D  160F               	bsf	15,4	;volatile
  1358                           
  1359                           ;OSC.c: 22:             break;
  1360  019E  29EB               	goto	l233
  1361  019F                     l235:	
  1362                           ;OSC.c: 24:         case 2:
  1363                           
  1364                           
  1365                           ;OSC.c: 25:             OSCCONbits.IRCF2 = 0;
  1366  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1367  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1368  01A1  130F               	bcf	15,6	;volatile
  1369                           
  1370                           ;OSC.c: 26:             OSCCONbits.IRCF1 = 1;
  1371  01A2  168F               	bsf	15,5	;volatile
  1372                           
  1373                           ;OSC.c: 27:             OSCCONbits.IRCF0 = 0;
  1374  01A3  120F               	bcf	15,4	;volatile
  1375                           
  1376                           ;OSC.c: 28:             break;
  1377  01A4  29EB               	goto	l233
  1378  01A5                     l236:	
  1379                           ;OSC.c: 30:         case 3:
  1380                           
  1381                           
  1382                           ;OSC.c: 31:             OSCCONbits.IRCF2 = 0;
  1383  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1384  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  1385  01A7  130F               	bcf	15,6	;volatile
  1386                           
  1387                           ;OSC.c: 32:             OSCCONbits.IRCF1 = 1;
  1388  01A8  168F               	bsf	15,5	;volatile
  1389                           
  1390                           ;OSC.c: 33:             OSCCONbits.IRCF0 = 1;
  1391  01A9  160F               	bsf	15,4	;volatile
  1392                           
  1393                           ;OSC.c: 34:             break;
  1394  01AA  29EB               	goto	l233
  1395  01AB                     l237:	
  1396                           ;OSC.c: 36:         case 4:
  1397                           
  1398                           
  1399                           ;OSC.c: 37:             OSCCONbits.IRCF2 = 1;
  1400  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1401  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1402  01AD  170F               	bsf	15,6	;volatile
  1403                           
  1404                           ;OSC.c: 38:             OSCCONbits.IRCF1 = 0;
  1405  01AE  128F               	bcf	15,5	;volatile
  1406                           
  1407                           ;OSC.c: 39:             OSCCONbits.IRCF0 = 0;
  1408  01AF  120F               	bcf	15,4	;volatile
  1409                           
  1410                           ;OSC.c: 40:             break;
  1411  01B0  29EB               	goto	l233
  1412  01B1                     l238:	
  1413                           ;OSC.c: 42:         case 5:
  1414                           
  1415                           
  1416                           ;OSC.c: 43:             OSCCONbits.IRCF2 = 1;
  1417  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  1418  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  1419  01B3  170F               	bsf	15,6	;volatile
  1420                           
  1421                           ;OSC.c: 44:             OSCCONbits.IRCF1 = 0;
  1422  01B4  128F               	bcf	15,5	;volatile
  1423                           
  1424                           ;OSC.c: 45:             OSCCONbits.IRCF0 = 1;
  1425  01B5  160F               	bsf	15,4	;volatile
  1426                           
  1427                           ;OSC.c: 46:             break;
  1428  01B6  29EB               	goto	l233
  1429  01B7                     l239:	
  1430                           ;OSC.c: 49:         case 6:
  1431                           
  1432                           
  1433                           ;OSC.c: 50:             OSCCONbits.IRCF2 = 1;
  1434  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  1435  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  1436  01B9  170F               	bsf	15,6	;volatile
  1437                           
  1438                           ;OSC.c: 51:             OSCCONbits.IRCF1 = 1;
  1439  01BA  168F               	bsf	15,5	;volatile
  1440                           
  1441                           ;OSC.c: 52:             OSCCONbits.IRCF0 = 0;
  1442  01BB  120F               	bcf	15,4	;volatile
  1443                           
  1444                           ;OSC.c: 53:             break;
  1445  01BC  29EB               	goto	l233
  1446  01BD                     l240:	
  1447                           ;OSC.c: 55:         case 7:
  1448                           
  1449                           
  1450                           ;OSC.c: 56:             OSCCONbits.IRCF2 = 1;
  1451  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1452  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1453  01BF  170F               	bsf	15,6	;volatile
  1454                           
  1455                           ;OSC.c: 57:             OSCCONbits.IRCF1 = 1;
  1456  01C0  168F               	bsf	15,5	;volatile
  1457                           
  1458                           ;OSC.c: 58:             OSCCONbits.IRCF0 = 1;
  1459  01C1  160F               	bsf	15,4	;volatile
  1460                           
  1461                           ;OSC.c: 59:             break;
  1462  01C2  29EB               	goto	l233
  1463  01C3                     l241:	
  1464                           ;OSC.c: 64:         default:
  1465                           
  1466                           
  1467                           ;OSC.c: 65:             OSCCONbits.IRCF2 = 1;
  1468  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1469  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  1470  01C5  170F               	bsf	15,6	;volatile
  1471                           
  1472                           ;OSC.c: 66:             OSCCONbits.IRCF1 = 1;
  1473  01C6  168F               	bsf	15,5	;volatile
  1474                           
  1475                           ;OSC.c: 67:             OSCCONbits.IRCF0 = 0;
  1476  01C7  120F               	bcf	15,4	;volatile
  1477                           
  1478                           ;OSC.c: 68:             break;
  1479  01C8  29EB               	goto	l233
  1480  01C9                     l1533:
  1481  01C9  083D               	movf	initOsc@IRCF,w
  1482  01CA  00BB               	movwf	??_initOsc
  1483  01CB  01BC               	clrf	??_initOsc+1
  1484                           
  1485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1486                           ; Switch size 1, requested type "simple"
  1487                           ; Number of cases is 1, Range of values is 0 to 0
  1488                           ; switch strategies available:
  1489                           ; Name         Instructions Cycles
  1490                           ; simple_byte            4     3 (average)
  1491                           ; direct_byte           11     8 (fixed)
  1492                           ; jumptable            260     6 (fixed)
  1493                           ;	Chosen strategy is simple_byte
  1494  01CC  083C               	movf	??_initOsc+1,w
  1495  01CD  3A00               	xorlw	0	; case 0
  1496  01CE  1903               	skipnz
  1497  01CF  29D1               	goto	l1691
  1498  01D0  29C3               	goto	l241
  1499  01D1                     l1691:
  1500                           
  1501                           ; Switch size 1, requested type "simple"
  1502                           ; Number of cases is 8, Range of values is 0 to 7
  1503                           ; switch strategies available:
  1504                           ; Name         Instructions Cycles
  1505                           ; simple_byte           25    13 (average)
  1506                           ; direct_byte           32     8 (fixed)
  1507                           ; jumptable            260     6 (fixed)
  1508                           ;	Chosen strategy is simple_byte
  1509  01D1  083B               	movf	??_initOsc,w
  1510  01D2  3A00               	xorlw	0	; case 0
  1511  01D3  1903               	skipnz
  1512  01D4  2993               	goto	l232
  1513  01D5  3A01               	xorlw	1	; case 1
  1514  01D6  1903               	skipnz
  1515  01D7  2999               	goto	l234
  1516  01D8  3A03               	xorlw	3	; case 2
  1517  01D9  1903               	skipnz
  1518  01DA  299F               	goto	l235
  1519  01DB  3A01               	xorlw	1	; case 3
  1520  01DC  1903               	skipnz
  1521  01DD  29A5               	goto	l236
  1522  01DE  3A07               	xorlw	7	; case 4
  1523  01DF  1903               	skipnz
  1524  01E0  29AB               	goto	l237
  1525  01E1  3A01               	xorlw	1	; case 5
  1526  01E2  1903               	skipnz
  1527  01E3  29B1               	goto	l238
  1528  01E4  3A03               	xorlw	3	; case 6
  1529  01E5  1903               	skipnz
  1530  01E6  29B7               	goto	l239
  1531  01E7  3A01               	xorlw	1	; case 7
  1532  01E8  1903               	skipnz
  1533  01E9  29BD               	goto	l240
  1534  01EA  29C3               	goto	l241
  1535  01EB                     l233:
  1536                           
  1537                           ;OSC.c: 72:     OSCCONbits.SCS = 1;
  1538  01EB  140F               	bsf	15,0	;volatile
  1539  01EC                     l242:
  1540  01EC  0008               	return
  1541  01ED                     __end_of_initOsc:
  1542                           
  1543                           	psect	text8
  1544  01ED                     __ptext8:	
  1545 ;; *************** function _I2C_Master_Init *****************
  1546 ;; Defined at:
  1547 ;;		line 16 in file "I2C.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  c               4   14[BANK0 ] const unsigned long 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       4       0       0       0
  1562 ;;      Locals:         0       0       0       0       0
  1563 ;;      Temps:          0       4       0       0       0
  1564 ;;      Totals:         0       8       0       0       0
  1565 ;;Total ram usage:        8 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    3
  1568 ;; This function calls:
  1569 ;;		___lldiv
  1570 ;; This function is called by:
  1571 ;;		_Setup
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           
  1576                           ;psect for function _I2C_Master_Init
  1577  01ED                     _I2C_Master_Init:
  1578  01ED                     l1517:	
  1579                           ;incstack = 0
  1580                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1581                           
  1582                           
  1583                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1584  01ED  3028               	movlw	40
  1585  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1586  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1587  01F0  0094               	movwf	20	;volatile
  1588  01F1                     l1519:
  1589                           
  1590                           ;I2C.c: 19:     SSPCON2 = 0;
  1591  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  1592  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  1593  01F3  0191               	clrf	17	;volatile
  1594  01F4                     l1521:
  1595                           
  1596                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  1597  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1598  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1599  01F6  0849               	movf	I2C_Master_Init@c,w
  1600  01F7  00CD               	movwf	??_I2C_Master_Init
  1601  01F8  084A               	movf	I2C_Master_Init@c+1,w
  1602  01F9  00CE               	movwf	??_I2C_Master_Init+1
  1603  01FA  084B               	movf	I2C_Master_Init@c+2,w
  1604  01FB  00CF               	movwf	??_I2C_Master_Init+2
  1605  01FC  084C               	movf	I2C_Master_Init@c+3,w
  1606  01FD  00D0               	movwf	??_I2C_Master_Init+3
  1607  01FE  3002               	movlw	2
  1608  01FF                     u385:
  1609  01FF  1003               	clrc
  1610  0200  0DCD               	rlf	??_I2C_Master_Init,f
  1611  0201  0DCE               	rlf	??_I2C_Master_Init+1,f
  1612  0202  0DCF               	rlf	??_I2C_Master_Init+2,f
  1613  0203  0DD0               	rlf	??_I2C_Master_Init+3,f
  1614  0204                     u380:
  1615  0204  3EFF               	addlw	-1
  1616  0205  1D03               	skipz
  1617  0206  29FF               	goto	u385
  1618  0207  0850               	movf	??_I2C_Master_Init+3,w
  1619  0208  00BE               	movwf	___lldiv@divisor+3
  1620  0209  084F               	movf	??_I2C_Master_Init+2,w
  1621  020A  00BD               	movwf	___lldiv@divisor+2
  1622  020B  084E               	movf	??_I2C_Master_Init+1,w
  1623  020C  00BC               	movwf	___lldiv@divisor+1
  1624  020D  084D               	movf	??_I2C_Master_Init,w
  1625  020E  00BB               	movwf	___lldiv@divisor
  1626  020F  3000               	movlw	0
  1627  0210  00C2               	movwf	___lldiv@dividend+3
  1628  0211  303D               	movlw	61
  1629  0212  00C1               	movwf	___lldiv@dividend+2
  1630  0213  3009               	movlw	9
  1631  0214  00C0               	movwf	___lldiv@dividend+1
  1632  0215  3000               	movlw	0
  1633  0216  00BF               	movwf	___lldiv@dividend
  1634  0217  120A  118A  2127  120A  118A  	fcall	___lldiv
  1635  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1636  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1637  021E  083B               	movf	?___lldiv,w
  1638  021F  3EFF               	addlw	255
  1639  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1640  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1641  0222  0093               	movwf	19	;volatile
  1642  0223                     l1523:
  1643                           
  1644                           ;I2C.c: 21:     SSPSTAT = 0;
  1645  0223  0194               	clrf	20	;volatile
  1646  0224                     l1525:
  1647                           
  1648                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1649  0224  1587               	bsf	7,3	;volatile
  1650  0225                     l1527:
  1651                           
  1652                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1653  0225  1607               	bsf	7,4	;volatile
  1654  0226                     l200:
  1655  0226  0008               	return
  1656  0227                     __end_of_I2C_Master_Init:
  1657                           
  1658                           	psect	text9
  1659  0127                     __ptext9:	
  1660 ;; *************** function ___lldiv *****************
  1661 ;; Defined at:
  1662 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  divisor         4    0[BANK0 ] unsigned long 
  1665 ;;  dividend        4    4[BANK0 ] unsigned long 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  quotient        4    9[BANK0 ] unsigned long 
  1668 ;;  counter         1   13[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  4    0[BANK0 ] unsigned long 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, btemp+1
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       8       0       0       0
  1679 ;;      Locals:         0       5       0       0       0
  1680 ;;      Temps:          0       1       0       0       0
  1681 ;;      Totals:         0      14       0       0       0
  1682 ;;Total ram usage:       14 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    2
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_I2C_Master_Init
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function ___lldiv
  1694  0127                     ___lldiv:
  1695  0127                     l1491:	
  1696                           ;incstack = 0
  1697                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1698                           
  1699  0127  3000               	movlw	0
  1700  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1702  012A  00C7               	movwf	___lldiv@quotient+3
  1703  012B  3000               	movlw	0
  1704  012C  00C6               	movwf	___lldiv@quotient+2
  1705  012D  3000               	movlw	0
  1706  012E  00C5               	movwf	___lldiv@quotient+1
  1707  012F  3000               	movlw	0
  1708  0130  00C4               	movwf	___lldiv@quotient
  1709  0131  083E               	movf	___lldiv@divisor+3,w
  1710  0132  043D               	iorwf	___lldiv@divisor+2,w
  1711  0133  043C               	iorwf	___lldiv@divisor+1,w
  1712  0134  043B               	iorwf	___lldiv@divisor,w
  1713  0135  1903               	skipnz
  1714  0136  2938               	goto	u311
  1715  0137  2939               	goto	u310
  1716  0138                     u311:
  1717  0138  2986               	goto	l1513
  1718  0139                     u310:
  1719  0139                     l1493:
  1720  0139  01C8               	clrf	___lldiv@counter
  1721  013A  0AC8               	incf	___lldiv@counter,f
  1722  013B  2949               	goto	l1499
  1723  013C                     l1495:
  1724  013C  3001               	movlw	1
  1725  013D  00C3               	movwf	??___lldiv
  1726  013E                     u325:
  1727  013E  1003               	clrc
  1728  013F  0DBB               	rlf	___lldiv@divisor,f
  1729  0140  0DBC               	rlf	___lldiv@divisor+1,f
  1730  0141  0DBD               	rlf	___lldiv@divisor+2,f
  1731  0142  0DBE               	rlf	___lldiv@divisor+3,f
  1732  0143  0BC3               	decfsz	??___lldiv,f
  1733  0144  293E               	goto	u325
  1734  0145                     l1497:
  1735  0145  3001               	movlw	1
  1736  0146  00FF               	movwf	btemp+1
  1737  0147  087F               	movf	btemp+1,w
  1738  0148  07C8               	addwf	___lldiv@counter,f
  1739  0149                     l1499:
  1740  0149  1FBE               	btfss	___lldiv@divisor+3,7
  1741  014A  294C               	goto	u331
  1742  014B  294D               	goto	u330
  1743  014C                     u331:
  1744  014C  293C               	goto	l1495
  1745  014D                     u330:
  1746  014D                     l1501:
  1747  014D  3001               	movlw	1
  1748  014E  00C3               	movwf	??___lldiv
  1749  014F                     u345:
  1750  014F  1003               	clrc
  1751  0150  0DC4               	rlf	___lldiv@quotient,f
  1752  0151  0DC5               	rlf	___lldiv@quotient+1,f
  1753  0152  0DC6               	rlf	___lldiv@quotient+2,f
  1754  0153  0DC7               	rlf	___lldiv@quotient+3,f
  1755  0154  0BC3               	decfsz	??___lldiv,f
  1756  0155  294F               	goto	u345
  1757  0156                     l1503:
  1758  0156  083E               	movf	___lldiv@divisor+3,w
  1759  0157  0242               	subwf	___lldiv@dividend+3,w
  1760  0158  1D03               	skipz
  1761  0159  2964               	goto	u355
  1762  015A  083D               	movf	___lldiv@divisor+2,w
  1763  015B  0241               	subwf	___lldiv@dividend+2,w
  1764  015C  1D03               	skipz
  1765  015D  2964               	goto	u355
  1766  015E  083C               	movf	___lldiv@divisor+1,w
  1767  015F  0240               	subwf	___lldiv@dividend+1,w
  1768  0160  1D03               	skipz
  1769  0161  2964               	goto	u355
  1770  0162  083B               	movf	___lldiv@divisor,w
  1771  0163  023F               	subwf	___lldiv@dividend,w
  1772  0164                     u355:
  1773  0164  1C03               	skipc
  1774  0165  2967               	goto	u351
  1775  0166  2968               	goto	u350
  1776  0167                     u351:
  1777  0167  2977               	goto	l1509
  1778  0168                     u350:
  1779  0168                     l1505:
  1780  0168  083B               	movf	___lldiv@divisor,w
  1781  0169  02BF               	subwf	___lldiv@dividend,f
  1782  016A  083C               	movf	___lldiv@divisor+1,w
  1783  016B  1C03               	skipc
  1784  016C  0F3C               	incfsz	___lldiv@divisor+1,w
  1785  016D  02C0               	subwf	___lldiv@dividend+1,f
  1786  016E  083D               	movf	___lldiv@divisor+2,w
  1787  016F  1C03               	skipc
  1788  0170  0F3D               	incfsz	___lldiv@divisor+2,w
  1789  0171  02C1               	subwf	___lldiv@dividend+2,f
  1790  0172  083E               	movf	___lldiv@divisor+3,w
  1791  0173  1C03               	skipc
  1792  0174  0F3E               	incfsz	___lldiv@divisor+3,w
  1793  0175  02C2               	subwf	___lldiv@dividend+3,f
  1794  0176                     l1507:
  1795  0176  1444               	bsf	___lldiv@quotient,0
  1796  0177                     l1509:
  1797  0177  3001               	movlw	1
  1798  0178                     u365:
  1799  0178  1003               	clrc
  1800  0179  0CBE               	rrf	___lldiv@divisor+3,f
  1801  017A  0CBD               	rrf	___lldiv@divisor+2,f
  1802  017B  0CBC               	rrf	___lldiv@divisor+1,f
  1803  017C  0CBB               	rrf	___lldiv@divisor,f
  1804  017D  3EFF               	addlw	-1
  1805  017E  1D03               	skipz
  1806  017F  2978               	goto	u365
  1807  0180                     l1511:
  1808  0180  3001               	movlw	1
  1809  0181  02C8               	subwf	___lldiv@counter,f
  1810  0182  1D03               	btfss	3,2
  1811  0183  2985               	goto	u371
  1812  0184  2986               	goto	u370
  1813  0185                     u371:
  1814  0185  294D               	goto	l1501
  1815  0186                     u370:
  1816  0186                     l1513:
  1817  0186  0847               	movf	___lldiv@quotient+3,w
  1818  0187  00BE               	movwf	?___lldiv+3
  1819  0188  0846               	movf	___lldiv@quotient+2,w
  1820  0189  00BD               	movwf	?___lldiv+2
  1821  018A  0845               	movf	___lldiv@quotient+1,w
  1822  018B  00BC               	movwf	?___lldiv+1
  1823  018C  0844               	movf	___lldiv@quotient,w
  1824  018D  00BB               	movwf	?___lldiv
  1825  018E                     l379:
  1826  018E  0008               	return
  1827  018F                     __end_of___lldiv:
  1828                           
  1829                           	psect	text10
  1830  025A                     __ptext10:	
  1831 ;; *************** function _ISR *****************
  1832 ;; Defined at:
  1833 ;;		line 89 in file "master.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0
  1849 ;;      Temps:          4       0       0       0       0
  1850 ;;      Totals:         4       0       0       0       0
  1851 ;;Total ram usage:        4 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    1
  1854 ;; This function calls:
  1855 ;;		_mandar
  1856 ;; This function is called by:
  1857 ;;		Interrupt level 1
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _ISR
  1863  025A                     _ISR:
  1864  025A                     i1l1329:
  1865  025A  1D0B               	btfss	11,2	;volatile
  1866  025B  2A5D               	goto	u25_21
  1867  025C  2A5E               	goto	u25_20
  1868  025D                     u25_21:
  1869  025D  2A65               	goto	i1l1337
  1870  025E                     u25_20:
  1871  025E                     i1l1331:
  1872  025E  30EC               	movlw	236
  1873  025F  0081               	movwf	1	;volatile
  1874  0260                     i1l1333:
  1875  0260  3001               	movlw	1
  1876  0261  00FF               	movwf	btemp+1
  1877  0262  087F               	movf	btemp+1,w
  1878  0263  07F5               	addwf	_CONT,f
  1879  0264                     i1l1335:
  1880  0264  110B               	bcf	11,2	;volatile
  1881  0265                     i1l1337:
  1882  0265  1E0C               	btfss	12,4	;volatile
  1883  0266  2A68               	goto	u26_21
  1884  0267  2A69               	goto	u26_20
  1885  0268                     u26_21:
  1886  0268  2A75               	goto	i1l127
  1887  0269                     u26_20:
  1888  0269                     i1l1339:
  1889  0269  120A  118A  2028  120A  118A  	fcall	_mandar
  1890  026E                     i1l1341:
  1891  026E  3001               	movlw	1
  1892  026F  00FF               	movwf	btemp+1
  1893  0270  087F               	movf	btemp+1,w
  1894  0271  07F4               	addwf	_SEND,f
  1895  0272                     i1l1343:
  1896  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1898  0274  120C               	bcf	12,4	;volatile
  1899  0275                     i1l127:
  1900  0275  087B               	movf	??_ISR+3,w
  1901  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0277  00FF               	movwf	btemp+1
  1903  0278  087A               	movf	??_ISR+2,w
  1904  0279  008A               	movwf	10
  1905  027A  0879               	movf	??_ISR+1,w
  1906  027B  0084               	movwf	4
  1907  027C  0E78               	swapf	??_ISR^(0+4294967168),w
  1908  027D  0083               	movwf	3
  1909  027E  0EFE               	swapf	btemp,f
  1910  027F  0E7E               	swapf	btemp,w
  1911  0280  0009               	retfie
  1912  0281                     __end_of_ISR:
  1913                           
  1914                           	psect	intentry
  1915  0004                     __pintentry:	
  1916                           ;incstack = 0
  1917                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1918                           
  1919  0004                     interrupt_function:
  1920  007E                     saved_w	set	btemp
  1921  0004  00FE               	movwf	btemp
  1922  0005  0E03               	swapf	3,w
  1923  0006  00F8               	movwf	??_ISR
  1924  0007  0804               	movf	4,w
  1925  0008  00F9               	movwf	??_ISR+1
  1926  0009  080A               	movf	10,w
  1927  000A  00FA               	movwf	??_ISR+2
  1928  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1929  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1930  000D  087F               	movf	btemp+1,w
  1931  000E  00FB               	movwf	??_ISR+3
  1932  000F  120A  118A  2A5A   	ljmp	_ISR
  1933                           
  1934                           	psect	text11
  1935  0028                     __ptext11:	
  1936 ;; *************** function _mandar *****************
  1937 ;; Defined at:
  1938 ;;		line 173 in file "master.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          2       0       0       0       0
  1955 ;;      Totals:         2       0       0       0       0
  1956 ;;Total ram usage:        2 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_ISR
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _mandar
  1967  0028                     _mandar:
  1968  0028                     i1l1243:	
  1969                           ;incstack = 0
  1970                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  1971                           
  1972                           
  1973                           ;master.c: 174:     switch (SEND) {
  1974  0028  287A               	goto	i1l1285
  1975  0029                     i1l1245:
  1976                           
  1977                           ;master.c: 177:             TXREG = SU;
  1978  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1979  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1980  002B  082B               	movf	_SU,w
  1981  002C  0099               	movwf	25	;volatile
  1982                           
  1983                           ;master.c: 178:             break;
  1984  002D  28BA               	goto	i1l162
  1985  002E                     i1l1247:
  1986                           
  1987                           ;master.c: 180:             TXREG = SD;
  1988  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1989  002F  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0030  082A               	movf	_SD,w
  1991  0031  0099               	movwf	25	;volatile
  1992                           
  1993                           ;master.c: 181:             break;
  1994  0032  28BA               	goto	i1l162
  1995  0033                     i1l1249:
  1996                           
  1997                           ;master.c: 184:             TXREG = 0x3A;
  1998  0033  303A               	movlw	58
  1999  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0036  0099               	movwf	25	;volatile
  2002                           
  2003                           ;master.c: 185:             break;
  2004  0037  28BA               	goto	i1l162
  2005  0038                     i1l1251:
  2006                           
  2007                           ;master.c: 188:             TXREG = MU;
  2008  0038  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0039  1303               	bcf	3,6	;RP1=0, select bank0
  2010  003A  0829               	movf	_MU,w
  2011  003B  0099               	movwf	25	;volatile
  2012                           
  2013                           ;master.c: 189:             break;
  2014  003C  28BA               	goto	i1l162
  2015  003D                     i1l1253:
  2016                           
  2017                           ;master.c: 191:             TXREG = MD;
  2018  003D  1283               	bcf	3,5	;RP0=0, select bank0
  2019  003E  1303               	bcf	3,6	;RP1=0, select bank0
  2020  003F  0828               	movf	_MD,w
  2021  0040  0099               	movwf	25	;volatile
  2022                           
  2023                           ;master.c: 192:             break;
  2024  0041  28BA               	goto	i1l162
  2025  0042                     i1l1257:
  2026                           
  2027                           ;master.c: 197:             TXREG = HU;
  2028  0042  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0043  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0044  0827               	movf	_HU,w
  2031  0045  0099               	movwf	25	;volatile
  2032                           
  2033                           ;master.c: 198:             break;
  2034  0046  28BA               	goto	i1l162
  2035  0047                     i1l1259:
  2036                           
  2037                           ;master.c: 201:             TXREG = HD;
  2038  0047  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0048  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0049  0826               	movf	_HD,w
  2041  004A  0099               	movwf	25	;volatile
  2042                           
  2043                           ;master.c: 202:             break;
  2044  004B  28BA               	goto	i1l162
  2045  004C                     i1l1261:
  2046                           
  2047                           ;master.c: 205:             TXREG = 0x20;
  2048  004C  3020               	movlw	32
  2049  004D  1283               	bcf	3,5	;RP0=0, select bank0
  2050  004E  1303               	bcf	3,6	;RP1=0, select bank0
  2051  004F  0099               	movwf	25	;volatile
  2052                           
  2053                           ;master.c: 206:             break;
  2054  0050  28BA               	goto	i1l162
  2055  0051                     i1l1263:
  2056                           
  2057                           ;master.c: 209:             TXREG = DAYU;
  2058  0051  0871               	movf	_DAYU,w
  2059  0052  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0053  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0054  0099               	movwf	25	;volatile
  2062                           
  2063                           ;master.c: 210:             break;
  2064  0055  28BA               	goto	i1l162
  2065  0056                     i1l1265:
  2066                           
  2067                           ;master.c: 213:             TXREG = DAYD;
  2068  0056  0870               	movf	_DAYD,w
  2069  0057  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0058  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0059  0099               	movwf	25	;volatile
  2072                           
  2073                           ;master.c: 214:             break;
  2074  005A  28BA               	goto	i1l162
  2075  005B                     i1l1267:
  2076                           
  2077                           ;master.c: 217:             TXREG = 0x2F;
  2078  005B  302F               	movlw	47
  2079  005C  1283               	bcf	3,5	;RP0=0, select bank0
  2080  005D  1303               	bcf	3,6	;RP1=0, select bank0
  2081  005E  0099               	movwf	25	;volatile
  2082                           
  2083                           ;master.c: 218:             break;
  2084  005F  28BA               	goto	i1l162
  2085  0060                     i1l1269:
  2086                           
  2087                           ;master.c: 220:             TXREG = MOU;
  2088  0060  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0061  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0062  0823               	movf	_MOU,w
  2091  0063  0099               	movwf	25	;volatile
  2092                           
  2093                           ;master.c: 221:             break;
  2094  0064  28BA               	goto	i1l162
  2095  0065                     i1l1271:
  2096                           
  2097                           ;master.c: 224:             TXREG = MOD;
  2098  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0067  0822               	movf	_MOD,w
  2101  0068  0099               	movwf	25	;volatile
  2102                           
  2103                           ;master.c: 225:             break;
  2104  0069  28BA               	goto	i1l162
  2105  006A                     i1l1275:
  2106                           
  2107                           ;master.c: 231:             TXREG = YU;
  2108  006A  1283               	bcf	3,5	;RP0=0, select bank0
  2109  006B  1303               	bcf	3,6	;RP1=0, select bank0
  2110  006C  0821               	movf	_YU,w
  2111  006D  0099               	movwf	25	;volatile
  2112                           
  2113                           ;master.c: 232:             break;
  2114  006E  28BA               	goto	i1l162
  2115  006F                     i1l1277:
  2116                           
  2117                           ;master.c: 235:             TXREG = YD;
  2118  006F  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0070  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0071  0820               	movf	_YD,w
  2121  0072  0099               	movwf	25	;volatile
  2122                           
  2123                           ;master.c: 236:             break;
  2124  0073  28BA               	goto	i1l162
  2125  0074                     i1l1279:
  2126                           
  2127                           ;master.c: 239:             TXREG = 0x0D;
  2128  0074  300D               	movlw	13
  2129  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2130  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2131  0077  0099               	movwf	25	;volatile
  2132  0078                     i1l1281:
  2133                           
  2134                           ;master.c: 240:             SEND = 0;
  2135  0078  01F4               	clrf	_SEND
  2136                           
  2137                           ;master.c: 241:             break;
  2138  0079  28BA               	goto	i1l162
  2139  007A                     i1l1285:
  2140  007A  0874               	movf	_SEND,w
  2141  007B  00F6               	movwf	??_mandar
  2142  007C  01F7               	clrf	??_mandar+1
  2143                           
  2144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2145                           ; Switch size 1, requested type "simple"
  2146                           ; Number of cases is 1, Range of values is 0 to 0
  2147                           ; switch strategies available:
  2148                           ; Name         Instructions Cycles
  2149                           ; simple_byte            4     3 (average)
  2150                           ; direct_byte           11     8 (fixed)
  2151                           ; jumptable            260     6 (fixed)
  2152                           ;	Chosen strategy is simple_byte
  2153  007D  0877               	movf	??_mandar+1,w
  2154  007E  3A00               	xorlw	0	; case 0
  2155  007F  1903               	skipnz
  2156  0080  2882               	goto	i1l1693
  2157  0081  28BA               	goto	i1l162
  2158  0082                     i1l1693:
  2159                           
  2160                           ; Switch size 1, requested type "simple"
  2161                           ; Number of cases is 18, Range of values is 0 to 17
  2162                           ; switch strategies available:
  2163                           ; Name         Instructions Cycles
  2164                           ; simple_byte           55    28 (average)
  2165                           ; direct_byte           62     8 (fixed)
  2166                           ; jumptable            260     6 (fixed)
  2167                           ;	Chosen strategy is simple_byte
  2168  0082  0876               	movf	??_mandar,w
  2169  0083  3A00               	xorlw	0	; case 0
  2170  0084  1903               	skipnz
  2171  0085  2829               	goto	i1l1245
  2172  0086  3A01               	xorlw	1	; case 1
  2173  0087  1903               	skipnz
  2174  0088  282E               	goto	i1l1247
  2175  0089  3A03               	xorlw	3	; case 2
  2176  008A  1903               	skipnz
  2177  008B  2833               	goto	i1l1249
  2178  008C  3A01               	xorlw	1	; case 3
  2179  008D  1903               	skipnz
  2180  008E  2838               	goto	i1l1251
  2181  008F  3A07               	xorlw	7	; case 4
  2182  0090  1903               	skipnz
  2183  0091  283D               	goto	i1l1253
  2184  0092  3A01               	xorlw	1	; case 5
  2185  0093  1903               	skipnz
  2186  0094  2833               	goto	i1l1249
  2187  0095  3A03               	xorlw	3	; case 6
  2188  0096  1903               	skipnz
  2189  0097  2842               	goto	i1l1257
  2190  0098  3A01               	xorlw	1	; case 7
  2191  0099  1903               	skipnz
  2192  009A  2847               	goto	i1l1259
  2193  009B  3A0F               	xorlw	15	; case 8
  2194  009C  1903               	skipnz
  2195  009D  284C               	goto	i1l1261
  2196  009E  3A01               	xorlw	1	; case 9
  2197  009F  1903               	skipnz
  2198  00A0  2851               	goto	i1l1263
  2199  00A1  3A03               	xorlw	3	; case 10
  2200  00A2  1903               	skipnz
  2201  00A3  2856               	goto	i1l1265
  2202  00A4  3A01               	xorlw	1	; case 11
  2203  00A5  1903               	skipnz
  2204  00A6  285B               	goto	i1l1267
  2205  00A7  3A07               	xorlw	7	; case 12
  2206  00A8  1903               	skipnz
  2207  00A9  2860               	goto	i1l1269
  2208  00AA  3A01               	xorlw	1	; case 13
  2209  00AB  1903               	skipnz
  2210  00AC  2865               	goto	i1l1271
  2211  00AD  3A03               	xorlw	3	; case 14
  2212  00AE  1903               	skipnz
  2213  00AF  285B               	goto	i1l1267
  2214  00B0  3A01               	xorlw	1	; case 15
  2215  00B1  1903               	skipnz
  2216  00B2  286A               	goto	i1l1275
  2217  00B3  3A1F               	xorlw	31	; case 16
  2218  00B4  1903               	skipnz
  2219  00B5  286F               	goto	i1l1277
  2220  00B6  3A01               	xorlw	1	; case 17
  2221  00B7  1903               	skipnz
  2222  00B8  2874               	goto	i1l1279
  2223  00B9  28BA               	goto	i1l162
  2224  00BA                     i1l162:
  2225  00BA  0008               	return
  2226  00BB                     __end_of_mandar:
  2227  007E                     btemp	set	126	;btemp
  2228  007E                     wtemp0	set	126
  2229                           
  2230                           	psect	config
  2231                           
  2232                           ;Config register CONFIG1 @ 0x2007
  2233                           ;	Oscillator Selection bits
  2234                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2235                           ;	Watchdog Timer Enable bit
  2236                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2237                           ;	Power-up Timer Enable bit
  2238                           ;	PWRTE = OFF, PWRT disabled
  2239                           ;	RE3/MCLR pin function select bit
  2240                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2241                           ;	Code Protection bit
  2242                           ;	CP = OFF, Program memory code protection is disabled
  2243                           ;	Data Code Protection bit
  2244                           ;	CPD = OFF, Data memory code protection is disabled
  2245                           ;	Brown Out Reset Selection bits
  2246                           ;	BOREN = OFF, BOR disabled
  2247                           ;	Internal External Switchover bit
  2248                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2249                           ;	Fail-Safe Clock Monitor Enabled bit
  2250                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2251                           ;	Low Voltage Programming Enable bit
  2252                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2253                           ;	In-Circuit Debugger Mode bit
  2254                           ;	DEBUG = 0x1, unprogrammed default
  2255  2007                     	org	8199
  2256  2007  20D4               	dw	8404
  2257                           
  2258                           ;Config register CONFIG2 @ 0x2008
  2259                           ;	Brown-out Reset Selection bit
  2260                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2261                           ;	Flash Program Memory Self Write Enable bits
  2262                           ;	WRT = OFF, Write protection off
  2263  2008                     	org	8200
  2264  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     22      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_mandar

Critical Paths under _main in BANK0

    _timeout->_I2C_Master_Write
    _Setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1684
                              _Setup
                            _timeout
 ---------------------------------------------------------------------------------
 (1) _timeout                                              0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     573
                    _I2C_Master_Init
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              2 COMMON     4     4      0
                             _mandar
 ---------------------------------------------------------------------------------
 (5) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _I2C_Master_Init
       ___lldiv
     _initOsc
   _timeout
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _ISR (ROOT)
   _mandar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3D      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Mar 02 01:12:38 2021

                        _H 003A                         _DD 0024                         _HD 0026  
                       _DU 0025                         _MD 0028                         _HU 0027  
                       _SD 002A                         _MU 0029                         _YD 0020  
                       _SU 002B                         _YU 0021                         fsr 0004  
                      l200 0226                        l203 029C                        l133 0298  
                      l206 02A8                        l134 0298                        l215 02BB  
                      l240 01BD                        l232 0193                        l136 0299  
                      l241 01C3                        l233 01EB                        l209 02C4  
                      l242 01EC                        l234 0199                        l218 02B2  
                      l235 019F                        l139 0259                        l236 01A5  
                      l237 01AB                        l165 0126                        l238 01B1  
                      l239 01B7                        l379 018E                        _DAY 0039  
                      _GIE 005F                        u300 02A8                        u301 02A7  
                      u310 0139                        u311 0138                        u330 014D  
                      u331 014C                        _MIN 0072                        u325 013E  
                      u350 0168                        _MOD 0022                        u351 0167  
                      u345 014F                        _SEC 0073                        u370 0186  
                      u290 02A2                        u371 0185                        u355 0164  
                      u291 02A1                        u380 0204                        _ISR 025A  
                      u365 0178                        u390 0291                        u391 0290  
                      u385 01FF                        _MOU 0023                        fsr0 0004  
                      indf 0000                       ?_ISR 0076                       l1501 014D  
                     l1511 0180                       l1503 0156                       l1505 0168  
                     l1513 0186                       l1521 01F4                       l1601 0295  
                     l1507 0176                       l1523 0223                       l1509 0177  
                     l1525 0224                       l1517 01ED                       l1533 01C9  
                     l1541 02BC                       l1527 0225                       l1519 01F1  
                     l1543 02C1                       l1551 02B8                       l1529 0192  
                     l1561 0240                       l1553 0227                       l1545 02A9  
                     l1491 0127                       l1571 0249                       l1563 0243  
                     l1555 0236                       l1547 02AE                       l1493 0139  
                     l1581 0251                       l1573 024A                       l1565 0244  
                     l1557 023C                       l1549 02B3                       l1495 013C  
                     l1583 0252                       l1575 024B                       l1567 0247  
                     l1559 023F                       l1487 029C                       l1591 0281  
                     l1497 0145                       l1585 0253                       l1577 024E  
                     l1569 0248                       l1489 02A2                       l1593 0286  
                     l1499 0149                       l1691 01D1                       l1587 0256  
                     l1579 024F                       l1595 028B                       l1589 00BB  
                     l1597 0291                       l1599 0294                       _DAYD 0070  
                     _DAYU 0071                       _NADA 0036                       _CONT 0075  
                     _PEIE 005E                       _MIND 0032                       _SECD 0034  
                     _MINU 0033                       _SECU 0035                       _SEND 0074  
                     _TMR0 0001                       _YEAR 0037                       _main 0281  
                     btemp 007E                       start 0012                      ??_ISR 0078  
         ?_I2C_Master_Init 0049           ?_I2C_Master_Wait 0076           ?_I2C_Master_Stop 0076  
                    ?_main 0076                      _ANSEL 0188            __end_of___lldiv 018F  
                    _HORAD 0030                      i1l127 0275                      i1l162 00BA  
                    _HORAU 0031                      _MONTH 0038                      u25_20 025E  
                    u25_21 025D                      u26_20 0269                      u26_21 0268  
                    _SPBRG 0099                      _YEARD 002C                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _YEARU 002D                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      _TXREG 0019  
                    _Setup 0227            __end_of_initOsc 01ED                      pclath 000A  
          __end_of_timeout 0127                      status 0003                      wtemp0 007E  
          __initialization 0015               __end_of_main 029C                     ??_main 0051  
        ?_I2C_Master_Start 0076          ?_I2C_Master_Write 003B                     ?_Setup 0076  
       ??_I2C_Master_Start 003B         ??_I2C_Master_Write 003D                initOsc@IRCF 003D  
                   _ANSELH 0189                     i1l1251 0038                     i1l1243 0028  
                   i1l1331 025E                     i1l1261 004C                     i1l1253 003D  
                   i1l1245 0029                     i1l1341 026E                     i1l1333 0260  
                   i1l1271 0065                     i1l1263 0051                     i1l1247 002E  
                   i1l1343 0272                     i1l1335 0264                     i1l1281 0078  
                   i1l1265 0056                     i1l1257 0042                     i1l1249 0033  
                   i1l1337 0265                     i1l1329 025A                     i1l1275 006A  
                   i1l1267 005B                     i1l1259 0047                     i1l1339 0269  
                   i1l1277 006F                     i1l1269 0060                     i1l1285 007A  
                   i1l1279 0074                     i1l1693 0082                     _MONTHD 002E  
                   _MONTHU 002F                     _SPBRGH 009A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___lldiv 0043                     _mandar 0028  
                ??_initOsc 003B                     saved_w 007E                  ??_timeout 003D  
  __end_of__initialization 0024             __pcstackCOMMON 0076              __end_of_Setup 025A  
                  ??_Setup 0051                 __pbssBANK0 0020                 __pmaintext 0281  
               __pintentry 0004                    ?_mandar 0076                    _SSPCON2 0091  
                  _SSPSTAT 0094                    ___lldiv 0127            __size_of_mandar 0093  
                  __ptext1 00BB                    __ptext2 02A9                    __ptext3 02B3  
                  __ptext4 02BC                    __ptext5 029C                    __ptext6 0227  
                  __ptext7 018F                    __ptext8 01ED                    __ptext9 0127  
             __size_of_ISR 0027                    _initOsc 018F   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009                    _timeout 00BB  
                  clrloop0 02C6       end_of_initialization 0024  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 003B            ___lldiv@counter 0048  
                _RCSTAbits 0018           I2C_Master_Init@c 0049                  _TRISCbits 0087  
                _TXSTAbits 0098                _BAUDCTLbits 0187             __end_of_mandar 00BB  
      start_initialization 0015                __end_of_ISR 0281          ??_I2C_Master_Init 004D  
        ??_I2C_Master_Wait 003B          ??_I2C_Master_Stop 003B                   ??_mandar 0076  
              __pbssCOMMON 0070                  ___latbits 0002              __pcstackBANK0 003B  
         _I2C_Master_Start 02BC           _I2C_Master_Write 02A9                   ?___lldiv 003B  
                 ?_initOsc 0076             __size_of_Setup 0033                   ?_timeout 0076  
        interrupt_function 0004                  clear_ram0 02C5                   _PIE1bits 008C  
                 _PIR1bits 000C                 _ADCON0bits 001F           __size_of___lldiv 0068  
          _I2C_Master_Init 01ED            _I2C_Master_Wait 029C            _I2C_Master_Stop 02B3  
         __size_of_initOsc 005E                   __ptext10 025A                   __ptext11 0028  
         __size_of_timeout 006C              __size_of_main 001B   __end_of_I2C_Master_Start 02C5  
 __end_of_I2C_Master_Write 02B3                 _INTCONbits 000B                   intlevel1 0000  
         ___lldiv@dividend 003F                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0227  
  __end_of_I2C_Master_Wait 02A9    __end_of_I2C_Master_Stop 02BC                 _OPTION_REG 0081  
         ___lldiv@quotient 0044          I2C_Master_Write@d 003B                _SSPCON2bits 0091  
