

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Mar 05 22:58:22 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 09/04/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  0013                     _SSPBUF	set	19
   457  0014                     _SSPCON	set	20
   458  0005                     _PORTAbits	set	5
   459  0019                     _TXREG	set	25
   460  0009                     _PORTE	set	9
   461  0008                     _PORTD	set	8
   462  0007                     _PORTC	set	7
   463  0006                     _PORTB	set	6
   464  0005                     _PORTA	set	5
   465  001A                     _RCREG	set	26
   466  000C                     _PIR1bits	set	12
   467  0001                     _TMR0	set	1
   468  000B                     _INTCONbits	set	11
   469  0063                     _SSPIF	set	99
   470  005E                     _PEIE	set	94
   471  005F                     _GIE	set	95
   472  0099                     _SPBRG	set	153
   473  009A                     _SPBRGH	set	154
   474  0098                     _TXSTAbits	set	152
   475  008F                     _OSCCONbits	set	143
   476  0091                     _SSPCON2bits	set	145
   477  0087                     _TRISCbits	set	135
   478  0094                     _SSPSTAT	set	148
   479  0093                     _SSPADD	set	147
   480  0091                     _SSPCON2	set	145
   481  0081                     _OPTION_REG	set	129
   482  0089                     _TRISE	set	137
   483  0088                     _TRISD	set	136
   484  0086                     _TRISB	set	134
   485  0085                     _TRISA	set	133
   486  008C                     _PIE1bits	set	140
   487  0463                     _SSPIE	set	1123
   488  043C                     _TRISC4	set	1084
   489  043B                     _TRISC3	set	1083
   490  0187                     _BAUDCTLbits	set	391
   491  0189                     _ANSELH	set	393
   492  0188                     _ANSEL	set	392
   493                           
   494                           	psect	cinit
   495  0015                     start_initialization:	
   496                           ; #config settings
   497                           
   498  0015                     __initialization:
   499                           
   500                           ; Clear objects allocated to COMMON
   501  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   502  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   503  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   504  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   505  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   506  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   507                           
   508                           ; Clear objects allocated to BANK0
   509  001B  1383               	bcf	3,7	;select IRP bank0
   510  001C  3020               	movlw	low __pbssBANK0
   511  001D  0084               	movwf	4
   512  001E  303D               	movlw	low (__pbssBANK0+29)
   513  001F  120A  118A  2460  120A  118A  	fcall	clear_ram0
   514  0024                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  0024                     __end_of__initialization:
   518  0024  0183               	clrf	3
   519  0025  120A  118A  2BFE   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMMON
   522  0070                     __pbssCOMMON:
   523  0070                     _TOG:
   524  0070                     	ds	1
   525  0071                     _MONTH:
   526  0071                     	ds	1
   527  0072                     _DAY:
   528  0072                     	ds	1
   529  0073                     _H:
   530  0073                     	ds	1
   531  0074                     _MIN:
   532  0074                     	ds	1
   533  0075                     _SEC:
   534  0075                     	ds	1
   535                           
   536                           	psect	bssBANK0
   537  0020                     __pbssBANK0:
   538  0020                     _FLAG:
   539  0020                     	ds	1
   540  0021                     _YD:
   541  0021                     	ds	1
   542  0022                     _YU:
   543  0022                     	ds	1
   544  0023                     _MOD:
   545  0023                     	ds	1
   546  0024                     _MOU:
   547  0024                     	ds	1
   548  0025                     _DD:
   549  0025                     	ds	1
   550  0026                     _DU:
   551  0026                     	ds	1
   552  0027                     _HD:
   553  0027                     	ds	1
   554  0028                     _HU:
   555  0028                     	ds	1
   556  0029                     _MD:
   557  0029                     	ds	1
   558  002A                     _MU:
   559  002A                     	ds	1
   560  002B                     _SD:
   561  002B                     	ds	1
   562  002C                     _SU:
   563  002C                     	ds	1
   564  002D                     _YEARD:
   565  002D                     	ds	1
   566  002E                     _YEARU:
   567  002E                     	ds	1
   568  002F                     _MONTHD:
   569  002F                     	ds	1
   570  0030                     _MONTHU:
   571  0030                     	ds	1
   572  0031                     _DAYD:
   573  0031                     	ds	1
   574  0032                     _DAYU:
   575  0032                     	ds	1
   576  0033                     _HORAD:
   577  0033                     	ds	1
   578  0034                     _HORAU:
   579  0034                     	ds	1
   580  0035                     _MIND:
   581  0035                     	ds	1
   582  0036                     _MINU:
   583  0036                     	ds	1
   584  0037                     _SECD:
   585  0037                     	ds	1
   586  0038                     _SECU:
   587  0038                     	ds	1
   588  0039                     _NADA:
   589  0039                     	ds	1
   590  003A                     _YEAR:
   591  003A                     	ds	1
   592  003B                     _SEND:
   593  003B                     	ds	1
   594  003C                     _CONT:
   595  003C                     	ds	1
   596                           
   597                           	psect	clrtext
   598  0460                     clear_ram0:	
   599                           ;	Called with FSR containing the base address, and
   600                           ;	W with the last address+1
   601                           
   602  0460  0064               	clrwdt	;clear the watchdog before getting into this loop
   603  0461                     clrloop0:
   604  0461  0180               	clrf	0	;clear RAM location pointed to by FSR
   605  0462  0A84               	incf	4,f	;increment pointer
   606  0463  0604               	xorwf	4,w	;XOR with final address
   607  0464  1903               	btfsc	3,2	;have we reached the end yet?
   608  0465  3400               	retlw	0	;all done for this memory range, return
   609  0466  0604               	xorwf	4,w	;XOR again to restore value
   610  0467  2C61               	goto	clrloop0	;do the next byte
   611                           
   612                           	psect	cstackCOMMON
   613  0076                     __pcstackCOMMON:
   614  0076                     ?_mandar:
   615  0076                     ??_mandar:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0076                     ?_recibir:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0076                     ??_recibir:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0076                     ?_Setup:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0076                     ?_timeout:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0076                     ?_timein:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0076                     ?_conver:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0076                     ?_initOsc:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0076                     ?_usart:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0076                     ?_I2C_Master_Start:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0076                     ?_I2C_Master_Stop:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0076                     ?_I2C_Master_Read:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0076                     ?_ISR:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0076                     ?_main:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0076                     ?_I2C_Master_Wait:	
   658                           ; 1 bytes @ 0x0
   659                           
   660                           
   661                           ; 1 bytes @ 0x0
   662  0076                     	ds	2
   663  0078                     ??_ISR:
   664                           
   665                           ; 1 bytes @ 0x2
   666  0078                     	ds	4
   667                           
   668                           	psect	cstackBANK0
   669  003D                     __pcstackBANK0:
   670  003D                     ??_conver:
   671  003D                     ??_initOsc:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  003D                     ??_usart:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  003D                     ??_I2C_Master_Start:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  003D                     ?_I2C_Master_Write:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  003D                     ??_I2C_Master_Stop:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  003D                     ??_I2C_Master_Read:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  003D                     ??_I2C_Master_Wait:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  003D                     ?___lldiv:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  003D                     I2C_Master_Write@d:	
   696                           ; 4 bytes @ 0x0
   697                           
   698  003D                     ___lldiv@divisor:	
   699                           ; 2 bytes @ 0x0
   700                           
   701                           
   702                           ; 4 bytes @ 0x0
   703  003D                     	ds	2
   704  003F                     ??_timeout:
   705  003F                     ??_I2C_Master_Write:	
   706                           ; 1 bytes @ 0x2
   707                           
   708  003F                     I2C_Master_Read@a:	
   709                           ; 1 bytes @ 0x2
   710                           
   711  003F                     initOsc@IRCF:	
   712                           ; 1 bytes @ 0x2
   713                           
   714                           
   715                           ; 1 bytes @ 0x2
   716  003F                     	ds	1
   717  0040                     I2C_Master_Read@temp:
   718                           
   719                           ; 2 bytes @ 0x3
   720  0040                     	ds	1
   721  0041                     ___lldiv@dividend:
   722                           
   723                           ; 4 bytes @ 0x4
   724  0041                     	ds	1
   725  0042                     ??_timein:
   726                           
   727                           ; 1 bytes @ 0x5
   728  0042                     	ds	3
   729  0045                     ??___lldiv:
   730                           
   731                           ; 1 bytes @ 0x8
   732  0045                     	ds	1
   733  0046                     ___lldiv@quotient:
   734                           
   735                           ; 4 bytes @ 0x9
   736  0046                     	ds	4
   737  004A                     ___lldiv@counter:
   738                           
   739                           ; 1 bytes @ 0xD
   740  004A                     	ds	1
   741  004B                     ?_I2C_Master_Init:
   742  004B                     I2C_Master_Init@c:	
   743                           ; 1 bytes @ 0xE
   744                           
   745                           
   746                           ; 4 bytes @ 0xE
   747  004B                     	ds	4
   748  004F                     ??_I2C_Master_Init:
   749                           
   750                           ; 1 bytes @ 0x12
   751  004F                     	ds	4
   752  0053                     ??_Setup:
   753  0053                     ??_main:	
   754                           ; 1 bytes @ 0x16
   755                           
   756                           
   757                           	psect	maintext
   758  03FE                     __pmaintext:	
   759                           ; 1 bytes @ 0x16
   760 ;;
   761 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   762 ;;
   763 ;; *************** function _main *****************
   764 ;; Defined at:
   765 ;;		line 114 in file "master.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : B00/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         0       0       0       0       0
   783 ;;Total ram usage:        0 bytes
   784 ;; Hardware stack levels required when called:    5
   785 ;; This function calls:
   786 ;;		_Setup
   787 ;;		_conver
   788 ;;		_timein
   789 ;;		_timeout
   790 ;; This function is called by:
   791 ;;		Startup code after reset
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _main
   797  03FE                     _main:
   798  03FE                     l1813:	
   799                           ;incstack = 0
   800                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   801                           
   802                           
   803                           ;master.c: 116:     OPTION_REG = 0b10000111;
   804  03FE  120A  118A  232D  120A  118A  	fcall	_Setup
   805  0403                     l1815:
   806                           
   807                           ;master.c: 117:     INTCONbits.GIE = 1;
   808  0403  120A  118A  21BE  120A  118A  	fcall	_timeout
   809  0408                     l1817:
   810                           
   811                           ;master.c: 124:     PIR1bits.RCIF = 0;
   812  0408  120A  118A  214B  120A  118A  	fcall	_timein
   813  040D                     l1819:
   814                           
   815                           ;master.c: 125:     I2C_Master_Init(100000);
   816  040D  120A  118A  2028  120A  118A  	fcall	_conver
   817  0412                     l1821:
   818                           
   819                           ;master.c: 126: 
   820  0412  301F               	movlw	31
   821  0413  1283               	bcf	3,5	;RP0=0, select bank0
   822  0414  1303               	bcf	3,6	;RP1=0, select bank0
   823  0415  023C               	subwf	_CONT,w
   824  0416  1C03               	skipc
   825  0417  2C19               	goto	u701
   826  0418  2C1A               	goto	u700
   827  0419                     u701:
   828  0419  2C08               	goto	l1817
   829  041A                     u700:
   830  041A                     l1823:
   831                           
   832                           ;master.c: 127: 
   833  041A  01BC               	clrf	_CONT
   834  041B                     l1825:
   835                           
   836                           ;master.c: 128: }
   837  041B  1683               	bsf	3,5	;RP0=1, select bank1
   838  041C  1303               	bcf	3,6	;RP1=0, select bank1
   839  041D  160C               	bsf	12,4	;volatile
   840  041E  2C08               	goto	l1817
   841  041F  120A  118A  2812   	ljmp	start
   842  0422                     __end_of_main:
   843                           
   844                           	psect	text1
   845  01BE                     __ptext1:	
   846 ;; *************** function _timeout *****************
   847 ;; Defined at:
   848 ;;		line 244 in file "master.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         0       0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    4
   869 ;; This function calls:
   870 ;;		_I2C_Master_Start
   871 ;;		_I2C_Master_Stop
   872 ;;		_I2C_Master_Write
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function _timeout
   880  01BE                     _timeout:
   881  01BE                     l1751:	
   882                           ;incstack = 0
   883                           ; Regs used in _timeout: [wreg+status,2+status,0+pclath+cstack]
   884                           
   885                           
   886                           ;master.c: 245:     SECD = ((SEC & 0b11110000) >> 4);
   887  01BE  120A  118A  2457  120A  118A  	fcall	_I2C_Master_Start
   888                           
   889                           ;master.c: 246:     MINU = (MIN & 0b00001111);
   890  01C3  30D0               	movlw	208
   891  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   892  01C5  1303               	bcf	3,6	;RP1=0, select bank0
   893  01C6  00BD               	movwf	I2C_Master_Write@d
   894  01C7  3000               	movlw	0
   895  01C8  00BE               	movwf	I2C_Master_Write@d+1
   896  01C9  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   897                           
   898                           ;master.c: 247:     MIND = ((MIN & 0b11110000) >> 4);
   899  01CE  3000               	movlw	0
   900  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   901  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   902  01D1  00BD               	movwf	I2C_Master_Write@d
   903  01D2  00BE               	movwf	I2C_Master_Write@d+1
   904  01D3  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   905                           
   906                           ;master.c: 248:     HORAU = (H & 0b00001111);
   907  01D8  3000               	movlw	0
   908  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   909  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   910  01DB  00BD               	movwf	I2C_Master_Write@d
   911  01DC  00BE               	movwf	I2C_Master_Write@d+1
   912  01DD  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   913                           
   914                           ;master.c: 249:     HORAD = ((H & 0b00110000) >> 4);
   915  01E2  3000               	movlw	0
   916  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   917  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   918  01E5  00BD               	movwf	I2C_Master_Write@d
   919  01E6  00BE               	movwf	I2C_Master_Write@d+1
   920  01E7  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   921                           
   922                           ;master.c: 250:     DAYU = (DAY & 0b00001111);
   923  01EC  3023               	movlw	35
   924  01ED  1283               	bcf	3,5	;RP0=0, select bank0
   925  01EE  1303               	bcf	3,6	;RP1=0, select bank0
   926  01EF  00BD               	movwf	I2C_Master_Write@d
   927  01F0  3000               	movlw	0
   928  01F1  00BE               	movwf	I2C_Master_Write@d+1
   929  01F2  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   930                           
   931                           ;master.c: 251:     DAYD = ((DAY & 0b11110000) >> 4);
   932  01F7  3001               	movlw	1
   933  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   934  01F9  1303               	bcf	3,6	;RP1=0, select bank0
   935  01FA  00BD               	movwf	I2C_Master_Write@d
   936  01FB  3000               	movlw	0
   937  01FC  00BE               	movwf	I2C_Master_Write@d+1
   938  01FD  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   939                           
   940                           ;master.c: 252:     MONTHU = (MONTH & 0b00001111);
   941  0202  3005               	movlw	5
   942  0203  1283               	bcf	3,5	;RP0=0, select bank0
   943  0204  1303               	bcf	3,6	;RP1=0, select bank0
   944  0205  00BD               	movwf	I2C_Master_Write@d
   945  0206  3000               	movlw	0
   946  0207  00BE               	movwf	I2C_Master_Write@d+1
   947  0208  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   948                           
   949                           ;master.c: 253:     MONTHD = ((MONTH & 0b11110000) >> 4);
   950  020D  3003               	movlw	3
   951  020E  1283               	bcf	3,5	;RP0=0, select bank0
   952  020F  1303               	bcf	3,6	;RP1=0, select bank0
   953  0210  00BD               	movwf	I2C_Master_Write@d
   954  0211  3000               	movlw	0
   955  0212  00BE               	movwf	I2C_Master_Write@d+1
   956  0213  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   957                           
   958                           ;master.c: 254:     YEARU = (YEAR & 0b00001111);
   959  0218  3021               	movlw	33
   960  0219  1283               	bcf	3,5	;RP0=0, select bank0
   961  021A  1303               	bcf	3,6	;RP1=0, select bank0
   962  021B  00BD               	movwf	I2C_Master_Write@d
   963  021C  3000               	movlw	0
   964  021D  00BE               	movwf	I2C_Master_Write@d+1
   965  021E  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
   966                           
   967                           ;master.c: 255:     YEARD = ((YEAR & 0b11110000) >> 4);
   968  0223  120A  118A  244E  120A  118A  	fcall	_I2C_Master_Stop
   969  0228                     l182:
   970  0228  0008               	return
   971  0229                     __end_of_timeout:
   972                           
   973                           	psect	text2
   974  014B                     __ptext2:	
   975 ;; *************** function _timein *****************
   976 ;; Defined at:
   977 ;;		line 259 in file "master.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0
   994 ;;      Totals:         0       0       0       0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    4
   998 ;; This function calls:
   999 ;;		_I2C_Master_Read
  1000 ;;		_I2C_Master_Start
  1001 ;;		_I2C_Master_Stop
  1002 ;;		_I2C_Master_Write
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _timein
  1010  014B                     _timein:
  1011  014B                     l1753:	
  1012                           ;incstack = 0
  1013                           ; Regs used in _timein: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1014                           
  1015                           
  1016                           ;master.c: 260:     MU = (MINU + 0x30);
  1017  014B  120A  118A  2457  120A  118A  	fcall	_I2C_Master_Start
  1018                           
  1019                           ;master.c: 261:     MD = (MIND + 0x30);
  1020  0150  30D0               	movlw	208
  1021  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0153  00BD               	movwf	I2C_Master_Write@d
  1024  0154  3000               	movlw	0
  1025  0155  00BE               	movwf	I2C_Master_Write@d+1
  1026  0156  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
  1027                           
  1028                           ;master.c: 262:     HU = (HORAU + 0x30);
  1029  015B  3000               	movlw	0
  1030  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1031  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1032  015E  00BD               	movwf	I2C_Master_Write@d
  1033  015F  00BE               	movwf	I2C_Master_Write@d+1
  1034  0160  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
  1035                           
  1036                           ;master.c: 264:     DU = (DAYU + 0x30);
  1037  0165  120A  118A  2457  120A  118A  	fcall	_I2C_Master_Start
  1038                           
  1039                           ;master.c: 265:     DD = (DAYD + 0x30);
  1040  016A  30D1               	movlw	209
  1041  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1042  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1043  016D  00BD               	movwf	I2C_Master_Write@d
  1044  016E  3000               	movlw	0
  1045  016F  00BE               	movwf	I2C_Master_Write@d+1
  1046  0170  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Write
  1047  0175                     l1755:
  1048                           
  1049                           ;master.c: 266:     MOU = (MONTHU + 0x30);
  1050  0175  3001               	movlw	1
  1051  0176  120A  118A  23A3  120A  118A  	fcall	_I2C_Master_Read
  1052  017B  00FF               	movwf	btemp+1
  1053  017C  087F               	movf	btemp+1,w
  1054  017D  00F5               	movwf	_SEC
  1055  017E                     l1757:
  1056                           
  1057                           ;master.c: 267:     MOD = (MONTHD + 0x30);
  1058  017E  3001               	movlw	1
  1059  017F  120A  118A  23A3  120A  118A  	fcall	_I2C_Master_Read
  1060  0184  00FF               	movwf	btemp+1
  1061  0185  087F               	movf	btemp+1,w
  1062  0186  00F4               	movwf	_MIN
  1063  0187                     l1759:
  1064                           
  1065                           ;master.c: 268:     YU = (YEARU + 0x30);
  1066  0187  3001               	movlw	1
  1067  0188  120A  118A  23A3  120A  118A  	fcall	_I2C_Master_Read
  1068  018D  00FF               	movwf	btemp+1
  1069  018E  087F               	movf	btemp+1,w
  1070  018F  00F3               	movwf	_H
  1071  0190                     l1761:
  1072                           
  1073                           ;master.c: 269:     YD = (YEARD + 0x30);
  1074  0190  3001               	movlw	1
  1075  0191  120A  118A  23A3  120A  118A  	fcall	_I2C_Master_Read
  1076  0196  00FF               	movwf	btemp+1
  1077  0197  087F               	movf	btemp+1,w
  1078  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1080  019A  00B9               	movwf	_NADA
  1081  019B                     l1763:
  1082                           
  1083                           ;master.c: 270: 
  1084  019B  3001               	movlw	1
  1085  019C  120A  118A  23A3  120A  118A  	fcall	_I2C_Master_Read
  1086  01A1  00FF               	movwf	btemp+1
  1087  01A2  087F               	movf	btemp+1,w
  1088  01A3  00F2               	movwf	_DAY
  1089  01A4                     l1765:
  1090                           
  1091                           ;master.c: 271: 
  1092  01A4  3001               	movlw	1
  1093  01A5  120A  118A  23A3  120A  118A  	fcall	_I2C_Master_Read
  1094  01AA  00FF               	movwf	btemp+1
  1095  01AB  087F               	movf	btemp+1,w
  1096  01AC  00F1               	movwf	_MONTH
  1097  01AD                     l1767:
  1098                           
  1099                           ;master.c: 272: 
  1100  01AD  3000               	movlw	0
  1101  01AE  120A  118A  23A3  120A  118A  	fcall	_I2C_Master_Read
  1102  01B3  00FF               	movwf	btemp+1
  1103  01B4  087F               	movf	btemp+1,w
  1104  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1105  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1106  01B7  00BA               	movwf	_YEAR
  1107  01B8                     l1769:
  1108                           
  1109                           ;master.c: 273: 
  1110  01B8  120A  118A  244E  120A  118A  	fcall	_I2C_Master_Stop
  1111  01BD                     l185:
  1112  01BD  0008               	return
  1113  01BE                     __end_of_timein:
  1114                           
  1115                           	psect	text3
  1116  0444                     __ptext3:	
  1117 ;; *************** function _I2C_Master_Write *****************
  1118 ;; Defined at:
  1119 ;;		line 65 in file "I2C.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  d               2    0[BANK0 ] unsigned int 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, pclath, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         0       2       0       0       0
  1134 ;;      Locals:         0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0
  1136 ;;      Totals:         0       2       0       0       0
  1137 ;;Total ram usage:        2 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    3
  1140 ;; This function calls:
  1141 ;;		_I2C_Master_Wait
  1142 ;; This function is called by:
  1143 ;;		_timeout
  1144 ;;		_timein
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _I2C_Master_Write
  1150  0444                     _I2C_Master_Write:
  1151  0444                     l1681:	
  1152                           ;incstack = 0
  1153                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1154                           
  1155                           
  1156                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1157  0444  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Wait
  1158  0449                     l1683:
  1159                           
  1160                           ;I2C.c: 68:     SSPBUF = d;
  1161  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1162  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1163  044B  083D               	movf	I2C_Master_Write@d,w
  1164  044C  0093               	movwf	19	;volatile
  1165  044D                     l242:
  1166  044D  0008               	return
  1167  044E                     __end_of_I2C_Master_Write:
  1168                           
  1169                           	psect	text4
  1170  044E                     __ptext4:	
  1171 ;; *************** function _I2C_Master_Stop *****************
  1172 ;; Defined at:
  1173 ;;		line 55 in file "I2C.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    3
  1194 ;; This function calls:
  1195 ;;		_I2C_Master_Wait
  1196 ;; This function is called by:
  1197 ;;		_timeout
  1198 ;;		_timein
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           
  1203                           ;psect for function _I2C_Master_Stop
  1204  044E                     _I2C_Master_Stop:
  1205  044E                     l1685:	
  1206                           ;incstack = 0
  1207                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1208                           
  1209                           
  1210                           ;I2C.c: 57:     I2C_Master_Wait();
  1211  044E  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Wait
  1212  0453                     l1687:
  1213                           
  1214                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1215  0453  1683               	bsf	3,5	;RP0=1, select bank1
  1216  0454  1303               	bcf	3,6	;RP1=0, select bank1
  1217  0455  1511               	bsf	17,2	;volatile
  1218  0456                     l239:
  1219  0456  0008               	return
  1220  0457                     __end_of_I2C_Master_Stop:
  1221                           
  1222                           	psect	text5
  1223  0457                     __ptext5:	
  1224 ;; *************** function _I2C_Master_Start *****************
  1225 ;; Defined at:
  1226 ;;		line 39 in file "I2C.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    3
  1247 ;; This function calls:
  1248 ;;		_I2C_Master_Wait
  1249 ;; This function is called by:
  1250 ;;		_timeout
  1251 ;;		_timein
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _I2C_Master_Start
  1257  0457                     _I2C_Master_Start:
  1258  0457                     l1677:	
  1259                           ;incstack = 0
  1260                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1261                           
  1262                           
  1263                           ;I2C.c: 41:     I2C_Master_Wait();
  1264  0457  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Wait
  1265  045C                     l1679:
  1266                           
  1267                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1268  045C  1683               	bsf	3,5	;RP0=1, select bank1
  1269  045D  1303               	bcf	3,6	;RP1=0, select bank1
  1270  045E  1411               	bsf	17,0	;volatile
  1271  045F                     l233:
  1272  045F  0008               	return
  1273  0460                     __end_of_I2C_Master_Start:
  1274                           
  1275                           	psect	text6
  1276  03A3                     __ptext6:	
  1277 ;; *************** function _I2C_Master_Read *****************
  1278 ;; Defined at:
  1279 ;;		line 74 in file "I2C.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  a               1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  a               1    2[BANK0 ] unsigned char 
  1284 ;;  temp            2    3[BANK0 ] unsigned short 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         0       3       0       0       0
  1296 ;;      Temps:          0       2       0       0       0
  1297 ;;      Totals:         0       5       0       0       0
  1298 ;;Total ram usage:        5 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    3
  1301 ;; This function calls:
  1302 ;;		_I2C_Master_Wait
  1303 ;; This function is called by:
  1304 ;;		_timein
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _I2C_Master_Read
  1310  03A3                     _I2C_Master_Read:
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1314                           ;I2C_Master_Read@a stored from wreg
  1315  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  1316  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  1317  03A5  00BF               	movwf	I2C_Master_Read@a
  1318  03A6                     l1689:
  1319                           
  1320                           ;I2C.c: 74: unsigned char I2C_Master_Read(unsigned char a);I2C.c: 75: {;I2C.c: 76:     u
      +                          nsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1321  03A6  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Wait
  1322  03AB                     l1691:
  1323                           
  1324                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1325  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  1326  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  1327  03AD  1591               	bsf	17,3	;volatile
  1328                           
  1329                           ;I2C.c: 79:     I2C_Master_Wait();
  1330  03AE  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Wait
  1331  03B3                     l1693:
  1332                           
  1333                           ;I2C.c: 80:     temp = SSPBUF;
  1334  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1335  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1336  03B5  0813               	movf	19,w	;volatile
  1337  03B6  00BD               	movwf	??_I2C_Master_Read
  1338  03B7  01BE               	clrf	??_I2C_Master_Read+1
  1339  03B8  083D               	movf	??_I2C_Master_Read,w
  1340  03B9  00C0               	movwf	I2C_Master_Read@temp
  1341  03BA  083E               	movf	??_I2C_Master_Read+1,w
  1342  03BB  00C1               	movwf	I2C_Master_Read@temp+1
  1343  03BC                     l1695:
  1344                           
  1345                           ;I2C.c: 81:     I2C_Master_Wait();
  1346  03BC  120A  118A  2437  120A  118A  	fcall	_I2C_Master_Wait
  1347  03C1                     l1697:
  1348                           
  1349                           ;I2C.c: 82:     if(a == 1){
  1350  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1351  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1352  03C3  033F               	decf	I2C_Master_Read@a,w
  1353  03C4  1D03               	btfss	3,2
  1354  03C5  2BC7               	goto	u631
  1355  03C6  2BC8               	goto	u630
  1356  03C7                     u631:
  1357  03C7  2BCC               	goto	l245
  1358  03C8                     u630:
  1359  03C8                     l1699:
  1360                           
  1361                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1362  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  1363  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  1364  03CA  1291               	bcf	17,5	;volatile
  1365                           
  1366                           ;I2C.c: 84:     }else{
  1367  03CB  2BCF               	goto	l246
  1368  03CC                     l245:
  1369                           
  1370                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1371  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  1372  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  1373  03CE  1691               	bsf	17,5	;volatile
  1374  03CF                     l246:	
  1375                           ;I2C.c: 86:     }
  1376                           
  1377                           
  1378                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1379  03CF  1611               	bsf	17,4	;volatile
  1380  03D0                     l1701:
  1381                           
  1382                           ;I2C.c: 88:     return temp;
  1383  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1384  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1385  03D2  0840               	movf	I2C_Master_Read@temp,w
  1386  03D3                     l247:
  1387  03D3  0008               	return
  1388  03D4                     __end_of_I2C_Master_Read:
  1389                           
  1390                           	psect	text7
  1391  0437                     __ptext7:	
  1392 ;; *************** function _I2C_Master_Wait *****************
  1393 ;; Defined at:
  1394 ;;		line 32 in file "I2C.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0
  1411 ;;      Totals:         0       0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    2
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_I2C_Master_Start
  1419 ;;		_I2C_Master_Stop
  1420 ;;		_I2C_Master_Write
  1421 ;;		_I2C_Master_Read
  1422 ;;		_I2C_Master_RepeatedStart
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _I2C_Master_Wait
  1428  0437                     _I2C_Master_Wait:
  1429  0437                     l1607:	
  1430                           ;incstack = 0
  1431                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1432                           
  1433  0437                     l227:	
  1434                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1435                           
  1436  0437  1683               	bsf	3,5	;RP0=1, select bank1
  1437  0438  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0439  1914               	btfsc	20,2	;volatile
  1439  043A  2C3C               	goto	u531
  1440  043B  2C3D               	goto	u530
  1441  043C                     u531:
  1442  043C  2C37               	goto	l227
  1443  043D                     u530:
  1444  043D                     l1609:
  1445  043D  0811               	movf	17,w	;volatile
  1446  043E  391F               	andlw	31
  1447  043F  1D03               	btfss	3,2
  1448  0440  2C42               	goto	u541
  1449  0441  2C43               	goto	u540
  1450  0442                     u541:
  1451  0442  2C37               	goto	l227
  1452  0443                     u540:
  1453  0443                     l230:
  1454  0443  0008               	return
  1455  0444                     __end_of_I2C_Master_Wait:
  1456                           
  1457                           	psect	text8
  1458  0028                     __ptext8:	
  1459 ;; *************** function _conver *****************
  1460 ;; Defined at:
  1461 ;;		line 279 in file "master.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0, btemp+1
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0
  1477 ;;      Temps:          0       1       0       0       0
  1478 ;;      Totals:         0       1       0       0       0
  1479 ;;Total ram usage:        1 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    2
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _conver
  1491  0028                     _conver:
  1492  0028                     l1771:	
  1493                           ;incstack = 0
  1494                           ; Regs used in _conver: [wreg+status,2+status,0+btemp+1]
  1495                           
  1496                           
  1497                           ;master.c: 280:         PORTAbits.RA1 = 0;
  1498  0028  0875               	movf	_SEC,w
  1499  0029  390F               	andlw	15
  1500  002A  00FF               	movwf	btemp+1
  1501  002B  087F               	movf	btemp+1,w
  1502  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1503  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1504  002E  00B8               	movwf	_SECU
  1505  002F                     l1773:
  1506                           
  1507                           ;master.c: 281:     }
  1508  002F  0875               	movf	_SEC,w
  1509  0030  00BD               	movwf	??_conver
  1510  0031  3004               	movlw	4
  1511  0032                     u645:
  1512  0032  1003               	clrc
  1513  0033  0CBD               	rrf	??_conver,f
  1514  0034  3EFF               	addlw	-1
  1515  0035  1D03               	skipz
  1516  0036  2832               	goto	u645
  1517  0037  083D               	movf	??_conver,w
  1518  0038  390F               	andlw	15
  1519  0039  00FF               	movwf	btemp+1
  1520  003A  087F               	movf	btemp+1,w
  1521  003B  00B7               	movwf	_SECD
  1522  003C                     l1775:
  1523                           
  1524                           ;master.c: 282: 
  1525  003C  0874               	movf	_MIN,w
  1526  003D  390F               	andlw	15
  1527  003E  00FF               	movwf	btemp+1
  1528  003F  087F               	movf	btemp+1,w
  1529  0040  00B6               	movwf	_MINU
  1530                           
  1531                           ;master.c: 283:     if (TOG == 2) {
  1532  0041  0874               	movf	_MIN,w
  1533  0042  00BD               	movwf	??_conver
  1534  0043  3004               	movlw	4
  1535  0044                     u655:
  1536  0044  1003               	clrc
  1537  0045  0CBD               	rrf	??_conver,f
  1538  0046  3EFF               	addlw	-1
  1539  0047  1D03               	skipz
  1540  0048  2844               	goto	u655
  1541  0049  083D               	movf	??_conver,w
  1542  004A  390F               	andlw	15
  1543  004B  00FF               	movwf	btemp+1
  1544  004C  087F               	movf	btemp+1,w
  1545  004D  00B5               	movwf	_MIND
  1546  004E                     l1777:
  1547                           
  1548                           ;master.c: 284:         PORTAbits.RA0 = 1;
  1549  004E  0873               	movf	_H,w
  1550  004F  390F               	andlw	15
  1551  0050  00FF               	movwf	btemp+1
  1552  0051  087F               	movf	btemp+1,w
  1553  0052  00B4               	movwf	_HORAU
  1554  0053                     l1779:
  1555                           
  1556                           ;master.c: 285:         PORTAbits.RA1 = 0;
  1557  0053  0873               	movf	_H,w
  1558  0054  00BD               	movwf	??_conver
  1559  0055  3004               	movlw	4
  1560  0056                     u665:
  1561  0056  1003               	clrc
  1562  0057  0CBD               	rrf	??_conver,f
  1563  0058  3EFF               	addlw	-1
  1564  0059  1D03               	skipz
  1565  005A  2856               	goto	u665
  1566  005B  083D               	movf	??_conver,w
  1567  005C  3903               	andlw	3
  1568  005D  00FF               	movwf	btemp+1
  1569  005E  087F               	movf	btemp+1,w
  1570  005F  00B3               	movwf	_HORAD
  1571                           
  1572                           ;master.c: 286:     }
  1573  0060  0872               	movf	_DAY,w
  1574  0061  390F               	andlw	15
  1575  0062  00FF               	movwf	btemp+1
  1576  0063  087F               	movf	btemp+1,w
  1577  0064  00B2               	movwf	_DAYU
  1578  0065                     l1781:
  1579                           
  1580                           ;master.c: 287:     if (TOG == 3) {
  1581  0065  0872               	movf	_DAY,w
  1582  0066  00BD               	movwf	??_conver
  1583  0067  3004               	movlw	4
  1584  0068                     u675:
  1585  0068  1003               	clrc
  1586  0069  0CBD               	rrf	??_conver,f
  1587  006A  3EFF               	addlw	-1
  1588  006B  1D03               	skipz
  1589  006C  2868               	goto	u675
  1590  006D  083D               	movf	??_conver,w
  1591  006E  390F               	andlw	15
  1592  006F  00FF               	movwf	btemp+1
  1593  0070  087F               	movf	btemp+1,w
  1594  0071  00B1               	movwf	_DAYD
  1595  0072                     l1783:
  1596                           
  1597                           ;master.c: 288:         PORTAbits.RA1 = 1;
  1598  0072  0871               	movf	_MONTH,w
  1599  0073  390F               	andlw	15
  1600  0074  00FF               	movwf	btemp+1
  1601  0075  087F               	movf	btemp+1,w
  1602  0076  00B0               	movwf	_MONTHU
  1603                           
  1604                           ;master.c: 289:         PORTAbits.RA0 = 0;
  1605  0077  0871               	movf	_MONTH,w
  1606  0078  00BD               	movwf	??_conver
  1607  0079  3004               	movlw	4
  1608  007A                     u685:
  1609  007A  1003               	clrc
  1610  007B  0CBD               	rrf	??_conver,f
  1611  007C  3EFF               	addlw	-1
  1612  007D  1D03               	skipz
  1613  007E  287A               	goto	u685
  1614  007F  083D               	movf	??_conver,w
  1615  0080  390F               	andlw	15
  1616  0081  00FF               	movwf	btemp+1
  1617  0082  087F               	movf	btemp+1,w
  1618  0083  00AF               	movwf	_MONTHD
  1619  0084                     l1785:
  1620                           
  1621                           ;master.c: 290:     }
  1622  0084  083A               	movf	_YEAR,w
  1623  0085  390F               	andlw	15
  1624  0086  00FF               	movwf	btemp+1
  1625  0087  087F               	movf	btemp+1,w
  1626  0088  00AE               	movwf	_YEARU
  1627  0089                     l1787:
  1628                           
  1629                           ;master.c: 291: 
  1630  0089  083A               	movf	_YEAR,w
  1631  008A  00BD               	movwf	??_conver
  1632  008B  3004               	movlw	4
  1633  008C                     u695:
  1634  008C  1003               	clrc
  1635  008D  0CBD               	rrf	??_conver,f
  1636  008E  3EFF               	addlw	-1
  1637  008F  1D03               	skipz
  1638  0090  288C               	goto	u695
  1639  0091  083D               	movf	??_conver,w
  1640  0092  390F               	andlw	15
  1641  0093  00FF               	movwf	btemp+1
  1642  0094  087F               	movf	btemp+1,w
  1643  0095  00AD               	movwf	_YEARD
  1644  0096                     l1789:
  1645                           
  1646                           ;master.c: 294:         PORTAbits.RA1 = 1;
  1647  0096  0838               	movf	_SECU,w
  1648  0097  3E30               	addlw	48
  1649  0098  00FF               	movwf	btemp+1
  1650  0099  087F               	movf	btemp+1,w
  1651  009A  00AC               	movwf	_SU
  1652  009B                     l1791:
  1653                           
  1654                           ;master.c: 295:     }
  1655  009B  0837               	movf	_SECD,w
  1656  009C  3E30               	addlw	48
  1657  009D  00FF               	movwf	btemp+1
  1658  009E  087F               	movf	btemp+1,w
  1659  009F  00AB               	movwf	_SD
  1660  00A0                     l1793:
  1661                           
  1662                           ;master.c: 296: }
  1663  00A0  0836               	movf	_MINU,w
  1664  00A1  3E30               	addlw	48
  1665  00A2  00FF               	movwf	btemp+1
  1666  00A3  087F               	movf	btemp+1,w
  1667  00A4  00AA               	movwf	_MU
  1668  00A5                     l1795:
  1669  00A5  0835               	movf	_MIND,w
  1670  00A6  3E30               	addlw	48
  1671  00A7  00FF               	movwf	btemp+1
  1672  00A8  087F               	movf	btemp+1,w
  1673  00A9  00A9               	movwf	_MD
  1674  00AA                     l1797:
  1675  00AA  0834               	movf	_HORAU,w
  1676  00AB  3E30               	addlw	48
  1677  00AC  00FF               	movwf	btemp+1
  1678  00AD  087F               	movf	btemp+1,w
  1679  00AE  00A8               	movwf	_HU
  1680  00AF                     l1799:
  1681  00AF  0833               	movf	_HORAD,w
  1682  00B0  3E30               	addlw	48
  1683  00B1  00FF               	movwf	btemp+1
  1684  00B2  087F               	movf	btemp+1,w
  1685  00B3  00A7               	movwf	_HD
  1686  00B4                     l1801:
  1687  00B4  0832               	movf	_DAYU,w
  1688  00B5  3E30               	addlw	48
  1689  00B6  00FF               	movwf	btemp+1
  1690  00B7  087F               	movf	btemp+1,w
  1691  00B8  00A6               	movwf	_DU
  1692  00B9                     l1803:
  1693  00B9  0831               	movf	_DAYD,w
  1694  00BA  3E30               	addlw	48
  1695  00BB  00FF               	movwf	btemp+1
  1696  00BC  087F               	movf	btemp+1,w
  1697  00BD  00A5               	movwf	_DD
  1698  00BE                     l1805:
  1699  00BE  0830               	movf	_MONTHU,w
  1700  00BF  3E30               	addlw	48
  1701  00C0  00FF               	movwf	btemp+1
  1702  00C1  087F               	movf	btemp+1,w
  1703  00C2  00A4               	movwf	_MOU
  1704  00C3                     l1807:
  1705  00C3  082F               	movf	_MONTHD,w
  1706  00C4  3E30               	addlw	48
  1707  00C5  00FF               	movwf	btemp+1
  1708  00C6  087F               	movf	btemp+1,w
  1709  00C7  00A3               	movwf	_MOD
  1710  00C8                     l1809:
  1711  00C8  082E               	movf	_YEARU,w
  1712  00C9  3E30               	addlw	48
  1713  00CA  00FF               	movwf	btemp+1
  1714  00CB  087F               	movf	btemp+1,w
  1715  00CC  00A2               	movwf	_YU
  1716  00CD                     l1811:
  1717  00CD  082D               	movf	_YEARD,w
  1718  00CE  3E30               	addlw	48
  1719  00CF  00FF               	movwf	btemp+1
  1720  00D0  087F               	movf	btemp+1,w
  1721  00D1  00A1               	movwf	_YD
  1722  00D2                     l188:
  1723  00D2  0008               	return
  1724  00D3                     __end_of_conver:
  1725                           
  1726                           	psect	text9
  1727  032D                     __ptext9:	
  1728 ;; *************** function _Setup *****************
  1729 ;; Defined at:
  1730 ;;		line 137 in file "master.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    4
  1751 ;; This function calls:
  1752 ;;		_I2C_Master_Init
  1753 ;;		_initOsc
  1754 ;;		_usart
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _Setup
  1762  032D                     _Setup:
  1763  032D                     l1705:	
  1764                           ;incstack = 0
  1765                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1766                           
  1767                           
  1768                           ;master.c: 138:             break;
  1769  032D  3006               	movlw	6
  1770  032E  120A  118A  2291  120A  118A  	fcall	_initOsc
  1771  0333                     l1707:
  1772                           
  1773                           ;master.c: 139:         case 1:
  1774  0333  120A  118A  2422  120A  118A  	fcall	_usart
  1775  0338                     l1709:
  1776                           
  1777                           ;master.c: 140:             TXREG = HD;
  1778  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1780  033A  0185               	clrf	5	;volatile
  1781  033B                     l1711:
  1782                           
  1783                           ;master.c: 141:             break;
  1784  033B  0186               	clrf	6	;volatile
  1785  033C                     l1713:
  1786                           
  1787                           ;master.c: 142:         case 2:
  1788  033C  0188               	clrf	8	;volatile
  1789  033D                     l1715:
  1790                           
  1791                           ;master.c: 143:             TXREG = HU;
  1792  033D  0189               	clrf	9	;volatile
  1793  033E                     l1717:
  1794                           
  1795                           ;master.c: 144:             break;
  1796  033E  1683               	bsf	3,5	;RP0=1, select bank3
  1797  033F  1703               	bsf	3,6	;RP1=1, select bank3
  1798  0340  0188               	clrf	8	;volatile
  1799  0341                     l1719:
  1800                           
  1801                           ;master.c: 145: 
  1802  0341  0189               	clrf	9	;volatile
  1803  0342                     l1721:
  1804                           
  1805                           ;master.c: 146:         case 3:
  1806  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0344  0185               	clrf	5	;volatile
  1809  0345                     l1723:
  1810                           
  1811                           ;master.c: 147:             TXREG = 0x3A;
  1812  0345  0186               	clrf	6	;volatile
  1813  0346                     l1725:
  1814                           
  1815                           ;master.c: 148:             break;
  1816  0346  0187               	clrf	7	;volatile
  1817  0347                     l1727:
  1818                           
  1819                           ;master.c: 149: 
  1820  0347  0188               	clrf	8	;volatile
  1821  0348                     l1729:
  1822                           
  1823                           ;master.c: 150:         case 4:
  1824  0348  0189               	clrf	9	;volatile
  1825  0349                     l1731:
  1826                           
  1827                           ;master.c: 152:             break;
  1828  0349  3087               	movlw	135
  1829  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1830  034B  1303               	bcf	3,6	;RP1=0, select bank1
  1831  034C  0081               	movwf	1	;volatile
  1832  034D                     l1733:
  1833                           
  1834                           ;master.c: 153:         case 5:
  1835  034D  178B               	bsf	11,7	;volatile
  1836  034E                     l1735:
  1837                           
  1838                           ;master.c: 154:             TXREG = MU;
  1839  034E  170B               	bsf	11,6	;volatile
  1840  034F                     l1737:
  1841                           
  1842                           ;master.c: 155:             break;
  1843  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0351  120C               	bcf	12,4	;volatile
  1846  0352                     l1739:
  1847                           
  1848                           ;master.c: 156:         case 6:
  1849  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1850  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1851  0354  160C               	bsf	12,4	;volatile
  1852  0355                     l1741:
  1853                           
  1854                           ;master.c: 157:             TXREG = 0x3A;
  1855  0355  110B               	bcf	11,2	;volatile
  1856  0356                     l1743:
  1857                           
  1858                           ;master.c: 158:             break;
  1859  0356  168B               	bsf	11,5	;volatile
  1860  0357                     l1745:
  1861                           
  1862                           ;master.c: 159:         case 7:
  1863  0357  168C               	bsf	12,5	;volatile
  1864  0358                     l1747:
  1865                           
  1866                           ;master.c: 160:             TXREG = SD;
  1867  0358  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0359  1303               	bcf	3,6	;RP1=0, select bank0
  1869  035A  128C               	bcf	12,5	;volatile
  1870  035B                     l1749:
  1871                           
  1872                           ;master.c: 161:             break;
  1873  035B  3000               	movlw	0
  1874  035C  00CE               	movwf	I2C_Master_Init@c+3
  1875  035D  3001               	movlw	1
  1876  035E  00CD               	movwf	I2C_Master_Init@c+2
  1877  035F  3086               	movlw	134
  1878  0360  00CC               	movwf	I2C_Master_Init@c+1
  1879  0361  30A0               	movlw	160
  1880  0362  00CB               	movwf	I2C_Master_Init@c
  1881  0363  120A  118A  2369  120A  118A  	fcall	_I2C_Master_Init
  1882  0368                     l155:
  1883  0368  0008               	return
  1884  0369                     __end_of_Setup:
  1885                           
  1886                           	psect	text10
  1887  0422                     __ptext10:	
  1888 ;; *************** function _usart *****************
  1889 ;; Defined at:
  1890 ;;		line 5 in file "usart.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0
  1907 ;;      Totals:         0       0       0       0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    2
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_Setup
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _usart
  1920  0422                     _usart:
  1921  0422                     l1649:	
  1922                           ;incstack = 0
  1923                           ; Regs used in _usart: [wreg+status,2]
  1924                           
  1925                           
  1926                           ;usart.c: 8:     TXSTAbits.TX9 = 0;;usart.c: 8:     TXSTAbits.TX9 = 0;
  1927  0422  1683               	bsf	3,5	;RP0=1, select bank1
  1928  0423  1303               	bcf	3,6	;RP1=0, select bank1
  1929  0424  1318               	bcf	24,6	;volatile
  1930                           
  1931                           ;usart.c: 9:     TXSTAbits.SYNC = 0;;usart.c: 9:     TXSTAbits.SYNC = 0;
  1932  0425  1218               	bcf	24,4	;volatile
  1933                           
  1934                           ;usart.c: 10:     TXSTAbits.BRGH = 1;;usart.c: 10:     TXSTAbits.BRGH = 1;
  1935  0426  1518               	bsf	24,2	;volatile
  1936                           
  1937                           ;usart.c: 11:     BAUDCTLbits.BRG16 = 0;;usart.c: 11:     BAUDCTLbits.BRG16 = 0;
  1938  0427  1683               	bsf	3,5	;RP0=1, select bank3
  1939  0428  1703               	bsf	3,6	;RP1=1, select bank3
  1940  0429  1187               	bcf	7,3	;volatile
  1941  042A                     l1651:
  1942                           
  1943                           ;usart.c: 12:     SPBRGH = 0;;usart.c: 12:     SPBRGH = 0;
  1944  042A  1683               	bsf	3,5	;RP0=1, select bank1
  1945  042B  1303               	bcf	3,6	;RP1=0, select bank1
  1946  042C  019A               	clrf	26	;volatile
  1947  042D                     l1653:
  1948                           
  1949                           ;usart.c: 13:     SPBRG = 25;;usart.c: 13:     SPBRG = 25;
  1950  042D  3019               	movlw	25
  1951  042E  0099               	movwf	25	;volatile
  1952  042F                     l1655:
  1953                           
  1954                           ;usart.c: 14:     PIE1bits.TXIE = 1;;usart.c: 14:     PIE1bits.TXIE = 1;
  1955  042F  160C               	bsf	12,4	;volatile
  1956  0430                     l1657:
  1957                           
  1958                           ;usart.c: 15:     TXSTAbits.TXEN = 1;;usart.c: 15:     TXSTAbits.TXEN = 1;
  1959  0430  1698               	bsf	24,5	;volatile
  1960  0431                     l1659:
  1961                           
  1962                           ;usart.c: 18:     RCSTAbits.SPEN = 1;;usart.c: 18:     RCSTAbits.SPEN = 1;
  1963  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0433  1798               	bsf	24,7	;volatile
  1966  0434                     l1661:
  1967                           
  1968                           ;usart.c: 19:     RCSTAbits. RX9 = 0;;usart.c: 19:     RCSTAbits. RX9 = 0;
  1969  0434  1318               	bcf	24,6	;volatile
  1970  0435                     l1663:
  1971                           
  1972                           ;usart.c: 20:     RCSTAbits.CREN = 1;;usart.c: 20:     RCSTAbits.CREN = 1;
  1973  0435  1618               	bsf	24,4	;volatile
  1974  0436                     l281:
  1975  0436  0008               	return
  1976  0437                     __end_of_usart:
  1977                           
  1978                           	psect	text11
  1979  0291                     __ptext11:	
  1980 ;; *************** function _initOsc *****************
  1981 ;; Defined at:
  1982 ;;		line 7 in file "OSC.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  IRCF            1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  IRCF            1    2[BANK0 ] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         0       0       0       0       0
  1997 ;;      Locals:         0       1       0       0       0
  1998 ;;      Temps:          0       2       0       0       0
  1999 ;;      Totals:         0       3       0       0       0
  2000 ;;Total ram usage:        3 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    2
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_Setup
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           
  2011                           ;psect for function _initOsc
  2012  0291                     _initOsc:
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2016                           ;initOsc@IRCF stored from wreg
  2017  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0293  00BF               	movwf	initOsc@IRCF
  2020  0294                     l1637:
  2021                           
  2022                           ;OSC.c: 9:     switch (IRCF){
  2023  0294  2ACB               	goto	l1641
  2024  0295                     l256:	
  2025                           ;OSC.c: 11:         case 0:
  2026                           
  2027                           
  2028                           ;OSC.c: 12:             OSCCONbits.IRCF2 = 0;
  2029  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0297  130F               	bcf	15,6	;volatile
  2032                           
  2033                           ;OSC.c: 13:             OSCCONbits.IRCF1 = 0;
  2034  0298  128F               	bcf	15,5	;volatile
  2035                           
  2036                           ;OSC.c: 14:             OSCCONbits.IRCF0 = 0;
  2037  0299  120F               	bcf	15,4	;volatile
  2038                           
  2039                           ;OSC.c: 16:             break;
  2040  029A  2AED               	goto	l257
  2041  029B                     l258:	
  2042                           ;OSC.c: 18:         case 1:
  2043                           
  2044                           
  2045                           ;OSC.c: 19:             OSCCONbits.IRCF2 = 0;
  2046  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2047  029C  1303               	bcf	3,6	;RP1=0, select bank1
  2048  029D  130F               	bcf	15,6	;volatile
  2049                           
  2050                           ;OSC.c: 20:             OSCCONbits.IRCF1 = 0;
  2051  029E  128F               	bcf	15,5	;volatile
  2052                           
  2053                           ;OSC.c: 21:             OSCCONbits.IRCF0 = 1;
  2054  029F  160F               	bsf	15,4	;volatile
  2055                           
  2056                           ;OSC.c: 22:             break;
  2057  02A0  2AED               	goto	l257
  2058  02A1                     l259:	
  2059                           ;OSC.c: 24:         case 2:
  2060                           
  2061                           
  2062                           ;OSC.c: 25:             OSCCONbits.IRCF2 = 0;
  2063  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2064  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2065  02A3  130F               	bcf	15,6	;volatile
  2066                           
  2067                           ;OSC.c: 26:             OSCCONbits.IRCF1 = 1;
  2068  02A4  168F               	bsf	15,5	;volatile
  2069                           
  2070                           ;OSC.c: 27:             OSCCONbits.IRCF0 = 0;
  2071  02A5  120F               	bcf	15,4	;volatile
  2072                           
  2073                           ;OSC.c: 28:             break;
  2074  02A6  2AED               	goto	l257
  2075  02A7                     l260:	
  2076                           ;OSC.c: 30:         case 3:
  2077                           
  2078                           
  2079                           ;OSC.c: 31:             OSCCONbits.IRCF2 = 0;
  2080  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  2081  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  2082  02A9  130F               	bcf	15,6	;volatile
  2083                           
  2084                           ;OSC.c: 32:             OSCCONbits.IRCF1 = 1;
  2085  02AA  168F               	bsf	15,5	;volatile
  2086                           
  2087                           ;OSC.c: 33:             OSCCONbits.IRCF0 = 1;
  2088  02AB  160F               	bsf	15,4	;volatile
  2089                           
  2090                           ;OSC.c: 34:             break;
  2091  02AC  2AED               	goto	l257
  2092  02AD                     l261:	
  2093                           ;OSC.c: 36:         case 4:
  2094                           
  2095                           
  2096                           ;OSC.c: 37:             OSCCONbits.IRCF2 = 1;
  2097  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  2098  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  2099  02AF  170F               	bsf	15,6	;volatile
  2100                           
  2101                           ;OSC.c: 38:             OSCCONbits.IRCF1 = 0;
  2102  02B0  128F               	bcf	15,5	;volatile
  2103                           
  2104                           ;OSC.c: 39:             OSCCONbits.IRCF0 = 0;
  2105  02B1  120F               	bcf	15,4	;volatile
  2106                           
  2107                           ;OSC.c: 40:             break;
  2108  02B2  2AED               	goto	l257
  2109  02B3                     l262:	
  2110                           ;OSC.c: 42:         case 5:
  2111                           
  2112                           
  2113                           ;OSC.c: 43:             OSCCONbits.IRCF2 = 1;
  2114  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  2115  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  2116  02B5  170F               	bsf	15,6	;volatile
  2117                           
  2118                           ;OSC.c: 44:             OSCCONbits.IRCF1 = 0;
  2119  02B6  128F               	bcf	15,5	;volatile
  2120                           
  2121                           ;OSC.c: 45:             OSCCONbits.IRCF0 = 1;
  2122  02B7  160F               	bsf	15,4	;volatile
  2123                           
  2124                           ;OSC.c: 46:             break;
  2125  02B8  2AED               	goto	l257
  2126  02B9                     l263:	
  2127                           ;OSC.c: 49:         case 6:
  2128                           
  2129                           
  2130                           ;OSC.c: 50:             OSCCONbits.IRCF2 = 1;
  2131  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  2132  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  2133  02BB  170F               	bsf	15,6	;volatile
  2134                           
  2135                           ;OSC.c: 51:             OSCCONbits.IRCF1 = 1;
  2136  02BC  168F               	bsf	15,5	;volatile
  2137                           
  2138                           ;OSC.c: 52:             OSCCONbits.IRCF0 = 0;
  2139  02BD  120F               	bcf	15,4	;volatile
  2140                           
  2141                           ;OSC.c: 53:             break;
  2142  02BE  2AED               	goto	l257
  2143  02BF                     l264:	
  2144                           ;OSC.c: 55:         case 7:
  2145                           
  2146                           
  2147                           ;OSC.c: 56:             OSCCONbits.IRCF2 = 1;
  2148  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2149  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2150  02C1  170F               	bsf	15,6	;volatile
  2151                           
  2152                           ;OSC.c: 57:             OSCCONbits.IRCF1 = 1;
  2153  02C2  168F               	bsf	15,5	;volatile
  2154                           
  2155                           ;OSC.c: 58:             OSCCONbits.IRCF0 = 1;
  2156  02C3  160F               	bsf	15,4	;volatile
  2157                           
  2158                           ;OSC.c: 59:             break;
  2159  02C4  2AED               	goto	l257
  2160  02C5                     l265:	
  2161                           ;OSC.c: 64:         default:
  2162                           
  2163                           
  2164                           ;OSC.c: 65:             OSCCONbits.IRCF2 = 1;
  2165  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2166  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2167  02C7  170F               	bsf	15,6	;volatile
  2168                           
  2169                           ;OSC.c: 66:             OSCCONbits.IRCF1 = 1;
  2170  02C8  168F               	bsf	15,5	;volatile
  2171                           
  2172                           ;OSC.c: 67:             OSCCONbits.IRCF0 = 0;
  2173  02C9  120F               	bcf	15,4	;volatile
  2174                           
  2175                           ;OSC.c: 68:             break;
  2176  02CA  2AED               	goto	l257
  2177  02CB                     l1641:
  2178  02CB  083F               	movf	initOsc@IRCF,w
  2179  02CC  00BD               	movwf	??_initOsc
  2180  02CD  01BE               	clrf	??_initOsc+1
  2181                           
  2182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2183                           ; Switch size 1, requested type "simple"
  2184                           ; Number of cases is 1, Range of values is 0 to 0
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte            4     3 (average)
  2188                           ; direct_byte           11     8 (fixed)
  2189                           ; jumptable            260     6 (fixed)
  2190                           ;	Chosen strategy is simple_byte
  2191  02CE  083E               	movf	??_initOsc+1,w
  2192  02CF  3A00               	xorlw	0	; case 0
  2193  02D0  1903               	skipnz
  2194  02D1  2AD3               	goto	l1881
  2195  02D2  2AC5               	goto	l265
  2196  02D3                     l1881:
  2197                           
  2198                           ; Switch size 1, requested type "simple"
  2199                           ; Number of cases is 8, Range of values is 0 to 7
  2200                           ; switch strategies available:
  2201                           ; Name         Instructions Cycles
  2202                           ; simple_byte           25    13 (average)
  2203                           ; direct_byte           32     8 (fixed)
  2204                           ; jumptable            260     6 (fixed)
  2205                           ;	Chosen strategy is simple_byte
  2206  02D3  083D               	movf	??_initOsc,w
  2207  02D4  3A00               	xorlw	0	; case 0
  2208  02D5  1903               	skipnz
  2209  02D6  2A95               	goto	l256
  2210  02D7  3A01               	xorlw	1	; case 1
  2211  02D8  1903               	skipnz
  2212  02D9  2A9B               	goto	l258
  2213  02DA  3A03               	xorlw	3	; case 2
  2214  02DB  1903               	skipnz
  2215  02DC  2AA1               	goto	l259
  2216  02DD  3A01               	xorlw	1	; case 3
  2217  02DE  1903               	skipnz
  2218  02DF  2AA7               	goto	l260
  2219  02E0  3A07               	xorlw	7	; case 4
  2220  02E1  1903               	skipnz
  2221  02E2  2AAD               	goto	l261
  2222  02E3  3A01               	xorlw	1	; case 5
  2223  02E4  1903               	skipnz
  2224  02E5  2AB3               	goto	l262
  2225  02E6  3A03               	xorlw	3	; case 6
  2226  02E7  1903               	skipnz
  2227  02E8  2AB9               	goto	l263
  2228  02E9  3A01               	xorlw	1	; case 7
  2229  02EA  1903               	skipnz
  2230  02EB  2ABF               	goto	l264
  2231  02EC  2AC5               	goto	l265
  2232  02ED                     l257:
  2233                           
  2234                           ;OSC.c: 72:     OSCCONbits.SCS = 1;
  2235  02ED  140F               	bsf	15,0	;volatile
  2236  02EE                     l266:
  2237  02EE  0008               	return
  2238  02EF                     __end_of_initOsc:
  2239                           
  2240                           	psect	text12
  2241  0369                     __ptext12:	
  2242 ;; *************** function _I2C_Master_Init *****************
  2243 ;; Defined at:
  2244 ;;		line 16 in file "I2C.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  c               4   14[BANK0 ] const unsigned long 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         0       4       0       0       0
  2259 ;;      Locals:         0       0       0       0       0
  2260 ;;      Temps:          0       4       0       0       0
  2261 ;;      Totals:         0       8       0       0       0
  2262 ;;Total ram usage:        8 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    3
  2265 ;; This function calls:
  2266 ;;		___lldiv
  2267 ;; This function is called by:
  2268 ;;		_Setup
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _I2C_Master_Init
  2274  0369                     _I2C_Master_Init:
  2275  0369                     l1665:	
  2276                           ;incstack = 0
  2277                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2278                           
  2279                           
  2280                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2281  0369  3028               	movlw	40
  2282  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2283  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2284  036C  0094               	movwf	20	;volatile
  2285  036D                     l1667:
  2286                           
  2287                           ;I2C.c: 19:     SSPCON2 = 0;
  2288  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2289  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2290  036F  0191               	clrf	17	;volatile
  2291  0370                     l1669:
  2292                           
  2293                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  2294  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0372  084B               	movf	I2C_Master_Init@c,w
  2297  0373  00CF               	movwf	??_I2C_Master_Init
  2298  0374  084C               	movf	I2C_Master_Init@c+1,w
  2299  0375  00D0               	movwf	??_I2C_Master_Init+1
  2300  0376  084D               	movf	I2C_Master_Init@c+2,w
  2301  0377  00D1               	movwf	??_I2C_Master_Init+2
  2302  0378  084E               	movf	I2C_Master_Init@c+3,w
  2303  0379  00D2               	movwf	??_I2C_Master_Init+3
  2304  037A  3002               	movlw	2
  2305  037B                     u625:
  2306  037B  1003               	clrc
  2307  037C  0DCF               	rlf	??_I2C_Master_Init,f
  2308  037D  0DD0               	rlf	??_I2C_Master_Init+1,f
  2309  037E  0DD1               	rlf	??_I2C_Master_Init+2,f
  2310  037F  0DD2               	rlf	??_I2C_Master_Init+3,f
  2311  0380                     u620:
  2312  0380  3EFF               	addlw	-1
  2313  0381  1D03               	skipz
  2314  0382  2B7B               	goto	u625
  2315  0383  0852               	movf	??_I2C_Master_Init+3,w
  2316  0384  00C0               	movwf	___lldiv@divisor+3
  2317  0385  0851               	movf	??_I2C_Master_Init+2,w
  2318  0386  00BF               	movwf	___lldiv@divisor+2
  2319  0387  0850               	movf	??_I2C_Master_Init+1,w
  2320  0388  00BE               	movwf	___lldiv@divisor+1
  2321  0389  084F               	movf	??_I2C_Master_Init,w
  2322  038A  00BD               	movwf	___lldiv@divisor
  2323  038B  3000               	movlw	0
  2324  038C  00C4               	movwf	___lldiv@dividend+3
  2325  038D  303D               	movlw	61
  2326  038E  00C3               	movwf	___lldiv@dividend+2
  2327  038F  3009               	movlw	9
  2328  0390  00C2               	movwf	___lldiv@dividend+1
  2329  0391  3000               	movlw	0
  2330  0392  00C1               	movwf	___lldiv@dividend
  2331  0393  120A  118A  2229  120A  118A  	fcall	___lldiv
  2332  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2334  039A  083D               	movf	?___lldiv,w
  2335  039B  3EFF               	addlw	255
  2336  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2337  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2338  039E  0093               	movwf	19	;volatile
  2339  039F                     l1671:
  2340                           
  2341                           ;I2C.c: 21:     SSPSTAT = 0;
  2342  039F  0194               	clrf	20	;volatile
  2343  03A0                     l1673:
  2344                           
  2345                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2346  03A0  1587               	bsf	7,3	;volatile
  2347  03A1                     l1675:
  2348                           
  2349                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2350  03A1  1607               	bsf	7,4	;volatile
  2351  03A2                     l224:
  2352  03A2  0008               	return
  2353  03A3                     __end_of_I2C_Master_Init:
  2354                           
  2355                           	psect	text13
  2356  0229                     __ptext13:	
  2357 ;; *************** function ___lldiv *****************
  2358 ;; Defined at:
  2359 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  divisor         4    0[BANK0 ] unsigned long 
  2362 ;;  dividend        4    4[BANK0 ] unsigned long 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  quotient        4    9[BANK0 ] unsigned long 
  2365 ;;  counter         1   13[BANK0 ] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  4    0[BANK0 ] unsigned long 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0, btemp+1
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2375 ;;      Params:         0       8       0       0       0
  2376 ;;      Locals:         0       5       0       0       0
  2377 ;;      Temps:          0       1       0       0       0
  2378 ;;      Totals:         0      14       0       0       0
  2379 ;;Total ram usage:       14 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    2
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_I2C_Master_Init
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function ___lldiv
  2391  0229                     ___lldiv:
  2392  0229                     l1611:	
  2393                           ;incstack = 0
  2394                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2395                           
  2396  0229  3000               	movlw	0
  2397  022A  1283               	bcf	3,5	;RP0=0, select bank0
  2398  022B  1303               	bcf	3,6	;RP1=0, select bank0
  2399  022C  00C9               	movwf	___lldiv@quotient+3
  2400  022D  3000               	movlw	0
  2401  022E  00C8               	movwf	___lldiv@quotient+2
  2402  022F  3000               	movlw	0
  2403  0230  00C7               	movwf	___lldiv@quotient+1
  2404  0231  3000               	movlw	0
  2405  0232  00C6               	movwf	___lldiv@quotient
  2406  0233  0840               	movf	___lldiv@divisor+3,w
  2407  0234  043F               	iorwf	___lldiv@divisor+2,w
  2408  0235  043E               	iorwf	___lldiv@divisor+1,w
  2409  0236  043D               	iorwf	___lldiv@divisor,w
  2410  0237  1903               	skipnz
  2411  0238  2A3A               	goto	u551
  2412  0239  2A3B               	goto	u550
  2413  023A                     u551:
  2414  023A  2A88               	goto	l1633
  2415  023B                     u550:
  2416  023B                     l1613:
  2417  023B  01CA               	clrf	___lldiv@counter
  2418  023C  0ACA               	incf	___lldiv@counter,f
  2419  023D  2A4B               	goto	l1619
  2420  023E                     l1615:
  2421  023E  3001               	movlw	1
  2422  023F  00C5               	movwf	??___lldiv
  2423  0240                     u565:
  2424  0240  1003               	clrc
  2425  0241  0DBD               	rlf	___lldiv@divisor,f
  2426  0242  0DBE               	rlf	___lldiv@divisor+1,f
  2427  0243  0DBF               	rlf	___lldiv@divisor+2,f
  2428  0244  0DC0               	rlf	___lldiv@divisor+3,f
  2429  0245  0BC5               	decfsz	??___lldiv,f
  2430  0246  2A40               	goto	u565
  2431  0247                     l1617:
  2432  0247  3001               	movlw	1
  2433  0248  00FF               	movwf	btemp+1
  2434  0249  087F               	movf	btemp+1,w
  2435  024A  07CA               	addwf	___lldiv@counter,f
  2436  024B                     l1619:
  2437  024B  1FC0               	btfss	___lldiv@divisor+3,7
  2438  024C  2A4E               	goto	u571
  2439  024D  2A4F               	goto	u570
  2440  024E                     u571:
  2441  024E  2A3E               	goto	l1615
  2442  024F                     u570:
  2443  024F                     l1621:
  2444  024F  3001               	movlw	1
  2445  0250  00C5               	movwf	??___lldiv
  2446  0251                     u585:
  2447  0251  1003               	clrc
  2448  0252  0DC6               	rlf	___lldiv@quotient,f
  2449  0253  0DC7               	rlf	___lldiv@quotient+1,f
  2450  0254  0DC8               	rlf	___lldiv@quotient+2,f
  2451  0255  0DC9               	rlf	___lldiv@quotient+3,f
  2452  0256  0BC5               	decfsz	??___lldiv,f
  2453  0257  2A51               	goto	u585
  2454  0258                     l1623:
  2455  0258  0840               	movf	___lldiv@divisor+3,w
  2456  0259  0244               	subwf	___lldiv@dividend+3,w
  2457  025A  1D03               	skipz
  2458  025B  2A66               	goto	u595
  2459  025C  083F               	movf	___lldiv@divisor+2,w
  2460  025D  0243               	subwf	___lldiv@dividend+2,w
  2461  025E  1D03               	skipz
  2462  025F  2A66               	goto	u595
  2463  0260  083E               	movf	___lldiv@divisor+1,w
  2464  0261  0242               	subwf	___lldiv@dividend+1,w
  2465  0262  1D03               	skipz
  2466  0263  2A66               	goto	u595
  2467  0264  083D               	movf	___lldiv@divisor,w
  2468  0265  0241               	subwf	___lldiv@dividend,w
  2469  0266                     u595:
  2470  0266  1C03               	skipc
  2471  0267  2A69               	goto	u591
  2472  0268  2A6A               	goto	u590
  2473  0269                     u591:
  2474  0269  2A79               	goto	l1629
  2475  026A                     u590:
  2476  026A                     l1625:
  2477  026A  083D               	movf	___lldiv@divisor,w
  2478  026B  02C1               	subwf	___lldiv@dividend,f
  2479  026C  083E               	movf	___lldiv@divisor+1,w
  2480  026D  1C03               	skipc
  2481  026E  0F3E               	incfsz	___lldiv@divisor+1,w
  2482  026F  02C2               	subwf	___lldiv@dividend+1,f
  2483  0270  083F               	movf	___lldiv@divisor+2,w
  2484  0271  1C03               	skipc
  2485  0272  0F3F               	incfsz	___lldiv@divisor+2,w
  2486  0273  02C3               	subwf	___lldiv@dividend+2,f
  2487  0274  0840               	movf	___lldiv@divisor+3,w
  2488  0275  1C03               	skipc
  2489  0276  0F40               	incfsz	___lldiv@divisor+3,w
  2490  0277  02C4               	subwf	___lldiv@dividend+3,f
  2491  0278                     l1627:
  2492  0278  1446               	bsf	___lldiv@quotient,0
  2493  0279                     l1629:
  2494  0279  3001               	movlw	1
  2495  027A                     u605:
  2496  027A  1003               	clrc
  2497  027B  0CC0               	rrf	___lldiv@divisor+3,f
  2498  027C  0CBF               	rrf	___lldiv@divisor+2,f
  2499  027D  0CBE               	rrf	___lldiv@divisor+1,f
  2500  027E  0CBD               	rrf	___lldiv@divisor,f
  2501  027F  3EFF               	addlw	-1
  2502  0280  1D03               	skipz
  2503  0281  2A7A               	goto	u605
  2504  0282                     l1631:
  2505  0282  3001               	movlw	1
  2506  0283  02CA               	subwf	___lldiv@counter,f
  2507  0284  1D03               	btfss	3,2
  2508  0285  2A87               	goto	u611
  2509  0286  2A88               	goto	u610
  2510  0287                     u611:
  2511  0287  2A4F               	goto	l1621
  2512  0288                     u610:
  2513  0288                     l1633:
  2514  0288  0849               	movf	___lldiv@quotient+3,w
  2515  0289  00C0               	movwf	?___lldiv+3
  2516  028A  0848               	movf	___lldiv@quotient+2,w
  2517  028B  00BF               	movwf	?___lldiv+2
  2518  028C  0847               	movf	___lldiv@quotient+1,w
  2519  028D  00BE               	movwf	?___lldiv+1
  2520  028E  0846               	movf	___lldiv@quotient,w
  2521  028F  00BD               	movwf	?___lldiv
  2522  0290                     l403:
  2523  0290  0008               	return
  2524  0291                     __end_of___lldiv:
  2525                           
  2526                           	psect	text14
  2527  02EF                     __ptext14:	
  2528 ;; *************** function _ISR *****************
  2529 ;; Defined at:
  2530 ;;		line 90 in file "master.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0
  2546 ;;      Temps:          4       0       0       0       0
  2547 ;;      Totals:         4       0       0       0       0
  2548 ;;Total ram usage:        4 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    1
  2551 ;; This function calls:
  2552 ;;		_mandar
  2553 ;;		_recibir
  2554 ;; This function is called by:
  2555 ;;		Interrupt level 1
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function _ISR
  2561  02EF                     _ISR:
  2562  02EF                     i1l1513:
  2563                           
  2564                           ;master.c: 91:             CONT = 0;
  2565  02EF  1D0B               	btfss	11,2	;volatile
  2566  02F0  2AF2               	goto	u48_21
  2567  02F1  2AF3               	goto	u48_20
  2568  02F2                     u48_21:
  2569  02F2  2AFA               	goto	i1l1521
  2570  02F3                     u48_20:
  2571  02F3                     i1l1515:
  2572                           
  2573                           ;master.c: 92:             PIE1bits.TXIE = 1;
  2574  02F3  30EC               	movlw	236
  2575  02F4  0081               	movwf	1	;volatile
  2576  02F5                     i1l1517:
  2577                           
  2578                           ;master.c: 93:         }
  2579  02F5  3001               	movlw	1
  2580  02F6  00FF               	movwf	btemp+1
  2581  02F7  087F               	movf	btemp+1,w
  2582  02F8  07BC               	addwf	_CONT,f
  2583  02F9                     i1l1519:
  2584                           
  2585                           ;master.c: 94:     }
  2586  02F9  110B               	bcf	11,2	;volatile
  2587  02FA                     i1l1521:
  2588                           
  2589                           ;master.c: 97: 
  2590  02FA  0320               	decf	_FLAG,w
  2591  02FB  1D03               	btfss	3,2
  2592  02FC  2AFE               	goto	u49_21
  2593  02FD  2AFF               	goto	u49_20
  2594  02FE                     u49_21:
  2595  02FE  2B12               	goto	i1l1533
  2596  02FF                     u49_20:
  2597  02FF                     i1l1523:
  2598                           
  2599                           ;master.c: 98: 
  2600  02FF  1E0C               	btfss	12,4	;volatile
  2601  0300  2B02               	goto	u50_21
  2602  0301  2B03               	goto	u50_20
  2603  0302                     u50_21:
  2604  0302  2B12               	goto	i1l1533
  2605  0303                     u50_20:
  2606  0303                     i1l1525:
  2607                           
  2608                           ;master.c: 99: 
  2609  0303  120A  118A  20D3  120A  118A  	fcall	_mandar
  2610  0308                     i1l1527:
  2611                           
  2612                           ;master.c: 100: 
  2613  0308  3001               	movlw	1
  2614  0309  00FF               	movwf	btemp+1
  2615  030A  087F               	movf	btemp+1,w
  2616  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2617  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2618  030D  07BB               	addwf	_SEND,f
  2619  030E                     i1l1529:
  2620                           
  2621                           ;master.c: 101: void Setup(void) {
  2622  030E  120C               	bcf	12,4	;volatile
  2623  030F                     i1l1531:
  2624                           
  2625                           ;master.c: 102:     initOsc(6);
  2626  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2627  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2628  0311  120C               	bcf	12,4	;volatile
  2629  0312                     i1l1533:
  2630                           
  2631                           ;master.c: 105:     TRISB = 0;
  2632  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0313  1E8C               	btfss	12,5	;volatile
  2634  0314  2B16               	goto	u51_21
  2635  0315  2B17               	goto	u51_20
  2636  0316                     u51_21:
  2637  0316  2B20               	goto	i1l143
  2638  0317                     u51_20:
  2639  0317                     i1l1535:
  2640                           
  2641                           ;master.c: 106:     TRISD = 0;
  2642  0317  081A               	movf	26,w	;volatile
  2643  0318  00FF               	movwf	btemp+1
  2644  0319  087F               	movf	btemp+1,w
  2645  031A  00F0               	movwf	_TOG
  2646  031B                     i1l1537:
  2647                           
  2648                           ;master.c: 107:     TRISE = 0;
  2649  031B  120A  118A  23D4  120A  118A  	fcall	_recibir
  2650  0320                     i1l143:
  2651  0320  087B               	movf	??_ISR+3,w
  2652  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0323  00FF               	movwf	btemp+1
  2655  0324  087A               	movf	??_ISR+2,w
  2656  0325  008A               	movwf	10
  2657  0326  0879               	movf	??_ISR+1,w
  2658  0327  0084               	movwf	4
  2659  0328  0E78               	swapf	??_ISR^(0+4294967168),w
  2660  0329  0083               	movwf	3
  2661  032A  0EFE               	swapf	btemp,f
  2662  032B  0E7E               	swapf	btemp,w
  2663  032C  0009               	retfie
  2664  032D                     __end_of_ISR:
  2665                           
  2666                           	psect	intentry
  2667  0004                     __pintentry:	
  2668                           ;incstack = 0
  2669                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2670                           
  2671  0004                     interrupt_function:
  2672  007E                     saved_w	set	btemp
  2673  0004  00FE               	movwf	btemp
  2674  0005  0E03               	swapf	3,w
  2675  0006  00F8               	movwf	??_ISR
  2676  0007  0804               	movf	4,w
  2677  0008  00F9               	movwf	??_ISR+1
  2678  0009  080A               	movf	10,w
  2679  000A  00FA               	movwf	??_ISR+2
  2680  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2681  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2682  000D  087F               	movf	btemp+1,w
  2683  000E  00FB               	movwf	??_ISR+3
  2684  000F  120A  118A  2AEF   	ljmp	_ISR
  2685                           
  2686                           	psect	text15
  2687  03D4                     __ptext15:	
  2688 ;; *************** function _recibir *****************
  2689 ;; Defined at:
  2690 ;;		line 312 in file "master.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0
  2707 ;;      Totals:         0       0       0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_ISR
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           
  2718                           ;psect for function _recibir
  2719  03D4                     _recibir:
  2720  03D4                     i1l1389:	
  2721                           ;incstack = 0
  2722                           ; Regs used in _recibir: [wreg+status,2+status,0]
  2723                           
  2724  03D4  0370               	decf	_TOG,w
  2725  03D5  1D03               	btfss	3,2
  2726  03D6  2BD8               	goto	u38_21
  2727  03D7  2BD9               	goto	u38_20
  2728  03D8                     u38_21:
  2729  03D8  2BDF               	goto	i1l1393
  2730  03D9                     u38_20:
  2731  03D9                     i1l1391:
  2732  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2733  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2734  03DB  01A0               	clrf	_FLAG
  2735  03DC  0AA0               	incf	_FLAG,f
  2736  03DD  1005               	bcf	5,0	;volatile
  2737  03DE  1085               	bcf	5,1	;volatile
  2738  03DF                     i1l1393:
  2739  03DF  3002               	movlw	2
  2740  03E0  0670               	xorwf	_TOG,w
  2741  03E1  1D03               	btfss	3,2
  2742  03E2  2BE4               	goto	u39_21
  2743  03E3  2BE5               	goto	u39_20
  2744  03E4                     u39_21:
  2745  03E4  2BE9               	goto	i1l1397
  2746  03E5                     u39_20:
  2747  03E5                     i1l1395:
  2748  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2749  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2750  03E7  1405               	bsf	5,0	;volatile
  2751  03E8  1085               	bcf	5,1	;volatile
  2752  03E9                     i1l1397:
  2753  03E9  3003               	movlw	3
  2754  03EA  0670               	xorwf	_TOG,w
  2755  03EB  1D03               	btfss	3,2
  2756  03EC  2BEE               	goto	u40_21
  2757  03ED  2BEF               	goto	u40_20
  2758  03EE                     u40_21:
  2759  03EE  2BF3               	goto	i1l1401
  2760  03EF                     u40_20:
  2761  03EF                     i1l1399:
  2762  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2763  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2764  03F1  1485               	bsf	5,1	;volatile
  2765  03F2  1005               	bcf	5,0	;volatile
  2766  03F3                     i1l1401:
  2767  03F3  3004               	movlw	4
  2768  03F4  0670               	xorwf	_TOG,w
  2769  03F5  1D03               	btfss	3,2
  2770  03F6  2BF8               	goto	u41_21
  2771  03F7  2BF9               	goto	u41_20
  2772  03F8                     u41_21:
  2773  03F8  2BFD               	goto	i1l195
  2774  03F9                     u41_20:
  2775  03F9                     i1l1403:
  2776  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2777  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2778  03FB  1405               	bsf	5,0	;volatile
  2779  03FC  1485               	bsf	5,1	;volatile
  2780  03FD                     i1l195:
  2781  03FD  0008               	return
  2782  03FE                     __end_of_recibir:
  2783                           
  2784                           	psect	text16
  2785  00D3                     __ptext16:	
  2786 ;; *************** function _mandar *****************
  2787 ;; Defined at:
  2788 ;;		line 170 in file "master.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2802 ;;      Params:         0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0
  2804 ;;      Temps:          2       0       0       0       0
  2805 ;;      Totals:         2       0       0       0       0
  2806 ;;Total ram usage:        2 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_ISR
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function _mandar
  2817  00D3                     _mandar:
  2818  00D3                     i1l1339:	
  2819                           ;incstack = 0
  2820                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  2821                           
  2822                           
  2823                           ;master.c: 171:         case 10:
  2824  00D3  2905               	goto	i1l1383
  2825  00D4                     i1l1341:
  2826                           
  2827                           ;master.c: 173:             break;
  2828  00D4  3020               	movlw	32
  2829  00D5  0099               	movwf	25	;volatile
  2830                           
  2831                           ;master.c: 174: 
  2832  00D6  294A               	goto	i1l179
  2833  00D7                     i1l1343:
  2834                           
  2835                           ;master.c: 176:             TXREG = DU;
  2836  00D7  0827               	movf	_HD,w
  2837  00D8  0099               	movwf	25	;volatile
  2838                           
  2839                           ;master.c: 177:             break;
  2840  00D9  294A               	goto	i1l179
  2841  00DA                     i1l1345:
  2842                           
  2843                           ;master.c: 179:         case 12:
  2844  00DA  0828               	movf	_HU,w
  2845  00DB  0099               	movwf	25	;volatile
  2846                           
  2847                           ;master.c: 180:             TXREG = 0x2F;
  2848  00DC  294A               	goto	i1l179
  2849  00DD                     i1l1347:
  2850                           
  2851                           ;master.c: 183:             TXREG = MOD;
  2852  00DD  303A               	movlw	58
  2853  00DE  0099               	movwf	25	;volatile
  2854                           
  2855                           ;master.c: 184:             break;
  2856  00DF  294A               	goto	i1l179
  2857  00E0                     i1l1349:
  2858                           
  2859                           ;master.c: 187:             TXREG = MOU;
  2860  00E0  0829               	movf	_MD,w
  2861  00E1  0099               	movwf	25	;volatile
  2862                           
  2863                           ;master.c: 188:             break;
  2864  00E2  294A               	goto	i1l179
  2865  00E3                     i1l1351:
  2866                           
  2867                           ;master.c: 190:             TXREG = 0x2F;
  2868  00E3  082A               	movf	_MU,w
  2869  00E4  0099               	movwf	25	;volatile
  2870                           
  2871                           ;master.c: 191:             break;
  2872  00E5  294A               	goto	i1l179
  2873  00E6                     i1l1355:
  2874                           
  2875                           ;master.c: 196: 
  2876  00E6  082B               	movf	_SD,w
  2877  00E7  0099               	movwf	25	;volatile
  2878                           
  2879                           ;master.c: 197:         case 17:
  2880  00E8  294A               	goto	i1l179
  2881  00E9                     i1l1357:
  2882                           
  2883                           ;master.c: 200: 
  2884  00E9  082C               	movf	_SU,w
  2885  00EA  0099               	movwf	25	;volatile
  2886                           
  2887                           ;master.c: 201:         case 18:
  2888  00EB  294A               	goto	i1l179
  2889  00EC                     i1l1361:
  2890                           
  2891                           ;master.c: 208: void timeout(void) {
  2892  00EC  0825               	movf	_DD,w
  2893  00ED  0099               	movwf	25	;volatile
  2894                           
  2895                           ;master.c: 209:     I2C_Master_Start();
  2896  00EE  294A               	goto	i1l179
  2897  00EF                     i1l1363:
  2898                           
  2899                           ;master.c: 212:     I2C_Master_Write(0b00000000);
  2900  00EF  0826               	movf	_DU,w
  2901  00F0  0099               	movwf	25	;volatile
  2902                           
  2903                           ;master.c: 213:     I2C_Master_Write(0b00000000);
  2904  00F1  294A               	goto	i1l179
  2905  00F2                     i1l1365:
  2906                           
  2907                           ;master.c: 216:     I2C_Master_Write(0x05);
  2908  00F2  302F               	movlw	47
  2909  00F3  0099               	movwf	25	;volatile
  2910                           
  2911                           ;master.c: 217:     I2C_Master_Write(0x03);
  2912  00F4  294A               	goto	i1l179
  2913  00F5                     i1l1367:
  2914                           
  2915                           ;master.c: 219:     I2C_Master_Stop();
  2916  00F5  0823               	movf	_MOD,w
  2917  00F6  0099               	movwf	25	;volatile
  2918                           
  2919                           ;master.c: 220: 
  2920  00F7  294A               	goto	i1l179
  2921  00F8                     i1l1369:
  2922                           
  2923                           ;master.c: 223: void timein(void) {
  2924  00F8  0824               	movf	_MOU,w
  2925  00F9  0099               	movwf	25	;volatile
  2926                           
  2927                           ;master.c: 224:     I2C_Master_Start();
  2928  00FA  294A               	goto	i1l179
  2929  00FB                     i1l1373:
  2930                           
  2931                           ;master.c: 230:     SEC = I2C_Master_Read(1);
  2932  00FB  0821               	movf	_YD,w
  2933  00FC  0099               	movwf	25	;volatile
  2934                           
  2935                           ;master.c: 231:     MIN = I2C_Master_Read(1);
  2936  00FD  294A               	goto	i1l179
  2937  00FE                     i1l1375:
  2938                           
  2939                           ;master.c: 234:     DAY = I2C_Master_Read(1);
  2940  00FE  0822               	movf	_YU,w
  2941  00FF  0099               	movwf	25	;volatile
  2942                           
  2943                           ;master.c: 235:     MONTH = I2C_Master_Read(1);
  2944  0100  294A               	goto	i1l179
  2945  0101                     i1l1377:
  2946                           
  2947                           ;master.c: 238: 
  2948  0101  300A               	movlw	10
  2949  0102  0099               	movwf	25	;volatile
  2950  0103                     i1l1379:
  2951                           
  2952                           ;master.c: 239: 
  2953  0103  01BB               	clrf	_SEND
  2954                           
  2955                           ;master.c: 240: 
  2956  0104  294A               	goto	i1l179
  2957  0105                     i1l1383:
  2958  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0107  083B               	movf	_SEND,w
  2961  0108  00F6               	movwf	??_mandar
  2962  0109  01F7               	clrf	??_mandar+1
  2963                           
  2964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2965                           ; Switch size 1, requested type "simple"
  2966                           ; Number of cases is 1, Range of values is 0 to 0
  2967                           ; switch strategies available:
  2968                           ; Name         Instructions Cycles
  2969                           ; simple_byte            4     3 (average)
  2970                           ; direct_byte           11     8 (fixed)
  2971                           ; jumptable            260     6 (fixed)
  2972                           ;	Chosen strategy is simple_byte
  2973  010A  0877               	movf	??_mandar+1,w
  2974  010B  3A00               	xorlw	0	; case 0
  2975  010C  1903               	skipnz
  2976  010D  290F               	goto	i1l1883
  2977  010E  294A               	goto	i1l179
  2978  010F                     i1l1883:
  2979                           
  2980                           ; Switch size 1, requested type "simple"
  2981                           ; Number of cases is 19, Range of values is 0 to 18
  2982                           ; switch strategies available:
  2983                           ; Name         Instructions Cycles
  2984                           ; simple_byte           58    30 (average)
  2985                           ; direct_byte           65     8 (fixed)
  2986                           ; jumptable            260     6 (fixed)
  2987                           ;	Chosen strategy is simple_byte
  2988  010F  0876               	movf	??_mandar,w
  2989  0110  3A00               	xorlw	0	; case 0
  2990  0111  1903               	skipnz
  2991  0112  28D4               	goto	i1l1341
  2992  0113  3A01               	xorlw	1	; case 1
  2993  0114  1903               	skipnz
  2994  0115  28D7               	goto	i1l1343
  2995  0116  3A03               	xorlw	3	; case 2
  2996  0117  1903               	skipnz
  2997  0118  28DA               	goto	i1l1345
  2998  0119  3A01               	xorlw	1	; case 3
  2999  011A  1903               	skipnz
  3000  011B  28DD               	goto	i1l1347
  3001  011C  3A07               	xorlw	7	; case 4
  3002  011D  1903               	skipnz
  3003  011E  28E0               	goto	i1l1349
  3004  011F  3A01               	xorlw	1	; case 5
  3005  0120  1903               	skipnz
  3006  0121  28E3               	goto	i1l1351
  3007  0122  3A03               	xorlw	3	; case 6
  3008  0123  1903               	skipnz
  3009  0124  28DD               	goto	i1l1347
  3010  0125  3A01               	xorlw	1	; case 7
  3011  0126  1903               	skipnz
  3012  0127  28E6               	goto	i1l1355
  3013  0128  3A0F               	xorlw	15	; case 8
  3014  0129  1903               	skipnz
  3015  012A  28E9               	goto	i1l1357
  3016  012B  3A01               	xorlw	1	; case 9
  3017  012C  1903               	skipnz
  3018  012D  28D4               	goto	i1l1341
  3019  012E  3A03               	xorlw	3	; case 10
  3020  012F  1903               	skipnz
  3021  0130  28EC               	goto	i1l1361
  3022  0131  3A01               	xorlw	1	; case 11
  3023  0132  1903               	skipnz
  3024  0133  28EF               	goto	i1l1363
  3025  0134  3A07               	xorlw	7	; case 12
  3026  0135  1903               	skipnz
  3027  0136  28F2               	goto	i1l1365
  3028  0137  3A01               	xorlw	1	; case 13
  3029  0138  1903               	skipnz
  3030  0139  28F5               	goto	i1l1367
  3031  013A  3A03               	xorlw	3	; case 14
  3032  013B  1903               	skipnz
  3033  013C  28F8               	goto	i1l1369
  3034  013D  3A01               	xorlw	1	; case 15
  3035  013E  1903               	skipnz
  3036  013F  28F2               	goto	i1l1365
  3037  0140  3A1F               	xorlw	31	; case 16
  3038  0141  1903               	skipnz
  3039  0142  28FB               	goto	i1l1373
  3040  0143  3A01               	xorlw	1	; case 17
  3041  0144  1903               	skipnz
  3042  0145  28FE               	goto	i1l1375
  3043  0146  3A03               	xorlw	3	; case 18
  3044  0147  1903               	skipnz
  3045  0148  2901               	goto	i1l1377
  3046  0149  294A               	goto	i1l179
  3047  014A                     i1l179:
  3048  014A  0008               	return
  3049  014B                     __end_of_mandar:
  3050  007E                     btemp	set	126	;btemp
  3051  007E                     wtemp0	set	126
  3052                           
  3053                           	psect	config
  3054                           
  3055                           ;Config register CONFIG1 @ 0x2007
  3056                           ;	Oscillator Selection bits
  3057                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3058                           ;	Watchdog Timer Enable bit
  3059                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3060                           ;	Power-up Timer Enable bit
  3061                           ;	PWRTE = OFF, PWRT disabled
  3062                           ;	RE3/MCLR pin function select bit
  3063                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3064                           ;	Code Protection bit
  3065                           ;	CP = OFF, Program memory code protection is disabled
  3066                           ;	Data Code Protection bit
  3067                           ;	CPD = OFF, Data memory code protection is disabled
  3068                           ;	Brown Out Reset Selection bits
  3069                           ;	BOREN = OFF, BOR disabled
  3070                           ;	Internal External Switchover bit
  3071                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3072                           ;	Fail-Safe Clock Monitor Enabled bit
  3073                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3074                           ;	Low Voltage Programming Enable bit
  3075                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3076                           ;	In-Circuit Debugger Mode bit
  3077                           ;	DEBUG = 0x1, unprogrammed default
  3078  2007                     	org	8199
  3079  2007  20D4               	dw	8404
  3080                           
  3081                           ;Config register CONFIG2 @ 0x2008
  3082                           ;	Brown-out Reset Selection bit
  3083                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3084                           ;	Flash Program Memory Self Write Enable bits
  3085                           ;	WRT = OFF, Write protection off
  3086  2008                     	org	8200
  3087  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     22      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_mandar

Critical Paths under _main in BANK0

    _timeout->_I2C_Master_Write
    _timein->_I2C_Master_Read
    _Setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2860
                              _Setup
                             _conver
                             _timein
                            _timeout
 ---------------------------------------------------------------------------------
 (1) _timeout                                              0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _timein                                               0     0      0    1176
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      5     5      0      65
                                              0 BANK0      5     5      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conver                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     573
                    _I2C_Master_Init
                            _initOsc
                              _usart
 ---------------------------------------------------------------------------------
 (2) _usart                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              2 COMMON     4     4      0
                             _mandar
                            _recibir
 ---------------------------------------------------------------------------------
 (5) _recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _I2C_Master_Init
       ___lldiv
     _initOsc
     _usart
   _conver
   _timein
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _timeout
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _ISR (ROOT)
   _mandar
   _recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3F      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Mar 05 22:58:22 2021

                        _H 0073                         _DD 0025                         _HD 0027  
                       _DU 0026                         _MD 0029                         _HU 0028  
                       _SD 002B                         _MU 002A                         _YD 0021  
                       _SU 002C                         _YU 0022                         fsr 0004  
                      l230 0443                        l224 03A2                        l233 045F  
                      l242 044D                        l403 0290                        l155 0368  
                      l227 0437                        l260 02A7                        l261 02AD  
                      l245 03CC                        l262 02B3                        l246 03CF  
                      l182 0228                        l263 02B9                        l247 03D3  
                      l239 0456                        l264 02BF                        l256 0295  
                      l265 02C5                        l257 02ED                        l281 0436  
                      l185 01BD                        l266 02EE                        l258 029B  
                      l259 02A1                        l188 00D2                        _DAY 0072  
                      _GIE 005F                        _MIN 0074                        _MOD 0023  
                      _SEC 0075                        u610 0288                        u530 043D  
                      u611 0287                        u531 043C                        u620 0380  
                      u540 0443                        u700 041A                        _ISR 02EF  
                      u605 027A                        u541 0442                        u701 0419  
                      u550 023B                        u630 03C8                        u551 023A  
                      u631 03C7                        u625 037B                        u570 024F  
                      u571 024E                        u565 0240                        u645 0032  
                      u590 026A                        u591 0269                        u655 0044  
                      _MOU 0024                        u585 0251                        u665 0056  
                      u595 0266                        u675 0068                        u685 007A  
                      u695 008C                        _TOG 0070                        fsr0 0004  
                      indf 0000                       ?_ISR 0076                       l1611 0229  
                     l1621 024F                       l1613 023B                       l1701 03D0  
                     l1631 0282                       l1623 0258                       l1615 023E  
                     l1711 033B                       l1607 0437                       l1625 026A  
                     l1617 0247                       l1633 0288                       l1641 02CB  
                     l1721 0342                       l1713 033C                       l1705 032D  
                     l1801 00B4                       l1609 043D                       l1627 0278  
                     l1619 024B                       l1651 042A                       l1731 0349  
                     l1723 0345                       l1715 033D                       l1707 0333  
                     l1811 00CD                       l1803 00B9                       l1629 0279  
                     l1637 0294                       l1661 0434                       l1653 042D  
                     l1741 0355                       l1733 034D                       l1725 0346  
                     l1717 033E                       l1709 0338                       l1805 00BE  
                     l1821 0412                       l1813 03FE                       l1671 039F  
                     l1663 0435                       l1655 042F                       l1743 0356  
                     l1735 034E                       l1727 0347                       l1719 0341  
                     l1807 00C3                       l1751 01BE                       l1823 041A  
                     l1815 0403                       l1673 03A0                       l1665 0369  
                     l1657 0430                       l1649 0422                       l1745 0357  
                     l1737 034F                       l1729 0348                       l1809 00C8  
                     l1681 0444                       l1761 0190                       l1753 014B  
                     l1825 041B                       l1817 0408                       l1675 03A1  
                     l1667 036D                       l1659 0431                       l1747 0358  
                     l1739 0352                       l1771 0028                       l1691 03AB  
                     l1683 0449                       l1763 019B                       l1755 0175  
                     l1819 040D                       l1669 0370                       l1749 035B  
                     l1781 0065                       l1773 002F                       l1693 03B3  
                     l1677 0457                       l1685 044E                       l1765 01A4  
                     l1757 017E                       l1791 009B                       l1783 0072  
                     l1775 003C                       l1695 03BC                       l1679 045C  
                     l1687 0453                       l1767 01AD                       l1759 0187  
                     l1881 02D3                       l1793 00A0                       l1785 0084  
                     l1777 004E                       l1697 03C1                       l1689 03A6  
                     l1769 01B8                       l1795 00A5                       l1787 0089  
                     l1779 0053                       l1699 03C8                       l1797 00AA  
                     l1789 0096                       l1799 00AF                       _DAYD 0031  
                     _FLAG 0020                       _DAYU 0032                       _NADA 0039  
                     _CONT 003C                       _PEIE 005E                       _MIND 0035  
                     _SECD 0037                       _MINU 0036                       _SECU 0038  
                     _SEND 003B                       _TMR0 0001                       _YEAR 003A  
                     _main 03FE                       btemp 007E                       start 0012  
                    ??_ISR 0078           ?_I2C_Master_Init 004B           ?_I2C_Master_Read 0076  
         ?_I2C_Master_Wait 0076           ?_I2C_Master_Stop 0076                      ?_main 0076  
                    _ANSEL 0188            __end_of___lldiv 0291                      _HORAD 0033  
                    i1l143 0320                      _HORAU 0034                      i1l179 014A  
                    i1l195 03FD                      _RCREG 001A                      _MONTH 0071  
                    u40_20 03EF                      u40_21 03EE                      u41_20 03F9  
                    u41_21 03F8                      u50_20 0303                      u50_21 0302  
                    _SPBRG 0099                      _YEARD 002D                      u51_20 0317  
                    u51_21 0316                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    _YEARU 002E                      u38_20 03D9                      u38_21 03D8  
                    u39_20 03E5                      u39_21 03E4                      u48_20 02F3  
                    u48_21 02F2                      u49_20 02FF                      u49_21 02FE  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019                      _Setup 032D            __end_of_initOsc 02EF  
          __end_of_recibir 03FE                      _usart 0422                      pclath 000A  
          __end_of_timeout 0229                      status 0003                      wtemp0 007E  
          __initialization 0015               __end_of_main 0422                     ??_main 0053  
        ?_I2C_Master_Start 0076          ?_I2C_Master_Write 003D                     ?_Setup 0076  
       ??_I2C_Master_Start 003D         ??_I2C_Master_Write 003F                initOsc@IRCF 003F  
                   _ANSELH 0189                     ?_usart 0076                     i1l1401 03F3  
                   i1l1403 03F9                     i1l1341 00D4                     i1l1351 00E3  
                   i1l1343 00D7                     i1l1361 00EC                     i1l1345 00DA  
                   i1l1521 02FA                     i1l1513 02EF                     i1l1363 00EF  
                   i1l1355 00E6                     i1l1347 00DD                     i1l1339 00D3  
                   i1l1531 030F                     i1l1523 02FF                     i1l1515 02F3  
                   i1l1373 00FB                     i1l1365 00F2                     i1l1357 00E9  
                   i1l1349 00E0                     i1l1525 0303                     i1l1533 0312  
                   i1l1517 02F5                     i1l1375 00FE                     i1l1367 00F5  
                   i1l1383 0105                     i1l1391 03D9                     i1l1535 0317  
                   i1l1527 0308                     i1l1519 02F9                     i1l1377 0101  
                   i1l1369 00F8                     i1l1393 03DF                     i1l1537 031B  
                   i1l1529 030E                     i1l1379 0103                     i1l1395 03E5  
                   i1l1397 03E9                     i1l1389 03D4                     i1l1399 03EF  
                   i1l1883 010F                     _MONTHD 002F                     _MONTHU 0030  
                   _SPBRGH 009A                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___lldiv 0045                     _conver 0028                     _mandar 00D3  
                   _timein 014B                  ??_initOsc 003D                  ??_recibir 0076  
                   saved_w 007E                  ??_timeout 003F    __end_of__initialization 0024  
           __pcstackCOMMON 0076              __end_of_Setup 0369              __end_of_usart 0437  
                  ??_Setup 0053                    ??_usart 003D                 __pbssBANK0 0020  
               __pmaintext 03FE                 __pintentry 0004                    ?_conver 0076  
                  ?_mandar 0076                    ?_timein 0076                    _SSPCON2 0091  
                  _SSPSTAT 0094                    ___lldiv 0229            __size_of_conver 00AB  
          __size_of_mandar 0078                    __ptext1 01BE                    __ptext2 014B  
                  __ptext3 0444                    __ptext4 044E                    __ptext5 0457  
                  __ptext6 03A3                    __ptext7 0437                    __ptext8 0028  
                  __ptext9 032D            __size_of_timein 0073               __size_of_ISR 003E  
                  _initOsc 0291                    _recibir 03D4   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0031   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _timeout 01BE                    clrloop0 0461       end_of_initialization 0024  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 003D  
          ___lldiv@counter 004A                  _RCSTAbits 0018           I2C_Master_Init@c 004B  
         I2C_Master_Read@a 003F                  _PORTAbits 0005                  _TRISCbits 0087  
                _TXSTAbits 0098                _BAUDCTLbits 0187             __end_of_conver 00D3  
           __end_of_mandar 014B             __end_of_timein 01BE        start_initialization 0015  
              __end_of_ISR 032D          ??_I2C_Master_Init 004F          ??_I2C_Master_Read 003D  
        ??_I2C_Master_Wait 003D          ??_I2C_Master_Stop 003D                   ??_conver 003D  
                 ??_mandar 0076                   ??_timein 0042                __pbssCOMMON 0070  
                ___latbits 0002              __pcstackBANK0 003D           _I2C_Master_Start 0457  
         _I2C_Master_Write 0444                   ?___lldiv 003D                   ?_initOsc 0076  
                 ?_recibir 0076             __size_of_Setup 003C                   ?_timeout 0076  
           __size_of_usart 0015          interrupt_function 0004                  clear_ram0 0460  
                 _PIE1bits 008C                   _PIR1bits 000C        I2C_Master_Read@temp 0040  
         __size_of___lldiv 0068            _I2C_Master_Init 0369            _I2C_Master_Read 03A3  
          _I2C_Master_Wait 0437            _I2C_Master_Stop 044E           __size_of_initOsc 005E  
         __size_of_recibir 002A                   __ptext10 0422                   __ptext11 0291  
                 __ptext12 0369                   __ptext13 0229                   __ptext14 02EF  
                 __ptext15 03D4                   __ptext16 00D3           __size_of_timeout 006B  
            __size_of_main 0024   __end_of_I2C_Master_Start 0460   __end_of_I2C_Master_Write 044E  
               _INTCONbits 000B                   intlevel1 0000           ___lldiv@dividend 0041  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 03A3    __end_of_I2C_Master_Read 03D4  
  __end_of_I2C_Master_Wait 0444    __end_of_I2C_Master_Stop 0457                 _OPTION_REG 0081  
         ___lldiv@quotient 0046          I2C_Master_Write@d 003D                _SSPCON2bits 0091  
