

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Mar 02 23:22:18 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 09/04/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0018                     _RCSTAbits	set	24
   455  0013                     _SSPBUF	set	19
   456  0014                     _SSPCON	set	20
   457  0019                     _TXREG	set	25
   458  0009                     _PORTE	set	9
   459  0008                     _PORTD	set	8
   460  0007                     _PORTC	set	7
   461  0006                     _PORTB	set	6
   462  0005                     _PORTA	set	5
   463  000C                     _PIR1bits	set	12
   464  0001                     _TMR0	set	1
   465  000B                     _INTCONbits	set	11
   466  0063                     _SSPIF	set	99
   467  005E                     _PEIE	set	94
   468  005F                     _GIE	set	95
   469  0099                     _SPBRG	set	153
   470  009A                     _SPBRGH	set	154
   471  0098                     _TXSTAbits	set	152
   472  008F                     _OSCCONbits	set	143
   473  0091                     _SSPCON2bits	set	145
   474  0087                     _TRISCbits	set	135
   475  0094                     _SSPSTAT	set	148
   476  0093                     _SSPADD	set	147
   477  0091                     _SSPCON2	set	145
   478  0081                     _OPTION_REG	set	129
   479  0089                     _TRISE	set	137
   480  0088                     _TRISD	set	136
   481  0086                     _TRISB	set	134
   482  0085                     _TRISA	set	133
   483  008C                     _PIE1bits	set	140
   484  0463                     _SSPIE	set	1123
   485  043C                     _TRISC4	set	1084
   486  043B                     _TRISC3	set	1083
   487  0187                     _BAUDCTLbits	set	391
   488  0189                     _ANSELH	set	393
   489  0188                     _ANSEL	set	392
   490                           
   491                           	psect	cinit
   492  0015                     start_initialization:	
   493                           ; #config settings
   494                           
   495  0015                     __initialization:
   496                           
   497                           ; Clear objects allocated to COMMON
   498  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   499  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   500  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   501  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   502  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   503  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   504                           
   505                           ; Clear objects allocated to BANK0
   506  001B  1383               	bcf	3,7	;select IRP bank0
   507  001C  3020               	movlw	low __pbssBANK0
   508  001D  0084               	movwf	4
   509  001E  303B               	movlw	low (__pbssBANK0+27)
   510  001F  120A  118A  241D  120A  118A  	fcall	clear_ram0
   511  0024                     end_of_initialization:	
   512                           ;End of C runtime variable initialization code
   513                           
   514  0024                     __end_of__initialization:
   515  0024  0183               	clrf	3
   516  0025  120A  118A  2BBB   	ljmp	_main	;jump to C main() function
   517                           
   518                           	psect	bssCOMMON
   519  0070                     __pbssCOMMON:
   520  0070                     _YEAR:
   521  0070                     	ds	1
   522  0071                     _MONTH:
   523  0071                     	ds	1
   524  0072                     _DAY:
   525  0072                     	ds	1
   526  0073                     _H:
   527  0073                     	ds	1
   528  0074                     _MIN:
   529  0074                     	ds	1
   530  0075                     _SEC:
   531  0075                     	ds	1
   532                           
   533                           	psect	bssBANK0
   534  0020                     __pbssBANK0:
   535  0020                     _YD:
   536  0020                     	ds	1
   537  0021                     _YU:
   538  0021                     	ds	1
   539  0022                     _MOD:
   540  0022                     	ds	1
   541  0023                     _MOU:
   542  0023                     	ds	1
   543  0024                     _DD:
   544  0024                     	ds	1
   545  0025                     _DU:
   546  0025                     	ds	1
   547  0026                     _HD:
   548  0026                     	ds	1
   549  0027                     _HU:
   550  0027                     	ds	1
   551  0028                     _MD:
   552  0028                     	ds	1
   553  0029                     _MU:
   554  0029                     	ds	1
   555  002A                     _SD:
   556  002A                     	ds	1
   557  002B                     _SU:
   558  002B                     	ds	1
   559  002C                     _YEARD:
   560  002C                     	ds	1
   561  002D                     _YEARU:
   562  002D                     	ds	1
   563  002E                     _MONTHD:
   564  002E                     	ds	1
   565  002F                     _MONTHU:
   566  002F                     	ds	1
   567  0030                     _DAYD:
   568  0030                     	ds	1
   569  0031                     _DAYU:
   570  0031                     	ds	1
   571  0032                     _HORAD:
   572  0032                     	ds	1
   573  0033                     _HORAU:
   574  0033                     	ds	1
   575  0034                     _MIND:
   576  0034                     	ds	1
   577  0035                     _MINU:
   578  0035                     	ds	1
   579  0036                     _SECD:
   580  0036                     	ds	1
   581  0037                     _SECU:
   582  0037                     	ds	1
   583  0038                     _NADA:
   584  0038                     	ds	1
   585  0039                     _SEND:
   586  0039                     	ds	1
   587  003A                     _CONT:
   588  003A                     	ds	1
   589                           
   590                           	psect	clrtext
   591  041D                     clear_ram0:	
   592                           ;	Called with FSR containing the base address, and
   593                           ;	W with the last address+1
   594                           
   595  041D  0064               	clrwdt	;clear the watchdog before getting into this loop
   596  041E                     clrloop0:
   597  041E  0180               	clrf	0	;clear RAM location pointed to by FSR
   598  041F  0A84               	incf	4,f	;increment pointer
   599  0420  0604               	xorwf	4,w	;XOR with final address
   600  0421  1903               	btfsc	3,2	;have we reached the end yet?
   601  0422  3400               	retlw	0	;all done for this memory range, return
   602  0423  0604               	xorwf	4,w	;XOR again to restore value
   603  0424  2C1E               	goto	clrloop0	;do the next byte
   604                           
   605                           	psect	cstackCOMMON
   606  0076                     __pcstackCOMMON:
   607  0076                     ?_mandar:
   608  0076                     ??_mandar:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0076                     ?_Setup:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0076                     ?_timeout:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0076                     ?_timein:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0076                     ?_conver:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0076                     ?_initOsc:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0076                     ?_usart:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0076                     ?_I2C_Master_Start:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0076                     ?_I2C_Master_Stop:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0076                     ?_I2C_Master_Read:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0076                     ?_ISR:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0076                     ?_main:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0076                     ?_I2C_Master_Wait:	
   645                           ; 1 bytes @ 0x0
   646                           
   647                           
   648                           ; 1 bytes @ 0x0
   649  0076                     	ds	2
   650  0078                     ??_ISR:
   651                           
   652                           ; 1 bytes @ 0x2
   653  0078                     	ds	4
   654                           
   655                           	psect	cstackBANK0
   656  003B                     __pcstackBANK0:
   657  003B                     ??_conver:
   658  003B                     ??_initOsc:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  003B                     ??_usart:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  003B                     ??_I2C_Master_Start:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  003B                     ?_I2C_Master_Write:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  003B                     ??_I2C_Master_Stop:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  003B                     ??_I2C_Master_Read:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  003B                     ??_I2C_Master_Wait:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  003B                     ?___lldiv:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  003B                     I2C_Master_Write@d:	
   683                           ; 4 bytes @ 0x0
   684                           
   685  003B                     ___lldiv@divisor:	
   686                           ; 2 bytes @ 0x0
   687                           
   688                           
   689                           ; 4 bytes @ 0x0
   690  003B                     	ds	2
   691  003D                     ??_timeout:
   692  003D                     ??_I2C_Master_Write:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  003D                     I2C_Master_Read@a:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  003D                     initOsc@IRCF:	
   699                           ; 1 bytes @ 0x2
   700                           
   701                           
   702                           ; 1 bytes @ 0x2
   703  003D                     	ds	1
   704  003E                     I2C_Master_Read@temp:
   705                           
   706                           ; 2 bytes @ 0x3
   707  003E                     	ds	1
   708  003F                     ___lldiv@dividend:
   709                           
   710                           ; 4 bytes @ 0x4
   711  003F                     	ds	1
   712  0040                     ??_timein:
   713                           
   714                           ; 1 bytes @ 0x5
   715  0040                     	ds	3
   716  0043                     ??___lldiv:
   717                           
   718                           ; 1 bytes @ 0x8
   719  0043                     	ds	1
   720  0044                     ___lldiv@quotient:
   721                           
   722                           ; 4 bytes @ 0x9
   723  0044                     	ds	4
   724  0048                     ___lldiv@counter:
   725                           
   726                           ; 1 bytes @ 0xD
   727  0048                     	ds	1
   728  0049                     ?_I2C_Master_Init:
   729  0049                     I2C_Master_Init@c:	
   730                           ; 1 bytes @ 0xE
   731                           
   732                           
   733                           ; 4 bytes @ 0xE
   734  0049                     	ds	4
   735  004D                     ??_I2C_Master_Init:
   736                           
   737                           ; 1 bytes @ 0x12
   738  004D                     	ds	4
   739  0051                     ??_Setup:
   740  0051                     ??_main:	
   741                           ; 1 bytes @ 0x16
   742                           
   743                           
   744                           	psect	maintext
   745  03BB                     __pmaintext:	
   746                           ; 1 bytes @ 0x16
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 111 in file "master.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : B00/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels required when called:    5
   772 ;; This function calls:
   773 ;;		_Setup
   774 ;;		_conver
   775 ;;		_timein
   776 ;;		_timeout
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _main
   784  03BB                     _main:
   785  03BB                     l1734:	
   786                           ;incstack = 0
   787                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   788                           
   789  03BB  120A  118A  22EC  120A  118A  	fcall	_Setup
   790  03C0                     l1736:
   791  03C0  120A  118A  21BC  120A  118A  	fcall	_timeout
   792  03C5                     l1738:
   793                           
   794                           ;master.c: 126:         timein();
   795  03C5  120A  118A  214B  120A  118A  	fcall	_timein
   796  03CA                     l1740:
   797                           
   798                           ;master.c: 127:         conver();
   799  03CA  120A  118A  2028  120A  118A  	fcall	_conver
   800  03CF                     l1742:
   801                           
   802                           ;master.c: 128:         if (CONT > 30) {
   803  03CF  301F               	movlw	31
   804  03D0  1283               	bcf	3,5	;RP0=0, select bank0
   805  03D1  1303               	bcf	3,6	;RP1=0, select bank0
   806  03D2  023A               	subwf	_CONT,w
   807  03D3  1C03               	skipc
   808  03D4  2BD6               	goto	u581
   809  03D5  2BD7               	goto	u580
   810  03D6                     u581:
   811  03D6  2BC5               	goto	l1738
   812  03D7                     u580:
   813  03D7                     l1744:
   814                           
   815                           ;master.c: 129:             CONT = 0;
   816  03D7  01BA               	clrf	_CONT
   817  03D8                     l1746:
   818                           
   819                           ;master.c: 130:             PIE1bits.TXIE = 1;
   820  03D8  1683               	bsf	3,5	;RP0=1, select bank1
   821  03D9  1303               	bcf	3,6	;RP1=0, select bank1
   822  03DA  160C               	bsf	12,4	;volatile
   823  03DB  2BC5               	goto	l1738
   824  03DC  120A  118A  2812   	ljmp	start
   825  03DF                     __end_of_main:
   826                           
   827                           	psect	text1
   828  01BC                     __ptext1:	
   829 ;; *************** function _timeout *****************
   830 ;; Defined at:
   831 ;;		line 252 in file "master.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;		None
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0
   848 ;;      Totals:         0       0       0       0       0
   849 ;;Total ram usage:        0 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    4
   852 ;; This function calls:
   853 ;;		_I2C_Master_Start
   854 ;;		_I2C_Master_Stop
   855 ;;		_I2C_Master_Write
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _timeout
   863  01BC                     _timeout:
   864  01BC                     l1672:	
   865                           ;incstack = 0
   866                           ; Regs used in _timeout: [wreg+status,2+status,0+pclath+cstack]
   867                           
   868                           
   869                           ;master.c: 253:     I2C_Master_Start();
   870  01BC  120A  118A  2414  120A  118A  	fcall	_I2C_Master_Start
   871                           
   872                           ;master.c: 254:     I2C_Master_Write(0xD0);
   873  01C1  30D0               	movlw	208
   874  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   875  01C3  1303               	bcf	3,6	;RP1=0, select bank0
   876  01C4  00BB               	movwf	I2C_Master_Write@d
   877  01C5  3000               	movlw	0
   878  01C6  00BC               	movwf	I2C_Master_Write@d+1
   879  01C7  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   880                           
   881                           ;master.c: 255:     I2C_Master_Write(0);
   882  01CC  3000               	movlw	0
   883  01CD  1283               	bcf	3,5	;RP0=0, select bank0
   884  01CE  1303               	bcf	3,6	;RP1=0, select bank0
   885  01CF  00BB               	movwf	I2C_Master_Write@d
   886  01D0  00BC               	movwf	I2C_Master_Write@d+1
   887  01D1  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   888                           
   889                           ;master.c: 256:     I2C_Master_Write(0b00000000);
   890  01D6  3000               	movlw	0
   891  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   892  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   893  01D9  00BB               	movwf	I2C_Master_Write@d
   894  01DA  00BC               	movwf	I2C_Master_Write@d+1
   895  01DB  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   896                           
   897                           ;master.c: 257:     I2C_Master_Write(0b00000000);
   898  01E0  3000               	movlw	0
   899  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   900  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   901  01E3  00BB               	movwf	I2C_Master_Write@d
   902  01E4  00BC               	movwf	I2C_Master_Write@d+1
   903  01E5  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   904                           
   905                           ;master.c: 258:     I2C_Master_Write(0b00000000);
   906  01EA  3000               	movlw	0
   907  01EB  1283               	bcf	3,5	;RP0=0, select bank0
   908  01EC  1303               	bcf	3,6	;RP1=0, select bank0
   909  01ED  00BB               	movwf	I2C_Master_Write@d
   910  01EE  00BC               	movwf	I2C_Master_Write@d+1
   911  01EF  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   912                           
   913                           ;master.c: 259:     I2C_Master_Write(1);
   914  01F4  3001               	movlw	1
   915  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   916  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   917  01F7  00BB               	movwf	I2C_Master_Write@d
   918  01F8  3000               	movlw	0
   919  01F9  00BC               	movwf	I2C_Master_Write@d+1
   920  01FA  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   921                           
   922                           ;master.c: 260:     I2C_Master_Write(0x20);
   923  01FF  3020               	movlw	32
   924  0200  1283               	bcf	3,5	;RP0=0, select bank0
   925  0201  1303               	bcf	3,6	;RP1=0, select bank0
   926  0202  00BB               	movwf	I2C_Master_Write@d
   927  0203  3000               	movlw	0
   928  0204  00BC               	movwf	I2C_Master_Write@d+1
   929  0205  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   930                           
   931                           ;master.c: 261:     I2C_Master_Write(0x10);
   932  020A  3010               	movlw	16
   933  020B  1283               	bcf	3,5	;RP0=0, select bank0
   934  020C  1303               	bcf	3,6	;RP1=0, select bank0
   935  020D  00BB               	movwf	I2C_Master_Write@d
   936  020E  3000               	movlw	0
   937  020F  00BC               	movwf	I2C_Master_Write@d+1
   938  0210  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   939                           
   940                           ;master.c: 262:     I2C_Master_Write(0x21);
   941  0215  3021               	movlw	33
   942  0216  1283               	bcf	3,5	;RP0=0, select bank0
   943  0217  1303               	bcf	3,6	;RP1=0, select bank0
   944  0218  00BB               	movwf	I2C_Master_Write@d
   945  0219  3000               	movlw	0
   946  021A  00BC               	movwf	I2C_Master_Write@d+1
   947  021B  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
   948                           
   949                           ;master.c: 263:     I2C_Master_Stop();
   950  0220  120A  118A  240B  120A  118A  	fcall	_I2C_Master_Stop
   951  0225                     l170:
   952  0225  0008               	return
   953  0226                     __end_of_timeout:
   954                           
   955                           	psect	text2
   956  014B                     __ptext2:	
   957 ;; *************** function _timein *****************
   958 ;; Defined at:
   959 ;;		line 270 in file "master.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0
   976 ;;      Totals:         0       0       0       0       0
   977 ;;Total ram usage:        0 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    4
   980 ;; This function calls:
   981 ;;		_I2C_Master_Read
   982 ;;		_I2C_Master_Start
   983 ;;		_I2C_Master_Stop
   984 ;;		_I2C_Master_Write
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _timein
   992  014B                     _timein:
   993  014B                     l1674:	
   994                           ;incstack = 0
   995                           ; Regs used in _timein: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   996                           
   997                           
   998                           ;master.c: 271:     I2C_Master_Start();
   999  014B  120A  118A  2414  120A  118A  	fcall	_I2C_Master_Start
  1000                           
  1001                           ;master.c: 272:     I2C_Master_Write(0xD0);
  1002  0150  30D0               	movlw	208
  1003  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0153  00BB               	movwf	I2C_Master_Write@d
  1006  0154  3000               	movlw	0
  1007  0155  00BC               	movwf	I2C_Master_Write@d+1
  1008  0156  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
  1009                           
  1010                           ;master.c: 273:     I2C_Master_Write(0);
  1011  015B  3000               	movlw	0
  1012  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1013  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1014  015E  00BB               	movwf	I2C_Master_Write@d
  1015  015F  00BC               	movwf	I2C_Master_Write@d+1
  1016  0160  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
  1017                           
  1018                           ;master.c: 275:     I2C_Master_Start();
  1019  0165  120A  118A  2414  120A  118A  	fcall	_I2C_Master_Start
  1020                           
  1021                           ;master.c: 276:     I2C_Master_Write(0xD1);
  1022  016A  30D1               	movlw	209
  1023  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1024  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1025  016D  00BB               	movwf	I2C_Master_Write@d
  1026  016E  3000               	movlw	0
  1027  016F  00BC               	movwf	I2C_Master_Write@d+1
  1028  0170  120A  118A  2401  120A  118A  	fcall	_I2C_Master_Write
  1029  0175                     l1676:
  1030                           
  1031                           ;master.c: 277:     SEC = I2C_Master_Read(1);
  1032  0175  3001               	movlw	1
  1033  0176  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
  1034  017B  00FF               	movwf	btemp+1
  1035  017C  087F               	movf	btemp+1,w
  1036  017D  00F5               	movwf	_SEC
  1037  017E                     l1678:
  1038                           
  1039                           ;master.c: 278:     MIN = I2C_Master_Read(1);
  1040  017E  3001               	movlw	1
  1041  017F  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
  1042  0184  00FF               	movwf	btemp+1
  1043  0185  087F               	movf	btemp+1,w
  1044  0186  00F4               	movwf	_MIN
  1045  0187                     l1680:
  1046                           
  1047                           ;master.c: 279:     H = I2C_Master_Read(1);
  1048  0187  3001               	movlw	1
  1049  0188  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
  1050  018D  00FF               	movwf	btemp+1
  1051  018E  087F               	movf	btemp+1,w
  1052  018F  00F3               	movwf	_H
  1053  0190                     l1682:
  1054                           
  1055                           ;master.c: 280:     NADA = I2C_Master_Read(1);
  1056  0190  3001               	movlw	1
  1057  0191  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
  1058  0196  00FF               	movwf	btemp+1
  1059  0197  087F               	movf	btemp+1,w
  1060  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1062  019A  00B8               	movwf	_NADA
  1063  019B                     l1684:
  1064                           
  1065                           ;master.c: 281:     DAY = I2C_Master_Read(1);
  1066  019B  3001               	movlw	1
  1067  019C  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
  1068  01A1  00FF               	movwf	btemp+1
  1069  01A2  087F               	movf	btemp+1,w
  1070  01A3  00F2               	movwf	_DAY
  1071  01A4                     l1686:
  1072                           
  1073                           ;master.c: 282:     MONTH = I2C_Master_Read(1);
  1074  01A4  3001               	movlw	1
  1075  01A5  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
  1076  01AA  00FF               	movwf	btemp+1
  1077  01AB  087F               	movf	btemp+1,w
  1078  01AC  00F1               	movwf	_MONTH
  1079  01AD                     l1688:
  1080                           
  1081                           ;master.c: 283:     YEAR = I2C_Master_Read(0);
  1082  01AD  3000               	movlw	0
  1083  01AE  120A  118A  2360  120A  118A  	fcall	_I2C_Master_Read
  1084  01B3  00FF               	movwf	btemp+1
  1085  01B4  087F               	movf	btemp+1,w
  1086  01B5  00F0               	movwf	_YEAR
  1087  01B6                     l1690:
  1088                           
  1089                           ;master.c: 284:     I2C_Master_Stop();
  1090  01B6  120A  118A  240B  120A  118A  	fcall	_I2C_Master_Stop
  1091  01BB                     l173:
  1092  01BB  0008               	return
  1093  01BC                     __end_of_timein:
  1094                           
  1095                           	psect	text3
  1096  0401                     __ptext3:	
  1097 ;; *************** function _I2C_Master_Write *****************
  1098 ;; Defined at:
  1099 ;;		line 65 in file "I2C.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  d               2    0[BANK0 ] unsigned int 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, pclath, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       2       0       0       0
  1114 ;;      Locals:         0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0
  1116 ;;      Totals:         0       2       0       0       0
  1117 ;;Total ram usage:        2 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    3
  1120 ;; This function calls:
  1121 ;;		_I2C_Master_Wait
  1122 ;; This function is called by:
  1123 ;;		_timeout
  1124 ;;		_timein
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           
  1129                           ;psect for function _I2C_Master_Write
  1130  0401                     _I2C_Master_Write:
  1131  0401                     l1606:	
  1132                           ;incstack = 0
  1133                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1134                           
  1135                           
  1136                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  1137  0401  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Wait
  1138  0406                     l1608:
  1139                           
  1140                           ;I2C.c: 68:     SSPBUF = d;
  1141  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0408  083B               	movf	I2C_Master_Write@d,w
  1144  0409  0093               	movwf	19	;volatile
  1145  040A                     l223:
  1146  040A  0008               	return
  1147  040B                     __end_of_I2C_Master_Write:
  1148                           
  1149                           	psect	text4
  1150  040B                     __ptext4:	
  1151 ;; *************** function _I2C_Master_Stop *****************
  1152 ;; Defined at:
  1153 ;;		line 55 in file "I2C.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0, pclath, cstack
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1167 ;;      Params:         0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0
  1170 ;;      Totals:         0       0       0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    3
  1174 ;; This function calls:
  1175 ;;		_I2C_Master_Wait
  1176 ;; This function is called by:
  1177 ;;		_timeout
  1178 ;;		_timein
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _I2C_Master_Stop
  1184  040B                     _I2C_Master_Stop:
  1185  040B                     l1610:	
  1186                           ;incstack = 0
  1187                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1188                           
  1189                           
  1190                           ;I2C.c: 57:     I2C_Master_Wait();
  1191  040B  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Wait
  1192  0410                     l1612:
  1193                           
  1194                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  1195  0410  1683               	bsf	3,5	;RP0=1, select bank1
  1196  0411  1303               	bcf	3,6	;RP1=0, select bank1
  1197  0412  1511               	bsf	17,2	;volatile
  1198  0413                     l220:
  1199  0413  0008               	return
  1200  0414                     __end_of_I2C_Master_Stop:
  1201                           
  1202                           	psect	text5
  1203  0414                     __ptext5:	
  1204 ;; *************** function _I2C_Master_Start *****************
  1205 ;; Defined at:
  1206 ;;		line 39 in file "I2C.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0
  1223 ;;      Totals:         0       0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    3
  1227 ;; This function calls:
  1228 ;;		_I2C_Master_Wait
  1229 ;; This function is called by:
  1230 ;;		_timeout
  1231 ;;		_timein
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function _I2C_Master_Start
  1237  0414                     _I2C_Master_Start:
  1238  0414                     l1602:	
  1239                           ;incstack = 0
  1240                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1241                           
  1242                           
  1243                           ;I2C.c: 41:     I2C_Master_Wait();
  1244  0414  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Wait
  1245  0419                     l1604:
  1246                           
  1247                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  1248  0419  1683               	bsf	3,5	;RP0=1, select bank1
  1249  041A  1303               	bcf	3,6	;RP1=0, select bank1
  1250  041B  1411               	bsf	17,0	;volatile
  1251  041C                     l214:
  1252  041C  0008               	return
  1253  041D                     __end_of_I2C_Master_Start:
  1254                           
  1255                           	psect	text6
  1256  0360                     __ptext6:	
  1257 ;; *************** function _I2C_Master_Read *****************
  1258 ;; Defined at:
  1259 ;;		line 74 in file "I2C.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  a               1    wreg     unsigned char 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  a               1    2[BANK0 ] unsigned char 
  1264 ;;  temp            2    3[BANK0 ] unsigned short 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      unsigned char 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, pclath, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         0       3       0       0       0
  1276 ;;      Temps:          0       2       0       0       0
  1277 ;;      Totals:         0       5       0       0       0
  1278 ;;Total ram usage:        5 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    3
  1281 ;; This function calls:
  1282 ;;		_I2C_Master_Wait
  1283 ;; This function is called by:
  1284 ;;		_timein
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _I2C_Master_Read
  1290  0360                     _I2C_Master_Read:
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1294                           ;I2C_Master_Read@a stored from wreg
  1295  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0361  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0362  00BD               	movwf	I2C_Master_Read@a
  1298  0363                     l1614:
  1299                           
  1300                           ;I2C.c: 74: unsigned char I2C_Master_Read(unsigned char a);I2C.c: 75: {;I2C.c: 76:     u
      +                          nsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  1301  0363  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Wait
  1302  0368                     l1616:
  1303                           
  1304                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  1305  0368  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0369  1303               	bcf	3,6	;RP1=0, select bank1
  1307  036A  1591               	bsf	17,3	;volatile
  1308                           
  1309                           ;I2C.c: 79:     I2C_Master_Wait();
  1310  036B  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Wait
  1311  0370                     l1618:
  1312                           
  1313                           ;I2C.c: 80:     temp = SSPBUF;
  1314  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0372  0813               	movf	19,w	;volatile
  1317  0373  00BB               	movwf	??_I2C_Master_Read
  1318  0374  01BC               	clrf	??_I2C_Master_Read+1
  1319  0375  083B               	movf	??_I2C_Master_Read,w
  1320  0376  00BE               	movwf	I2C_Master_Read@temp
  1321  0377  083C               	movf	??_I2C_Master_Read+1,w
  1322  0378  00BF               	movwf	I2C_Master_Read@temp+1
  1323  0379                     l1620:
  1324                           
  1325                           ;I2C.c: 81:     I2C_Master_Wait();
  1326  0379  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Wait
  1327  037E                     l1622:
  1328                           
  1329                           ;I2C.c: 82:     if(a == 1){
  1330  037E  1283               	bcf	3,5	;RP0=0, select bank0
  1331  037F  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0380  033D               	decf	I2C_Master_Read@a,w
  1333  0381  1D03               	btfss	3,2
  1334  0382  2B84               	goto	u511
  1335  0383  2B85               	goto	u510
  1336  0384                     u511:
  1337  0384  2B89               	goto	l226
  1338  0385                     u510:
  1339  0385                     l1624:
  1340                           
  1341                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  1342  0385  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0386  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0387  1291               	bcf	17,5	;volatile
  1345                           
  1346                           ;I2C.c: 84:     }else{
  1347  0388  2B8C               	goto	l227
  1348  0389                     l226:
  1349                           
  1350                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  1351  0389  1683               	bsf	3,5	;RP0=1, select bank1
  1352  038A  1303               	bcf	3,6	;RP1=0, select bank1
  1353  038B  1691               	bsf	17,5	;volatile
  1354  038C                     l227:	
  1355                           ;I2C.c: 86:     }
  1356                           
  1357                           
  1358                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  1359  038C  1611               	bsf	17,4	;volatile
  1360  038D                     l1626:
  1361                           
  1362                           ;I2C.c: 88:     return temp;
  1363  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1364  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1365  038F  083E               	movf	I2C_Master_Read@temp,w
  1366  0390                     l228:
  1367  0390  0008               	return
  1368  0391                     __end_of_I2C_Master_Read:
  1369                           
  1370                           	psect	text7
  1371  03F4                     __ptext7:	
  1372 ;; *************** function _I2C_Master_Wait *****************
  1373 ;; Defined at:
  1374 ;;		line 32 in file "I2C.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    2
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_I2C_Master_Start
  1399 ;;		_I2C_Master_Stop
  1400 ;;		_I2C_Master_Write
  1401 ;;		_I2C_Master_Read
  1402 ;;		_I2C_Master_RepeatedStart
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _I2C_Master_Wait
  1408  03F4                     _I2C_Master_Wait:
  1409  03F4                     l1532:	
  1410                           ;incstack = 0
  1411                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1412                           
  1413  03F4                     l208:	
  1414                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1415                           
  1416  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  1417  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  1418  03F6  1914               	btfsc	20,2	;volatile
  1419  03F7  2BF9               	goto	u411
  1420  03F8  2BFA               	goto	u410
  1421  03F9                     u411:
  1422  03F9  2BF4               	goto	l208
  1423  03FA                     u410:
  1424  03FA                     l1534:
  1425  03FA  0811               	movf	17,w	;volatile
  1426  03FB  391F               	andlw	31
  1427  03FC  1D03               	btfss	3,2
  1428  03FD  2BFF               	goto	u421
  1429  03FE  2C00               	goto	u420
  1430  03FF                     u421:
  1431  03FF  2BF4               	goto	l208
  1432  0400                     u420:
  1433  0400                     l211:
  1434  0400  0008               	return
  1435  0401                     __end_of_I2C_Master_Wait:
  1436                           
  1437                           	psect	text8
  1438  0028                     __ptext8:	
  1439 ;; *************** function _conver *****************
  1440 ;; Defined at:
  1441 ;;		line 290 in file "master.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, btemp+1
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0
  1457 ;;      Temps:          0       1       0       0       0
  1458 ;;      Totals:         0       1       0       0       0
  1459 ;;Total ram usage:        1 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    2
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           
  1470                           ;psect for function _conver
  1471  0028                     _conver:
  1472  0028                     l1692:	
  1473                           ;incstack = 0
  1474                           ; Regs used in _conver: [wreg+status,2+status,0+btemp+1]
  1475                           
  1476                           
  1477                           ;master.c: 291:     SECU = (SEC & 0b00001111);
  1478  0028  0875               	movf	_SEC,w
  1479  0029  390F               	andlw	15
  1480  002A  00FF               	movwf	btemp+1
  1481  002B  087F               	movf	btemp+1,w
  1482  002C  1283               	bcf	3,5	;RP0=0, select bank0
  1483  002D  1303               	bcf	3,6	;RP1=0, select bank0
  1484  002E  00B7               	movwf	_SECU
  1485  002F                     l1694:
  1486                           
  1487                           ;master.c: 292:     SECD = ((SEC & 0b11110000) >> 4);
  1488  002F  0875               	movf	_SEC,w
  1489  0030  00BB               	movwf	??_conver
  1490  0031  3004               	movlw	4
  1491  0032                     u525:
  1492  0032  1003               	clrc
  1493  0033  0CBB               	rrf	??_conver,f
  1494  0034  3EFF               	addlw	-1
  1495  0035  1D03               	skipz
  1496  0036  2832               	goto	u525
  1497  0037  083B               	movf	??_conver,w
  1498  0038  390F               	andlw	15
  1499  0039  00FF               	movwf	btemp+1
  1500  003A  087F               	movf	btemp+1,w
  1501  003B  00B6               	movwf	_SECD
  1502  003C                     l1696:
  1503                           
  1504                           ;master.c: 293:     MINU = (MIN & 0b00001111);
  1505  003C  0874               	movf	_MIN,w
  1506  003D  390F               	andlw	15
  1507  003E  00FF               	movwf	btemp+1
  1508  003F  087F               	movf	btemp+1,w
  1509  0040  00B5               	movwf	_MINU
  1510                           
  1511                           ;master.c: 294:     MIND = ((MIN & 0b11110000) >> 4);
  1512  0041  0874               	movf	_MIN,w
  1513  0042  00BB               	movwf	??_conver
  1514  0043  3004               	movlw	4
  1515  0044                     u535:
  1516  0044  1003               	clrc
  1517  0045  0CBB               	rrf	??_conver,f
  1518  0046  3EFF               	addlw	-1
  1519  0047  1D03               	skipz
  1520  0048  2844               	goto	u535
  1521  0049  083B               	movf	??_conver,w
  1522  004A  390F               	andlw	15
  1523  004B  00FF               	movwf	btemp+1
  1524  004C  087F               	movf	btemp+1,w
  1525  004D  00B4               	movwf	_MIND
  1526  004E                     l1698:
  1527                           
  1528                           ;master.c: 295:     HORAU = (H & 0b00001111);
  1529  004E  0873               	movf	_H,w
  1530  004F  390F               	andlw	15
  1531  0050  00FF               	movwf	btemp+1
  1532  0051  087F               	movf	btemp+1,w
  1533  0052  00B3               	movwf	_HORAU
  1534  0053                     l1700:
  1535                           
  1536                           ;master.c: 296:     HORAD = ((H & 0b00110000) >> 4);
  1537  0053  0873               	movf	_H,w
  1538  0054  00BB               	movwf	??_conver
  1539  0055  3004               	movlw	4
  1540  0056                     u545:
  1541  0056  1003               	clrc
  1542  0057  0CBB               	rrf	??_conver,f
  1543  0058  3EFF               	addlw	-1
  1544  0059  1D03               	skipz
  1545  005A  2856               	goto	u545
  1546  005B  083B               	movf	??_conver,w
  1547  005C  3903               	andlw	3
  1548  005D  00FF               	movwf	btemp+1
  1549  005E  087F               	movf	btemp+1,w
  1550  005F  00B2               	movwf	_HORAD
  1551                           
  1552                           ;master.c: 297:     DAYU = (DAY & 0b00001111);
  1553  0060  0872               	movf	_DAY,w
  1554  0061  390F               	andlw	15
  1555  0062  00FF               	movwf	btemp+1
  1556  0063  087F               	movf	btemp+1,w
  1557  0064  00B1               	movwf	_DAYU
  1558  0065                     l1702:
  1559                           
  1560                           ;master.c: 298:     DAYD = ((DAY & 0b11110000) >> 4);
  1561  0065  0872               	movf	_DAY,w
  1562  0066  00BB               	movwf	??_conver
  1563  0067  3004               	movlw	4
  1564  0068                     u555:
  1565  0068  1003               	clrc
  1566  0069  0CBB               	rrf	??_conver,f
  1567  006A  3EFF               	addlw	-1
  1568  006B  1D03               	skipz
  1569  006C  2868               	goto	u555
  1570  006D  083B               	movf	??_conver,w
  1571  006E  390F               	andlw	15
  1572  006F  00FF               	movwf	btemp+1
  1573  0070  087F               	movf	btemp+1,w
  1574  0071  00B0               	movwf	_DAYD
  1575  0072                     l1704:
  1576                           
  1577                           ;master.c: 299:     MONTHU = (MONTH & 0b00001111);
  1578  0072  0871               	movf	_MONTH,w
  1579  0073  390F               	andlw	15
  1580  0074  00FF               	movwf	btemp+1
  1581  0075  087F               	movf	btemp+1,w
  1582  0076  00AF               	movwf	_MONTHU
  1583                           
  1584                           ;master.c: 300:     MONTHD = ((MONTH & 0b11110000) >> 4);
  1585  0077  0871               	movf	_MONTH,w
  1586  0078  00BB               	movwf	??_conver
  1587  0079  3004               	movlw	4
  1588  007A                     u565:
  1589  007A  1003               	clrc
  1590  007B  0CBB               	rrf	??_conver,f
  1591  007C  3EFF               	addlw	-1
  1592  007D  1D03               	skipz
  1593  007E  287A               	goto	u565
  1594  007F  083B               	movf	??_conver,w
  1595  0080  390F               	andlw	15
  1596  0081  00FF               	movwf	btemp+1
  1597  0082  087F               	movf	btemp+1,w
  1598  0083  00AE               	movwf	_MONTHD
  1599  0084                     l1706:
  1600                           
  1601                           ;master.c: 301:     YEARU = (YEAR & 0b00001111);
  1602  0084  0870               	movf	_YEAR,w
  1603  0085  390F               	andlw	15
  1604  0086  00FF               	movwf	btemp+1
  1605  0087  087F               	movf	btemp+1,w
  1606  0088  00AD               	movwf	_YEARU
  1607  0089                     l1708:
  1608                           
  1609                           ;master.c: 302:     YEARD = ((YEAR & 0b11110000) >> 4);
  1610  0089  0870               	movf	_YEAR,w
  1611  008A  00BB               	movwf	??_conver
  1612  008B  3004               	movlw	4
  1613  008C                     u575:
  1614  008C  1003               	clrc
  1615  008D  0CBB               	rrf	??_conver,f
  1616  008E  3EFF               	addlw	-1
  1617  008F  1D03               	skipz
  1618  0090  288C               	goto	u575
  1619  0091  083B               	movf	??_conver,w
  1620  0092  390F               	andlw	15
  1621  0093  00FF               	movwf	btemp+1
  1622  0094  087F               	movf	btemp+1,w
  1623  0095  00AC               	movwf	_YEARD
  1624  0096                     l1710:
  1625                           
  1626                           ;master.c: 305:     SU = (SECU + 0x30);
  1627  0096  0837               	movf	_SECU,w
  1628  0097  3E30               	addlw	48
  1629  0098  00FF               	movwf	btemp+1
  1630  0099  087F               	movf	btemp+1,w
  1631  009A  00AB               	movwf	_SU
  1632  009B                     l1712:
  1633                           
  1634                           ;master.c: 306:     SD = (SECD + 0x30);
  1635  009B  0836               	movf	_SECD,w
  1636  009C  3E30               	addlw	48
  1637  009D  00FF               	movwf	btemp+1
  1638  009E  087F               	movf	btemp+1,w
  1639  009F  00AA               	movwf	_SD
  1640  00A0                     l1714:
  1641                           
  1642                           ;master.c: 307:     MU = (MINU + 0x30);
  1643  00A0  0835               	movf	_MINU,w
  1644  00A1  3E30               	addlw	48
  1645  00A2  00FF               	movwf	btemp+1
  1646  00A3  087F               	movf	btemp+1,w
  1647  00A4  00A9               	movwf	_MU
  1648  00A5                     l1716:
  1649                           
  1650                           ;master.c: 308:     MD = (MIND + 0x30);
  1651  00A5  0834               	movf	_MIND,w
  1652  00A6  3E30               	addlw	48
  1653  00A7  00FF               	movwf	btemp+1
  1654  00A8  087F               	movf	btemp+1,w
  1655  00A9  00A8               	movwf	_MD
  1656  00AA                     l1718:
  1657                           
  1658                           ;master.c: 309:     HU = (HORAU + 0x30);
  1659  00AA  0833               	movf	_HORAU,w
  1660  00AB  3E30               	addlw	48
  1661  00AC  00FF               	movwf	btemp+1
  1662  00AD  087F               	movf	btemp+1,w
  1663  00AE  00A7               	movwf	_HU
  1664  00AF                     l1720:
  1665                           
  1666                           ;master.c: 310:     HD = (HORAD + 0x30);
  1667  00AF  0832               	movf	_HORAD,w
  1668  00B0  3E30               	addlw	48
  1669  00B1  00FF               	movwf	btemp+1
  1670  00B2  087F               	movf	btemp+1,w
  1671  00B3  00A6               	movwf	_HD
  1672  00B4                     l1722:
  1673                           
  1674                           ;master.c: 311:     DU = (DAYU + 0x30);
  1675  00B4  0831               	movf	_DAYU,w
  1676  00B5  3E30               	addlw	48
  1677  00B6  00FF               	movwf	btemp+1
  1678  00B7  087F               	movf	btemp+1,w
  1679  00B8  00A5               	movwf	_DU
  1680  00B9                     l1724:
  1681                           
  1682                           ;master.c: 312:     DD = (DAYD + 0x30);
  1683  00B9  0830               	movf	_DAYD,w
  1684  00BA  3E30               	addlw	48
  1685  00BB  00FF               	movwf	btemp+1
  1686  00BC  087F               	movf	btemp+1,w
  1687  00BD  00A4               	movwf	_DD
  1688  00BE                     l1726:
  1689                           
  1690                           ;master.c: 313:     MOU = (MONTHU + 0x30);
  1691  00BE  082F               	movf	_MONTHU,w
  1692  00BF  3E30               	addlw	48
  1693  00C0  00FF               	movwf	btemp+1
  1694  00C1  087F               	movf	btemp+1,w
  1695  00C2  00A3               	movwf	_MOU
  1696  00C3                     l1728:
  1697                           
  1698                           ;master.c: 314:     MOD = (MONTHD + 0x30);
  1699  00C3  082E               	movf	_MONTHD,w
  1700  00C4  3E30               	addlw	48
  1701  00C5  00FF               	movwf	btemp+1
  1702  00C6  087F               	movf	btemp+1,w
  1703  00C7  00A2               	movwf	_MOD
  1704  00C8                     l1730:
  1705                           
  1706                           ;master.c: 315:     YU = (YEARU + 0x30);
  1707  00C8  082D               	movf	_YEARU,w
  1708  00C9  3E30               	addlw	48
  1709  00CA  00FF               	movwf	btemp+1
  1710  00CB  087F               	movf	btemp+1,w
  1711  00CC  00A1               	movwf	_YU
  1712  00CD                     l1732:
  1713                           
  1714                           ;master.c: 316:     YD = (YEARD + 0x30);
  1715  00CD  082C               	movf	_YEARD,w
  1716  00CE  3E30               	addlw	48
  1717  00CF  00FF               	movwf	btemp+1
  1718  00D0  087F               	movf	btemp+1,w
  1719  00D1  00A0               	movwf	_YD
  1720  00D2                     l176:
  1721  00D2  0008               	return
  1722  00D3                     __end_of_conver:
  1723                           
  1724                           	psect	text9
  1725  02EC                     __ptext9:	
  1726 ;; *************** function _Setup *****************
  1727 ;; Defined at:
  1728 ;;		line 147 in file "master.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    4
  1749 ;; This function calls:
  1750 ;;		_I2C_Master_Init
  1751 ;;		_initOsc
  1752 ;;		_usart
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _Setup
  1760  02EC                     _Setup:
  1761  02EC                     l1630:	
  1762                           ;incstack = 0
  1763                           ; Regs used in _Setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1764                           
  1765                           
  1766                           ;master.c: 148:     initOsc(6);
  1767  02EC  3006               	movlw	6
  1768  02ED  120A  118A  228E  120A  118A  	fcall	_initOsc
  1769  02F2                     l1632:
  1770                           
  1771                           ;master.c: 149:     usart();
  1772  02F2  120A  118A  23DF  120A  118A  	fcall	_usart
  1773  02F7                     l1634:
  1774                           
  1775                           ;master.c: 150:     TRISA = 0;
  1776  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  1777  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  1778  02F9  0185               	clrf	5	;volatile
  1779  02FA                     l1636:
  1780                           
  1781                           ;master.c: 151:     TRISB = 0;
  1782  02FA  0186               	clrf	6	;volatile
  1783  02FB                     l1638:
  1784                           
  1785                           ;master.c: 152:     TRISD = 0;
  1786  02FB  0188               	clrf	8	;volatile
  1787  02FC                     l1640:
  1788                           
  1789                           ;master.c: 153:     TRISE = 0;
  1790  02FC  0189               	clrf	9	;volatile
  1791  02FD                     l1642:
  1792                           
  1793                           ;master.c: 154:     ANSEL = 0;
  1794  02FD  1683               	bsf	3,5	;RP0=1, select bank3
  1795  02FE  1703               	bsf	3,6	;RP1=1, select bank3
  1796  02FF  0188               	clrf	8	;volatile
  1797  0300                     l1644:
  1798                           
  1799                           ;master.c: 155:     ANSELH = 0;
  1800  0300  0189               	clrf	9	;volatile
  1801  0301                     l1646:
  1802                           
  1803                           ;master.c: 156:     PORTA = 0;
  1804  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0303  0185               	clrf	5	;volatile
  1807  0304                     l1648:
  1808                           
  1809                           ;master.c: 157:     PORTB = 0;
  1810  0304  0186               	clrf	6	;volatile
  1811  0305                     l1650:
  1812                           
  1813                           ;master.c: 158:     PORTC = 0;
  1814  0305  0187               	clrf	7	;volatile
  1815  0306                     l1652:
  1816                           
  1817                           ;master.c: 159:     PORTD = 0;
  1818  0306  0188               	clrf	8	;volatile
  1819  0307                     l1654:
  1820                           
  1821                           ;master.c: 160:     PORTE = 0;
  1822  0307  0189               	clrf	9	;volatile
  1823  0308                     l1656:
  1824                           
  1825                           ;master.c: 162:     OPTION_REG = 0b10000111;
  1826  0308  3087               	movlw	135
  1827  0309  1683               	bsf	3,5	;RP0=1, select bank1
  1828  030A  1303               	bcf	3,6	;RP1=0, select bank1
  1829  030B  0081               	movwf	1	;volatile
  1830  030C                     l1658:
  1831                           
  1832                           ;master.c: 163:     INTCONbits.GIE = 1;
  1833  030C  178B               	bsf	11,7	;volatile
  1834  030D                     l1660:
  1835                           
  1836                           ;master.c: 164:     INTCONbits.PEIE = 1;
  1837  030D  170B               	bsf	11,6	;volatile
  1838  030E                     l1662:
  1839                           
  1840                           ;master.c: 165:     PIR1bits.TXIF = 0;
  1841  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1842  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0310  120C               	bcf	12,4	;volatile
  1844  0311                     l1664:
  1845                           
  1846                           ;master.c: 166:     PIE1bits.TXIE = 1;
  1847  0311  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0312  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0313  160C               	bsf	12,4	;volatile
  1850  0314                     l1666:
  1851                           
  1852                           ;master.c: 167:     INTCONbits.T0IF = 0;
  1853  0314  110B               	bcf	11,2	;volatile
  1854  0315                     l1668:
  1855                           
  1856                           ;master.c: 168:     INTCONbits.T0IE = 1;
  1857  0315  168B               	bsf	11,5	;volatile
  1858  0316                     l1670:
  1859                           
  1860                           ;master.c: 169:     I2C_Master_Init(100000);
  1861  0316  3000               	movlw	0
  1862  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0319  00CC               	movwf	I2C_Master_Init@c+3
  1865  031A  3001               	movlw	1
  1866  031B  00CB               	movwf	I2C_Master_Init@c+2
  1867  031C  3086               	movlw	134
  1868  031D  00CA               	movwf	I2C_Master_Init@c+1
  1869  031E  30A0               	movlw	160
  1870  031F  00C9               	movwf	I2C_Master_Init@c
  1871  0320  120A  118A  2326  120A  118A  	fcall	_I2C_Master_Init
  1872  0325                     l143:
  1873  0325  0008               	return
  1874  0326                     __end_of_Setup:
  1875                           
  1876                           	psect	text10
  1877  03DF                     __ptext10:	
  1878 ;; *************** function _usart *****************
  1879 ;; Defined at:
  1880 ;;		line 5 in file "usart.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    2
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_Setup
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _usart
  1910  03DF                     _usart:
  1911  03DF                     l1574:	
  1912                           ;incstack = 0
  1913                           ; Regs used in _usart: [wreg+status,2]
  1914                           
  1915                           
  1916                           ;usart.c: 8:     TXSTAbits.TX9 = 0;
  1917  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  1918  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  1919  03E1  1318               	bcf	24,6	;volatile
  1920                           
  1921                           ;usart.c: 9:     TXSTAbits.SYNC = 0;
  1922  03E2  1218               	bcf	24,4	;volatile
  1923                           
  1924                           ;usart.c: 10:     TXSTAbits.BRGH = 1;
  1925  03E3  1518               	bsf	24,2	;volatile
  1926                           
  1927                           ;usart.c: 11:     BAUDCTLbits.BRG16 = 0;
  1928  03E4  1683               	bsf	3,5	;RP0=1, select bank3
  1929  03E5  1703               	bsf	3,6	;RP1=1, select bank3
  1930  03E6  1187               	bcf	7,3	;volatile
  1931  03E7                     l1576:
  1932                           
  1933                           ;usart.c: 12:     SPBRGH = 0;
  1934  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  1935  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  1936  03E9  019A               	clrf	26	;volatile
  1937  03EA                     l1578:
  1938                           
  1939                           ;usart.c: 13:     SPBRG = 25;
  1940  03EA  3019               	movlw	25
  1941  03EB  0099               	movwf	25	;volatile
  1942  03EC                     l1580:
  1943                           
  1944                           ;usart.c: 14:     PIE1bits.TXIE = 1;
  1945  03EC  160C               	bsf	12,4	;volatile
  1946  03ED                     l1582:
  1947                           
  1948                           ;usart.c: 15:     TXSTAbits.TXEN = 1;
  1949  03ED  1698               	bsf	24,5	;volatile
  1950  03EE                     l1584:
  1951                           
  1952                           ;usart.c: 18:     RCSTAbits.SPEN = 1;
  1953  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1954  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1955  03F0  1798               	bsf	24,7	;volatile
  1956  03F1                     l1586:
  1957                           
  1958                           ;usart.c: 19:     RCSTAbits. RX9 = 0;
  1959  03F1  1318               	bcf	24,6	;volatile
  1960  03F2                     l1588:
  1961                           
  1962                           ;usart.c: 20:     RCSTAbits.CREN = 1;
  1963  03F2  1618               	bsf	24,4	;volatile
  1964  03F3                     l262:
  1965  03F3  0008               	return
  1966  03F4                     __end_of_usart:
  1967                           
  1968                           	psect	text11
  1969  028E                     __ptext11:	
  1970 ;; *************** function _initOsc *****************
  1971 ;; Defined at:
  1972 ;;		line 7 in file "OSC.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  IRCF            1    wreg     unsigned char 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  IRCF            1    2[BANK0 ] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1986 ;;      Params:         0       0       0       0       0
  1987 ;;      Locals:         0       1       0       0       0
  1988 ;;      Temps:          0       2       0       0       0
  1989 ;;      Totals:         0       3       0       0       0
  1990 ;;Total ram usage:        3 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    2
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_Setup
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _initOsc
  2002  028E                     _initOsc:
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2006                           ;initOsc@IRCF stored from wreg
  2007  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2008  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0290  00BD               	movwf	initOsc@IRCF
  2010  0291                     l1562:
  2011                           
  2012                           ;OSC.c: 9:     switch (IRCF){
  2013  0291  2AC8               	goto	l1566
  2014  0292                     l237:	
  2015                           ;OSC.c: 11:         case 0:
  2016                           
  2017                           
  2018                           ;OSC.c: 12:             OSCCONbits.IRCF2 = 0;
  2019  0292  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0293  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0294  130F               	bcf	15,6	;volatile
  2022                           
  2023                           ;OSC.c: 13:             OSCCONbits.IRCF1 = 0;
  2024  0295  128F               	bcf	15,5	;volatile
  2025                           
  2026                           ;OSC.c: 14:             OSCCONbits.IRCF0 = 0;
  2027  0296  120F               	bcf	15,4	;volatile
  2028                           
  2029                           ;OSC.c: 16:             break;
  2030  0297  2AEA               	goto	l238
  2031  0298                     l239:	
  2032                           ;OSC.c: 18:         case 1:
  2033                           
  2034                           
  2035                           ;OSC.c: 19:             OSCCONbits.IRCF2 = 0;
  2036  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2037  0299  1303               	bcf	3,6	;RP1=0, select bank1
  2038  029A  130F               	bcf	15,6	;volatile
  2039                           
  2040                           ;OSC.c: 20:             OSCCONbits.IRCF1 = 0;
  2041  029B  128F               	bcf	15,5	;volatile
  2042                           
  2043                           ;OSC.c: 21:             OSCCONbits.IRCF0 = 1;
  2044  029C  160F               	bsf	15,4	;volatile
  2045                           
  2046                           ;OSC.c: 22:             break;
  2047  029D  2AEA               	goto	l238
  2048  029E                     l240:	
  2049                           ;OSC.c: 24:         case 2:
  2050                           
  2051                           
  2052                           ;OSC.c: 25:             OSCCONbits.IRCF2 = 0;
  2053  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2054  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2055  02A0  130F               	bcf	15,6	;volatile
  2056                           
  2057                           ;OSC.c: 26:             OSCCONbits.IRCF1 = 1;
  2058  02A1  168F               	bsf	15,5	;volatile
  2059                           
  2060                           ;OSC.c: 27:             OSCCONbits.IRCF0 = 0;
  2061  02A2  120F               	bcf	15,4	;volatile
  2062                           
  2063                           ;OSC.c: 28:             break;
  2064  02A3  2AEA               	goto	l238
  2065  02A4                     l241:	
  2066                           ;OSC.c: 30:         case 3:
  2067                           
  2068                           
  2069                           ;OSC.c: 31:             OSCCONbits.IRCF2 = 0;
  2070  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2071  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  2072  02A6  130F               	bcf	15,6	;volatile
  2073                           
  2074                           ;OSC.c: 32:             OSCCONbits.IRCF1 = 1;
  2075  02A7  168F               	bsf	15,5	;volatile
  2076                           
  2077                           ;OSC.c: 33:             OSCCONbits.IRCF0 = 1;
  2078  02A8  160F               	bsf	15,4	;volatile
  2079                           
  2080                           ;OSC.c: 34:             break;
  2081  02A9  2AEA               	goto	l238
  2082  02AA                     l242:	
  2083                           ;OSC.c: 36:         case 4:
  2084                           
  2085                           
  2086                           ;OSC.c: 37:             OSCCONbits.IRCF2 = 1;
  2087  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  2088  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  2089  02AC  170F               	bsf	15,6	;volatile
  2090                           
  2091                           ;OSC.c: 38:             OSCCONbits.IRCF1 = 0;
  2092  02AD  128F               	bcf	15,5	;volatile
  2093                           
  2094                           ;OSC.c: 39:             OSCCONbits.IRCF0 = 0;
  2095  02AE  120F               	bcf	15,4	;volatile
  2096                           
  2097                           ;OSC.c: 40:             break;
  2098  02AF  2AEA               	goto	l238
  2099  02B0                     l243:	
  2100                           ;OSC.c: 42:         case 5:
  2101                           
  2102                           
  2103                           ;OSC.c: 43:             OSCCONbits.IRCF2 = 1;
  2104  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2105  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2106  02B2  170F               	bsf	15,6	;volatile
  2107                           
  2108                           ;OSC.c: 44:             OSCCONbits.IRCF1 = 0;
  2109  02B3  128F               	bcf	15,5	;volatile
  2110                           
  2111                           ;OSC.c: 45:             OSCCONbits.IRCF0 = 1;
  2112  02B4  160F               	bsf	15,4	;volatile
  2113                           
  2114                           ;OSC.c: 46:             break;
  2115  02B5  2AEA               	goto	l238
  2116  02B6                     l244:	
  2117                           ;OSC.c: 49:         case 6:
  2118                           
  2119                           
  2120                           ;OSC.c: 50:             OSCCONbits.IRCF2 = 1;
  2121  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2122  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2123  02B8  170F               	bsf	15,6	;volatile
  2124                           
  2125                           ;OSC.c: 51:             OSCCONbits.IRCF1 = 1;
  2126  02B9  168F               	bsf	15,5	;volatile
  2127                           
  2128                           ;OSC.c: 52:             OSCCONbits.IRCF0 = 0;
  2129  02BA  120F               	bcf	15,4	;volatile
  2130                           
  2131                           ;OSC.c: 53:             break;
  2132  02BB  2AEA               	goto	l238
  2133  02BC                     l245:	
  2134                           ;OSC.c: 55:         case 7:
  2135                           
  2136                           
  2137                           ;OSC.c: 56:             OSCCONbits.IRCF2 = 1;
  2138  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2139  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2140  02BE  170F               	bsf	15,6	;volatile
  2141                           
  2142                           ;OSC.c: 57:             OSCCONbits.IRCF1 = 1;
  2143  02BF  168F               	bsf	15,5	;volatile
  2144                           
  2145                           ;OSC.c: 58:             OSCCONbits.IRCF0 = 1;
  2146  02C0  160F               	bsf	15,4	;volatile
  2147                           
  2148                           ;OSC.c: 59:             break;
  2149  02C1  2AEA               	goto	l238
  2150  02C2                     l246:	
  2151                           ;OSC.c: 64:         default:
  2152                           
  2153                           
  2154                           ;OSC.c: 65:             OSCCONbits.IRCF2 = 1;
  2155  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2156  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  2157  02C4  170F               	bsf	15,6	;volatile
  2158                           
  2159                           ;OSC.c: 66:             OSCCONbits.IRCF1 = 1;
  2160  02C5  168F               	bsf	15,5	;volatile
  2161                           
  2162                           ;OSC.c: 67:             OSCCONbits.IRCF0 = 0;
  2163  02C6  120F               	bcf	15,4	;volatile
  2164                           
  2165                           ;OSC.c: 68:             break;
  2166  02C7  2AEA               	goto	l238
  2167  02C8                     l1566:
  2168  02C8  083D               	movf	initOsc@IRCF,w
  2169  02C9  00BB               	movwf	??_initOsc
  2170  02CA  01BC               	clrf	??_initOsc+1
  2171                           
  2172                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2173                           ; Switch size 1, requested type "simple"
  2174                           ; Number of cases is 1, Range of values is 0 to 0
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte            4     3 (average)
  2178                           ; direct_byte           11     8 (fixed)
  2179                           ; jumptable            260     6 (fixed)
  2180                           ;	Chosen strategy is simple_byte
  2181  02CB  083C               	movf	??_initOsc+1,w
  2182  02CC  3A00               	xorlw	0	; case 0
  2183  02CD  1903               	skipnz
  2184  02CE  2AD0               	goto	l1802
  2185  02CF  2AC2               	goto	l246
  2186  02D0                     l1802:
  2187                           
  2188                           ; Switch size 1, requested type "simple"
  2189                           ; Number of cases is 8, Range of values is 0 to 7
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte           25    13 (average)
  2193                           ; direct_byte           32     8 (fixed)
  2194                           ; jumptable            260     6 (fixed)
  2195                           ;	Chosen strategy is simple_byte
  2196  02D0  083B               	movf	??_initOsc,w
  2197  02D1  3A00               	xorlw	0	; case 0
  2198  02D2  1903               	skipnz
  2199  02D3  2A92               	goto	l237
  2200  02D4  3A01               	xorlw	1	; case 1
  2201  02D5  1903               	skipnz
  2202  02D6  2A98               	goto	l239
  2203  02D7  3A03               	xorlw	3	; case 2
  2204  02D8  1903               	skipnz
  2205  02D9  2A9E               	goto	l240
  2206  02DA  3A01               	xorlw	1	; case 3
  2207  02DB  1903               	skipnz
  2208  02DC  2AA4               	goto	l241
  2209  02DD  3A07               	xorlw	7	; case 4
  2210  02DE  1903               	skipnz
  2211  02DF  2AAA               	goto	l242
  2212  02E0  3A01               	xorlw	1	; case 5
  2213  02E1  1903               	skipnz
  2214  02E2  2AB0               	goto	l243
  2215  02E3  3A03               	xorlw	3	; case 6
  2216  02E4  1903               	skipnz
  2217  02E5  2AB6               	goto	l244
  2218  02E6  3A01               	xorlw	1	; case 7
  2219  02E7  1903               	skipnz
  2220  02E8  2ABC               	goto	l245
  2221  02E9  2AC2               	goto	l246
  2222  02EA                     l238:
  2223                           
  2224                           ;OSC.c: 72:     OSCCONbits.SCS = 1;
  2225  02EA  140F               	bsf	15,0	;volatile
  2226  02EB                     l247:
  2227  02EB  0008               	return
  2228  02EC                     __end_of_initOsc:
  2229                           
  2230                           	psect	text12
  2231  0326                     __ptext12:	
  2232 ;; *************** function _I2C_Master_Init *****************
  2233 ;; Defined at:
  2234 ;;		line 16 in file "I2C.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  c               4   14[BANK0 ] const unsigned long 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       4       0       0       0
  2249 ;;      Locals:         0       0       0       0       0
  2250 ;;      Temps:          0       4       0       0       0
  2251 ;;      Totals:         0       8       0       0       0
  2252 ;;Total ram usage:        8 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    3
  2255 ;; This function calls:
  2256 ;;		___lldiv
  2257 ;; This function is called by:
  2258 ;;		_Setup
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _I2C_Master_Init
  2264  0326                     _I2C_Master_Init:
  2265  0326                     l1590:	
  2266                           ;incstack = 0
  2267                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2268                           
  2269                           
  2270                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2271  0326  3028               	movlw	40
  2272  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0329  0094               	movwf	20	;volatile
  2275  032A                     l1592:
  2276                           
  2277                           ;I2C.c: 19:     SSPCON2 = 0;
  2278  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2279  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2280  032C  0191               	clrf	17	;volatile
  2281  032D                     l1594:
  2282                           
  2283                           ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  2284  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2285  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2286  032F  0849               	movf	I2C_Master_Init@c,w
  2287  0330  00CD               	movwf	??_I2C_Master_Init
  2288  0331  084A               	movf	I2C_Master_Init@c+1,w
  2289  0332  00CE               	movwf	??_I2C_Master_Init+1
  2290  0333  084B               	movf	I2C_Master_Init@c+2,w
  2291  0334  00CF               	movwf	??_I2C_Master_Init+2
  2292  0335  084C               	movf	I2C_Master_Init@c+3,w
  2293  0336  00D0               	movwf	??_I2C_Master_Init+3
  2294  0337  3002               	movlw	2
  2295  0338                     u505:
  2296  0338  1003               	clrc
  2297  0339  0DCD               	rlf	??_I2C_Master_Init,f
  2298  033A  0DCE               	rlf	??_I2C_Master_Init+1,f
  2299  033B  0DCF               	rlf	??_I2C_Master_Init+2,f
  2300  033C  0DD0               	rlf	??_I2C_Master_Init+3,f
  2301  033D                     u500:
  2302  033D  3EFF               	addlw	-1
  2303  033E  1D03               	skipz
  2304  033F  2B38               	goto	u505
  2305  0340  0850               	movf	??_I2C_Master_Init+3,w
  2306  0341  00BE               	movwf	___lldiv@divisor+3
  2307  0342  084F               	movf	??_I2C_Master_Init+2,w
  2308  0343  00BD               	movwf	___lldiv@divisor+2
  2309  0344  084E               	movf	??_I2C_Master_Init+1,w
  2310  0345  00BC               	movwf	___lldiv@divisor+1
  2311  0346  084D               	movf	??_I2C_Master_Init,w
  2312  0347  00BB               	movwf	___lldiv@divisor
  2313  0348  3000               	movlw	0
  2314  0349  00C2               	movwf	___lldiv@dividend+3
  2315  034A  303D               	movlw	61
  2316  034B  00C1               	movwf	___lldiv@dividend+2
  2317  034C  3009               	movlw	9
  2318  034D  00C0               	movwf	___lldiv@dividend+1
  2319  034E  3000               	movlw	0
  2320  034F  00BF               	movwf	___lldiv@dividend
  2321  0350  120A  118A  2226  120A  118A  	fcall	___lldiv
  2322  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0357  083B               	movf	?___lldiv,w
  2325  0358  3EFF               	addlw	255
  2326  0359  1683               	bsf	3,5	;RP0=1, select bank1
  2327  035A  1303               	bcf	3,6	;RP1=0, select bank1
  2328  035B  0093               	movwf	19	;volatile
  2329  035C                     l1596:
  2330                           
  2331                           ;I2C.c: 21:     SSPSTAT = 0;
  2332  035C  0194               	clrf	20	;volatile
  2333  035D                     l1598:
  2334                           
  2335                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2336  035D  1587               	bsf	7,3	;volatile
  2337  035E                     l1600:
  2338                           
  2339                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2340  035E  1607               	bsf	7,4	;volatile
  2341  035F                     l205:
  2342  035F  0008               	return
  2343  0360                     __end_of_I2C_Master_Init:
  2344                           
  2345                           	psect	text13
  2346  0226                     __ptext13:	
  2347 ;; *************** function ___lldiv *****************
  2348 ;; Defined at:
  2349 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  divisor         4    0[BANK0 ] unsigned long 
  2352 ;;  dividend        4    4[BANK0 ] unsigned long 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  quotient        4    9[BANK0 ] unsigned long 
  2355 ;;  counter         1   13[BANK0 ] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  4    0[BANK0 ] unsigned long 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0, btemp+1
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       8       0       0       0
  2366 ;;      Locals:         0       5       0       0       0
  2367 ;;      Temps:          0       1       0       0       0
  2368 ;;      Totals:         0      14       0       0       0
  2369 ;;Total ram usage:       14 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    2
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_I2C_Master_Init
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           
  2380                           ;psect for function ___lldiv
  2381  0226                     ___lldiv:
  2382  0226                     l1536:	
  2383                           ;incstack = 0
  2384                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2385                           
  2386  0226  3000               	movlw	0
  2387  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0229  00C7               	movwf	___lldiv@quotient+3
  2390  022A  3000               	movlw	0
  2391  022B  00C6               	movwf	___lldiv@quotient+2
  2392  022C  3000               	movlw	0
  2393  022D  00C5               	movwf	___lldiv@quotient+1
  2394  022E  3000               	movlw	0
  2395  022F  00C4               	movwf	___lldiv@quotient
  2396  0230  083E               	movf	___lldiv@divisor+3,w
  2397  0231  043D               	iorwf	___lldiv@divisor+2,w
  2398  0232  043C               	iorwf	___lldiv@divisor+1,w
  2399  0233  043B               	iorwf	___lldiv@divisor,w
  2400  0234  1903               	skipnz
  2401  0235  2A37               	goto	u431
  2402  0236  2A38               	goto	u430
  2403  0237                     u431:
  2404  0237  2A85               	goto	l1558
  2405  0238                     u430:
  2406  0238                     l1538:
  2407  0238  01C8               	clrf	___lldiv@counter
  2408  0239  0AC8               	incf	___lldiv@counter,f
  2409  023A  2A48               	goto	l1544
  2410  023B                     l1540:
  2411  023B  3001               	movlw	1
  2412  023C  00C3               	movwf	??___lldiv
  2413  023D                     u445:
  2414  023D  1003               	clrc
  2415  023E  0DBB               	rlf	___lldiv@divisor,f
  2416  023F  0DBC               	rlf	___lldiv@divisor+1,f
  2417  0240  0DBD               	rlf	___lldiv@divisor+2,f
  2418  0241  0DBE               	rlf	___lldiv@divisor+3,f
  2419  0242  0BC3               	decfsz	??___lldiv,f
  2420  0243  2A3D               	goto	u445
  2421  0244                     l1542:
  2422  0244  3001               	movlw	1
  2423  0245  00FF               	movwf	btemp+1
  2424  0246  087F               	movf	btemp+1,w
  2425  0247  07C8               	addwf	___lldiv@counter,f
  2426  0248                     l1544:
  2427  0248  1FBE               	btfss	___lldiv@divisor+3,7
  2428  0249  2A4B               	goto	u451
  2429  024A  2A4C               	goto	u450
  2430  024B                     u451:
  2431  024B  2A3B               	goto	l1540
  2432  024C                     u450:
  2433  024C                     l1546:
  2434  024C  3001               	movlw	1
  2435  024D  00C3               	movwf	??___lldiv
  2436  024E                     u465:
  2437  024E  1003               	clrc
  2438  024F  0DC4               	rlf	___lldiv@quotient,f
  2439  0250  0DC5               	rlf	___lldiv@quotient+1,f
  2440  0251  0DC6               	rlf	___lldiv@quotient+2,f
  2441  0252  0DC7               	rlf	___lldiv@quotient+3,f
  2442  0253  0BC3               	decfsz	??___lldiv,f
  2443  0254  2A4E               	goto	u465
  2444  0255                     l1548:
  2445  0255  083E               	movf	___lldiv@divisor+3,w
  2446  0256  0242               	subwf	___lldiv@dividend+3,w
  2447  0257  1D03               	skipz
  2448  0258  2A63               	goto	u475
  2449  0259  083D               	movf	___lldiv@divisor+2,w
  2450  025A  0241               	subwf	___lldiv@dividend+2,w
  2451  025B  1D03               	skipz
  2452  025C  2A63               	goto	u475
  2453  025D  083C               	movf	___lldiv@divisor+1,w
  2454  025E  0240               	subwf	___lldiv@dividend+1,w
  2455  025F  1D03               	skipz
  2456  0260  2A63               	goto	u475
  2457  0261  083B               	movf	___lldiv@divisor,w
  2458  0262  023F               	subwf	___lldiv@dividend,w
  2459  0263                     u475:
  2460  0263  1C03               	skipc
  2461  0264  2A66               	goto	u471
  2462  0265  2A67               	goto	u470
  2463  0266                     u471:
  2464  0266  2A76               	goto	l1554
  2465  0267                     u470:
  2466  0267                     l1550:
  2467  0267  083B               	movf	___lldiv@divisor,w
  2468  0268  02BF               	subwf	___lldiv@dividend,f
  2469  0269  083C               	movf	___lldiv@divisor+1,w
  2470  026A  1C03               	skipc
  2471  026B  0F3C               	incfsz	___lldiv@divisor+1,w
  2472  026C  02C0               	subwf	___lldiv@dividend+1,f
  2473  026D  083D               	movf	___lldiv@divisor+2,w
  2474  026E  1C03               	skipc
  2475  026F  0F3D               	incfsz	___lldiv@divisor+2,w
  2476  0270  02C1               	subwf	___lldiv@dividend+2,f
  2477  0271  083E               	movf	___lldiv@divisor+3,w
  2478  0272  1C03               	skipc
  2479  0273  0F3E               	incfsz	___lldiv@divisor+3,w
  2480  0274  02C2               	subwf	___lldiv@dividend+3,f
  2481  0275                     l1552:
  2482  0275  1444               	bsf	___lldiv@quotient,0
  2483  0276                     l1554:
  2484  0276  3001               	movlw	1
  2485  0277                     u485:
  2486  0277  1003               	clrc
  2487  0278  0CBE               	rrf	___lldiv@divisor+3,f
  2488  0279  0CBD               	rrf	___lldiv@divisor+2,f
  2489  027A  0CBC               	rrf	___lldiv@divisor+1,f
  2490  027B  0CBB               	rrf	___lldiv@divisor,f
  2491  027C  3EFF               	addlw	-1
  2492  027D  1D03               	skipz
  2493  027E  2A77               	goto	u485
  2494  027F                     l1556:
  2495  027F  3001               	movlw	1
  2496  0280  02C8               	subwf	___lldiv@counter,f
  2497  0281  1D03               	btfss	3,2
  2498  0282  2A84               	goto	u491
  2499  0283  2A85               	goto	u490
  2500  0284                     u491:
  2501  0284  2A4C               	goto	l1546
  2502  0285                     u490:
  2503  0285                     l1558:
  2504  0285  0847               	movf	___lldiv@quotient+3,w
  2505  0286  00BE               	movwf	?___lldiv+3
  2506  0287  0846               	movf	___lldiv@quotient+2,w
  2507  0288  00BD               	movwf	?___lldiv+2
  2508  0289  0845               	movf	___lldiv@quotient+1,w
  2509  028A  00BC               	movwf	?___lldiv+1
  2510  028B  0844               	movf	___lldiv@quotient,w
  2511  028C  00BB               	movwf	?___lldiv
  2512  028D                     l384:
  2513  028D  0008               	return
  2514  028E                     __end_of___lldiv:
  2515                           
  2516                           	psect	text14
  2517  0391                     __ptext14:	
  2518 ;; *************** function _ISR *****************
  2519 ;; Defined at:
  2520 ;;		line 90 in file "master.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2534 ;;      Params:         0       0       0       0       0
  2535 ;;      Locals:         0       0       0       0       0
  2536 ;;      Temps:          4       0       0       0       0
  2537 ;;      Totals:         4       0       0       0       0
  2538 ;;Total ram usage:        4 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    1
  2541 ;; This function calls:
  2542 ;;		_mandar
  2543 ;; This function is called by:
  2544 ;;		Interrupt level 1
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _ISR
  2550  0391                     _ISR:
  2551  0391                     i1l1446:
  2552  0391  1D0B               	btfss	11,2	;volatile
  2553  0392  2B94               	goto	u38_21
  2554  0393  2B95               	goto	u38_20
  2555  0394                     u38_21:
  2556  0394  2B9C               	goto	i1l1454
  2557  0395                     u38_20:
  2558  0395                     i1l1448:
  2559  0395  30EC               	movlw	236
  2560  0396  0081               	movwf	1	;volatile
  2561  0397                     i1l1450:
  2562  0397  3001               	movlw	1
  2563  0398  00FF               	movwf	btemp+1
  2564  0399  087F               	movf	btemp+1,w
  2565  039A  07BA               	addwf	_CONT,f
  2566  039B                     i1l1452:
  2567  039B  110B               	bcf	11,2	;volatile
  2568  039C                     i1l1454:
  2569  039C  1E0C               	btfss	12,4	;volatile
  2570  039D  2B9F               	goto	u39_21
  2571  039E  2BA0               	goto	u39_20
  2572  039F                     u39_21:
  2573  039F  2BAF               	goto	i1l131
  2574  03A0                     u39_20:
  2575  03A0                     i1l1456:
  2576  03A0  120A  118A  20D3  120A  118A  	fcall	_mandar
  2577  03A5                     i1l1458:
  2578  03A5  3001               	movlw	1
  2579  03A6  00FF               	movwf	btemp+1
  2580  03A7  087F               	movf	btemp+1,w
  2581  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2582  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2583  03AA  07B9               	addwf	_SEND,f
  2584  03AB                     i1l1460:
  2585  03AB  120C               	bcf	12,4	;volatile
  2586  03AC                     i1l1462:
  2587  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2588  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2589  03AE  120C               	bcf	12,4	;volatile
  2590  03AF                     i1l131:
  2591  03AF  087B               	movf	??_ISR+3,w
  2592  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2593  03B1  00FF               	movwf	btemp+1
  2594  03B2  087A               	movf	??_ISR+2,w
  2595  03B3  008A               	movwf	10
  2596  03B4  0879               	movf	??_ISR+1,w
  2597  03B5  0084               	movwf	4
  2598  03B6  0E78               	swapf	??_ISR^(0+4294967168),w
  2599  03B7  0083               	movwf	3
  2600  03B8  0EFE               	swapf	btemp,f
  2601  03B9  0E7E               	swapf	btemp,w
  2602  03BA  0009               	retfie
  2603  03BB                     __end_of_ISR:
  2604                           
  2605                           	psect	intentry
  2606  0004                     __pintentry:	
  2607                           ;incstack = 0
  2608                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2609                           
  2610  0004                     interrupt_function:
  2611  007E                     saved_w	set	btemp
  2612  0004  00FE               	movwf	btemp
  2613  0005  0E03               	swapf	3,w
  2614  0006  00F8               	movwf	??_ISR
  2615  0007  0804               	movf	4,w
  2616  0008  00F9               	movwf	??_ISR+1
  2617  0009  080A               	movf	10,w
  2618  000A  00FA               	movwf	??_ISR+2
  2619  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2620  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2621  000D  087F               	movf	btemp+1,w
  2622  000E  00FB               	movwf	??_ISR+3
  2623  000F  120A  118A  2B91   	ljmp	_ISR
  2624                           
  2625                           	psect	text15
  2626  00D3                     __ptext15:	
  2627 ;; *************** function _mandar *****************
  2628 ;; Defined at:
  2629 ;;		line 178 in file "master.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0
  2645 ;;      Temps:          2       0       0       0       0
  2646 ;;      Totals:         2       0       0       0       0
  2647 ;;Total ram usage:        2 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_ISR
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           
  2657                           ;psect for function _mandar
  2658  00D3                     _mandar:
  2659  00D3                     i1l1292:	
  2660                           ;incstack = 0
  2661                           ; Regs used in _mandar: [wreg-fsr0h+status,2+status,0]
  2662                           
  2663                           
  2664                           ;master.c: 179:     switch (SEND) {
  2665  00D3  2905               	goto	i1l1336
  2666  00D4                     i1l1294:
  2667                           
  2668                           ;master.c: 181:             TXREG = 0x20;
  2669  00D4  3020               	movlw	32
  2670  00D5  0099               	movwf	25	;volatile
  2671                           
  2672                           ;master.c: 182:             break;
  2673  00D6  294A               	goto	i1l167
  2674  00D7                     i1l1296:
  2675                           
  2676                           ;master.c: 184:             TXREG = HD;
  2677  00D7  0826               	movf	_HD,w
  2678  00D8  0099               	movwf	25	;volatile
  2679                           
  2680                           ;master.c: 185:             break;
  2681  00D9  294A               	goto	i1l167
  2682  00DA                     i1l1298:
  2683                           
  2684                           ;master.c: 187:             TXREG = HU;
  2685  00DA  0827               	movf	_HU,w
  2686  00DB  0099               	movwf	25	;volatile
  2687                           
  2688                           ;master.c: 188:             break;
  2689  00DC  294A               	goto	i1l167
  2690  00DD                     i1l1300:
  2691                           
  2692                           ;master.c: 191:             TXREG = 0x3A;
  2693  00DD  303A               	movlw	58
  2694  00DE  0099               	movwf	25	;volatile
  2695                           
  2696                           ;master.c: 192:             break;
  2697  00DF  294A               	goto	i1l167
  2698  00E0                     i1l1302:
  2699                           
  2700                           ;master.c: 195:             TXREG = MD;
  2701  00E0  0828               	movf	_MD,w
  2702  00E1  0099               	movwf	25	;volatile
  2703                           
  2704                           ;master.c: 196:             break;
  2705  00E2  294A               	goto	i1l167
  2706  00E3                     i1l1304:
  2707                           
  2708                           ;master.c: 198:             TXREG = MU;
  2709  00E3  0829               	movf	_MU,w
  2710  00E4  0099               	movwf	25	;volatile
  2711                           
  2712                           ;master.c: 199:             break;
  2713  00E5  294A               	goto	i1l167
  2714  00E6                     i1l1308:
  2715                           
  2716                           ;master.c: 204:             TXREG = SD;
  2717  00E6  082A               	movf	_SD,w
  2718  00E7  0099               	movwf	25	;volatile
  2719                           
  2720                           ;master.c: 205:             break;
  2721  00E8  294A               	goto	i1l167
  2722  00E9                     i1l1310:
  2723                           
  2724                           ;master.c: 208:             TXREG = SU;
  2725  00E9  082B               	movf	_SU,w
  2726  00EA  0099               	movwf	25	;volatile
  2727                           
  2728                           ;master.c: 209:             break;
  2729  00EB  294A               	goto	i1l167
  2730  00EC                     i1l1314:
  2731                           
  2732                           ;master.c: 216:             TXREG = DD;
  2733  00EC  0824               	movf	_DD,w
  2734  00ED  0099               	movwf	25	;volatile
  2735                           
  2736                           ;master.c: 217:             break;
  2737  00EE  294A               	goto	i1l167
  2738  00EF                     i1l1316:
  2739                           
  2740                           ;master.c: 220:             TXREG = DU;
  2741  00EF  0825               	movf	_DU,w
  2742  00F0  0099               	movwf	25	;volatile
  2743                           
  2744                           ;master.c: 221:             break;
  2745  00F1  294A               	goto	i1l167
  2746  00F2                     i1l1318:
  2747                           
  2748                           ;master.c: 224:             TXREG = 0x2F;
  2749  00F2  302F               	movlw	47
  2750  00F3  0099               	movwf	25	;volatile
  2751                           
  2752                           ;master.c: 225:             break;
  2753  00F4  294A               	goto	i1l167
  2754  00F5                     i1l1320:
  2755                           
  2756                           ;master.c: 227:             TXREG = MOD;
  2757  00F5  0822               	movf	_MOD,w
  2758  00F6  0099               	movwf	25	;volatile
  2759                           
  2760                           ;master.c: 228:             break;
  2761  00F7  294A               	goto	i1l167
  2762  00F8                     i1l1322:
  2763                           
  2764                           ;master.c: 231:             TXREG = MOU;
  2765  00F8  0823               	movf	_MOU,w
  2766  00F9  0099               	movwf	25	;volatile
  2767                           
  2768                           ;master.c: 232:             break;
  2769  00FA  294A               	goto	i1l167
  2770  00FB                     i1l1326:
  2771                           
  2772                           ;master.c: 238:             TXREG = YD;
  2773  00FB  0820               	movf	_YD,w
  2774  00FC  0099               	movwf	25	;volatile
  2775                           
  2776                           ;master.c: 239:             break;
  2777  00FD  294A               	goto	i1l167
  2778  00FE                     i1l1328:
  2779                           
  2780                           ;master.c: 242:             TXREG = YU;
  2781  00FE  0821               	movf	_YU,w
  2782  00FF  0099               	movwf	25	;volatile
  2783                           
  2784                           ;master.c: 243:             break;
  2785  0100  294A               	goto	i1l167
  2786  0101                     i1l1330:
  2787                           
  2788                           ;master.c: 246:             TXREG = 0x0A;
  2789  0101  300A               	movlw	10
  2790  0102  0099               	movwf	25	;volatile
  2791  0103                     i1l1332:
  2792                           
  2793                           ;master.c: 247:             SEND = 0;
  2794  0103  01B9               	clrf	_SEND
  2795                           
  2796                           ;master.c: 248:             break;
  2797  0104  294A               	goto	i1l167
  2798  0105                     i1l1336:
  2799  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0107  0839               	movf	_SEND,w
  2802  0108  00F6               	movwf	??_mandar
  2803  0109  01F7               	clrf	??_mandar+1
  2804                           
  2805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2806                           ; Switch size 1, requested type "simple"
  2807                           ; Number of cases is 1, Range of values is 0 to 0
  2808                           ; switch strategies available:
  2809                           ; Name         Instructions Cycles
  2810                           ; simple_byte            4     3 (average)
  2811                           ; direct_byte           11     8 (fixed)
  2812                           ; jumptable            260     6 (fixed)
  2813                           ;	Chosen strategy is simple_byte
  2814  010A  0877               	movf	??_mandar+1,w
  2815  010B  3A00               	xorlw	0	; case 0
  2816  010C  1903               	skipnz
  2817  010D  290F               	goto	i1l1804
  2818  010E  294A               	goto	i1l167
  2819  010F                     i1l1804:
  2820                           
  2821                           ; Switch size 1, requested type "simple"
  2822                           ; Number of cases is 19, Range of values is 0 to 18
  2823                           ; switch strategies available:
  2824                           ; Name         Instructions Cycles
  2825                           ; simple_byte           58    30 (average)
  2826                           ; direct_byte           65     8 (fixed)
  2827                           ; jumptable            260     6 (fixed)
  2828                           ;	Chosen strategy is simple_byte
  2829  010F  0876               	movf	??_mandar,w
  2830  0110  3A00               	xorlw	0	; case 0
  2831  0111  1903               	skipnz
  2832  0112  28D4               	goto	i1l1294
  2833  0113  3A01               	xorlw	1	; case 1
  2834  0114  1903               	skipnz
  2835  0115  28D7               	goto	i1l1296
  2836  0116  3A03               	xorlw	3	; case 2
  2837  0117  1903               	skipnz
  2838  0118  28DA               	goto	i1l1298
  2839  0119  3A01               	xorlw	1	; case 3
  2840  011A  1903               	skipnz
  2841  011B  28DD               	goto	i1l1300
  2842  011C  3A07               	xorlw	7	; case 4
  2843  011D  1903               	skipnz
  2844  011E  28E0               	goto	i1l1302
  2845  011F  3A01               	xorlw	1	; case 5
  2846  0120  1903               	skipnz
  2847  0121  28E3               	goto	i1l1304
  2848  0122  3A03               	xorlw	3	; case 6
  2849  0123  1903               	skipnz
  2850  0124  28DD               	goto	i1l1300
  2851  0125  3A01               	xorlw	1	; case 7
  2852  0126  1903               	skipnz
  2853  0127  28E6               	goto	i1l1308
  2854  0128  3A0F               	xorlw	15	; case 8
  2855  0129  1903               	skipnz
  2856  012A  28E9               	goto	i1l1310
  2857  012B  3A01               	xorlw	1	; case 9
  2858  012C  1903               	skipnz
  2859  012D  28D4               	goto	i1l1294
  2860  012E  3A03               	xorlw	3	; case 10
  2861  012F  1903               	skipnz
  2862  0130  28EC               	goto	i1l1314
  2863  0131  3A01               	xorlw	1	; case 11
  2864  0132  1903               	skipnz
  2865  0133  28EF               	goto	i1l1316
  2866  0134  3A07               	xorlw	7	; case 12
  2867  0135  1903               	skipnz
  2868  0136  28F2               	goto	i1l1318
  2869  0137  3A01               	xorlw	1	; case 13
  2870  0138  1903               	skipnz
  2871  0139  28F5               	goto	i1l1320
  2872  013A  3A03               	xorlw	3	; case 14
  2873  013B  1903               	skipnz
  2874  013C  28F8               	goto	i1l1322
  2875  013D  3A01               	xorlw	1	; case 15
  2876  013E  1903               	skipnz
  2877  013F  28F2               	goto	i1l1318
  2878  0140  3A1F               	xorlw	31	; case 16
  2879  0141  1903               	skipnz
  2880  0142  28FB               	goto	i1l1326
  2881  0143  3A01               	xorlw	1	; case 17
  2882  0144  1903               	skipnz
  2883  0145  28FE               	goto	i1l1328
  2884  0146  3A03               	xorlw	3	; case 18
  2885  0147  1903               	skipnz
  2886  0148  2901               	goto	i1l1330
  2887  0149  294A               	goto	i1l167
  2888  014A                     i1l167:
  2889  014A  0008               	return
  2890  014B                     __end_of_mandar:
  2891  007E                     btemp	set	126	;btemp
  2892  007E                     wtemp0	set	126
  2893                           
  2894                           	psect	config
  2895                           
  2896                           ;Config register CONFIG1 @ 0x2007
  2897                           ;	Oscillator Selection bits
  2898                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2899                           ;	Watchdog Timer Enable bit
  2900                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2901                           ;	Power-up Timer Enable bit
  2902                           ;	PWRTE = OFF, PWRT disabled
  2903                           ;	RE3/MCLR pin function select bit
  2904                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2905                           ;	Code Protection bit
  2906                           ;	CP = OFF, Program memory code protection is disabled
  2907                           ;	Data Code Protection bit
  2908                           ;	CPD = OFF, Data memory code protection is disabled
  2909                           ;	Brown Out Reset Selection bits
  2910                           ;	BOREN = OFF, BOR disabled
  2911                           ;	Internal External Switchover bit
  2912                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2913                           ;	Fail-Safe Clock Monitor Enabled bit
  2914                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2915                           ;	Low Voltage Programming Enable bit
  2916                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2917                           ;	In-Circuit Debugger Mode bit
  2918                           ;	DEBUG = 0x1, unprogrammed default
  2919  2007                     	org	8199
  2920  2007  20D4               	dw	8404
  2921                           
  2922                           ;Config register CONFIG2 @ 0x2008
  2923                           ;	Brown-out Reset Selection bit
  2924                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2925                           ;	Flash Program Memory Self Write Enable bits
  2926                           ;	WRT = OFF, Write protection off
  2927  2008                     	org	8200
  2928  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     22      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_mandar

Critical Paths under _main in BANK0

    _timeout->_I2C_Master_Write
    _timein->_I2C_Master_Read
    _Setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2860
                              _Setup
                             _conver
                             _timein
                            _timeout
 ---------------------------------------------------------------------------------
 (1) _timeout                                              0     0      0    1111
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _timein                                               0     0      0    1176
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1111
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      5     5      0      65
                                              0 BANK0      5     5      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conver                                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0     573
                    _I2C_Master_Init
                            _initOsc
                              _usart
 ---------------------------------------------------------------------------------
 (2) _usart                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              2 COMMON     4     4      0
                             _mandar
 ---------------------------------------------------------------------------------
 (5) _mandar                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _I2C_Master_Init
       ___lldiv
     _initOsc
     _usart
   _conver
   _timein
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _timeout
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 _ISR (ROOT)
   _mandar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3D      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Mar 02 23:22:18 2021

                        _H 0073                         _DD 0024                         _HD 0026  
                       _DU 0025                         _MD 0028                         _HU 0027  
                       _SD 002A                         _MU 0029                         _YD 0020  
                       _SU 002B                         _YU 0021                         fsr 0004  
                      l211 0400                        l220 0413                        l205 035F  
                      l214 041C                        l143 0325                        l223 040A  
                      l240 029E                        l208 03F4                        l241 02A4  
                      l242 02AA                        l226 0389                        l170 0225  
                      l243 02B0                        l227 038C                        l244 02B6  
                      l228 0390                        l245 02BC                        l237 0292  
                      l173 01BB                        l246 02C2                        l238 02EA  
                      l262 03F3                        l247 02EB                        l239 0298  
                      l176 00D2                        l384 028D                        _DAY 0072  
                      _GIE 005F                        u410 03FA                        u411 03F9  
                      u500 033D                        u420 0400                        _MIN 0074  
                      u421 03FF                        u430 0238                        u510 0385  
                      _MOD 0022                        u431 0237                        u511 0384  
                      u505 0338                        _SEC 0075                        u450 024C  
                      u451 024B                        _ISR 0391                        u445 023D  
                      u525 0032                        u470 0267                        u471 0266  
                      u535 0044                        u465 024E                        u545 0056  
                      u490 0285                        u491 0284                        u475 0263  
                      u555 0068                        u580 03D7                        u485 0277  
                      u565 007A                        u581 03D6                        u575 008C  
                      _MOU 0023                        fsr0 0004                        indf 0000  
                     ?_ISR 0076                       l1600 035E                       l1602 0414  
                     l1610 040B                       l1540 023B                       l1700 0053  
                     l1532 03F4                       l1620 0379                       l1604 0419  
                     l1612 0410                       l1550 0267                       l1542 0244  
                     l1630 02EC                       l1710 0096                       l1702 0065  
                     l1534 03FA                       l1622 037E                       l1614 0363  
                     l1606 0401                       l1552 0275                       l1544 0248  
                     l1536 0226                       l1640 02FC                       l1632 02F2  
                     l1720 00AF                       l1712 009B                       l1704 0072  
                     l1624 0385                       l1616 0368                       l1608 0406  
                     l1554 0276                       l1546 024C                       l1538 0238  
                     l1802 02D0                       l1562 0291                       l1650 0305  
                     l1642 02FD                       l1634 02F7                       l1730 00C8  
                     l1722 00B4                       l1714 00A0                       l1706 0084  
                     l1626 038D                       l1618 0370                       l1556 027F  
                     l1548 0255                       l1580 03EC                       l1660 030D  
                     l1652 0306                       l1644 0300                       l1636 02FA  
                     l1732 00CD                       l1724 00B9                       l1716 00A5  
                     l1708 0089                       l1740 03CA                       l1558 0285  
                     l1590 0326                       l1566 02C8                       l1582 03ED  
                     l1574 03DF                       l1670 0316                       l1662 030E  
                     l1654 0307                       l1646 0301                       l1638 02FB  
                     l1726 00BE                       l1718 00AA                       l1742 03CF  
                     l1734 03BB                       l1592 032A                       l1584 03EE  
                     l1576 03E7                       l1664 0311                       l1656 0308  
                     l1648 0304                       l1728 00C3                       l1680 0187  
                     l1672 01BC                       l1744 03D7                       l1736 03C0  
                     l1594 032D                       l1586 03F1                       l1578 03EA  
                     l1666 0314                       l1658 030C                       l1690 01B6  
                     l1682 0190                       l1674 014B                       l1746 03D8  
                     l1738 03C5                       l1596 035C                       l1588 03F2  
                     l1668 0315                       l1692 0028                       l1684 019B  
                     l1676 0175                       l1598 035D                       l1694 002F  
                     l1686 01A4                       l1678 017E                       l1696 003C  
                     l1688 01AD                       l1698 004E                       _DAYD 0030  
                     _DAYU 0031                       _NADA 0038                       _CONT 003A  
                     _PEIE 005E                       _MIND 0034                       _SECD 0036  
                     _MINU 0035                       _SECU 0037                       _SEND 0039  
                     _TMR0 0001                       _YEAR 0070                       _main 03BB  
                     btemp 007E                       start 0012                      ??_ISR 0078  
         ?_I2C_Master_Init 0049           ?_I2C_Master_Read 0076           ?_I2C_Master_Wait 0076  
         ?_I2C_Master_Stop 0076                      ?_main 0076                      _ANSEL 0188  
          __end_of___lldiv 028E                      _HORAD 0032                      i1l131 03AF  
                    i1l167 014A                      _HORAU 0033                      _MONTH 0071  
                    _SPBRG 0099                      _YEARD 002C                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _YEARU 002D                      u38_20 0395  
                    u38_21 0394                      u39_20 03A0                      u39_21 039F  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019                      _Setup 02EC            __end_of_initOsc 02EC  
                    _usart 03DF                      pclath 000A            __end_of_timeout 0226  
                    status 0003                      wtemp0 007E            __initialization 0015  
             __end_of_main 03DF                     ??_main 0051          ?_I2C_Master_Start 0076  
        ?_I2C_Master_Write 003B                     ?_Setup 0076         ??_I2C_Master_Start 003B  
       ??_I2C_Master_Write 003D                initOsc@IRCF 003D                     _ANSELH 0189  
                   ?_usart 0076                     i1l1300 00DD                     i1l1310 00E9  
                   i1l1302 00E0                     i1l1320 00F5                     i1l1304 00E3  
                   i1l1330 0101                     i1l1322 00F8                     i1l1314 00EC  
                   i1l1332 0103                     i1l1316 00EF                     i1l1308 00E6  
                   i1l1326 00FB                     i1l1318 00F2                     i1l1328 00FE  
                   i1l1336 0105                     i1l1450 0397                     i1l1292 00D3  
                   i1l1460 03AB                     i1l1452 039B                     i1l1294 00D4  
                   i1l1462 03AC                     i1l1454 039C                     i1l1446 0391  
                   i1l1296 00D7                     i1l1456 03A0                     i1l1448 0395  
                   i1l1298 00DA                     i1l1458 03A5                     i1l1804 010F  
                   _MONTHD 002E                     _MONTHU 002F                     _SPBRGH 009A  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___lldiv 0043  
                   _conver 0028                     _mandar 00D3                     _timein 014B  
                ??_initOsc 003B                     saved_w 007E                  ??_timeout 003D  
  __end_of__initialization 0024             __pcstackCOMMON 0076              __end_of_Setup 0326  
            __end_of_usart 03F4                    ??_Setup 0051                    ??_usart 003B  
               __pbssBANK0 0020                 __pmaintext 03BB                 __pintentry 0004  
                  ?_conver 0076                    ?_mandar 0076                    ?_timein 0076  
                  _SSPCON2 0091                    _SSPSTAT 0094                    ___lldiv 0226  
          __size_of_conver 00AB            __size_of_mandar 0078                    __ptext1 01BC  
                  __ptext2 014B                    __ptext3 0401                    __ptext4 040B  
                  __ptext5 0414                    __ptext6 0360                    __ptext7 03F4  
                  __ptext8 0028                    __ptext9 02EC            __size_of_timein 0071  
             __size_of_ISR 002A                    _initOsc 028E   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0031   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _timeout 01BC                    clrloop0 041E       end_of_initialization 0024  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 003B  
          ___lldiv@counter 0048                  _RCSTAbits 0018           I2C_Master_Init@c 0049  
         I2C_Master_Read@a 003D                  _TRISCbits 0087                  _TXSTAbits 0098  
              _BAUDCTLbits 0187             __end_of_conver 00D3             __end_of_mandar 014B  
           __end_of_timein 01BC        start_initialization 0015                __end_of_ISR 03BB  
        ??_I2C_Master_Init 004D          ??_I2C_Master_Read 003B          ??_I2C_Master_Wait 003B  
        ??_I2C_Master_Stop 003B                   ??_conver 003B                   ??_mandar 0076  
                 ??_timein 0040                __pbssCOMMON 0070                  ___latbits 0002  
            __pcstackBANK0 003B           _I2C_Master_Start 0414           _I2C_Master_Write 0401  
                 ?___lldiv 003B                   ?_initOsc 0076             __size_of_Setup 003A  
                 ?_timeout 0076             __size_of_usart 0015          interrupt_function 0004  
                clear_ram0 041D                   _PIE1bits 008C                   _PIR1bits 000C  
      I2C_Master_Read@temp 003E           __size_of___lldiv 0068            _I2C_Master_Init 0326  
          _I2C_Master_Read 0360            _I2C_Master_Wait 03F4            _I2C_Master_Stop 040B  
         __size_of_initOsc 005E                   __ptext10 03DF                   __ptext11 028E  
                 __ptext12 0326                   __ptext13 0226                   __ptext14 0391  
                 __ptext15 00D3           __size_of_timeout 006A              __size_of_main 0024  
 __end_of_I2C_Master_Start 041D   __end_of_I2C_Master_Write 040B                 _INTCONbits 000B  
                 intlevel1 0000           ___lldiv@dividend 003F                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 0360    __end_of_I2C_Master_Read 0391    __end_of_I2C_Master_Wait 0401  
  __end_of_I2C_Master_Stop 0414                 _OPTION_REG 0081           ___lldiv@quotient 0044  
        I2C_Master_Write@d 003B                _SSPCON2bits 0091  
